 A^_^
 A^_^[]
 A_A^_
 A_A^_^]
 A_A^A\
 A_A^A\_^
 A_A^A]
 A_A^A]A\_
 H3E H3E
 Hcq0H
 LcIXL
 Microsoft Corporation. All rights reserved.
 Operating System
 Windows
!GetPackageId().empty()
!IsCallerLowIL(INVALID_USERCONTEXT_TOKEN)
!IsCallerLowIL(userContextToken)
!IsDisabledForAuditMode()
!m_packagePath.empty()
!m_shuttingDown
!m_threadHandle.IsValid()
!This program cannot be run in DOS mode.
!timedOut
#L$pA
%08x%04x%04x%02x%02x%02x%02x%02x%02x%02x%02x
%hs!%p: 
%hs(%d) tid(%x) %08X %ws
%hs(%u)\%hs!%p: 
%ls-%ld
%ls\%ls
%ls\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer
%s (OP:%ld)
%s!%s
%s\%s
(_^[]
(A;OICI;KR;;;%ls)
(A^_^[
(A_A^A]A\_^[]
(caller: %p) 
(D$ f
(D$ H
(D$0H
(D$Pf
(t$ H
(t$@H
(t$`I
)t$ H
)t$@I
*."6"
.?AV?$_Binder@U_Unforced@std@@P8BaseTask@Impl@AppReadiness@@EAAXXZPEAV345@@std@@
.?AV?$_Binder@U_Unforced@std@@P8BitsJob@Tasks@AppReadiness@@EAAXJ@ZPEAV345@AEAJ@std@@
.?AV?$_Binder@U_Unforced@std@@P8Service@AppReadiness@@EAAKKKPEAX@ZPEAV34@AEBU?$_Ph@$00@2@AEBU?$_Ph@$01@2@AEBU?$_Ph@$02@2@@std@@
.?AV?$_Binder@U_Unforced@std@@P8Service@AppReadiness@@EAAXXZPEAV34@@std@@
.?AV?$_Binder@U_Unforced@std@@P8ServiceThread@AppReadiness@@EAAXXZPEAV34@@std@@
.?AV?$_Binder@U_Unforced@std@@P8StoreMetadata@Store@Tasks@AppReadiness@@EAAXPEAUIXmlReader@@@ZAEBQEAV3456@AEBU?$_Ph@$00@2@@std@@
.?AV?$_Binder@U_Unforced@std@@P8StoreMetadata@Store@Tasks@AppReadiness@@EAAXPEAUIXmlReader@@PEAUAppTileInfo@456@@ZAEBQEAV3456@AEBU?$_Ph@$00@2@PEAU8456@@std@@
.?AV?$_Binder@U_Unforced@std@@P8StoreMetadata@Store@Tasks@AppReadiness@@EAAXPEAUIXmlReader@@PEAUStoreProductInfo@456@@ZAEBQEAV3456@AEBU?$_Ph@$00@2@PEAU8456@@std@@
.?AV?$_Binder@U_Unforced@std@@P8StorePreviews@Tasks@AppReadiness@@EAAXAEBV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@@ZAEBQEAV345@AEBV62@@std@@
.?AV?$_Binder@U_Unforced@std@@P8User@AppReadiness@@EAAXAEBVPackageList@Storage@4@AEBV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@W4PackageOperation@64@@ZPEAV34@AEBU?$_Ph@$00@2@AEBU?$_Ph@$01@2@AEBU?$_Ph@$02@2@@std@@
.?AV?$_Binder@U_Unforced@std@@P8User@AppReadiness@@EAAXXZPEAV34@@std@@
.?AV<lambda_01fb8dddc4cfdd82c8e732955dd0cda2>@@
.?AV<lambda_046130ff1b1a6b71c19f8c8e14c27085>@@
.?AV<lambda_0516978c074274684485d0e7201aa917>@@
.?AV<lambda_059184e8f364dfe5c918358185397c68>@@
.?AV<lambda_0bcc98ca959988977d770fa3e03d2f54>@@
.?AV<lambda_141cf924e6585cc8cb3cd095287cacf9>@@
.?AV<lambda_142f328f0f5263d46afa27a8d729e0ca>@@
.?AV<lambda_15c9b55303bf5df638e0949fcf6b7ebb>@@
.?AV<lambda_1649471e7229741315bdfde674a2ce65>@@
.?AV<lambda_17a4de5534b7a384e5573d2eaf084668>@@
.?AV<lambda_17ba42748e2727430c8699c6f60dcb65>@@
.?AV<lambda_1896b0420ca38c5cb223265a9738fa39>@@
.?AV<lambda_249a9685c04460f5d2818ed2a86a1f7a>@@
.?AV<lambda_2cfe183d6ebe93f384688f0bdd724c49>@@
.?AV<lambda_2e69251be88fae9fad057c7f3bdbc2c4>@@
.?AV<lambda_336e0e5d673baa22c75467757fe8e861>@@
.?AV<lambda_38e572681c8983219a4e0601d052ae17>@@
.?AV<lambda_42e776b031eeee8bce326a45cacbe384>@@
.?AV<lambda_4425c21e70902300222ca9c96b900ba4>@@
.?AV<lambda_457eef4576c97378304f32b6929e02e5>@@
.?AV<lambda_485ce827346b17e86bb5c3132b612a78>@@
.?AV<lambda_5074cba836762ef77c283a39c7dcadeb>@@
.?AV<lambda_524b754a7b24251b6e031b71bf90730a>@@
.?AV<lambda_52c2090915f50c466d198c45fe1a8e5f>@@
.?AV<lambda_556349a63bf27002c1a50d52b1b34303>@@
.?AV<lambda_57f8e378caff1edb191be4589b3bf4c1>@@
.?AV<lambda_5838afd94790d3cbffa5dda7aa9098b7>@@
.?AV<lambda_5e33cb52fd1397fc065cc5c2d0a4e387>@@
.?AV<lambda_5e6c3b70704bddd8b7d528a326f9792b>@@
.?AV<lambda_600d56ae6c6a6d9c9167befac3d386f5>@@
.?AV<lambda_63a42b2fe374e300463f5fda82b70d4f>@@
.?AV<lambda_63a543dbff094edacd3fd8b2211dfae3>@@
.?AV<lambda_6460ad8e0ff6617b13d99557fc3c1b09>@@
.?AV<lambda_649e1f8e230c18b8a4cd344b519f1190>@@
.?AV<lambda_64c9b63fd339abd85b939300b0f84b34>@@
.?AV<lambda_6e5ab1467f130ee2c044d848ec061252>@@
.?AV<lambda_7015d3f00f92ea2af537802038f30f63>@@
.?AV<lambda_7107b8fccdf0da6a6aed3a674bf438cc>@@
.?AV<lambda_74c12fa7df6caed33aeb44d1028d9d17>@@
.?AV<lambda_77527b36499f73ea6895b682a9b853ae>@@
.?AV<lambda_77ffb5b4c88d980e092855dcb2471f73>@@
.?AV<lambda_78ac6b53025f223d4eed7bca77c163a8>@@
.?AV<lambda_7b3333225c9b7030f90e8a52cf7fa8b2>@@
.?AV<lambda_7dd94c3bf1d17ecfb4d71d6fb90dda6e>@@
.?AV<lambda_81ee5a4511ccb47f64244d452fcbf3e6>@@
.?AV<lambda_82d4e0edb980c4a593c9a8739d4cb0e1>@@
.?AV<lambda_83279ea248a312166fec1790f5705122>@@
.?AV<lambda_84464e24bbff6fe1fd2d0d4d81ff6262>@@
.?AV<lambda_861b6def1eabb24631da2491e9dc8464>@@
.?AV<lambda_8752951fd3ce9a1933e1d1511e3de003>@@
.?AV<lambda_893fb070bc3b2f6ae2273ab6fe4ff010>@@
.?AV<lambda_8b7c57241abcb8a45d05834dd15bbce6>@@
.?AV<lambda_8e72d5e74f10e4b9ada30d0182736be6>@@
.?AV<lambda_8e8ad3231b95925db78b552beb19a479>@@
.?AV<lambda_8ef5304d6a8f682d543c1643511ccf89>@@
.?AV<lambda_9050e4625eaace4110a69d8bbf2273d6>@@
.?AV<lambda_93fa6ed42348785087842c5f65730c06>@@
.?AV<lambda_9d3b8bb4cd4c238f591d2e685f0381b4>@@
.?AV<lambda_9d66e4a18961ef5819ab5f15651e3368>@@
.?AV<lambda_9de794c90d7df1e12a4b7d9914fe48b6>@@
.?AV<lambda_a076bbc7f89add10f81254c9d33efc83>@@
.?AV<lambda_a4bcf3cca392ff3b092e205d088ea18e>@@
.?AV<lambda_a8509fcfad1a45f408255ce6830d28bd>@@
.?AV<lambda_a85b2a0eaf882aa359e7a82128f285ac>@@
.?AV<lambda_ad751e5a339a58fd1c7e0365f0e8c749>@@
.?AV<lambda_aee12e678e07a7b98be8f89a14e187f1>@@
.?AV<lambda_af26d7ac74c951815cbb70f45f2d96a9>@@
.?AV<lambda_b4571dc3851bd5c2a3a6e835a5b2a1b1>@@
.?AV<lambda_b47c2ba120e9e2282077ce3755fe6185>@@
.?AV<lambda_b548ad810831a212473338b82dc26717>@@
.?AV<lambda_b62627bf7d4402e1b915d8f4360132e2>@@
.?AV<lambda_b78836c4a9944899213eb7c3ee4e4fbf>@@
.?AV<lambda_b7d42073db8c24f23b9349153410ebed>@@
.?AV<lambda_bc41b50572efb8e444b39e054c85e9be>@@
.?AV<lambda_bdb2e0d9b12acf04bb46a3d3e040060a>@@
.?AV<lambda_c07951d9657b8396b912d0f25a2bef47>@@
.?AV<lambda_c0d7d61d053c8698aa940f223a2c92fd>@@
.?AV<lambda_c4078ed07cfbfe877d20f4be618a5063>@@
.?AV<lambda_c87d1e472f81650a7ba3b2c8ff6cb695>@@
.?AV<lambda_c959c419b99b757af7545ec8a3d9110f>@@
.?AV<lambda_cac1a1b0ea33025184f417a4d0791b45>@@
.?AV<lambda_ce1185b0127a773785c5a2cb44313fd6>@@
.?AV<lambda_ceac50f6bb65f6f2505f6516d08182b8>@@
.?AV<lambda_cfcd63a06c2056dd9072a248e7d4b8e5>@@
.?AV<lambda_d06add2353a1f69e19e0eb708060d6a4>@@
.?AV<lambda_d45a4f2e1d965c2523429b657e4b26aa>@@
.?AV<lambda_d6bf87c9bfd21c15179572cd87903efb>@@
.?AV<lambda_db61294160912edced42e1148f4f6230>@@
.?AV<lambda_dd705a326c125b71213fed45a0eccb1e>@@
.?AV<lambda_dee8c8dc74ce24a79a321ea08f040d31>@@
.?AV<lambda_e4e349c3e454b0103814aa050c77b0fd>@@
.?AV<lambda_e5c3010c6c96188075d987bdc2db282f>@@
.?AV<lambda_e60e9c115f2ae8ea862d3c40a6756e1a>@@
.?AV<lambda_e6749707a8a06ac33c4cfedfd5733ce2>@@
.?AV<lambda_e6f0dfb58e72b40c58530efcf3877d7c>@@
.?AV<lambda_ea348d24b49a6caf8eaa4b597e69f127>@@
.?AV<lambda_f6f32b3fdbf98bd4ca0995d828e505c1>@@
.?AV<lambda_f7b484ab239def3a9cf02ad72c3de3eb>@@
.?AV<lambda_f93671876d0c0c249a4ae67b58917094>@@
.?AV<lambda_fb0a4561c778e17e580c47e7a5386748>@@
.?AV<lambda_fdd86c4255431fc84805e4562e123821>@@
.?AV<lambda_ff4c3646733d9a87ccb0cb1b79b85875>@@
.?AVbad_alloc@std@@
.?AVbad_array_new_length@std@@
.?AVexception@std@@
.?AVHResultException@Windows@@
.?AVResultException@wil@@
.?AVtype_info@@
.00cfg
.bss$00
.bss$dk00
.bss$pr00
.bss$zz
.CRT$XCA
.CRT$XCU
.CRT$XCZ
.CRT$XIA
.CRT$XIC
.CRT$XIZ
.CRT$XLA
.CRT$XLZ
.CRT$XPA
.CRT$XPZ
.CRT$XTA
.CRT$XTZ
.data
.data$00
.data$00$brc
.data$dk00
.data$dk00$brc
.data$r$brc
.didat$2
.didat$3
.didat$4
.didat$5
.didat$6
.didat$7
.edata
.gfids
.giats
.idata$2
.idata$3
.idata$4
.idata$5
.idata$6
.P6A_NPEAUIXmlReader@@PEBG@Z
.pdata
.rdata
.rdata$00
.rdata$brc
.rdata$r
.rdata$T$brc
.rdata$zETW0
.rdata$zETW1
.rdata$zETW2
.rdata$zETW9
.rdata$zz
.rdata$zz$brc
.rdata$zzzdbg
.rsrc
.rsrc$01
.rsrc$02
.rtc$IAA
.rtc$IZZ
.rtc$TAA
.rtc$TZZ
.text
.text$di
.text$lp00AppReadiness.dll!20_pri7
.text$mn
.text$mn$00
.text$np
.text$x
.text$yd
.text$zy
.text$zz
.tls$
.tls$ZZZ
.xdata
.xdata$x
;t$@t
;t$`r
;t$Dr
?_Xbad_function_call@std@@YAXXZ
?_Xlength_error@std@@YAXPEBD@Z
?_Xout_of_range@std@@YAXPEBD@Z
@.data
@.didat
@.reloc
@8|$0
@8|$0t
@8t$@u
@A^_]
@A^_^
@A_A^_
@A_A^_^]
@A_A^A\_]
@A_A^A]A\_^[
@A_A^A]A\_^]
@GhostedSecondaryTileReplacementLogo.png
@SUVWATAVAWH
@SUVWAVAWH
@SUVWAVH
@SUVWH
@SVWATAUAVAWH
@SVWAVAWH
@SVWH
@USVWATAUAVAWH
@USVWATAUAWH
@USVWATAVAWH
@USVWATAVH
@USVWAUAVAWH
@USVWAVAWH
@USVWAVH
@USVWAWH
@USVWH
@USWH
[ UVWH
[%hs(%hs)]
[%hs]
\$ I;\$
\$ UH
\$ UVWATAUAVAWH
\$ UVWAVAWH
\$ UVWH
\$ WH
\$(E3
\$`H+
\$H@8|$1
\$pH;
\$xHi
__C_specific_handler
__CxxFrameHandler3
__CxxFrameHandler4
__std_terminate
__super::RuntimeClassInitialize(user, APPREADINESS_TASK_APPX_PREREGISTER, TaskPriority::PreShell)
__super::RuntimeClassInitialize(user, APPREADINESS_TASK_INBOX_GROUP, AppReadiness::TaskPriority::InboxGroup)
__super::RuntimeClassInitialize(user, APPREADINESS_TASK_OEM_FIRST_RUN, LogonOptimizationPermitted(LogonOptimizationFlags::DisableAppInstallsOnFirstLogon) ? TaskPriority::Low : TaskPriority::High)
__super::RuntimeClassInitialize(user, APPREADINESS_TASK_PREROAMING_GROUP, AppReadiness::TaskPriority::PreRoamingGroup)
__super::RuntimeClassInitialize(user, APPREADINESS_TASK_RESOLVE_STORE_CATEGORIES, TaskPriority::Low)
__super::RuntimeClassInitialize(user, APPREADINESS_TASK_USER_LOGON, AppReadiness::TaskPriority::UserLogonGroup)
__super::RuntimeClassInitialize(user, BuildTaskIdWithPackageFamilyName(c_prefix, package->GetPackageFamilyName()), package)
__super::RuntimeClassInitialize(user, BuildTaskIdWithPackageFamilyName(c_RegisterInContainerTaskIdPrefix, packageFamilyName))
__super::RuntimeClassInitialize(user, BuildTaskIdWithPackageFamilyName(c_StageUserDataPrefix, packageInfo->GetPackageId()), packageInfo)
__super::RuntimeClassInitialize(user, BuildTaskIdWithPackageFamilyName(c_UnregisterTaskIdPrefix, endOfLifePackageFullName == nullptr? packageFamilyName: endOfLifePackageFullName))
__super::RuntimeClassInitialize(user, BuildTaskIdWithPackageFamilyName(c_UnregisterTaskIdPrefix, packageInfo->GetPackageFamilyName()), packageInfo)
__super::RuntimeClassInitialize(user, c_PreviewTaskName, TaskPriority::PreviewTile)
__super::RuntimeClassInitialize(user, InstallPackage::BuildId(packageInfo->GetPackageFamilyName()), packageInfo)
__super::RuntimeClassInitialize(user, RemovePackage::BuildId(packageInfo->GetPackageFamilyName()), packageInfo)
__super::RuntimeClassInitialize(user, taskId, packageInfo, priority)
__super::RuntimeClassInitialize(user, taskName, TaskPriority::SystemTask)
_CoAllocStringArray(packages.data(), packages.size(), packageFamilyNames)
_CxxThrowException
_initterm
_initterm_e
_Lock_shared_ptr_spin_lock
_o___std_exception_copy
_o___std_exception_destroy
_o___std_type_info_destroy_list
_o___stdio_common_vsnprintf_s
_o___stdio_common_vsprintf_s
_o___stdio_common_vswprintf
_o__callnewh
_o__cexit
_o__configure_narrow_argv
_o__crt_atexit
_o__errno
_o__execute_onexit_table
_o__initialize_narrow_environment
_o__initialize_onexit_table
_o__invalid_parameter_noinfo
_o__invalid_parameter_noinfo_noreturn
_o__purecall
_o__register_onexit_function
_o__seh_filter_dll
_o__ui64tow_s
_o_free
_o_malloc
_o_mbstowcs
_o_realloc
_o_toupper
_o_wcstok_s
_o_wcstoul
_RSDS
_Unlock_shared_ptr_spin_lock
` UAVAWH
`.rdata
`A^_^[]
`A__^[]
`A_A^_^]
`A_A^A\_^[]
`A_A^A\_^][
`A_A^A]A\_^]
{ AVH
|$ ATAVAWH
|$ AVH
|$ E3
|$ fD
|$ UATAUAVAWH
|$ UH
|$0E3
|$HL;
|onecoreuap\shell\appreadiness\src\tasks\pause.cpp
<unknown>
>3B>8
040904B0
0A^_^
0A^_^[]
0A_A^_
0A_A^_^]
0A_A^A\
0A_A^A\_^
0A_A^A]A\_
0A_A^A]A\_^[
0A_A^A]A\_^]
0ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/A
0AppReadiness::Tasks::CreateGuidString
10.0.19041.1
10.0.19041.1 (WinBuild.160101.0800)
2333333
3H97t H
4FAppReadiness::Tasks::RemovePreviews::GetInstallState::<lambda_ff4c3646733d9a87ccb0cb1b79b85875>::operator ()
58f01454-6895-42be-a245-ea2d809e1c2a
6H9s0t&H
7f9t$ u
8_^][
8A_A^_^[]
9*v4H
9\$@t
9\$`vA
9\$Hu
9\$Hu:H
9}8vU
9D$XH
9D$xu
9D$Xwa+D$X
9E0uRL
9O4t;
9O4t<
9Pefs
9s(v'H
9t$@u1H
9T$xH
9T$xwK3
9u8vUH
9W(s%A
A!4$I
A(A;@
A,9A(H
A;Q,s!D
A;Q@s
A^_^[]
A^_^][
A^A\_^[]
A^A\_^]
A__^[]
A_A]A\_^[]
A_A^]
A_A^_
A_A^_^[
A_A^_^[]
A_A^_^]
A_A^_^][
A_A^A\
A_A^A\_]
A_A^A\_^
A_A^A\_^[]
A_A^A\_^][
A_A^A]_]
A_A^A]_^[]
A_A^A]A\]
A_A^A]A\_
A_A^A]A\_^[]
A_A^A]A\_^]
A9_0t0H
absoluteUri->get_AbsoluteCanonicalUri(uriStr.GetAddressOf())
AcquireSRWLockExclusive
AcquireSRWLockShared
ActivatableApps
ActivatableClsid
activateApps
activatibleClassId
ActiveSetupDisabled
ActiveSetupTaskOverride
ActivityId
advapi32.dll
AllocateAndInitializeSid
AllocateAndInitializeSid(&sidAuth, 2, SECURITY_BUILTIN_DOMAIN_RID, DOMAIN_ALIAS_RID_ADMINS, 0, 0, 0, 0, 0, 0, &sidGroup)
api-ms-win-appmodel-runtime-internal-l1-1-2.dll
api-ms-win-appmodel-runtime-l1-1-1.dll
api-ms-win-appmodel-state-l1-2-0.dll
api-ms-win-core-apiquery-l1-1-0.dll
api-ms-win-core-biplmapi-l1-1-0.dll
api-ms-win-core-biptcltapi-l1-1-7.dll
api-ms-win-core-com-l1-1-0.dll
api-ms-win-core-com-l1-1-1.dll
api-ms-win-core-debug-l1-1-0.dll
api-ms-win-core-debug-l1-1-1.dll
api-ms-win-core-delayload-l1-1-0.dll
api-ms-win-core-delayload-l1-1-1.dll
api-ms-win-core-errorhandling-l1-1-0.dll
api-ms-win-core-errorhandling-l1-1-2.dll
api-ms-win-core-file-l1-1-0.dll
api-ms-win-core-file-l1-2-0.dll
api-ms-win-core-file-l2-1-0.dll
api-ms-win-core-handle-l1-1-0.dll
api-ms-win-core-heap-l1-1-0.dll
api-ms-win-core-heap-l2-1-0.dll
api-ms-win-core-heap-obsolete-l1-1-0.dll
api-ms-win-core-interlocked-l1-1-0.dll
api-ms-win-core-kernel32-legacy-l1-1-0.dll
api-ms-win-core-kernel32-legacy-l1-1-1.dll
api-ms-win-core-libraryloader-l1-2-0.dll
api-ms-win-core-localization-l1-2-0.dll
api-ms-win-core-path-l1-1-0.dll
api-ms-win-core-processenvironment-l1-1-0.dll
api-ms-win-core-processthreads-l1-1-0.dll
api-ms-win-core-processthreads-l1-1-1.dll
api-ms-win-core-profile-l1-1-0.dll
api-ms-win-core-registry-l1-1-0.dll
api-ms-win-core-registry-l1-1-1.dll
api-ms-win-core-rtlsupport-l1-1-0.dll
api-ms-win-core-shlwapi-obsolete-l1-1-0.dll
api-ms-win-core-string-l1-1-0.dll
api-ms-win-core-synch-l1-1-0.dll
api-ms-win-core-synch-l1-2-0.dll
api-ms-win-core-synch-l1-2-1.dll
api-ms-win-core-sysinfo-l1-1-0.dll
api-ms-win-core-sysinfo-l1-2-0.dll
api-ms-win-core-threadpool-legacy-l1-1-0.dll
api-ms-win-core-timezone-l1-1-0.dll
api-ms-win-core-util-l1-1-0.dll
api-ms-win-core-winrt-error-l1-1-0.dll
api-ms-win-core-winrt-error-l1-1-1.dll
api-ms-win-core-winrt-l1-1-0.dll
api-ms-win-core-winrt-string-l1-1-0.dll
api-ms-win-crt-private-l1-1-0.dll
api-ms-win-crt-runtime-l1-1-0.dll
api-ms-win-crt-string-l1-1-0.dll
api-ms-win-eventing-classicprovider-l1-1-0.dll
api-ms-win-eventing-controller-l1-1-0.dll
api-ms-win-eventing-provider-l1-1-0.dll
api-ms-win-security-base-l1-1-0.dll
api-ms-win-security-lsalookup-l1-1-0.dll
api-ms-win-security-lsalookup-l2-1-0.dll
api-ms-win-security-sddl-l1-1-0.dll
api-ms-win-service-core-l1-1-0.dll
api-ms-win-shcore-registry-l1-1-0.dll
api-ms-win-shcore-stream-l1-1-0.dll
api-ms-win-shcore-sysinfo-l1-1-0.dll
ApiSetQueryApiSetPresence
appDataVolumeNameString.Set(appDataVolumeName.c_str(), static_cast<UINT>(appDataVolumeName.length()))
AppId
Applicable
ApplicationManagement
AppReadiness
AppReadiness-%04d%02d%02d-%02d%02d%02d.etl
AppReadiness.dll
AppReadiness.etl
AppReadiness.pdb
AppReadiness::Api::CreateTask
AppReadiness::Api::CreateTaskForUser::<lambda_38e572681c8983219a4e0601d052ae17>::operator ()
AppReadiness::Api::CreateUser
AppReadiness::Api::DoesCallerHaveAdminRights
AppReadiness::Api::EnterLogonPhaseForUser
AppReadiness::Api::EnterLogonPhaseForUser::<lambda_57f8e378caff1edb191be4589b3bf4c1>::operator ()
AppReadiness::Api::ExecuteOperationsIfAppropriate::<lambda_9d66e4a18961ef5819ab5f15651e3368>::operator ()
AppReadiness::Api::GetTaskForUser::<lambda_0516978c074274684485d0e7201aa917>::operator ()
AppReadiness::Api::HandlePackageChange::<lambda_ea348d24b49a6caf8eaa4b597e69f127>::operator ()
AppReadiness::Api::InstallForUser::<lambda_fdd86c4255431fc84805e4562e123821>::operator ()
AppReadiness::Api::IsCallerLowIL
AppReadiness::Api::RemoveForUser::<lambda_7dd94c3bf1d17ecfb4d71d6fb90dda6e>::operator ()
AppReadiness::Api::ResolveStoreCategories::<lambda_1649471e7229741315bdfde674a2ce65>::operator ()
AppReadiness::AppReadinessModule::AppReadinessModule
AppReadiness::BrokerSession::NotifyOfInstalledPackages
AppReadiness::CreateUserTokenUsingWts
AppReadiness::ExpandEnvironmentStringsW
AppReadiness::GetPackageFamilyName
AppReadiness::GetRegistryIntWithDefault
AppReadiness::Groups::AddToPreviewTask
AppReadiness::Groups::FirstLogonGroup::GetFirstLogonAppPackageFamilyNames::<lambda_e6f0dfb58e72b40c58530efcf3877d7c>::operator ()
AppReadiness::Groups::FirstLogonGroup::OnComplete::<lambda_84464e24bbff6fe1fd2d0d4d81ff6262>::operator ()
AppReadiness::Groups::InboxGroup::RuntimeClassInitialize
AppReadiness::Groups::InstallPackage::Create
AppReadiness::Groups::InstallPackage::CreateLocalFlow
AppReadiness::Groups::InstallPackage::CreateStoreFlow
AppReadiness::Groups::InstallPackage::OnStarted
AppReadiness::Groups::InstallPackage::RuntimeClassInitialize
AppReadiness::Groups::OemFirstRun::RuntimeClassInitialize
AppReadiness::Groups::PreRoamingGroup::RuntimeClassInitialize
AppReadiness::Groups::Previews::CreateTask
AppReadiness::Groups::Previews::OnStarted
AppReadiness::Groups::Previews::Previews
AppReadiness::Groups::RemovePackage::Create
AppReadiness::Groups::RemovePackage::OnStarted
AppReadiness::Groups::RemovePackage::RuntimeClassInitialize
AppReadiness::Groups::UserLogon::OnStarted
AppReadiness::ImmersivePolicy::GetAllDefaultApps
AppReadiness::ImmersivePolicy::ImmersivePolicy
AppReadiness::Impl::BaseTask::Cancel::<lambda_c0d7d61d053c8698aa940f223a2c92fd>::operator ()
AppReadiness::Impl::BaseTask::RuntimeClassInitialize
AppReadiness::Impl::BaseTask::SetCallback::<lambda_8b7c57241abcb8a45d05834dd15bbce6>::operator ()
AppReadiness::Impl::BaseTaskGroup::Add
AppReadiness::Impl::BaseTaskGroup::ExecuteTask
AppReadiness::Impl::BaseTaskGroup::OnComplete
AppReadiness::Impl::BaseTaskGroup::OnProgress
AppReadiness::Impl::BaseTaskGroup::Remove
AppReadiness::Impl::BaseTaskGroup::RuntimeClassInitialize
AppReadiness::Impl::ExternalCallback::RuntimeClassInitialize
AppReadiness::Impl::SearchForCallback
AppReadiness::LogUserLoadedPackages::<lambda_bc41b50572efb8e444b39e054c85e9be>::operator ()
AppReadiness::PackageInfo::GetMainPackageId
AppReadiness::PackageInfo::GetManifestPath
AppReadiness::PackageInfo::GetPackageFullName
AppReadiness::PackageInfo::GetPackageManager
AppReadiness::PackageInfo::GetPackagePath
AppReadiness::PackageInfo::HasLockScreenApp
AppReadiness::PackageInfo::IsBundle
AppReadiness::PackageInfo::IsPackageFamilyInstalledFor
AppReadiness::PackageInfo::IsPackageInstalledFor
AppReadiness::PackageInfo::MarkStatus
AppReadiness::PackageInfo::MarkStatusForEndOfLifePackage
AppReadiness::PackageInfo::NeedsPreviewTile::<lambda_5074cba836762ef77c283a39c7dcadeb>::operator ()
AppReadiness::PackageInfo::SetPreInstalled
AppReadiness::PackageInfo::SupportsMultipleUsers
AppReadiness::PackagesToBeInstalledIterator::PackagesToBeInstalledIterator
AppReadiness::Service::CreateUser
AppReadiness::Service::GetSessionUserToken
AppReadiness::Service::GetSystemUser
AppReadiness::Service::GetTokenSid
AppReadiness::Service::IsSessionShared
AppReadiness::Service::OnServiceStart::<lambda_249a9685c04460f5d2818ed2a86a1f7a>::operator ()
AppReadiness::Service::OnUserLogon
AppReadiness::Service::SetGlobalComOptions
AppReadiness::Service::Start
AppReadiness::ServiceHandle::RegisterControlHandler
AppReadiness::ServiceThread::GetHandle
AppReadiness::ServiceThread::ServiceThread
AppReadiness::ServiceThread::Start
AppReadiness::Storage::PackageList::CreateSecurityDescriptor
AppReadiness::Storage::PackageList::InitRegistry
AppReadiness::Storage::PackageList::InitRegistry::<lambda_25a9ac0e71244a5d00fb75f8d76e323c>::operator ()
AppReadiness::Storage::PackageList::MarkAllUsersAs
AppReadiness::Storage::PackageList::OpenUserMachineRoot
AppReadiness::Storage::PackageList::OpenUserQueueRoot
AppReadiness::Storage::PackageList::SetUserStateDWORD
AppReadiness::Storage::PackageMetadata::Clear
AppReadiness::Storage::PackageMetadata::CreateMetadataKey
AppReadiness::Storage::PackageMetadata::Set
AppReadiness::Storage::PBRPackageList::GetUserRoot
AppReadiness::Storage::WriteRegistryValue
AppReadiness::System::IsFreeNetworkAvailable
AppReadiness::System::IsNetworkConnected
AppReadiness::Tasks::ActivateApps::ComputeNumberOfSecondsActivated
AppReadiness::Tasks::ActivateApps::OnExecute
AppReadiness::Tasks::ActivateApps::OnExecute::<lambda_2cfe183d6ebe93f384688f0bdd724c49>::operator ()
AppReadiness::Tasks::ActivateApps::OnExecute::<lambda_77ffb5b4c88d980e092855dcb2471f73>::operator ()
AppReadiness::Tasks::ActivateApps::OnStarted
AppReadiness::Tasks::ApplicablePackages::ApplicablePackages
AppReadiness::Tasks::AppxPreRegister::RuntimeClassInitialize
AppReadiness::Tasks::AppxPreviews::Invoke::<lambda_77527b36499f73ea6895b682a9b853ae>::operator ()
AppReadiness::Tasks::AppxPreviews::OnExecute
AppReadiness::Tasks::AppxPreviews::OnExecute::<lambda_046130ff1b1a6b71c19f8c8e14c27085>::operator ()
AppReadiness::Tasks::AppxPreviews::RuntimeClassInitialize
AppReadiness::Tasks::BitsJob::CreateTemporaryFileName
AppReadiness::Tasks::BitsJob::CreateTemporaryFileName::<lambda_a85b2a0eaf882aa359e7a82128f285ac>::operator ()
AppReadiness::Tasks::BitsJob::GetUriFileExtension
AppReadiness::Tasks::BitsJob::JobError::<lambda_d6bf87c9bfd21c15179572cd87903efb>::operator ()
AppReadiness::Tasks::BitsJob::JobTransferred::<lambda_e6749707a8a06ac33c4cfedfd5733ce2>::operator ()
AppReadiness::Tasks::BitsJob::StartJob
AppReadiness::Tasks::BitsJob::StartJob::<lambda_1896b0420ca38c5cb223265a9738fa39>::operator ()
AppReadiness::Tasks::CreateBundleReader
AppReadiness::Tasks::DetermineApplicableResourcePackages
AppReadiness::Tasks::FindPlaceHoldersIn
AppReadiness::Tasks::GetAppxPackageRoot
AppReadiness::Tasks::GetMainPackagesForBundle
AppReadiness::Tasks::GetPackagePath
AppReadiness::Tasks::GetPackageResourcePri
AppReadiness::Tasks::Impl::PreviewTileTask::RuntimeClassInitialize
AppReadiness::Tasks::LocalPreviews::GetPackageResourceFiles
AppReadiness::Tasks::LocalPreviews::OnExecute::<lambda_2e69251be88fae9fad057c7f3bdbc2c4>::()::<lambda_ceac50f6bb65f6f2505f6516d08182b8>::operator ()
AppReadiness::Tasks::operator -
AppReadiness::Tasks::PackageChanges::OnExecute
AppReadiness::Tasks::PackageChanges::PackageChanges
AppReadiness::Tasks::Pause::OnExecute
AppReadiness::Tasks::Pause::RuntimeClassInitialize
AppReadiness::Tasks::RegisterInContainerTask::Invoke::<lambda_a4bcf3cca392ff3b092e205d088ea18e>::operator ()
AppReadiness::Tasks::RegisterInContainerTask::OnExecute
AppReadiness::Tasks::RegisterInContainerTask::OnExecute::<lambda_b7d42073db8c24f23b9349153410ebed>::operator ()
AppReadiness::Tasks::RegisterInContainerTask::RuntimeClassInitialize
AppReadiness::Tasks::RegisterPackage::Invoke::<lambda_af26d7ac74c951815cbb70f45f2d96a9>::operator ()
AppReadiness::Tasks::RegisterPackage::OnExecute
AppReadiness::Tasks::RegisterPackage::OnStarted
AppReadiness::Tasks::RemoveBackup::RuntimeClassInitialize
AppReadiness::Tasks::RemovePreviews::OnExecute::<lambda_861b6def1eabb24631da2491e9dc8464>::operator ()
AppReadiness::Tasks::ResolveStoreCategories::OnExecute::<lambda_42e776b031eeee8bce326a45cacbe384>::operator ()
AppReadiness::Tasks::ResolveStoreCategories::RuntimeClassInitialize
AppReadiness::Tasks::StageUserData::Invoke::<lambda_74c12fa7df6caed33aeb44d1028d9d17>::operator ()
AppReadiness::Tasks::StageUserData::OnCancel
AppReadiness::Tasks::StageUserData::OnExecute
AppReadiness::Tasks::StageUserData::OnExecute::<lambda_893fb070bc3b2f6ae2273ab6fe4ff010>::operator ()
AppReadiness::Tasks::StageUserData::RuntimeClassInitialize
AppReadiness::Tasks::Store::ConvertToULong
AppReadiness::Tasks::Store::ParseXmlIntoStruct
AppReadiness::Tasks::Store::ReadArray
AppReadiness::Tasks::Store::ReadElementString
AppReadiness::Tasks::Store::Skip
AppReadiness::Tasks::Store::StoreMetadata::Create
AppReadiness::Tasks::Store::StoreMetadata::Create::<lambda_457eef4576c97378304f32b6929e02e5>::operator ()
AppReadiness::Tasks::Store::StoreMetadata::Create::<lambda_8752951fd3ce9a1933e1d1511e3de003>::operator ()
AppReadiness::Tasks::Store::StoreMetadata::CreateAbsoluteUrl
AppReadiness::Tasks::Store::StoreMetadata::CreatePropertyStore
AppReadiness::Tasks::Store::StoreMetadata::InitPlaceholderPath
AppReadiness::Tasks::Store::StoreMetadata::InitPlaceholderPath::<lambda_fca9d057f4df132e89dcf1a52c433f0a>::operator ()
AppReadiness::Tasks::Store::StoreMetadata::Parse
AppReadiness::Tasks::StoreInstall::OnStarted
AppReadiness::Tasks::StoreInstall::OnStarted::<lambda_c959c419b99b757af7545ec8a3d9110f>::operator ()
AppReadiness::Tasks::StoreInstall::ReacquirePackage::<lambda_f93671876d0c0c249a4ae67b58917094>::operator ()
AppReadiness::Tasks::StorePreviews::CreateTileForPackage
AppReadiness::Tasks::StorePreviews::GetSecondPassImages::<lambda_141cf924e6585cc8cb3cd095287cacf9>::operator ()
AppReadiness::Tasks::UnregisterPackage::FindPackageIdToRemove
AppReadiness::Tasks::UnregisterPackage::Invoke::<lambda_78ac6b53025f223d4eed7bca77c163a8>::operator ()
AppReadiness::Tasks::UnregisterPackage::OnExecute
AppReadiness::Tasks::UnregisterPackage::OnExecute::<lambda_cfcd63a06c2056dd9072a248e7d4b8e5>::operator ()
AppReadiness::Tasks::UnregisterPackage::RuntimeClassInitialize
AppReadiness::User::CloseFirewallPolicyStore
AppReadiness::User::CreateAppxPrepareTask
AppReadiness::User::CreateTask
AppReadiness::User::ExecuteUnderContext
AppReadiness::User::GetDefaultAccountSid
AppReadiness::User::GetWellKnownSid
AppReadiness::User::IsMemberOfDefaultSystemManagedGroup
AppReadiness::User::IsVDI
AppReadiness::User::MarkPackageError
AppReadiness::User::OnComplete
AppReadiness::User::OpenFirewallPolicyStore
AppReadiness::User::ProcessTasks
AppReadiness::User::RuntimeClassInitialize
AppReadiness::User::SuspendActivity
AppReadiness::WinStore::StoreCallbackImpl::Register
AppReadiness_Api_CreateTask
AppReadiness_Api_DisableInAuditMode
AppReadiness_Api_EnterLogonPhase
AppReadiness_Api_GetTask
AppReadiness_Api_HandlePackageChange
AppReadiness_Api_Install
AppReadiness_Api_ProcessTasks
AppReadiness_Api_Remove
AppReadiness_Api_ResolveStoreCategories
AppReadiness_BrokerSession
AppReadiness_Error
AppReadiness_ExecuteTask
AppReadiness_MaintenanceTask_Run
AppReadiness_PackageChange
AppReadiness_PerfTrack
AppReadiness_PreRegister_Package
AppReadiness_ScorePackage
AppReadiness_Service
AppReadiness_Service_Lifetime
AppReadiness_Service_Thread
AppReadiness_Timeline
AppReadiness_TriggerTask_Run
AppReadiness_User_ProcessTasks
AppReadiness_User_Shutdown
AppReadinessDirectory
AppReadiness-Service
apps->GetAt(appIndex, IID_PPV_ARGS(&app))
apps->GetCount(&numApps)
appTile->QueryInterface(appTilePriv.GetAddressOf())
appTilePriv->GetPropertyStore(&propstore)
AppXAllUserStore.dll
AppxAllUserStore::IsInboxPackage(m_packageId.c_str(), &isInbox)
AppxAllUserStore::MarkStatusOfMainPackageForUser(user->GetUserSid().c_str(), user->IsSpecialProfile(), &mainPackage, resultCode)
AppxAllUserStore::TryGetEndOfLifePackageFullName( GetUser()->GetUserSid().c_str(), packageFamilyName, removePackageFullName, ARRAYSIZE(removePackageFullName), &found)
AppxApplicabilityEngine.dll
AppxDeploymentClient.dll
AppXDeploymentClient.dll
AppxPreviews
ARS-GetMetadata(%ls)-%04d-%02d-%02d-%02d-%02d-%02d.txt
ART:AppxPreRegistration
ART:InboxGroup
ART:OemFirstRun
ART:OnDemandSyncGroup
ART:PreRoamingGroup
ART:ResolveStoreCategories
ART:UserFirstLogon
ART:UserLogon
Assert
assertVersion
asyncInfo->get_ErrorCode(&operationResult)
AsyncRunOnce
AsyncUpdatePCSettings
ATAVAWH
AttemptAfter
B L+J@I
BackupData
BackupSize
bad allocation
bad array new length
BaseTask::RuntimeClassInitialize(user, taskId, priority)
BiChangeApplicationStateForPackageName
BiChangeSessionState
BiPtAssociateApplicationExtensionClass
BiPtQuerySystemStateBroadcastChannels
BiPtQuerySystemStateBroadcastChannels(&channels)
bitsManager->CreateJob(text.Get(), BG_JOB_TYPE_DOWNLOAD, &jobId, &job)
Bonecoreuap\shell\appreadiness\src\tasks\stageuserdata.cpp
BrokerSession
BXA9@4t!
C H!C(H
C`H9D$`u*H
Ca A;
callback->QueryInterface(callbackUnknown.GetAddressOf())
callContext
CallContext:[%hs] 
Cancel
Cancel()
cArgs >= 1
CEnumerableObjectCollection::CreateInstance(IID_PPV_ARGS(&apps))
CHAN8
CheckRemoteDebuggerPresent
CheckTokenMembership
CheckTokenMembership(userToken.Get(), static_cast<PSID>(sidBuffer), &isMember)
ClientGetAllPackagesToBeInstalledForUser(nullptr, false, &packages, &packageCount)
ClientGetAllPackagesToBeInstalledForUser(userSid.c_str(), specialProfile, &m_packagesToBeInstalled, &m_numPackagesToBeInstalled)
clientSecurity->SetBlanket(callback, RPC_C_AUTHN_DEFAULT, RPC_C_AUTHZ_DEFAULT, nullptr, RPC_C_AUTHN_LEVEL_DEFAULT, RPC_C_IMP_LEVEL_IDENTIFY, nullptr, EOAC_DEFAULT)
CloseHandle
CloseState
CoCreateFreeThreadedMarshaler
CoCreateGuid
CoCreateGuid(&guid)
CoCreateInstance
CoCreateInstance(__uuidof(::PackageInformation), nullptr, CLSCTX_INPROC_SERVER, IID_PPV_ARGS(&packageInformation))
CoCreateInstance(__uuidof(AppxBundleFactory), nullptr, CLSCTX_INPROC_SERVER, IID_PPV_ARGS(&factory))
CoCreateInstance(__uuidof(BackgroundCopyManager), nullptr, CLSCTX_LOCAL_SERVER, IID_PPV_ARGS(&bitsManager))
CoCreateInstance(__uuidof(PackageInformation), nullptr, CLSCTX_INPROC_SERVER, IID_PPV_ARGS(&packageInfo))
CoCreateInstance(__uuidof(PackageInstallStateStore), nullptr, CLSCTX_INPROC_SERVER, IID_PPV_ARGS(&packageInstallStateStore))
CoCreateInstance(__uuidof(PackageInstallStateStore), nullptr, CLSCTX_INPROC_SERVER, IID_PPV_ARGS(&stateStore))
CoCreateInstance(__uuidof(PackageInstallStateStore), nullptr, CLSCTX_INPROC_SERVER, IID_PPV_ARGS(stateStore.GetAddressOf()))
CoCreateInstance(__uuidof(PackageInstallStateStoreEnum), nullptr, CLSCTX_INPROC_SERVER, IID_PPV_ARGS(stateStoreEnum.GetAddressOf()))
CoCreateInstance(CLSID_GlobalOptions, nullptr, CLSCTX_INPROC_SERVER, IID_PPV_ARGS(globalOptions.GetAddressOf()))
CoCreateInstance(CLSID_StdGlobalInterfaceTable, nullptr, CLSCTX_INPROC_SERVER, IID_PPV_ARGS(m_git.GetAddressOf()))
CoDisconnectContext
CoFreeUnusedLibraries
CoGetApartmentType
CoGetCallContext
CoGetMalloc
CoGetSharedServiceId(&m_serviceId)
CoImpersonateClient
CoInitializeSecurity
CoInitializeSecurity(reinterpret_cast<PSECURITY_DESCRIPTOR>(const_cast<GUID*>(&appIdAppReadiness)), -1, nullptr, nullptr, RPC_C_AUTHN_LEVEL_PKT, RPC_C_IMP_LEVEL_IDENTIFY, nullptr, EOAC_NO_CUSTOM_MARSHAL | EOAC_DYNAMIC_CLOAKING | EOAC_DISABLE_AAA | EOAC_APPID, nullptr)
combase.dll
ComDisconnectableObjectManager::Initialize()
ComDisconnectableObjectManager::MakeAndInitializeDisconnectableObject<AppReadiness::Impl::ExternalTaskWrapper>(task, taskToWrap.Get())
ComDisconnectableObjectManager::MakeAndInitializeDisconnectableObject<ExternalStoreCallback>(progressWrapper.GetAddressOf(), this)
CompanyName
CompareFileTime
CompareStringOrdinal
Completed
completed
completedOperation->QueryInterface(asyncInfo.GetAddressOf())
connection->GetNetworkConnectivityLevel(&level)
connectionCost->get_NetworkCostType(&cost)
ConvertSidToStringSid(reinterpret_cast<SID*>(sid), &rawSidStr)
ConvertSidToStringSidW
ConvertStringSecurityDescriptorToSecurityDescriptor(userKeyAcl.c_str(), SDDL_REVISION_1, &rawPtr, nullptr)
ConvertStringSecurityDescriptorToSecurityDescriptorW
ConvertStringSidToSidW
CoRegisterClassObject
CoRegisterServerShutdownDelay(m_outstandingObjects.Get(), c_MaxWaitForObjects)
CoResumeClassObjects
CoRevertToSelf
CoRevokeClassObject
CoTaskMemAlloc
CoTaskMemFree
CoTaskMemRealloc
count
CoWaitForMultipleHandles
CpmcGetContainerIdForUser
CreateDirectory(tempPath, nullptr)
CreateDirectoryW
CreateEventExW
CreateEventW
CreateFileW
CreateMutexExW
CreatePreviewTileOnly
CreateSemaphoreExW
CreateSemaphoreW
CreateStreamOnHGlobal
CreateThread
CreateTimerQueueTimer
CreateWellKnownSid
CreateWellKnownSid(sidType, domainSid, reinterpret_cast<SID*>(sid), &sidLen)
CreateWellKnownSid(WinBuiltinDefaultSystemManagedGroupSid, nullptr, sidBuffer, &sidSize)
CreateXmlReader
CreateXmlReader(IID_PPV_ARGS(&reader), nullptr)
CreateXmlReaderInputWithEncodingName
CreateXmlReaderInputWithEncodingName(reinterpret_cast<ISequentialStream*>(this), nullptr, L"utf-16", true, nullptr, &readerInput)
CreateXmlWriter
CreateXmlWriterOutputWithEncodingName
currentContextId
currentContextMessage
currentContextName
CxhOnlyUse
Cy(A;
D$ 0u
D$ E3
D$ f9(t
D$ fD
D$ H9G
D$ Mi
D$(E3
D$(H9D$0
D$(L+
D$@E3
D$@f9
D$@H;
D$@t3D
D$`E3
D$`fD90t
D$`H+
D$`L;
D$`L;C
D$0E3
D$0fD98t
D$0H;
D$0L;
D$8E3
D$8H0
D$D!D$D3
D$HE3
D$hE3
D$HE3
D$pE3
D$PE3
D$PfD98t
D$PH;
D$xA;
D$xE3
D$XL;
D:P(A;OICI;KA;;;BA)(A;OICI;KA;;;S-1-5-80-2020831507-1298702824-3288167190-116113825-4190209)
D;|$Pt
D;a D
D;A(D
D;J,H
D;v(r
D;wLt
D;y(D
D8|$@u
D8|$xL
D8l$A
D8s3t
D9|$D
D9|$DvuL
D9|$p}
D9d$0
D9mgt
D9t$P
DebugBreak
DecodePointer
DelayLoadFailureHook
DeleteAllPackagesFromPackageArray
DeleteCriticalSection
DeleteFileW
DeleteTimerQueueTimer
deploymentOperation->put_Completed(this)
deploymentOperation->put_Progress(this)
DidAppSurviveOSUpgradeForUser
DisableAppInstallsOnFirstLogon
DisableInAuditMode
DisableResolveStoreCategories
DisableThreadLibraryCalls
DisableUpgradeCleanup
DoesCallerHaveAdminRights()
DumpGetMetadataXml
DuplicateHandle
DuplicateHandle(GetCurrentProcess(), m_threadHandle.Get(), GetCurrentProcess(), threadHandle, 0, false, DUPLICATE_SAME_ACCESS)
DuplicateTokenEx
DuplicateTokenEx(temp.Get(), TOKEN_IMPERSONATE|TOKEN_QUERY|TOKEN_DUPLICATE, nullptr, SecurityImpersonation, TokenImpersonation, result.GetAddressOf())
DuplicateTokenEx(temp.Get(), TOKEN_IMPERSONATE|TOKEN_QUERY|TOKEN_DUPLICATE, nullptr, SecurityImpersonation, TokenImpersonation, token.GetAddressOf())
Duration
DWordToInt(value, &intValue)
E;f r
E\$pL
E_ABORT
E_OUTOFMEMORY
E_UNEXPECTED
E0H9E(
eAonecore\shell\lib\calleridentity\calleridentity.cpp
EarlyAppResolverStart
ED$8L
Elapsed
EnableKdSpew
EnableLogging
EnableTraceEx2
EncodePointer
EnterCriticalSection
en-US
Error
ET$(H
ET$`E3
EventData
EventProviderEnabled
EventRegister
EventSetInformation
EventUnregister
EventWrite
EventWriteTransfer
Exception
ExitCode
ExpandEnvironmentStringsW
Expression
ExternalObjects
ext-ms-win-containers-policymanagercli-l1-1-0
ext-ms-win-containers-policymanagercli-l1-1-0.dll
ext-ms-win-devmgmt-policy-l1-1-0.dll
ext-ms-win-firewallapi-webproxy-l1-1-0.dll
ext-ms-win-kernel32-package-l1-1-0.dll
ext-ms-win-session-usermgr-l1-1-0
ext-ms-win-session-usermgr-l1-1-0.dll
ext-ms-win-session-usermgr-l1-2-0
ext-ms-win-session-usertoken-l1-1-0.dll
ext-ms-win-session-winsta-l1-1-0.dll
ext-ms-win-session-wtsapi32-l1-1-0
ext-ms-win-session-wtsapi32-l1-1-0.dll
ext-ms-win-shell32-shellfolders-l1-1-0.dll
f;.t8f
f;D$x
f;t$ tFH
f9,Au
f9,Xu
f9<Au
f9<Bu
f9<Ju
f94Au
f94Ju
fA;R*sx
fA9(t
fA9,Cu
fA9\m
fA9<@u
fA9<^u
fA9<Au
fA9<Cu
fA9<Iu
fA9<Pu
fA9<Qu
fA9<Ru
fA9<Su
fA94@u
fA94Bu
fA94Qu
factory->CreateBundleManifestReader(stream.Get(), reader.GetAddressOf())
Failed to get the VAIL container ID for user from Container Policy Manager.
FailFast
failureCount
failureId
failureType
FallbackError
false
fB9|E
fC9,Qu
fC9<Gu
fC9<Qu
fC9<Su
fC94Au
fD9#t
fD9$pu
fD9<Bu
fD9<Gu
fD9<Ku
fD9<Zu
fD94^u
fD94Au
fD94xu
fD98t
fD9z*vg
fF9<Fu
fffffff
FileDescription
fileName
FileVersion
FindClose
FindFirstFileW
FindMissingTilesFailed
FindNextFileW
FindPackagesByPackageFamily
FindResourceExW
FirstLogon_NumConcurrentFirstRunApps
FirstLogon_NumConcurrentTasks
FirstLogonDelay
FirstRunLaunchTimeout
flags == APPREADINESS_TASK_DEFAULT
Fonecoreuap\shell\appreadiness\src\core\servicehandle.cpp
FormatMessageW
FreeApplicablePackages
FreeLibrary
FreeSid
Function
function
Function
FWClosePolicyStore
FWOpenPolicyStore
GenerateAppUserModelId(packageFamilyName.c_str(), tile.PRAID.c_str(), &appId)
GenuD
GetAllDefaultApps
GetAllUpdatedPackages
GetApplicablePackagesForUser
GetApplicablePackagesForUser(reader, sid, &this->count, &this->packages)
GetCallingUserToken(TOKEN_QUERY, callingUser.GetAddressOf())
GetComputerNameW
GetCurrentProcess
GetCurrentProcessId
GetCurrentThread
GetCurrentThreadId
getDefaultApps != nullptr
getDefaultApps(apps.Get())
GetEffectivePackageStatusForUser
GetFileAttributesExW
GetFileAttributesW
GetFileInformationByHandleEx
GetFileSize
GetFullPathNameW
GetHGlobalFromStream
GetLastError
GetLastError()
GetLocalTime
GetModuleFileNameA
GetModuleHandleExW
GetModuleHandleW
GetPackageApplicabilityForUserLogon
GetPackageApplicabilityWrapper
GetPackageApplicabilityWrapper(m_packageId.c_str(), user->GetUserSid().c_str(), &appState)
GetPackageOverrideSetupPhase
GetPackageSetupPhase
GetProcAddress
GetProcessHeap
GetProcessId
GetProfileType
GetSidSubAuthority
GetStateFolder
GetSystemDirectoryW
GetSystemTime
GetSystemTimeAsFileTime
GetTempPathW
GetTickCount
GetTokenInformation
GetTokenInformation(GetToken().Get(), TokenSessionId, &userSessionId, sizeof(userSessionId), &userSessionIdLen)
GetTokenInformation(userToken.Get(), TokenSessionId, &userSessionId, sizeof(userSessionId), &len)
GetTokenInformation(userToken.Get(), TokenSessionId, &userSessionId, sizeof(userSessionId), &userSessionIdLen)
GetTraceEnableFlags
GetTraceEnableLevel
GetTraceLoggerHandle
GetUser()->ExecuteUnderContext([&]() { auto packageManagerInternal = std::move(PackageInfo::GetPackageManager<IPackageManagerInternal>()); ThrowIfFailed(packageManagerInternal->RemovePackageWithExtendedOptionsAsync( to_winstring(m_packageFullName).Get(), m_repair ? DeploymentOptionsInternal_RepairAppRegistrationOption : DeploymentOptionsInternal_None, CheckFlags(TaskFlags::OnDemandSyncTask) ? DeploymentOptionsInternal2_FailOnRedirectToDefaultAccount : DeploymentOptionsInternal2_None, DeploymentOperationPriority::DeploymentOperationPriority_Default, deploymentOperation.GetAddressOf())); })
GetUser()->ExecuteUnderContext([&]() { auto packageManagerInternal = std::move(PackageInfo::GetPackageManager<IPackageManagerInternal>()); ThrowIfFailed(packageManagerInternal->StagePackageInContainerByFullNameAsync( to_winstring(m_packageFullName).Get(), DeploymentOptionsInternal_None, DeploymentOperationPriority_Default, to_winstring(m_containerId).Get(), deploymentOperation.GetAddressOf())); ComPtr<IDeploymentResult> deploymentResult; HRESULT stageResult = WaitForDeploymentOperation(deploymentOperation.Get(), NULL, NULL, &deploymentResult); if (FAILED(stageResult)) { Microsoft::WRL::Wrappers::HString errorStr; if (SUCCEEDED(deploymentResult->get_ErrorText(errorStr.GetAddressOf()))) { HRESULT extendedErrorCode; AppReadiness_DeploymentError( GetUser()->GetUserSid().c_str(), L"StagePackageInContainerByFullNameAsync", m_packageFullName.c_str(), SUCCEEDED(deploymentResult->get_ExtendedErrorCode(&extendedErrorCode)) ? extendedErrorCode : stageResult, errorStr.GetRawBuffer(nullptr)); } ThrowIfFailed(stageResult); } ThrowIfFailed(packageManagerInternal->RegisterPackageInContainerByFullNameAsync( to_winstring(m_packageFullName).Get(), DeploymentOptionsInternal_None, DeploymentOperationPriority_Default, to_winstring(m_containerId).Get(), deploymentOperation.GetAddressOf())); return S_OK; })
GetUser()->ExecuteUnderContext([&]() { ThrowIfFailed(packageManager->GeneratePreviewTiles(deploymentOperation.GetAddressOf())); })
GetUser()->ExecuteUnderContext([&]() { ThrowIfFailed(packageManager->StageUserDataWithOptionsAsync(packageId.Get(), AdjustDeploymentOptionsForUserLogon(DeploymentOptions_None), m_operation.GetAddressOf())); })
GetVersionExW
GetWindowsDirectoryW
gfffffffH
gfffffffH+
gfffffffI
gfffffffL
gfffffffL+
GlobalCollection
GlobalLock
globalOptions->Set(COMGLB_EXCEPTION_HANDLING, COMGLB_EXCEPTION_DONOT_HANDLE_ANY)
globalOptions->Set(COMGLB_RO_SETTINGS, COMGLB_ENABLE_AGILE_OOP_PROXIES)
globalOptions->Set(COMGLB_UNMARSHALING_POLICY, COMGLB_UNMARSHALING_POLICY_STRONG)
GlobalSize
GlobalUnlock
Group
GroupId
GSNxZ
H AVH
H SVWAVH
h VWAVH
H!\$@H
H!\$H3
H!\$HH
H!]@!]0A
H!]8L
H!]PH
H!_@H
H!|$8L
H;\$(u
H;|$8
H;0u/H
H;Q0s
H;S(v
h_^[]
H_^][
H+\$xH
H+D$xH
H+L$(H
H9\$0t
H9\$8t
H9} t1H
H9}0t0H
H9~0t&H
H99t$H
H9A`t
H9D$ uPH
H9D$P
H9D$p
H9E0t
H9E8@
H9wHsAH
HA_A^A]A\_^[]
HA_A^A]A\_^][
HasUpd
HcL$ HcD$$H
HeapAlloc
HeapFree
HKEY_CLASSESS_ROOT
HKEY_CURRENT_USER
hresult
HRESULT
HRESULT_FROM_NT(RtlGetSessionProperties(sessionId, &sessionProperties))
HrInstallClipLicense
hrPackageState
hrSetPhase != HRESULT_FROM_WIN32(ERROR_TIMEOUT)
IdlePulse
ImageBaseUrl
imageName
imageSize
ImpersonateLoggedOnUser
ImpersonateLoggedOnUser(m_userToken.Get())
Inbox_NumConcurrentTasks
InboxApps
InferUserContext(userContextToken, callingUser.GetAddressOf())
InitializeConditionVariable
InitializeCriticalSection
InitializeCriticalSectionAndSpinCount
InitializeCriticalSectionEx
InitializeSListHead
InitializeSRWLock
InitOnceBeginInitialize
InitOnceComplete
InitOnceExecuteOnce
InitOnceExecuteOnce(&initOnce, [](PINIT_ONCE , void* , void** ) -> BOOL { MICROSOFT_TELEMETRY_ASSERT(!s_registryGate.IsValid()); s_registryGate = std::move(Microsoft::WRL::Wrappers::Semaphore(CreateSemaphore(nullptr, 1, 1, nullptr))); ThrowIfFalse(s_registryGate.IsValid(), ResultFromKnownLastError()) if (!s_registryRoot.empty()) { ThrowIfWin32ResultFailed(RegOpenKeyEx(HKEY_CURRENT_USER, s_registryRoot.c_str(), 0, KEY_ALL_ACCESS, s_machineRootKey.GetAddressOf())); } else { ThrowIfWin32ResultFailed(RegOpenKeyEx(HKEY_LOCAL_MACHINE, c_AppReadinessRegRoot, 0, KEY_ALL_ACCESS, s_machineRootKey.GetAddressOf())); } return true; }, nullptr, nullptr)
InitOnceExecuteOnce(&initOnce, [](PINIT_ONCE , void* , void** ) -> BOOL { wchar_t buffer[MAX_PATH]; ThrowIfFailed(ResultFromWin32Count(GetSystemDirectory(buffer, _countof(buffer)), _countof(buffer))); ThrowIfFailed(PathCchAppend(buffer, _countof(buffer), L"@GhostedSecondaryTileReplacementLogo.png")); s_placeholderImagePath.assign(buffer); return true; }, nullptr, nullptr)
InitOnceExecuteOnce(&initOnce, [](PINIT_ONCE , void* parameter, void** ) -> BOOL { HMODULE appxClientDll = LoadLibraryEx(L"AppxDeploymentClient.dll", nullptr, LOAD_LIBRARY_SEARCH_SYSTEM32); if (appxClientDll != nullptr) { auto const ppfnResult = reinterpret_cast<PfnGetPackageApplicabilityForUserLogon*>(parameter); *ppfnResult = reinterpret_cast<PfnGetPackageApplicabilityForUserLogon>(GetProcAddress(appxClientDll, "GetPackageApplicabilityForUserLogon")); if (*ppfnResult == nullptr) { FreeLibrary(appxClientDll); } } return true; }, &pfnGetPackageApplicabilityForUserLogon, nullptr)
install:
Installed
InternalName
invalid vector<T> subscript
is not
IsAuditMode
IsDebuggerPresent
IsFreeNetworkAvailable
IsIdle
IsInboxPackage
IsLocal()
IsNetworkConnected
IsProcessorFeaturePresent
IsSameObject
IsValidSid
item.As(&itemUnknown)
iter.first.As(&taskInf)
iterable->First(iterator.GetAddressOf())
iterator->get_Current(item.GetAddressOf())
iterator->get_HasCurrent(&current)
iterator->get_HasCurrent(&hasCurrent)
iterator->GetCurrent(&package)
iterator->GetHasCurrent(&hasCurrent)
iterator->MoveNext(&current)
iterator->MoveNext(&hasCurrent)
iuilp.dll
Iv}2ja
job->AddFile(iter.first.c_str(), iter.second.c_str())
job->Complete()
job->Resume()
job->SetNotifyFlags(BG_NOTIFY_JOB_TRANSFERRED | BG_NOTIFY_JOB_ERROR)
job->SetNotifyInterface(static_cast<IBackgroundCopyCallback*>(this))
job->SetPriority(hiPriority ? BG_JOB_PRIORITY_FOREGROUND : BG_JOB_PRIORITY_NORMAL)
jobError->GetError(&errorContext, &errorCode)
jw=<u
K SVWH
kernel32.dll
kernelbase.dll
keyName.InitializeFormat(L"Software\\Microsoft\\Windows\\CurrentVersion\\Appx\\AppxAllUserStore\\PBR\\%ls", userSid.c_str())
KEYWX
L!}XH
L$ E3
l$ E3
L$ E3
L$ I;
L$ L;
L$ SH
L$ SUVWH
L$ SWH
L$ UH
L$ UVWATAUAVAWH
l$ VWATAVAW
l$ VWATAVAWH
l$ VWAVH
L$ VWAVH
l$ VWAVH
L$(E3
L$(H3
L$@H3
L$`9L$Pu
L$`D;
L$`H3
L$0E3
L$0H3
L$8E3
L$8H3
L$DE3
L$hH3
L$HH3
L$hH3
L$HH3
L$hH3
L$HH3
L$pE3
L$pH+L$hH
L$pH3
L$PH3
L$pH3
L$PH3
L$pH3
L$PH3
L$pH3
L$PH3
L$pH3
L$PH3
L$pH3
L$PH3
L$pH3
l$PI;
L$XE3
L$XH+
L$xH3
L$XH3
L$xH3
L$XH3
L$xL+
L+D$xI
L9|$@t
L9aPt
L9t$x
LaunchAppAfterLogOn
LaunchCflScenario
LaunchUserOOBE
LeaveCriticalSection
LegalCopyright
len != 0
lineNumber
LoadLibraryExW
LoadResource
LOCAL
Local\SM0:%d:%d:%hs
LocalAlloc
LocalFree
localPreview
localTask
localTask.As(&taskToWrap)
LockResource
LockScreenApps
LogHr
LogonCount
LogonDelay
LookupAccountSidW
LsaLookupClose
LsaLookupFreeMemory
LsaLookupGetDomainInfo
LsaLookupGetDomainInfo(lsa.get(), AccountDomainInformation, (PVOID *)&domainInfo)
LsaLookupOpenLocalPolicy
LsaLookupOpenLocalPolicy(&lsaAttributes, LOOKUP_VIEW_LOCAL_INFORMATION, &lsa)
LUnCS
M H1E
m_git->RegisterInterfaceInGlobal(callback, __uuidof(IAppReadinessTaskCallback), &m_cookie)
m_operation->put_Completed(this)
m_operation->put_Progress(this)
m_package->get_InstalledLocation(storageFolder.GetAddressOf())
m_runningTasksEvent.IsValid()
m_taskGate.IsValid()
m_threadHandle.IsValid()
m_uriFactory->CreateUri(packageUriString.Get(), packageUri.GetAddressOf())
m_uriFactory->CreateUri(uriStr.Get(), &uriObject)
m_uriFactory->CreateWithRelativeUri(baseStr.Get(), relStr.Get(), &uri)
M+M(H
M0I+M(H
MachineOobeUpdates
MakeAndInitialize<AppReadiness::Groups::InstallPackage>(&task, user, package)
MakeAndInitialize<ExternalCallback>(&newCallback, callback)
MakeAndInitialize<Groups::FirstLogonGroup>(&task, this)
MakeAndInitialize<Groups::InboxGroup>(&task, this)
MakeAndInitialize<Groups::OemFirstRun>(&task, this)
MakeAndInitialize<Groups::OnDemandSyncGroup>(&task, this)
MakeAndInitialize<Groups::PreRoamingGroup>(&task, this)
MakeAndInitialize<Groups::UserLogon>(&task, this)
MakeAndInitialize<RemovePackage>(&task, user, packageInfo)
MakeAndInitialize<StoreMetadata>(&metadata)
MakeAndInitialize<Tasks::ActivateApps>(&task, GetUser(), acid.Get(), packageInfo)
MakeAndInitialize<Tasks::AppxPreRegister>(&task, this)
MakeAndInitialize<Tasks::AppxPreviews>(&appxPreviewTileRegistration, GetUser())
MakeAndInitialize<Tasks::LocalPreviews>(&localTask, GetUser())
MakeAndInitialize<Tasks::Pause>(&pause, GetUser(), seconds)
MakeAndInitialize<Tasks::RegisterPackage>(&registerTask, GetUser(), packageInfo)
MakeAndInitialize<Tasks::RemoveBackup>(&removeBackup, GetUser(), packageInfo)
MakeAndInitialize<Tasks::RemovePreviews>(&removePreviewTiles, GetUser(), packageInfo->GetPackageFamilyName())
MakeAndInitialize<Tasks::ResolveStoreCategories>(&localTask, user.Get(), cPackageFamilyNames, packageFamilyNames)
MakeAndInitialize<Tasks::StageUserData>(&stageUserData, GetUser(), packageInfo)
MakeAndInitialize<Tasks::StoreInstall>(&installTask, GetUser(), packageInfo)
MakeAndInitialize<Tasks::StorePreviews>(&previewTask, GetUser())
MakeAndInitialize<Tasks::StorePreviews>(&storeTask, GetUser())
MakeAndInitialize<Tasks::UnregisterPackage>(&unregisterPackage, GetUser(), packageFamilyName, removePackageFullName, true)
MakeAndInitialize<Tasks::UnregisterPackage>(&unregisterPackage, GetUser(), packageInfo)
MakeAndInitialize<Tasks::UnregisterPackage>(&unregisterPackage, GetUser(), packageInfo, true)
MakeAndInitialize<User>(&systemUser, systemSid, INVALID_USERCONTEXT_TOKEN, processToken)
MakeAndInitialize<User>(user.GetAddressOf(), userSid, userContextToken, userToken)
MakeAndInitialize<WindowsStoreUserApps>(&windowsStore)
ManifestCacheOptions
map/set<T> too long
MarkStatusOfMainPackageForUser
MaxNonProgressIdlePulseCount
memcmp
memcpy
memmove
memset
message
Metadata
Microsoft
Microsoft Corporation
Microsoft.Windows.AppXDeploymentServer
Microsoft.Windows.ARS.Tiles
Microsoft-Windows-AppReadiness
Microsoft-Windows-AppReadiness/Admin
Microsoft-Windows-AppReadiness/Debug
Microsoft-Windows-AppReadiness/Operational
MigrationRepairAttempted
minATL$__a
minATL$__f
minATL$__m
minATL$__z
MissingTilesDetected
MissingTilesRepaired
module
ModuleCollection
MoveFileW
ms:CriticalData
ms:Measures
ms:ReservedKeyword44
ms:Telemetry
Msg:[%ws] 
msvcp_win.dll
NetUserGetInfo
NotPostShellPhase
NotPreInstalled
NoWaitOnRoamingPayloads
NqX@W
ntdll.dll
ntelA
NtQuerySystemInformation
NtQuerySystemTime
NtQuerySystemTime(&currentTime)
NtQueryWnfStateData
NtQueryWnfStateData(&stateName, 0, nullptr, &changeStamp, buffer, &bufferLen)
NumPackages
o\$PH
object->QueryInterface(objectUnknown.GetAddressOf())
oD$ f
OEMLicense.dll
oL$0f
onecore\internal\base\inc\ContainerPolicyManagerClient.h
onecore\internal\sdk\inc\wil\opensource/wil/resource.h
onecore\internal\sdk\inc\wil\opensource\wil\filesystem.h
onecore\internal\sdk\inc\wil\opensource\wil\resource.h
onecore\internal\sdk\inc\wil\opensource\wil\result_macros.h
onecore\internal\sdk\inc\wil\opensource\wil\win32_helpers.h
onecore\internal\sdk\inc\wil\opensource\wil\winrt.h
onecoreuap\shell\AppReadiness\Src\AppReadinessPch.h
onecoreuap\shell\appreadiness\src\core\api.cpp
onecoreuap\shell\appreadiness\src\core\basetask.cpp
onecoreuap\shell\appreadiness\src\core\basetaskgroup.cpp
onecoreuap\shell\appreadiness\src\core\brokersession.cpp
onecoreuap\shell\appreadiness\src\core\ExternalCallback.h
onecoreuap\shell\appreadiness\src\core\ImmersivePolicy.h
onecoreuap\shell\AppReadiness\Src\Core\Module.h
onecoreuap\shell\appreadiness\src\core\packageinfo.cpp
onecoreuap\shell\appreadiness\src\core\packagelist.cpp
onecoreuap\shell\appreadiness\src\core\packagemetadata.cpp
onecoreuap\shell\appreadiness\src\core\pbrpackagelist.cpp
onecoreuap\shell\appreadiness\src\core\service.cpp
onecoreuap\shell\appreadiness\src\core\servicethread.cpp
onecoreuap\shell\appreadiness\src\core\StdUtils.h
onecoreuap\shell\appreadiness\src\core\storecallback.cpp
onecoreuap\shell\appreadiness\src\core\system.cpp
onecoreuap\shell\appreadiness\src\core\user.cpp
onecoreuap\shell\appreadiness\src\core\User.h
onecoreuap\shell\appreadiness\src\groups\firstlogongroup.cpp
onecoreuap\shell\appreadiness\src\groups\inboxgroup.cpp
onecoreuap\shell\appreadiness\src\groups\installpackage.cpp
onecoreuap\shell\appreadiness\src\groups\oemfirstrun.cpp
onecoreuap\shell\appreadiness\src\groups\ondemandsyncgroup.cpp
onecoreuap\shell\appreadiness\src\groups\preroaminggroup.cpp
onecoreuap\shell\appreadiness\src\groups\removepackage.cpp
onecoreuap\shell\appreadiness\src\groups\tilestoremigrationrecovery.cpp
onecoreuap\shell\appreadiness\src\groups\userlogon.cpp
onecoreuap\shell\appreadiness\src\tasks\activateapps.cpp
onecoreuap\shell\appreadiness\src\tasks\appxpreregister.cpp
onecoreuap\shell\appreadiness\src\tasks\appxpreviews.cpp
onecoreuap\shell\appreadiness\src\tasks\bitsjob.cpp
onecoreuap\shell\appreadiness\src\tasks\localpreviews.cpp
onecoreuap\shell\appreadiness\src\tasks\packagechanges.cpp
onecoreuap\shell\appreadiness\src\tasks\previewtiletask.cpp
onecoreuap\shell\appreadiness\src\tasks\registerincontainertask.cpp
onecoreuap\shell\appreadiness\src\tasks\registerpackage.cpp
onecoreuap\shell\appreadiness\src\tasks\removebackup.cpp
onecoreuap\shell\appreadiness\src\tasks\removepreviews.cpp
onecoreuap\shell\appreadiness\src\tasks\resolvestorecategories.cpp
onecoreuap\shell\appreadiness\src\tasks\storeinstall.cpp
onecoreuap\shell\appreadiness\src\tasks\storemetadata.cpp
onecoreuap\shell\appreadiness\src\tasks\storepreviews.cpp
onecoreuap\shell\appreadiness\src\tasks\unregisterpackage.cpp
OnStart
Oonecoreuap\shell\appreadiness\src\groups\previews.cpp
OPCOx
OpenProcessToken
OpenProcessToken(GetCurrentProcess(), TOKEN_IMPERSONATE|TOKEN_QUERY|TOKEN_DUPLICATE, processToken.GetAddressOf())
OpenSemaphoreW
OpenStateExplicitForUserSidString
OpenThreadToken
Operation
operation.As(&asyncInfo)
operationResult
OpposingOperation
OriginalFilename
originatingContextId
originatingContextMessage
originatingContextName
oT$@f
OutputDebugStringW
p AWH
p WATAUAVAWH
p WAVAWH
P:\AppData
P:\WindowsApps
PA\_]
PA^_]
pA^_]
PA^_]
PA^_^
pA^_^][
pA_A^_^]
PA_A^_^]
PA_A^A]A\_^]
pA_A^A]A\_^]
Package
package->get_Id(&packageId)
package->get_Id(packageId.GetAddressOf())
package->GetPackageId(&packageId)
packageChanges-%ld
PackageFamilyName
packageFamilyName
PackageFamilyName
PackageFamilyNameFoundInPolicy
PackageFamilyNameFromFullName
PackageId
packageId.Set(package->GetPackageId().c_str())
packageId->get_FullName(packageFullName.GetAddressOf())
packageId->get_FullName(str.GetAddressOf())
packageId->GetPackageFullName(&fullname)
PackageIdFromFullName
PackageIdFromFullName(m_packageId.c_str(), PACKAGE_INFORMATION_BASIC, &packageIdLen, reinterpret_cast<BYTE*>(packageId.get()))
PackageInfo
packageInfo->GetApplicationTileInfoAt(i, IID_PPV_ARGS(&appTile))
packageInfo->GetApplicationTileInfoCount(&numTiles)
packageInformation->Commit(false)
packageInformation->LoadFromDisk(m_packageFamilyName.c_str(), STCT_UNINSTALL)
PackageInstallPause
packageIter->First(&iterator)
packageManager.As(&packageManager2)
packageManager.As(&packageManager3)
packageManager->CopyTo(riid, object)
packageManager->FindPackagesByUserSecurityId(userSid.Get(), &iterable)
packageManager->FindPackagesByUserSecurityIdPackageFamilyNameWithPackageTypes(userSid.Get(), packageFamilyName.Get(), PackageTypes_Main, &packageIter)
packageManager->FindPackagesByUserSecurityIdPackageFamilyNameWithPackageTypes(userSidString.Get(), packageFamilyNameString.Get(), PackageTypes_Main, &packageIter)
packageManager->GeneratePreviewTiles(deploymentOperation.GetAddressOf())
packageManager->RegisterPackageWithAppDataVolumeForUserAsync( packageUri.Get(), nullptr, static_cast<DeploymentOptionsInternal>(deploymentOptions), nullptr, GetUser()->GetUserContext(), &deploymentOperation)
packageManager->RegisterPackageWithAppDataVolumeForUserAsync( packageUri.Get(), nullptr, static_cast<DeploymentOptionsInternal>(deploymentOptions), volume.Get(), GetUser()->GetUserContext(), &deploymentOperation)
packageManager->StageUserDataWithOptionsAsync(packageId.Get(), AdjustDeploymentOptionsForUserLogon(DeploymentOptions_None), m_operation.GetAddressOf())
packageManager2->FindPackagesByUserSecurityIdPackageFamilyNameWithPackageTypes(userSidString.Get(), packageFamilyNameString.Get(), PackageTypes_Main, &packageIter)
packageManager3->AddPackageVolumeAsync(HStringReference(PREINSTALLED_WINDOWSAPPS).Get(), packageVolumeOperation.GetAddressOf())
packageManager3->FindPackageVolumeByName(appDataVolumeNameString.Get(), &volume)
packageManagerInternal->CopyTo(riid, object)
packageManagerInternal->RegisterPackageInContainerByFullNameAsync( to_winstring(m_packageFullName).Get(), DeploymentOptionsInternal_None, DeploymentOperationPriority_Default, to_winstring(m_containerId).Get(), deploymentOperation.GetAddressOf())
packageManagerInternal->RemovePackageWithExtendedOptionsAsync( to_winstring(m_packageFullName).Get(), m_repair ? DeploymentOptionsInternal_RepairAppRegistrationOption : DeploymentOptionsInternal_None, CheckFlags(TaskFlags::OnDemandSyncTask) ? DeploymentOptionsInternal2_FailOnRedirectToDefaultAccount : DeploymentOptionsInternal2_None, DeploymentOperationPriority::DeploymentOperationPriority_Default, deploymentOperation.GetAddressOf())
packageManagerInternal->StagePackageInContainerByFullNameAsync( to_winstring(m_packageFullName).Get(), DeploymentOptionsInternal_None, DeploymentOperationPriority_Default, to_winstring(m_containerId).Get(), deploymentOperation.GetAddressOf())
PackageOperationType
PackageRemovePause
PackageRoot
PackageSourceType
packageUriString.Set(manifestPath.c_str(), static_cast<UINT>(manifestPath.length()))
PartA_PrivTags
PathAllocCombine
PathCchAddExtension
PathCchAddExtension(buffer, _countof(buffer), extension.c_str())
PathCchAppend
PathCchAppend(buffer, _countof(buffer), L"@GhostedSecondaryTileReplacementLogo.png")
PathCchCombine
PathCchCombine(buffer, _countof(buffer), m_tempDir.c_str(), guidBuf)
PathCchCombine(path, _countof(path), appxRootPath, fullname.Get())
PathCchCombine(path, _countof(path), packageInfo->GetPackagePath().c_str(), c_ResourcesPri)
PathCchCombine(path, _countof(path), rootPath.c_str(), c_ResourcesPri)
PathCchCombine(tempPath, _countof(tempPath), path.Get(), guidBuf)
PathCchRemoveFileSpec
PathCchRemoveFileSpec(buffer.get(), m_packagePath.length() + 1)
pause-
PolicyManager_GetPolicyString
policyName
PreinstalledVolumeServicing.dll
PreinstalledVolumeServicing_ApplySuccess
PreinstalledVolumeServicing_ResetCleanup
PreRoaming_NumConcurrentTasks
PreviewTiles
PreviewTileSourceType
Priority
ProcessId
ProcessTasks
ProductName
ProductVersion
PROPSYS.dll
PropVariantClear
PropVariantToStringAlloc
PropVariantToUInt32
PRVAT
PSCreateMemoryPropertyStore
PSCreateMemoryPropertyStore(IID_PPV_ARGS(&propertyStore))
QISearch
QueryPerformanceCounter
QueryUserToken
QueryUserToken(sessionId, temp.GetAddressOf())
QueryUserToken(userSessionId, temp.GetAddressOf())
Queue
RaiseException
RaiseFailFastException
RDSH/VDI
RDSRecoverRequests
reader->GetLocalName(&elementName, nullptr)
reader->GetLocalName(&localName, nullptr)
reader->GetNodeType(&nodeType)
reader->GetPackageInfoItems(&iterator)
reader->GetValue(&value, &valueLen)
reader->MoveToElement()
reader->SetInput(readerInput.Get())
ReadFile
reaquireResult
Reason
ReferencesLeaked
RegCloseKey
RegCreateKeyEx(m_queueRootKey.Get(), packageFamilyName.c_str(), 0, nullptr, 0, KEY_CREATE_SUB_KEY, nullptr, packageKey.GetAddressOf(), nullptr)
RegCreateKeyEx(packageKey.Get(), c_MetadataStoreKeyName, 0, nullptr, REG_OPTION_VOLATILE, access, nullptr, key.GetAddressOf(), nullptr)
RegCreateKeyEx(s_machineRootKey.Get(), user->GetUserSid().c_str(), 0, nullptr, 0, accessRights, &securityAttr, key.GetAddressOf(), nullptr)
RegCreateKeyEx(userRootKey.Get(), c_UserQueueKeyName, 0, nullptr, 0, accessRights, nullptr, key.GetAddressOf(), nullptr)
RegCreateKeyExW
RegDeleteTreeW
RegDeleteValueW
RegEnumKeyExW
RegFlushKey
RegGetValueW
registerInContainer
registerPackage
RegisterPackageAsync
RegisterPackageInContainerByFullNameAsync
RegisterServiceCtrlHandlerExW
RegisterTraceGuidsW
RegisterWaitForSingleObject
RegisterWaitForSingleObject(&waitHandle, m_usersToProcessEvent.Get(), &StaticProcessUserTaskCallback, this, INFINITE, WT_EXECUTEDEFAULT)
RegOpenKeyEx(HKEY_CURRENT_USER, s_registryRoot.c_str(), 0, KEY_ALL_ACCESS, s_machineRootKey.GetAddressOf())
RegOpenKeyEx(HKEY_LOCAL_MACHINE, c_AppReadinessRegRoot, 0, KEY_ALL_ACCESS, s_machineRootKey.GetAddressOf())
RegOpenKeyExW
RegOpenUserClassesRoot
RegQueryInfoKeyW
RegQueryValueExW
RegSetKeyValueW
RegSetValueExW
ReleaseMutex
ReleaseSemaphore
ReleaseSRWLockExclusive
ReleaseSRWLockShared
remove:
removeBackup
RemoveDirectoryW
removePackage
RemovePackageAsync
removePreviewTiles
RepairDueToAppDataVolumeOnNonSystemVolume
RepairMissingTilesFailed
ResetEvent
ResolveDelayLoadedAPI
resources.pri
Result
result
Result
ResultFromKnownLastError()
ResultFromWin32Bool(DuplicateTokenEx(userToken.Get(), TOKEN_IMPERSONATE|TOKEN_DUPLICATE|TOKEN_QUERY, nullptr, SecurityImpersonation, TokenImpersonation, m_userToken.GetAddressOf()))
ResultFromWin32Count(::ExpandEnvironmentStrings(sourceString, buffer.get(), len), len)
ResultFromWin32Count(GetSystemDirectory(buffer, _countof(buffer)), _countof(buffer))
ResultFromWin32FromStatus(BiPtAssociateApplicationExtensionClass(&guid, &acid, &eventId, nullptr, 0, 0, nullptr))
ResultFromWin32Handle(CreateEventEx(nullptr, nullptr, CREATE_EVENT_MANUAL_RESET, EVENT_MODIFY_STATE | SYNCHRONIZE), m_outstandingObjects.GetAddressOf())
ResultFromWin32Handle(CreateEventEx(nullptr, nullptr, CREATE_EVENT_MANUAL_RESET, EVENT_MODIFY_STATE|SYNCHRONIZE), m_shutdownEvent.GetAddressOf())
ResultFromWin32Handle(CreateEventEx(nullptr, nullptr, CREATE_EVENT_MANUAL_RESET, EVENT_MODIFY_STATE|SYNCHRONIZE), m_startupEvent.GetAddressOf())
ResultFromWin32Handle(CreateThread(nullptr, 0, &ServiceThread::StaticThreadProc, this, 0, &threadId), m_threadHandle.GetAddressOf())
ResultFromWin32Handle(LoadLibraryEx(L"iuilp.dll", nullptr, LOAD_LIBRARY_SEARCH_SYSTEM32), reinterpret_cast<HANDLE*>(m_policyHandle.GetAddressOf()))
ResultFromWin32HandleMaybenull(CreateEventEx(nullptr, nullptr, 0, EVENT_MODIFY_STATE | SYNCHRONIZE), m_usersToProcessEvent.GetAddressOf())
ResultFromWin32HandleMaybenull(CreateEventEx(nullptr, nullptr, 0, SYNCHRONIZE | EVENT_MODIFY_STATE), m_completeEvent.GetAddressOf())
ResultFromWin32HandleMaybenull(CreateSemaphoreEx(nullptr, semaphoreCount, semaphoreCount, nullptr, 0, SYNCHRONIZE | SEMAPHORE_MODIFY_STATE), m_taskGate.GetAddressOf())
ResultFromWin32HandleMaybenull(LoadLibraryEx(L"AppxDeploymentClient.dll", nullptr, LOAD_LIBRARY_SEARCH_SYSTEM32), reinterpret_cast<HANDLE*>(module.GetAddressOf()))
ResumeAt
ReturnHr
RevertToSelf
RoActivateInstance
RoGetActivationFactory
RoGetAgileReference
RoGetMatchingRestrictedErrorInfo
RoInitialize
RoOriginateError
RoOriginateErrorW
RoRegisterActivationFactories
RoRevokeActivationFactories
RoTransformError
RoUninitialize
RPCRT4.dll
R'Rich
RtlCaptureContext
RtlDisownModuleHeapAllocation
RtlDllShutdownInProgress
RtlGetDeviceFamilyInfoEnum
RtlGetPersistedStateLocation
RtlGetSessionProperties
RtlInitUnicodeString
RtlIsMultiUsersInSessionSku
RtlIsStateSeparationEnabled
RtlLookupFunctionEntry
RtlNtStatusToDosError
RtlSubscribeWnfStateChangeNotification
RtlSubscribeWnfStateChangeNotification(&subscription, stateName, changeStamp, &ActivateApps::WnfCallback, this, nullptr, 0, 0)
RtlUnsubscribeWnfNotificationWaitForCompletion
RtlVirtualUnwind
s$fD;{*spH
s.Set(str.c_str(), static_cast<UINT>(str.length()))
s_registryGate.IsValid()
s}AppReadiness::Groups::UserLogon::RuntimeClassInitialize
S-1-5-18
s5H+F
samcli.dll
Score
Scoring
SebCreateOEMPreInstallEvent
SebCreateOEMPreInstallEvent(&eventId, m_packageId.c_str())
SebSignalOEMPreInstallEvent
SebSignalOEMPreInstallEvent(eventId, m_packageId.c_str())
Service
ServiceMain
ServiceStatusType
SetEvent
SetLastError
SetRestrictedErrorInfo
SetServiceStatus
SetUnhandledExceptionFilter
SharedAppLogonDelay
SharedAppsDelayedInstallEnabled
SHCreateStreamOnFile(packageInfo->GetManifestPath().c_str(), STGM_READ | STGM_SHARE_DENY_NONE, &stream)
SHCreateStreamOnFileW
SHDeleteValueW
SHGetKnownFolderPath
SHGetKnownFolderPath(FOLDERID_LocalAppDataLow, KF_FLAG_CREATE, user->GetToken().Get(), &path)
SHGetUserSid(callingUser.Get(), &userSid)
SHGetUserSid(token.Get(), &sid)
SHQueryToken(GetUser()->GetToken().Get(), TokenUser, false, &userToken)
SHQueryToken(user->GetToken().Get(), TokenUser, false, &userTokenPtr)
SHRegGetStringValueNative(HKEY_LOCAL_MACHINE, L"Software\\Microsoft\\Windows\\CurrentVersion\\Appx", L"PackageRoot", path, static_cast<DWORD>(pathLen))
SHRegIncrementDWORD(PackageList::OpenUserMachineRoot(user, KEY_QUERY_VALUE | KEY_SET_VALUE).Get(), nullptr, L"LogonCount", 1, &logonCount)
SHRegSetDWORD(key.Get(), nullptr, MetadataTypeToValueName(type), value)
SHRegSetDWORD(root, subKey, valueName, static_cast<DWORD>(value))
SHRegSetDWORD(s_machineRootKey.Get(), key.c_str(), c_UserStateValueName, static_cast<DWORD>(state))
SHRegSetDWORD(userKey.Get(), nullptr, valueName, value)
ShutdownDelayMsec
SizeTToUInt(packages.size(), &packageCount)
Sleep
SleepConditionVariableCS
Software\Microsoft\AllUserInstallAgent
SOFTWARE\Microsoft\Windows NT\CurrentVersion\CandidateAccountManager
Software\Microsoft\Windows NT\CurrentVersion\TileDataModel\Migration\TileStore
Software\Microsoft\Windows\CurrentVersion\AppReadiness
Software\Microsoft\Windows\CurrentVersion\Appx
SOFTWARE\Microsoft\Windows\CurrentVersion\Appx\AppxAllUserStore
Software\Microsoft\Windows\CurrentVersion\Appx\AppxAllUserStore\PBR\%ls
SOFTWARE\Microsoft\Windows\CurrentVersion\Authentication\CFL\ExperienceManagerData
Software\Microsoft\Windows\CurrentVersion\Explorer
SOFTWARE\Microsoft\Windows\CurrentVersion\OOBE
Source
spPackage->get_EffectiveSupportedUsers(&supportedUsers)
StagePackageInContainerByFullNameAsync
stageResult
stageUserData
StageUserDataAsync
StagingInProgress
StartPosition
StartTraceW
StateAllowsModification()
stateStore.As(&stateStoreInf)
stateStore->Begin(IT_PREVIEWTILE, packageFamilyName.c_str(), rawPropertyStores.get(), static_cast<UINT32>(propertyStores.size()))
stateStore->CreatePreviewTilesForPackage(resources->packageFamilyName.c_str(), resources->packagePath.c_str(), static_cast<UINT>(resources->resources.size()), resources->resourcePaths.get())
stateStoreEnum->Load()
stateStoreInf->UpdateTemporaryLogos(packageFamilyName.c_str(), rawPropertyStores.get(), static_cast<UINT32>(propertyStores.size()))
Status
std::exception: %hs
StopTraceW
storageFolder.As(&storageItem)
storageItem->get_Path(str.GetAddressOf())
STORE
storeHelper.Set(PKEY_AppUserModel_HostEnvironment, wil::PropVariantArg(static_cast<unsigned long>(APPUSERMODEL_HOSTENVIRONMENT_IMMERSIVE)))
storeHelper.Set(PKEY_AppUserModel_ID, wil::PropVariantArg(appId.Get()))
storeHelper.Set(PKEY_AppUserModel_PackageFamilyName, wil::PropVariantArg(packageFamilyName.c_str()))
storeHelper.Set(PKEY_Launcher_WinStoreCategoryId, wil::PropVariantArg(static_cast<unsigned long>(tile.Category)))
storeHelper.Set(PKEY_Tile_Flags, wil::PropVariantArg(static_cast<unsigned long>(tile.ShowDisplayName ? TF_SHOW_NAME_ON_ALL_LOGOS : TF_DEFAULT)))
storeHelper.Set(PKEY_Tile_SmallLogoPath, wil::PropVariantArg(logoPath.c_str()))
storeHelper.Set(property.key, wil::PropVariantArg(value->c_str()))
storeInstall
storePreviews
string too long
StringCchCopy(buffer.get(), m_packagePath.length() + 1, m_packagePath.c_str())
StringCchPrintf(buffer, bufferLen, L"%08x%04x%04x%02x%02x%02x%02x%02x%02x%02x%02x", guid.Data1, guid.Data2, guid.Data3, guid.Data4[0], guid.Data4[1], guid.Data4[2], guid.Data4[3], guid.Data4[4], guid.Data4[5], guid.Data4[6], guid.Data4[7])
StringCchPrintf(subKeyName, _countof(subKeyName), L"%s\\%s", packageFamilyName.c_str(), c_MetadataStoreKeyName)
StringCchPrintf(taskId, _countof(taskId), L"%ls-%ld", taskPrefix, InterlockedIncrement(&s_uniqueId))
StringCchPrintf(taskName, _countof(taskName), L"packageChanges-%ld", InterlockedIncrement(&s_uniqueId))
StringCchPrintf(userKeyReadAcl, _countof(userKeyReadAcl), c_UserKeyReadAccess, user->GetUserSid().c_str())
StringCchPrintfEx(iter, spaceLeft, &iter, &spaceLeft, STRSAFE_IGNORE_NULLS, L"%s (OP:%ld)", packageFamilyName.c_str(), static_cast<DWORD>(operation))
StringFileInfo
StringFromGUID2
StringFromGUID2(guid, buffer, _countof(buffer))
SUVWATAUAVAWH
SUVWAVH
SUVWH
SVWATAUAVAWH
System\Setup\Status
System\Setup\Status\AuditBootVolatile
SystemEventsBrokerClient.dll
SystemTimeToFileTime
t"D8=*
t$ AWH
T$ E3
T$ H;
T$ H;T$(t
t$ UWATAVAWH
t$ UWAVH
t$ UWAWH
t$ WATAUAVAWH
t$ WAVAWH
t$ WH
t$0A;
T$8E3
t$tE3
T$XE3
t@L;H
t=fD92t7M
t5fA9(t/I
tA9kHt<H
task.As(&taskInf)
task->QueryInterface(completedTask.GetAddressOf())
task->QueryInterface(previewTask.GetAddressOf())
TaskCanceled
TaskCount
TaskId
taskInf->GetPercentComplete(&percent)
taskInf->QueryInterface(task.GetAddressOf())
taskInf->SetCallback(callback)
TaskPriorityType
Tasks
TASKx
td@8=X
TelemetryAssert
TelemetryAssertDiagTrack
TEMP 
TEMP$
TEMP`
TEMP|
TEMP<
TEMPd
TEMPl
TEMPL
TEMPl
TEMPP
TEMPT
TEMPt
TEMPx
TerminateProcess
testObject.As(&testObjectUnknown)
text.Initialize(HINST_THISCOMPONENT, c_PreviewTileDownloadString)
threadId
threadpool->CreatePeriodicTimer(this, c_HeartbeatTimer, &timer)
threadpool->CreatePeriodicTimer(this, c_ProgressTimerSpan, &timer)
threadpool->CreatePeriodicTimer(this, c_PulseTimeSpan, &timer)
threadpool->CreateTimer(this, timeSpan, &timer)
threadpool->RunAsync(Microsoft::WRL::Callback<IWorkItemHandler>(wistd::move(asyncAction)).Get(), action.GetAddressOf())
threadpool->RunWithPriorityAsync(this, WorkItemPriority_High, &cancel)
timed out
Timeline
Timeout
Timeout/BiChangeFailed
Timeout/Forced
Timeout/Lockscreen
timestamp
tmE3T
to_vector
to_winstring
totalHits
tpE9w0t9A
TraceMessage
Translation
Triggers
TryGetEndOfLifePackageFullName
TTBLxN
tu@8=@
u^H!] H
u<unknown>
u9@8=
UATAUAVAWH
UAVAWH
uditBoot
ULongLongAdd(currentTime.QuadPart, c_ErrorRetryDelay, &retryAfter.QuadPart)
ULongLongSub(left.QuadPart, right.QuadPart, &result)
ULongLongSub(now.QuadPart, start.QuadPart, &seconds)
ULongLongToInt(seconds, &result)
UMgrEnumerateSessionUsers
UMgrEnumerateSessionUsers(&usersCount, &sessionUsers)
UMgrFreeSessionUsers
UMgrQuerySessionUserToken
UMgrQuerySessionUserToken(sessionId, temp.GetAddressOf())
UMgrQueryUserContext
UMgrQueryUserContext(userToken.Get(), &userContextToken)
UMgrQueryUserToken
UMgrQueryUserToken(sessionUserContext.ContextToken, userToken.GetAddressOf())
UMgrQueryUserToken(userContextToken, temp.GetAddressOf())
UMgrQueryUserToken(userContextToken, userToken.GetAddressOf())
UnhandledExceptionFilter
Unknown exception
UnregisterTraceGuids
UnregisterWaitEx
Update
UpgradeOrPBRAttempts
uri.As(&absoluteUri)
uriObject->get_Extension(ext.GetAddressOf())
user->ExecuteUnderContext([&job, &text, &bitsManager]() { GUID jobId; ThrowIfFailed(bitsManager->CreateJob(text.Get(), BG_JOB_TYPE_DOWNLOAD, &jobId, &job)); })
user->ExecuteUnderContext([&tempPath]() { ThrowIfFailedWin32Bool(CreateDirectory(tempPath, nullptr)); })
USERENV.dll
UserId
UserLogon_NumConcurrentTasks
Username
UserPhaseType
UserState
USVWATAUAVAWH
USVWATAVAWH
USVWAVH
USVWH
utf-16
UuidCreate
UVAVH
UVWATAUAVAWH
UVWATAVH
UVWAVAWH
UWATAVAWH
UWATH
UWAUAVAWH
UWAVH
UWAWH
VarFileInfo
vector<T> too long
VerifyVersionInfoW
VerSetConditionMask
VMAP$
VMAP,
VMAP|
VMAP4
VMAPL
VS_VERSION_INFO
VWATAVAWH
VWAVH
VWAWH
w$r/H
w$r+I;
w*H9Q
W`H+WXH
WaitForDeploymentOperation(m_onDemandRegisterOperation.Get())
WaitForMultipleObjects
WaitForPackageVolumeOperation(packageVolumeOperation.Get(), nullptr, &packageVolume)
WaitForSingleObject
WaitForSingleObjectEx
WakeAllConditionVariable
was already canceled or complete
was canceled
WATAUAVAWH
WAVAWH
WC_E_ROOTELEMENT
wcsncmp
wcsrchr
WEVT_TEMPLATE
WEVT|
wHD+p
wil::wait_for_completion_or_timeout_nothrow(action.Get(), c_FirewallTimeout, &timedOut)
WilError_03
wilResult
win:Error
win:Info
win:Informational
win:ResponseTime
win:Start
win:Stop
win:Warning
Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallManager
Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<UInt32, Object>>
Windows.Foundation.Collections.IIterator`1<String>
Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<UInt32, Object>>
Windows.Foundation.Collections.IKeyValuePair`2<UInt32, Object>
Windows.Foundation.Collections.IMap`2<UInt32, Object>
Windows.Foundation.Collections.IMapView`2<UInt32, Object>
Windows.Foundation.Collections.IVector`1<String>
Windows.Foundation.Collections.IVectorView`1<String>
Windows.Foundation.Uri
Windows.Internal.StateRepository.Application
Windows.Internal.StateRepository.Package
Windows.Internal.StateRepository.PrimaryTile
Windows.Internal.StateRepository.User
Windows.Internal.Tiles.MigrationHelper
Windows.Management.Deployment.Internal.PackageManagerInternal
Windows.Management.Deployment.PackageManager
Windows.Networking.Connectivity.NetworkInformation
Windows.System.Threading.ThreadPool
Windows.System.Threading.ThreadPoolTimer
Windows::Foundation::ActivateInstance( HStringReference(RuntimeClass_Windows_Management_Deployment_Internal_PackageManagerInternal).Get(), &packageManager)
Windows::Foundation::ActivateInstance( HStringReference(RuntimeClass_Windows_Management_Deployment_Internal_PackageManagerInternal).Get(), &packageManagerInternalPtr)
Windows::Foundation::ActivateInstance( HStringReference(RuntimeClass_Windows_Management_Deployment_PackageManager).Get(), &packageManagerPtr)
Windows::Foundation::ActivateInstance(HStringReference(RuntimeClass_Windows_Management_Deployment_PackageManager).Get(), &packageManager)
Windows::Foundation::GetActivationFactory(HStringReference(RuntimeClass_Windows_Foundation_Uri).Get(), m_uriFactory.ReleaseAndGetAddressOf())
Windows::Foundation::GetActivationFactory(HStringReference(RuntimeClass_Windows_Networking_Connectivity_NetworkInformation).Get(), &m_networkInfo)
Windows::Foundation::GetActivationFactory(HStringReference(RuntimeClass_Windows_System_Threading_ThreadPool).Get(), threadpool.GetAddressOf())
Windows::Foundation::GetActivationFactory(HStringReference(RuntimeClass_Windows_System_Threading_ThreadPoolTimer).Get(), threadpool.GetAddressOf())
Windows::Foundation::GetActivationFactory(Microsoft::WRL::Wrappers::HStringReference(RuntimeClass_Windows_Foundation_Uri).Get(), &m_uriFactory)
Windows::Foundation::Initialize(WINRT_INIT_MULTITHREADED)
WindowsCreateString
WindowsCreateStringReference
WindowsDeleteString
WindowsDuplicateString
WindowsGetStringRawBuffer
WindowsIsStringEmpty
windowsStore->GetMetadata(packages, 1, GMR_APPSYNC, true, &xml)
windowsStore->GetMetadata(packages.get(), static_cast<UINT>(packageFamilyNames.size()), GMR_APPSYNC, true, &xml)
windowsStore->RegisterForProgress(progressWrapper.Get(), __uuidof(ExternalStoreCallback), type, &cookie)
WindowsStringHasEmbeddedNull
WinStationFreePropertyValue
WinStationGetConnectionProperty
WriteFile
WTSEnumerateSessions(WTS_CURRENT_SERVER_HANDLE, 0, 1, &sessionPtr, &numSessions)
WTSEnumerateSessionsW
WTSFreeMemory
WTSQueryUserToken
WTSQueryUserToken(sessionId, temp.GetAddressOf())
x ATAVAWH
x AUAVAWH
x AVH
x H9~(t
x UATAUAVAWH
x UAVAWH
x_^[]
x<L!e
xA^A\_^[]
xA_A^_^[]
XA_A^A]A\_^][
xB9t$Dt<E3
xf9\$@t`L
xI;o(r
xjX3K
XmlLite.dll
xtL!e
xY;|$XsSH
Y(HcQ
ZeroScore
zThe container policy manager APIs are not available.
