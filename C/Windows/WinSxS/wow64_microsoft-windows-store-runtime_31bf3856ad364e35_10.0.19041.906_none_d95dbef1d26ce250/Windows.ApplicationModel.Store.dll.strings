     
                        "__tag": true,
                        "key": "availabilityId",
                        "key": "devOfferId",
                        "key": "parentProductId",
                        "key": "productId",
                        "key": "skuId",
                        "type": "string"
                    "__tag": true,
                    "availabilityId": {
                    "devOfferId": {
                    "key": "deviceFamily",
                    "key": "deviceMoid",
                    "key": "deviceOemid",
                    "key": "deviceScmid",
                    "key": "languages",
                    "key": "market",
                    "productId": {
                    "quantity": "1",
                    "skuId": {
                    "type": "string"
                    }
                    },
                "__tag": true,
                "client": "UniversalStoreInApp",
                "defaultValue": 25
                "deviceFamily": {
                "deviceMoId": {
                "deviceOemId": {
                "deviceScmId": {
                "isOptional": true
                "key": "AppServiceName",
                "key": "bidRequest",
                "key": "consumableProductId",
                "key": "continuationToken",
                "key": "customDeveloperString",
                "key": "data",
                "key": "deviceFamily",
                "key": "DeviceId",
                "key": "deviceMoid",
                "key": "deviceOemid",
                "key": "deviceScmid",
                "key": "entitlementFilters",
                "key": "includeRelationship",
                "key": "locale",
                "key": "market",
                "key": "maxPageSize",
                "key": "Offer",
                "key": "optionalData",
                "key": "orderId",
                "key": "parameters",
                "key": "parentProductId",
                "key": "PFN",
                "key": "ProductId",
                "key": "productSkuIds",
                "key": "publisherUserId",
                "key": "quantity",
                "key": "relatedProductIds",
                "key": "serviceTicket",
                "key": "SkuId",
                "key": "StoreId",
                "key": "trackingId",
                "key": "type",
                "languages": {
                "market": {
                "type": "array",
                "type": "beneficiaryArray"
                "type": "goldenBeneficiary",
                "type": "goldenBeneficiaryArray"
                "type": "number",
                "type": "object"
                "type": "string"
                "type": "string",
                {
                }
                },
            "__tag": true,
            "alwaysEnforceDoublePurchasePolicy": true
            "applicationId": {
            "AppServiceName": {
            "beneficiaries": {
            "beneficiary": {
            "bidRequest": {
            "clientContext": {
            "continuationToken": {
            "customDeveloperString": {
            "data": {
            "deviceFamily": {
            "DeviceId": {
            "deviceMoid": {
            "deviceOemid": {
            "deviceScmid": {
            "enforceSellableBy": true,
            "entitlementFilters": {
            "includeRelationship": {
            "items": [
            "key": "attachRecordId",
            "key": "hostType",
            "key": "StoreId",
            "language": {
            "locale": {
            "market": {
            "maxPageSize": {
            "ModalFlow": "redeem",
            "ModalFlow": "smartInstall",
            "ModalFlow": "writeRatingsAndReview",
            "Offer": {
            "OptionalData": {
            "orderId": {
            "orderState": "Purchased",
            "parameters": {
            "ParentProductId": {
            "parentProductId": {
            "PFN": {
            "ProductId": {
            "productId": {
            "productSkuIds": [
            "productSkuIds": {
            "publisherUserId": {
            "relatedProductIds": {
            "removeQuantity": {
            "serviceTicket": {
            "SkuId": {
            "StoreId": {
            "storeSdkAttributes": {
            "trackingId": {
            "type": "string"
            "type": {
            "validityType": "Valid",
            ]
            ],
            }
            },
          "attachRecordId": {
          "hostType": {
          "isDigitalAttachment": true,
          "StoreId": {
          }
          },
        "__COMMENT__": "#0 - Get Parent Product",
        "__COMMENT__": "#0 purchase StoreID with extended response",
        "__COMMENT__": "#1 - Get User Collection for Parent Product",
        "__COMMENT__": "#1 invoke background task",
        "__COMMENT__": "#10 StoreList Query",
        "__COMMENT__": "#11 Search for products by query",
        "__COMMENT__": "#12 Given a set of product IDs, return the average ratings and counts",
        "__COMMENT__": "#13 ContentId/KeyId lookup by ProductId for ParentProduct",
        "__COMMENT__": "#14 ContentId/KeyId lookup by ProductId NO ParentProduct",
        "__COMMENT__": "#15 Invoke In App Redeem using Purchase Flow",
        "__COMMENT__": "#16 Invoke In App Rating & Review using Purchase Flow",
        "__COMMENT__": "#17 StoreList Query with previewStore",
        "__COMMENT__": "#18 Given a set of product IDs, return the average ratings and counts (previewStore)",
        "__COMMENT__": "#19 Ad SDK to get Mixer Ad data for Inline Purchase experience",
        "__COMMENT__": "#2 - Get User Collection for Products",
        "__COMMENT__": "#2 TVOD",
        "__COMMENT__": "#20 Get list of PTI devices for a user",
        "__COMMENT__": "#21 Push product to device",
        "__COMMENT__": "#22 AAD token based monetization apis - RS4+ Only",
        "__COMMENT__": "#23 SFDS Suggestion Service - RS5+ Only",
        "__COMMENT__": "#24 Invoking PurchaseApp (SXH) for the Smart Install scenario - RS5+ Only",
        "__COMMENT__": "#29 - Digital attach redeem",
        "__COMMENT__": "#3 - Get Products, No Parent (No license needed)",
        "__COMMENT__": "#3 purchase StoreID with force retail sandbox without license refresh",
        "__COMMENT__": "#4 - Get Products From Parent (Must have a valid license)",
        "__COMMENT__": "#4 Force license refresh for all online running licenses",
        "__COMMENT__": "#5 - Get User Collection for Parent Product by Family",
        "__COMMENT__": "#5 Acquire a device license - RS2+ Only",
        "__COMMENT__": "#6 - Consume Consumable",
        "__COMMENT__": "#6 Acquire a license token -  RS2+ Version",
        "__COMMENT__": "#7 - Get Customer Purchase Id",
        "__COMMENT__": "#7 Device token based monetization apis - RS2+ Only",
        "__COMMENT__": "#8 - Get Customer Collections Id",
        "__COMMENT__": "#8 Store User token based monetization apis",
        "__COMMENT__": "#9 - Get Products by Family from Parent",
        "__COMMENT__": "#9 Lookup ProductId from PackageFamilyName",
        "__COMMENT__": "Get campaign ID for device (RS4+)",
        "__COMMENT__": "Get campaign ID for user or device (RS5+)",
        "__COMMENT__": "Get Microsoft Accrued for device (RS4+)",
        "__COMMENT__": "Get Microsoft Accrued for user or device (RS5+)",
        "AnonymousRequest": true,
        "AuthType": 1,
        "AuthType": 2,
        "AuthType": 4
        "AuthType": 4,
        "BodyBufferMaxSize": 10000,
        "BodyBufferMaxSize": 1024,
        "BodyBufferMaxSize": 20000,
        "BodyBufferMaxSize": 300,
        "BodyTemplate": {
        "DoPost": true,
        "FallbackToDeviceAuth": true
        "ForceRetailSandbox": true,
        "Height": 384
        "Height": 560
        "Index": 0,
        "Index": 1,
        "Index": 10,
        "Index": 11,
        "Index": 12,
        "Index": 13,
        "Index": 14,
        "Index": 15,
        "Index": 16,
        "Index": 17,
        "Index": 18,
        "Index": 19,
        "Index": 2,
        "Index": 20,
        "Index": 21,
        "Index": 22,
        "Index": 23,
        "Index": 24,
        "Index": 25,
        "Index": 26,
        "Index": 27,
        "Index": 28,
        "Index": 29,
        "Index": 3,
        "Index": 4,
        "Index": 5,
        "Index": 6,
        "Index": 7,
        "Index": 8,
        "Index": 9,
        "InvokePurchaseFlow": true,
        "OmitAuthTokenPrefix": true
        "RefreshLicenses": true
        "RefreshLicenses": true,
        "RequiresCapability": "previewStore",
        "RequiresCapability": "storeAppInstallation",
        "RequiresCapability": "xboxXDK",
        "RequireValidLicense": false
        "RequireValidLicense": false,
        "URI": "https://adbroker.mp.dse.microsoft.com/v1/adbroker/srtb2",
        "URI": "https://collections.md.mp.microsoft.com/v7.0/collections/consume",
        "URI": "https://collections.md.mp.microsoft.com/v7.0/collections/sdkQuery",
        "URI": "https://collections.mp.microsoft.com/v7.0/beneficiaries/me/keys",
        "URI": "https://displaycatalog.mp.microsoft.com/v7.0/products/{parentProductId}{market:market}{languages:languages}{deviceMoid:moId}{deviceOemid:oemId}{deviceScmid:scmId}&fieldsTemplate=StoreSDK",
        "URI": "https://displaycatalog.mp.microsoft.com/v7.0/products/lookup{market:market}{languages:languages}{packageFamilyName:value}&fieldsTemplate=empty&alternateid=PackageFamilyName",
        "URI": "https://displaycatalog.mp.microsoft.com/v7/products/lookup{parentProductId:value}{market:market}{languages:languages}{itemCount:$top}{skipCount:$skip}{deviceMoid:moId}{deviceOemid:oemId}{deviceScmid:scmId}&fieldsTemplate=StoreSDK&actionFilter=Purchase&alternateId=SellableBy",
        "URI": "https://displaycatalog.mp.microsoft.com/v7/products{productIdsWithCommas:bigIds}{market:market}{languages:languages}{deviceMoid:moId}{deviceOemid:oemId}{deviceScmid:scmId}{actionFilter:actionFilter:OPTIONAL}&fieldsTemplate=StoreSDK",
        "URI": "https://licensing.mp.microsoft.com/v8.0/licenseToken",
        "URI": "https://manage.devcenter.microsoft.com/v1.0/my/storeextension/aad",
        "URI": "https://manage.devcenter.microsoft.com/v1.0/my/storeextension/device",
        "URI": "https://manage.devcenter.microsoft.com/v1.0/my/storeextension/user",
        "URI": "https://pti.store.microsoft.com/v1/pti/devices{market:market}{languages:languages}{productId:productId}{skuId:skuId}",
        "URI": "https://pti.store.microsoft.com/v1/pti/push{market:market}",
        "URI": "https://purchase.mp.microsoft.com/v7.0/users/me/keys",
        "URI": "https://purchase.mp.microsoft.com/v7.0/users/me/orders",
        "URI": "https://sfdataservice.microsoft.com/smartinstall/v1.0/suggestions/suggest",
        "URI": "https://storeedgefd.dsx.mp.microsoft.com/v8.0/campaigns/cid{parentProductId:productId}",
        "URI": "https://storeedgefd.dsx.mp.microsoft.com/v8.0/campaigns/isMicrosoftAccrued{parentProductId:productId}",
        "URI": "https://storesdk.dsx.mp.microsoft.com/v8.0/Sdk/products/contentId{market:market}{locale:locale}{languages:languages}{deviceFamily:deviceFamily}{parentProductId:parentProductId}{productIds:productIds}",
        "URI": "https://storesdk.dsx.mp.microsoft.com/v8.0/Sdk/products/contentId{market:market}{locale:locale}{languages:languages}{deviceFamily:deviceFamily}{productIds:productIds}&parentProductId=",
        "URI": "https://storesdk.dsx.mp.microsoft.com/v8.0/sdk/products/ratingsAverage{market:market}{locale:locale}{languages:languages}{deviceFamily:deviceFamily}{parentProductId:parentProductId}{productIds:productIds}{displayMode:displayMode}",
        "URI": "https://storesdk.dsx.mp.microsoft.com/v8.0/sdk/products/ratingsAverage{market:market}{locale:locale}{languages:languages}{deviceFamily:deviceFamily}{productIds:productIds}{displayMode:displayMode}&parentProductId=",
        "URI": "https://storesdk.dsx.mp.microsoft.com/v8.0/sdk/search{market:market}{languages:languages}{locale:locale}{deviceFamily:deviceFamily}{parentProductId:parentProductId}{top:$top}{continuationToken:continuationToken}{productKindFilter:productKindFilter}{categoryFilter:categoryFilter}{query:query}",
        "URI": "https://storesdk.dsx.mp.microsoft.com/v8.0/Sdk/StoreList/{storeListId}{market:market}{languages:languages}{locale:locale}{deviceFamily:deviceFamily}{parentProductId:parentProductId}{top:$top}{continuationToken:continuationToken}{storeListItemTypeFilter:storeListItemTypeFilter}{productKindFilter:productKindFilter}{categoryFilter:categoryFilter}{targetDeviceFamily:targetDeviceFamily}",
        "URI": "https://storesdk.dsx.mp.microsoft.com/v8.0/Sdk/StoreList/{storeListId}{market:market}{languages:languages}{locale:locale}{deviceFamily:deviceFamily}{top:$top}{continuationToken:continuationToken}{storeListItemTypeFilter:storeListItemTypeFilter}{productKindFilter:productKindFilter}{categoryFilter:categoryFilter}{targetDeviceFamily:targetDeviceFamily}&parentProductId=",
        "URIBufferMaxSize": 1024,
        "UseAuthIfAvailable": true
        "UseBackgroundTask": true,
        "UserTokenTypes": 3,
        "Width": 456,
        "Width": 640,
        }
        },
      %02u skuType = %s, productId = %s, title = %s, customDeveloperData = %s, price = %s%s (%s), extendedData = %s, description = %s
      }
      <no sku data>
    "LinkUriFormat": "https://www.microsoft.com/store/{idType}/{id}",
    "MDCollections": "https://collections.mp.microsoft.com/",
    "MDDisplayCatalog": "https://displaycatalog.mp.microsoft.com/",
    "MDGetAppReceiptsDesktop": "https://licensingwindows.mp.microsoft.com/Licensing/License/AcquireReceipt/6.2/0?productId={productId}&receiptType={receiptType}",
    "MDGetAppReceiptsMobile": "https://licensingphone.mp.microsoft.com/v9/purchases/appreceipts?os=8.10.12400.0&cc={cc}&lang={lang}&parentProductId={parentProductId}&installedPublisherId={installedPublisherId}",
    "MDGetOneProductReceiptMobile": "https://licensingphone.mp.microsoft.com/v9/purchases/receipts?os=8.10.12400.0&cc={cc}&lang={lang}&parentProductId={parentProductId}&featureName={featureName}&installedPublisherId={installedPublisherId}",
    "MDPurchase": "https://purchase.mp.microsoft.com"
    "OneStoreAuthenticationDomain": "www.microsoft.com",
    "smartInstall": {
    "writeRatingsAndReview": {
    %02u inAppOfferToken = %s, transId = %s, offerId = %s
    %02u offerToken = %s, productId = %s, name = %s, price = %s%s (%s), type = %u, isOnSale = %hs, tag = %s
    %02u productId = %s, offerId = %s, productType = %u, skuId = %s, isTrial = %hs, catalogId = %s, expires %u/%u/%u
    {
    }
    },
    <empty list>
  %02u inAppOfferToken = %s, productId = %s, transId = %s, offerId = %s
  %02u inAppOfferToken = %s, productId = %s, type = %u, price = %s, name = %s
  <empty list>
  <missing list>
  Description: %s%hs
  ExpirationDateTime: %u/%u/%u %02u:%02u:%02u
  InAppOfferArray: %hs
  IsActive: %hs, IsTrial: %hs, App type: %u, Listner count: %u
  IsOnSale: false
  IsOnSale: TRUE, Sale End Date: %u/%u/%u %02u:%02u:%02u
  IsUAP: %hs, Market: %s, Locale: %s, Age Rating: %u
  LicenseInstance: %hs
  LicenseManager: %hs
  Price: %s, Base Price: %s, Currency Symbol: %s, Currenty Code: %s
  Ticks until next check: %u
  UnfulfilledList: %hs
 !"#$%&'()*+,-./0123
 0%0>0I0u0z0
 0%0-0T0Y0
 0,0;0?0E0I0O0V0\0`0f0j0p0v0|0
 0{XEGy
 1J1t1
 7J7n7
 9>t#Sh
 http://www.microsoft.com/windows0
 info
 je}w
 Microsoft Corporation. All rights reserved.
 Microsoft Operations Puerto Rico1&0$
 Operating System
 QWh,v
 SVW3
 WARN
 Windows
!(storeId && packageFamilyName)
!*!N!r!
!*WPq
!,[>4
!\$ h
!\$(j
!_hInternet
!_pszServer
!~X9>u
!m_userObject || IsUMgrGetConstrainedUserTokenPresent()
!storeProductId.IsValid() && "Shouldn't be a storeId yet in this scenario"
!This program cannot be run in DOS mode.
!Windows::ApplicationModel::Store::AsyncOperationBase<struct Windows::Foundation::IAsyncOperation<class Windows::Services::Store::StoreProductResult *>,struct Windows::Foundation::IAsyncOperationCompletedHandler<class Windows::Services::Store::StoreProductResult *>,0>::DoWorkStub
"&"J"t"
"0+000
"0b0s0x0~0
"Microsoft Window
"QVh$
"z}!M
####-##-##T##:##:##S
##:##
#$QChkHr(_jsonRequest.Set(jsonRequest))
#(#L#p#
#0*04090V0k0v0
#Gip}&
#L$4P
#Vx"&6
$$$H$l$&"J"
$`2X`F
$0f0m0t0{0
$Microsoft Ireland Operations Limited1
$SVW3
$SVWj
% moa
%0/0<0
%016llX
%04u-%02u-%02u%s%02u:%02u:%02u%s
%08lX-%04X-%04X-%02X%02X-%02X%02X%02X%02X%02X%02X
%hs!%p: 
%hs(%d) tid(%x) %08X %ws
%hs(%u)\%hs!%p: 
%localappdata%\Microsoft\Windows\WER\ReportArchive
%localappdata%\Microsoft\Windows\WER\ReportQueue
%localappdata%\Packages\Microsoft.WindowsStore_8wekyb3d8bbwe\LocalState\store.etl
%s export "%s" "%s" /y
%s%02d:%02d:%09.6f
%s%d.%02d:%02d:%09.6f
%s%hs:%ws
%s-%s-%d-%s
%s:%s
%s:%s:%s
%windir%\Logs\dosvc
%windir%\Logs\SIH
%windir%\Logs\WindowsUpdate
%windir%\ServiceProfiles\NetworkService\AppData\Local\Microsoft\Windows\DeliveryOptimization\logs
%windir%\SoftwareDistribution\ReportingEvents.log
%WINDIR%\System32\reg.exe
%ws&$skip=%u
&_*q<|
&~z({
&080F0
&0Q0p0
&OL0O
&platformDependencyName=Windows.Universal
&platformDependencyName=Windows.Windows8x
&platformDependencyName=Windows.WindowsPhone8x
&PWSV
(((HRESULT)(hr)) < 0)
(((HRESULT)(spAsyncInfo->get_ErrorCode((&(__hr))))) >= 0)
(((HRESULT)(spAsyncInfo->get_Status(&status))) >= 0)
((_pszStringData == nullptr) && (_cchStringData == 0)) || ((_pszStringData == nullptr) && (_cchStringDataCapacity == s_cchUnknown)) || ((_pszStringData != nullptr) && (_cchStringData == ::wcslen(_pszStringData)))
((wcschr(pszUriBase, L'{')) == 0) && "On this overload, the uri base must be *clean*; no parameters allowed"
(_cchStringData <= _cchStringDataCapacity) || (_cchStringDataCapacity == s_cchUnknown)
(0x%08x)
(8_(t
(caller: %p) 
(invalid)
(PeOC
(QD)Qj
(QShH+
(W']>
).)R)
)0@0t0
)0B0G0O0v0
)Microsoft Root Certificate Authority 20100
*.etl
,a$Cs
,ET/KmM6kidqRyWJOlaGtatDN4mJMAZzyPvO4+PuMig4=0Z
,IQD*
,L,|,
.  AppId: %s, Name: %s
.00cfg
.2.\.
.CRT$XCA
.CRT$XCU
.CRT$XCZ
.CRT$XIA
.CRT$XIAA
.CRT$XIZ
.CRT$XLA
.CRT$XLZ
.data
.data$brc
.didat$2
.didat$3
.didat$4
.didat$5
.didat$6
.didat$7
.edata
.gfids
.giats
.idata
.idata$2
.idata$3
.idata$4
.idata$5
.idata$6
.orpc
.pcQhhA{
.r*1o
.rdata
.rdata$brc
.rdata$sxdata
.rdata$T$brc
.rdata$zETW0
.rdata$zETW1
.rdata$zETW2
.rdata$zETW9
.rdata$zzzdbg
.report.wer.txt
.rsrc
.rsrc$01
.rsrc$02
.text
.text$di
.text$mn
.text$x
.text$yd
.tls$
.tls$ZZZ
.xdata$x
//ServiceEnvironment/Authentication
//ServiceEnvironment/StoreSDK
/tlf;E
/Z*Px
/Z/y<
/Z-[E
/Z{I<
/Z}7F
-/Z3l
/Z7i*
/Z8@b
/ZeOC
/ZhM{
/ZsOg
/ZsOg<
/ZUo~9@D
/ZW^6
/ZxqL
: :$:(:,:0:4:@:D:H:L:P:T:X:\:`:d:h:l:t:x:|:
: :$:(:,:0:4:8:<:@:D:H:L:d:h:l:p:t:x:|:
: :$:(:,:0:4:8:<:@:D:H:L:P:T:\:`:d:h:l:p:t:x:|:
: :$:(:,:0:4:8:<:@:D:H:L:P:T:`:d:h:l:p:t:x:|:
: :$:(:,:0:4:8:<:@:D:H:L:P:T:X:\:`:d:h:l:p:t:x:|:
: :$:(:,:0:4:8:<:@:D:H:L:P:T:X:\:d:h:l:p:t:x:|:
: :$:(:,:0:8:@:H:L:P:T:h:l:p:t:
: :$:(:,:0:8:<:@:D:H:L:P:T:X:\:`:h:l:p:t:x:|:
: :$:,:0:H:P:T:\:`:t:x:|:
: :$:8:@:D:X:`:d:x:|:
: :%:T:p:|:
: :(:,:@:D:H:X:`:d:|:
: :(:0:8:@:D:H:L:`:h:p:x:|:
: :(:0:8:<:D:H:\:d:h:
: :+:8:?:F:M:_:j:q:x:
: :8:B:a:f:p:
: :A:
: ;+;W;a;
:!:+:2:\:n:}:
:!;-;6;@;E;y;
:!;};
:!;B;c;
:":+:0:::N:\:j:
:":2:B:R:b:r:
:":A:L:S:Z:
:":G:c:h:
:":O:|:
:";1;6;X;r;
:";b;s;x;~;
:";L;r;
:#:(:G:
:#:/:::G:N:X:m:
:#:+:U:Z:t:
:#:O:]:
:#:V:f:
:#;2;7;?;o;
:$:(:<:D:H:`:h:p:t:|:
:$:):0:?:E:N:U:\:c:u:
:$:.:]:b:g:|:
:$:1:8:?:F:Y:o:x:
:$:1:8:?:Q:
:$:5:::D:U:Z:d:u:z:
:$:J:h:
:%:*:I:N:V:m:
:%:@:E:
:%:+:7:F:P:
:%:+:i:
:%:4:9:^:c:z:
:&:?:
:&:+:3:S:_:k:o:v:z:
:&:2:
:&:2:>:i:
:&;U;b;
:(:,:4:8:<:@:D:H:L:P:T:X:\:`:d:l:p:t:x:|:
:(:1:=:D:K:R:\:f:
:(:2:7:[:j:
:(:B:\:
:(;/;9;>;g;n;
:(;-;7;^;f;l;y;~;
:(;C;b;o;v;|;
:(;H;
:):.:\:}:
:):0:7:J:\:i:p:
:):0:7:K:{:
:):5:T:f:
:):7:e:{:
:):7:E:O:T:|:
:):9:G:u:
:):F:
:);@;
:);o;
:);v;
:*:/:7:b:
:*:<:A:S:
:*:<:o:|:
:*:D:
:*;5;Q;Z;
:,:\:j:t:y:
:,:1:>:i:n:v:
:,:P:
:,;5;D;k;};
:,;6;C;R;W;_;
:.:]:
:.:=:B:J:r:
:.;>;C;K;
:/:7:<:G:c:n:~:
:':.:5:H:Q:b:i:
:-:;:L:Q:[:s:x:
:':]:d:k:r:
:-:>:E:K:R:
:':2:7:\:b:p:
:':4:a:k:x:
:':5:<:C:
:-:A:G:
:-:J:
:-:p:
::wcslen(_pszStringData) == _cchStringData
::WindowsDuplicateString(_availabilityId.Get(), pValue)
::WindowsDuplicateString(_campaignId.Get(), pValue)
::WindowsDuplicateString(_Caption.Get(), pValue)
::WindowsDuplicateString(_currencyCode.Get(), pValue)
::WindowsDuplicateString(_customDeveloperData.Get(), pValue)
::WindowsDuplicateString(_description.Get(), pValue)
::WindowsDuplicateString(_devOfferId.Get(), pValue)
::WindowsDuplicateString(_extendedJsonData.Get(), pValue)
::WindowsDuplicateString(_formattedBasePrice.Get(), pValue)
::WindowsDuplicateString(_formattedPrice.Get(), pValue)
::WindowsDuplicateString(_formattedRecurrencePrice.Get(), pValue)
::WindowsDuplicateString(_fulfillmentType.Get(), pValue)
::WindowsDuplicateString(_inAppOfferToken.Get(), pValue)
::WindowsDuplicateString(_language.Get(), pValue)
::WindowsDuplicateString(_name.Get(), pValue)
::WindowsDuplicateString(_packageFamilyName.Get(), value)
::WindowsDuplicateString(_productId.Get(), pValue)
::WindowsDuplicateString(_productKind.Get(), pValue)
::WindowsDuplicateString(_Purpose.Get(), pValue)
::WindowsDuplicateString(_response.Get(), value)
::WindowsDuplicateString(_skuId.Get(), pValue)
::WindowsDuplicateString(_storeId.Get(), pValue)
::WindowsDuplicateString(_title.Get(), pValue)
::WindowsDuplicateString(_trialUniqueId.Get(), pValue)
:;:K:v:
:;:P:Z:_:
:;;g;t;
:';X;_;{;
:@:U:g:
:@;V;
:\;e;q;y;
:^:e:k:
:+:0:5:h:m:r:
:+;1;<;A;F;e;r;
:<;E;
:<;W;`;{;
:=:B:
:>;];
:0:5:?:W:\:f:
:1:9:J:e:q:v:
:2:\:f:k:
:2:7:A:b:
:2:i:
:2:O:l:
:3:8:G:T:Y:a:
:3:y:
:3;V;c;
:3;w;
:4:::Q:V:`:
:4:F:N:`:w:
:4:W:
:4;I;T;j;
:5:>:U:}:
:6:N:f:
:7:<:F:o:z:
:7:U:Z:b:
:8:F:v:
:8;T;`;
:9:A:K:P:e:
:9:I:W:
:A:G:m:
:B:X:_:d:n:
:c:j:o:
:C:P:W:i:t:{:
:c;h;
:C;I;O;V;];f;|;
:D;Q;
:D;R;e;k;r;|;
:e:t:y:
:F:X:f:
:F:X:f:r:~:
:f;w;
:G:L:T:
:G;N;X;];
:H;^;h;m;
:I:|:
:I:V:]:c:v:
:l:q:y:
:l:u:+;
:L;^;
:N:U:[:
:O:T:\:
:O:X:
:P:V:[:y:
:R;Y;_;f;
:T;l;
:T;s;
:V:h:v:
:V;r;
:Y;`;j;
; ;$;(;,;0;4;8;<;@;D;H;L;P;T;X;\;`;d;h;
; ;$;(;,;0;4;8;<;@;D;H;L;P;T;X;\;`;d;h;l;p;t;x;|;
; ;$;(;,;0;4;8;<;@;D;H;L;P;T;X;\;`;d;h;p;t;x;|;
; ;$;(;,;0;4;8;<;@;D;H;L;T;X;\;`;d;h;l;p;t;x;|;
; ;$;(;,;0;4;8;<;@;D;L;P;T;X;\;`;d;h;l;p;t;x;|;
; ;$;(;,;0;4;8;<;@;H;L;P;T;X;\;`;d;h;l;p;t;x;|;
; ;$;(;,;0;8;<;@;D;H;L;P;T;X;\;`;d;h;l;p;t;x;|;
; ;$;,;0;4;8;<;@;D;H;L;P;T;X;\;d;h;l;p;t;x;|;
; ;$;8;<;@;D;X;d;h;p;t;x;
; ;%;/;E;O;];q;z;
; ;%;/;N;b;i;
; ;%;7;m;w;|;
; ;(;,;0;4;8;<;@;D;H;L;P;T;X;\;`;d;h;l;p;x;|;
; ;(;,;0;4;8;<;P;X;\;d;h;|;
; ;(;4;8;@;D;H;d;h;l;p;t;|;
; ;(;y;
; ;*;g;l;v;
; ;.;@;
; ;';.;A;%</=M>X>n>y>
; ;-;A;
; ;J;~;
; <O<t<
; <t<~<
; =i=
;!;&;B;O;
;!;&;P;_;
;!;';<;F;l;
;!;-;5;G;
;!;+;
;!;F;O;f;o;
;!;N;U;a;n;
;!<_<
;!<0<5<=<n<}<
;!<1<
;!<c<m<r<
;";);0;7;>;E;L;S;Z;a;h;o;v;};
;";);3;{;
;";,;`;j;w;
;";/;M;T;_;
;";:;G;N;U;\;b;u;
;";';.;8;[;
;";1;L;Y;f;m;s;
;";2;B;X;c;
;";8;o;
;";S;s;
;"<,<9<a<
;"</<<<C<I<P<c<o<w<}<
;"<'<B<G<O<
;"<c<h<m<t<~<
;#;(;~;
;#;,;[;a;l;q;v;
;#;,;5;J;_;n;v;
;#;-;2;X;g;
;#;`;e;m;
;#;c;s;
;#;K;
;#;Q;];b;r;
;#<`<e<}<
;$;,;0;H;P;T;X;\;l;t;x;
;$;/;W;g;p;
;$;5;:;D;U;Z;d;u;z;
;$;G;
;$;T;|;
;$;X;];g;~;
;$<T<[<b<
;%;0;5;\;r;
;%;1;<;C;J;T;{;
;%;2;<;A;_;p;~;
;%;j;q;v;~;
;%<;<{<
;&;+;T;j;y;~;
;&;C;Z;t;
;(;/;6;=;D;K;R;X;
;(;2;;;Y;l;~;
;(;f;s;};
;(</<4<><
;(<]<d<u<z<
;);c;
;*;3;@;N;k;{;
;*;8;=;V;d;j;q;|;
;*<7<><D<W<b<t<{<
;,;1;<;A;I;a;
;,;O;U;\;f;
;,;U;r;y;
;.;5;?;D;l;s;
;.;G;L;V;
;.;y;
;.<8<=<B<O<m<t<
;/;9;>;r;x;
;/;i;
;/;X;g;x;
;/<4<T<Y<t<y<
;/<8<Y<
;:<D<J<
;;;Q;w;
;;;Y;};
;;<Q<c<
;;<Z<
;';1;6;o;~;
;';1;6;u;
;?;D;
;?<F<K<j<q<|<
;@;D;H;L;P;X;`;|;
;@;j;
;^<~<
;+;0;7;>;r;
;+<F<`<v<
;<;\;c;h;
;<<E<f<x<
;<<R<j<{<
;-<2<
;>;M;R;\;y;
;>;u;
;0;4;8;H;L;P;h;l;t;x;|;
;0;H;W;r;z;
;0;x;
;0K0P0Z0
;1;9;@;G;M;d;j;
;1;E;W;i;v;
;1<Q<g<
;2;H;|;
;2;r;
;2<9<C<
;2<B<L<Q<
;3;8;=;D;N;x;
;3;8;Q;k;p;
;3;R;i;{;
;3<u<
;4;>;F;R;W;\;c;m;
;4;9;A;V;[;c;x;
;4;R;
;4<g<
;5;;;O;g;m;
;5;?;l;
;6;<;s;z;
;6;O;{;
;6<H<V<
;7;L;V;[;
;7<f<x<
;8;=;Q;m;r;
;8;B;o;v;{;
;8<?<D<L<
;9;e;y;
;A;O;m;
;A<W<\<
;B<f<k<u<
;C;J;
;C<f<
;D;c;
;D<_<
;e;~;
;E;d;i;w;
;f;m;r;
;F;S;`;g;n;u;|;
;G;L;d;
;g<l<q<w<
;G=\=v=
;H;O;T;\;
;H@t-
;H@t&
;H@t?
;H<d<
;H>O>T>\>
;H0t-
;H0t&
;H0t?
;H0tES
;I;R;W;a;
;I<v<
;J0t>
;K;Q;
;K@t(
;K@t<
;K0t(
;K0t<
;L;[;e;j;
;L;U;|;
;L<U<
;L<U<v<
;L<V<[<
;M;T;[;b;
;M<X<i<s<
;Q@t;
;Q@t4
;Q@tZ
;Q0t;
;Q0t3
;Q0t4
;Q0tES
;Q0tQS
;Q0tZ
;R;l;q;{;
;S;x;
;S<X<b<
;T;p;
;T<_<p<w<
;w(s/
;X;m;
;Y;^;h;
? ?$?(?,?0?4?8?<?@?D?H?L?P?T?\?`?d?h?l?p?t?x?|?
? ?$?(?,?0?4?8?<?@?D?H?L?P?T?X?\?`?d?h?l?p?t?x?|?
? ?$?(?,?0?4?8?<?@?D?H?L?P?T?X?\?`?d?h?l?p?x?|?
? ?$?(?,?0?4?8?<?@?D?H?P?T?X?\?`?d?h?l?p?t?x?|?
? ?$?(?,?0?4?8?<?D?H?L?P?T?X?\?`?d?h?l?p?t?x?|?
? ?$?(?,?4?8?@?D?X?`?d?x?|?
? ?$?8?<?@?D?H?P?T?X?\?l?t?x?
? ?(?,?4?8?P?X?`?h?p?x?|?
? ?-?S?X?]?t?
? ?5?d?n?t?
? ?7?F?K?S?p?
?!?&?.?|?
?!?&?.?G?
?!?&?S?s?
?!?'?r?}?
?!?1?I?d?n?s?
?!?2?;?Y?g?t?
?!?5?:?D?U?Z?d?u?z?
?!?C?
?!?G?W?e?
?!?j?
?!?S?
?"?)?;?F?M?b?
?"?)???m?v?
?"?:?V?a?h?t?{?
?"?;?D?Q?d?
?"?'?<?Q?`?|?
?"?2?B?R?W?d?r?|?
?"?8?l?
?#?*?1?C?N?U?\?q?
?#?3?8?Y?h?m?u?
?#?A?X?t?{?
?$?(?@?H?P?T?X?\?l?p?t?
?$?.?_?m?w?
?$?+?2?D?O?V?]?r?
?$?>?K?X?^?q?
?$?1?8???F?Y?b?n?u?|?
?$?5?<?[?
?$?W?^?z?
?%?3?a?w?
?%?5?C?M?R?j?
?%?6?=?\?
?%?L?U?
?%?Y?
?&?@?Z?i?
?&?^?h?x?}?
?&?2?
?&?2???O?Y?f?p?z?
?&?R?W?t?
?(?-?P?
?(?F?Q?
?)?.?8?M?R?\?t?
?)?.?c?u?
?)?.?h?w?
?)?7?e?{?
?)?8?Q?f?s?}?
?)?s?
?*?/?N?S?m?
?*?1?f?
?*?3?:?M?
?,?>?M?W?\?
?,?4?<?@?D?H?\?d?h?p?t?
?,?8?V?r?
?,?J?V?i?|?
?.?8?e?l?q?x?
?.?L?W?
?.?Z?_?g?
?/?H?U?Z?
?:?G?T?
?;?H?O?U?o?x?
?;?S?m?
?-?:?K?y?
???[?`?l?
??_V@YAXPAX@Z
?'?~?
?'?H?S?`?f?j?p?t?z?
?'?o?
?@?P?U?]?z?
?_?j?
?+?0?8?]?
?+?8?E?K?^?q?x?
?+?8?E?L?R?e?v?}?
?+?L?
?<?K?U?Z?x?}?
?=?Z?
?>?T?
?0???I?N?
?0???W?\?a?v?
?0?7?x?
?1?6?W?m?r?
?2?@?
?3???m?
?3?_?f?
?3?B?Y?
?456789:;<=
?5?C?
?5?O?
?5?O?Y?^?z?
?7?Q?\?
?8?C?V?h?
?9?@?G?N?T?]?o?
?9?\?}?
?9?D?K?q?y?
?A?\?e?
?B?G?Q?i?n?x?
?B?K?V?g?w?
?C?Y?
?ChkHr(_inAppOfferToken.Set(inAppOfferToken))
?D?H?L?P?T?X?\?`?d?h?l?p?t?|?
?D?I?Q?
?DqCf
?F?O?X?
?F?P?U?{?
?H?\?j?
?h?o?t?|?
?H?S?Z?e?
?H?Z?g?
?J?]?c?l?s?
?J?`?
?K?P?X?
?L?^?
?N?b?
?O?V?[?c?
?o?z?
?P?y?
?T?^?c?
?v?}?
?V?h?v?
?X?g?l?
?Z?d?{?
@.didat
@.reloc
@5-OD3
@9D$,
@d;A(t
@tum'
[%hs(%hs)]
[%hs]
[CV:%2]
\$ PSSj
\$ t)
\$$RQ
\$(9L$<
\$09\$8vu
\$88Y9uES
\\?\T:\Windows\System32\LogFiles\DOSvc
\\?\T:\Windows\System32\Logfiles\WMI\RtBackup\StoreOperational.etl
^0n0s0}0
^8]iv
^WhDt
^Whle
^WhXx
_^[Y]
__CxxFrameHandler3
__dllonexit
__FIAsyncOperation_1___FIVectorView_1_Windows__CApplicationModel__CStore__CPreview__CStorePreviewProductInfo
__FIAsyncOperation_1___FIVectorView_1_Windows__CApplicationModel__CStore__CPreview__CStoreSystemFeature
__FIAsyncOperation_1___FIVectorView_1_Windows__CApplicationModel__CStore__CUnfulfilledConsumable
__FIAsyncOperation_1___FIVectorView_1_Windows__CServices__CStore__CStorePackageUpdate
__FIAsyncOperation_1___FIVectorView_1_Windows__CServices__CStore__CStoreQueueItem
__FIAsyncOperation_1_Windows__CApplicationModel__CStore__CFulfillmentResult
__FIAsyncOperation_1_Windows__CApplicationModel__CStore__CLicenseManagement__CLicenseSatisfactionResult
__FIAsyncOperation_1_Windows__CApplicationModel__CStore__CListingInformation
__FIAsyncOperation_1_Windows__CApplicationModel__CStore__CPreview__CStorePreviewPurchaseResults
__FIAsyncOperation_1_Windows__CApplicationModel__CStore__CPurchaseResults
__FIAsyncOperation_1_Windows__CServices__CStore__CStoreAcquireLicenseResult
__FIAsyncOperation_1_Windows__CServices__CStore__CStoreAppLicense
__FIAsyncOperation_1_Windows__CServices__CStore__CStoreCanAcquireLicenseResult
__FIAsyncOperation_1_Windows__CServices__CStore__CStoreConsumableResult
__FIAsyncOperation_1_Windows__CServices__CStore__CStoreProductPagedQueryResult
__FIAsyncOperation_1_Windows__CServices__CStore__CStoreProductQueryResult
__FIAsyncOperation_1_Windows__CServices__CStore__CStoreProductResult
__FIAsyncOperation_1_Windows__CServices__CStore__CStorePurchaseResult
__FIAsyncOperation_1_Windows__CServices__CStore__CStoreRateAndReviewResult
__FIAsyncOperation_1_Windows__CServices__CStore__CStoreSendRequestResult
__FIAsyncOperation_1_Windows__CServices__CStore__CStoreUninstallStorePackageResult
__FIAsyncOperationCompletedHandler_1___FIVectorView_1_Windows__CApplicationModel__CStore__CPreview__CStorePreviewProductInfo
__FIAsyncOperationCompletedHandler_1___FIVectorView_1_Windows__CApplicationModel__CStore__CPreview__CStoreSystemFeature
__FIAsyncOperationCompletedHandler_1___FIVectorView_1_Windows__CApplicationModel__CStore__CUnfulfilledConsumable
__FIAsyncOperationCompletedHandler_1___FIVectorView_1_Windows__CServices__CStore__CStorePackageUpdate
__FIAsyncOperationCompletedHandler_1___FIVectorView_1_Windows__CServices__CStore__CStoreQueueItem
__FIAsyncOperationCompletedHandler_1_Windows__CApplicationModel__CStore__CFulfillmentResult
__FIAsyncOperationCompletedHandler_1_Windows__CApplicationModel__CStore__CLicenseManagement__CLicenseSatisfactionResult
__FIAsyncOperationCompletedHandler_1_Windows__CApplicationModel__CStore__CListingInformation
__FIAsyncOperationCompletedHandler_1_Windows__CApplicationModel__CStore__CPreview__CStorePreviewPurchaseResults
__FIAsyncOperationCompletedHandler_1_Windows__CApplicationModel__CStore__CPurchaseResults
__FIAsyncOperationCompletedHandler_1_Windows__CServices__CStore__CStoreAcquireLicenseResult
__FIAsyncOperationCompletedHandler_1_Windows__CServices__CStore__CStoreAppLicense
__FIAsyncOperationCompletedHandler_1_Windows__CServices__CStore__CStoreCanAcquireLicenseResult
__FIAsyncOperationCompletedHandler_1_Windows__CServices__CStore__CStoreConsumableResult
__FIAsyncOperationCompletedHandler_1_Windows__CServices__CStore__CStoreProductPagedQueryResult
__FIAsyncOperationCompletedHandler_1_Windows__CServices__CStore__CStoreProductQueryResult
__FIAsyncOperationCompletedHandler_1_Windows__CServices__CStore__CStoreProductResult
__FIAsyncOperationCompletedHandler_1_Windows__CServices__CStore__CStorePurchaseResult
__FIAsyncOperationCompletedHandler_1_Windows__CServices__CStore__CStoreRateAndReviewResult
__FIAsyncOperationCompletedHandler_1_Windows__CServices__CStore__CStoreSendRequestResult
__FIAsyncOperationCompletedHandler_1_Windows__CServices__CStore__CStoreUninstallStorePackageResult
__FIAsyncOperationProgressHandler_2_Windows__CServices__CStore__CStorePackageUpdateResult_Windows__CServices__CStore__CStorePackageUpdateStatus
__FIAsyncOperationWithProgress_2_Windows__CServices__CStore__CStorePackageUpdateResult_Windows__CServices__CStore__CStorePackageUpdateStatus
__FIAsyncOperationWithProgressCompletedHandler_2_Windows__CServices__CStore__CStorePackageUpdateResult_Windows__CServices__CStore__CStorePackageUpdateStatus
__FIIterable_1___FIKeyValuePair_2_HSTRING_EventRegistrationToken
__FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CApplicationModel__CStore__CLicenseManagement__CLicenseSatisfactionInfo
__FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CApplicationModel__CStore__CProductLicense
__FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CApplicationModel__CStore__CProductListing
__FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CServices__CStore__CInternal__CIStorePackageLicenseLostCallback
__FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CServices__CStore__CStoreLicense
__FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CServices__CStore__CStorePackageUpdateStatus
__FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CServices__CStore__CStoreProduct
__FIIterable_1_Windows__CApplicationModel__CStore__CPreview__CStorePreviewProductInfo
__FIIterable_1_Windows__CApplicationModel__CStore__CPreview__CStorePreviewSkuInfo
__FIIterable_1_Windows__CApplicationModel__CStore__CPreview__CStoreSystemFeature
__FIIterable_1_Windows__CApplicationModel__CStore__CUnfulfilledConsumable
__FIIterable_1_Windows__CServices__CStore__CInternal__CStoreContentIdKeyIdItem
__FIIterable_1_Windows__CServices__CStore__CStoreAvailability
__FIIterable_1_Windows__CServices__CStore__CStoreCollectionData
__FIIterable_1_Windows__CServices__CStore__CStoreImage
__FIIterable_1_Windows__CServices__CStore__CStoreLicense
__FIIterable_1_Windows__CServices__CStore__CStorePackageUpdate
__FIIterable_1_Windows__CServices__CStore__CStorePackageUpdateStatus
__FIIterable_1_Windows__CServices__CStore__CStoreProduct
__FIIterable_1_Windows__CServices__CStore__CStoreQueueItem
__FIIterable_1_Windows__CServices__CStore__CStoreSku
__FIIterable_1_Windows__CServices__CStore__CStoreVideo
__FIIterator_1___FIKeyValuePair_2_HSTRING_EventRegistrationToken
__FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CApplicationModel__CStore__CLicenseManagement__CLicenseSatisfactionInfo
__FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CApplicationModel__CStore__CProductLicense
__FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CApplicationModel__CStore__CProductListing
__FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CServices__CStore__CInternal__CIStorePackageLicenseLostCallback
__FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CServices__CStore__CStoreLicense
__FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CServices__CStore__CStorePackageUpdateStatus
__FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CServices__CStore__CStoreProduct
__FIIterator_1_Windows__CApplicationModel__CStore__CPreview__CStorePreviewProductInfo
__FIIterator_1_Windows__CApplicationModel__CStore__CPreview__CStorePreviewSkuInfo
__FIIterator_1_Windows__CApplicationModel__CStore__CPreview__CStoreSystemFeature
__FIIterator_1_Windows__CApplicationModel__CStore__CUnfulfilledConsumable
__FIIterator_1_Windows__CServices__CStore__CInternal__CStoreContentIdKeyIdItem
__FIIterator_1_Windows__CServices__CStore__CStoreAvailability
__FIIterator_1_Windows__CServices__CStore__CStoreCollectionData
__FIIterator_1_Windows__CServices__CStore__CStoreImage
__FIIterator_1_Windows__CServices__CStore__CStoreLicense
__FIIterator_1_Windows__CServices__CStore__CStorePackageUpdate
__FIIterator_1_Windows__CServices__CStore__CStorePackageUpdateStatus
__FIIterator_1_Windows__CServices__CStore__CStoreProduct
__FIIterator_1_Windows__CServices__CStore__CStoreQueueItem
__FIIterator_1_Windows__CServices__CStore__CStoreSku
__FIIterator_1_Windows__CServices__CStore__CStoreVideo
__FIKeyValuePair_2_HSTRING_EventRegistrationToken
__FIKeyValuePair_2_HSTRING_Windows__CApplicationModel__CStore__CLicenseManagement__CLicenseSatisfactionInfo
__FIKeyValuePair_2_HSTRING_Windows__CApplicationModel__CStore__CProductLicense
__FIKeyValuePair_2_HSTRING_Windows__CApplicationModel__CStore__CProductListing
__FIKeyValuePair_2_HSTRING_Windows__CServices__CStore__CInternal__CIStorePackageLicenseLostCallback
__FIKeyValuePair_2_HSTRING_Windows__CServices__CStore__CStoreLicense
__FIKeyValuePair_2_HSTRING_Windows__CServices__CStore__CStorePackageUpdateStatus
__FIKeyValuePair_2_HSTRING_Windows__CServices__CStore__CStoreProduct
__FIMap_2_HSTRING_EventRegistrationToken
__FIMap_2_HSTRING_Windows__CApplicationModel__CStore__CLicenseManagement__CLicenseSatisfactionInfo
__FIMap_2_HSTRING_Windows__CApplicationModel__CStore__CProductLicense
__FIMap_2_HSTRING_Windows__CApplicationModel__CStore__CProductListing
__FIMap_2_HSTRING_Windows__CServices__CStore__CInternal__CIStorePackageLicenseLostCallback
__FIMap_2_HSTRING_Windows__CServices__CStore__CStoreLicense
__FIMap_2_HSTRING_Windows__CServices__CStore__CStorePackageUpdateStatus
__FIMap_2_HSTRING_Windows__CServices__CStore__CStoreProduct
__FIMapView_2_HSTRING_EventRegistrationToken
__FIMapView_2_HSTRING_Windows__CApplicationModel__CStore__CLicenseManagement__CLicenseSatisfactionInfo
__FIMapView_2_HSTRING_Windows__CApplicationModel__CStore__CProductLicense
__FIMapView_2_HSTRING_Windows__CApplicationModel__CStore__CProductListing
__FIMapView_2_HSTRING_Windows__CServices__CStore__CInternal__CIStorePackageLicenseLostCallback
__FIMapView_2_HSTRING_Windows__CServices__CStore__CStoreLicense
__FIMapView_2_HSTRING_Windows__CServices__CStore__CStorePackageUpdateStatus
__FIMapView_2_HSTRING_Windows__CServices__CStore__CStoreProduct
__FITypedEventHandler_2_Windows__CServices__CStore__CStoreContext_IInspectable
__FITypedEventHandler_2_Windows__CServices__CStore__CStorePackageLicense_IInspectable
__FITypedEventHandler_2_Windows__CServices__CStore__CStoreQueueItem_IInspectable
__FITypedEventHandler_2_Windows__CServices__CStore__CStoreQueueItem_Windows__CServices__CStore__CStoreQueueItemCompletedEventArgs
__FIVector_1_Windows__CApplicationModel__CStore__CPreview__CStorePreviewProductInfo
__FIVector_1_Windows__CApplicationModel__CStore__CPreview__CStorePreviewSkuInfo
__FIVector_1_Windows__CApplicationModel__CStore__CPreview__CStoreSystemFeature
__FIVector_1_Windows__CApplicationModel__CStore__CUnfulfilledConsumable
__FIVector_1_Windows__CServices__CStore__CInternal__CStoreContentIdKeyIdItem
__FIVector_1_Windows__CServices__CStore__CStoreAvailability
__FIVector_1_Windows__CServices__CStore__CStoreCollectionData
__FIVector_1_Windows__CServices__CStore__CStoreImage
__FIVector_1_Windows__CServices__CStore__CStoreLicense
__FIVector_1_Windows__CServices__CStore__CStorePackageUpdate
__FIVector_1_Windows__CServices__CStore__CStorePackageUpdateStatus
__FIVector_1_Windows__CServices__CStore__CStoreProduct
__FIVector_1_Windows__CServices__CStore__CStoreQueueItem
__FIVector_1_Windows__CServices__CStore__CStoreSku
__FIVector_1_Windows__CServices__CStore__CStoreVideo
__FIVectorView_1_Windows__CApplicationModel__CStore__CPreview__CStorePreviewProductInfo
__FIVectorView_1_Windows__CApplicationModel__CStore__CPreview__CStorePreviewSkuInfo
__FIVectorView_1_Windows__CApplicationModel__CStore__CPreview__CStoreSystemFeature
__FIVectorView_1_Windows__CApplicationModel__CStore__CUnfulfilledConsumable
__FIVectorView_1_Windows__CServices__CStore__CInternal__CStoreContentIdKeyIdItem
__FIVectorView_1_Windows__CServices__CStore__CStoreAvailability
__FIVectorView_1_Windows__CServices__CStore__CStoreCollectionData
__FIVectorView_1_Windows__CServices__CStore__CStoreImage
__FIVectorView_1_Windows__CServices__CStore__CStoreLicense
__FIVectorView_1_Windows__CServices__CStore__CStorePackageUpdate
__FIVectorView_1_Windows__CServices__CStore__CStorePackageUpdateStatus
__FIVectorView_1_Windows__CServices__CStore__CStoreProduct
__FIVectorView_1_Windows__CServices__CStore__CStoreQueueItem
__FIVectorView_1_Windows__CServices__CStore__CStoreSku
__FIVectorView_1_Windows__CServices__CStore__CStoreVideo
__tag
__TlgCV__
__x_Windows_CApplicationModel_CStore_CICurrentApp
__x_Windows_CApplicationModel_CStore_CICurrentApp2Statics
__x_Windows_CApplicationModel_CStore_CICurrentAppSimulator
__x_Windows_CApplicationModel_CStore_CICurrentAppSimulatorStaticsWithFiltering
__x_Windows_CApplicationModel_CStore_CICurrentAppSimulatorWithCampaignId
__x_Windows_CApplicationModel_CStore_CICurrentAppSimulatorWithConsumables
__x_Windows_CApplicationModel_CStore_CICurrentAppStaticsWithFiltering
__x_Windows_CApplicationModel_CStore_CICurrentAppWithCampaignId
__x_Windows_CApplicationModel_CStore_CICurrentAppWithConsumables
__x_Windows_CApplicationModel_CStore_CILicenseChangedEventHandler
__x_Windows_CApplicationModel_CStore_CILicenseInformation
__x_Windows_CApplicationModel_CStore_CIListingInformation
__x_Windows_CApplicationModel_CStore_CIListingInformation2
__x_Windows_CApplicationModel_CStore_CInternal_CIAuthenticationExtension
__x_Windows_CApplicationModel_CStore_CInternal_CIConsumableProduct
__x_Windows_CApplicationModel_CStore_CInternal_CILicenseInformationPrivate
__x_Windows_CApplicationModel_CStore_CInternal_CILicenseInformationPrivateWithConsumables
__x_Windows_CApplicationModel_CStore_CInternal_CIMessageDialogHelper
__x_Windows_CApplicationModel_CStore_CInternal_CIMessageDialogHelper2
__x_Windows_CApplicationModel_CStore_CInternal_CIProductLicensePrivate
__x_Windows_CApplicationModel_CStore_CInternal_CIProductLicensePrivateWithConsumables
__x_Windows_CApplicationModel_CStore_CInternal_CIProductListingPrivate
__x_Windows_CApplicationModel_CStore_CInternal_CIStoreCommerce
__x_Windows_CApplicationModel_CStore_CInternal_CIStoreCommerce2
__x_Windows_CApplicationModel_CStore_CInternal_CIStoreCommercePreview
__x_Windows_CApplicationModel_CStore_CInternal_CIStoreCommerceSimulator
__x_Windows_CApplicationModel_CStore_CInternal_CIStoreCommerceSimulatorWithConsumables
__x_Windows_CApplicationModel_CStore_CInternal_CIStoreCommerceWithConsumables
__x_Windows_CApplicationModel_CStore_CInternal_CITestingFrameworkState
__x_Windows_CApplicationModel_CStore_CInternal_CITestingFrameworkStateChangedEventHandler
__x_Windows_CApplicationModel_CStore_CIProductLicense
__x_Windows_CApplicationModel_CStore_CIProductLicenseWithFulfillment
__x_Windows_CApplicationModel_CStore_CIProductListing
__x_Windows_CApplicationModel_CStore_CIProductListing2
__x_Windows_CApplicationModel_CStore_CIProductListingWithConsumables
__x_Windows_CApplicationModel_CStore_CIProductListingWithMetadata
__x_Windows_CApplicationModel_CStore_CIProductPurchaseDisplayProperties
__x_Windows_CApplicationModel_CStore_CIProductPurchaseDisplayPropertiesFactory
__x_Windows_CApplicationModel_CStore_CIPurchaseResults
__x_Windows_CApplicationModel_CStore_CIUnfulfilledConsumable
__x_Windows_CApplicationModel_CStore_CLicenseManagement_CILicenseManagerStatics
__x_Windows_CApplicationModel_CStore_CLicenseManagement_CILicenseManagerStatics2
__x_Windows_CApplicationModel_CStore_CLicenseManagement_CILicenseSatisfactionInfo
__x_Windows_CApplicationModel_CStore_CLicenseManagement_CILicenseSatisfactionResult
__x_Windows_CApplicationModel_CStore_CPreview_CIStoreConfigurationStatics
__x_Windows_CApplicationModel_CStore_CPreview_CIStoreConfigurationStatics2
__x_Windows_CApplicationModel_CStore_CPreview_CIStoreConfigurationStatics3
__x_Windows_CApplicationModel_CStore_CPreview_CIStoreConfigurationStatics4
__x_Windows_CApplicationModel_CStore_CPreview_CIStoreConfigurationStatics5
__x_Windows_CApplicationModel_CStore_CPreview_CIStoreHardwareManufacturerInfo
__x_Windows_CApplicationModel_CStore_CPreview_CIStorePreview
__x_Windows_CApplicationModel_CStore_CPreview_CIStorePreviewProductInfo
__x_Windows_CApplicationModel_CStore_CPreview_CIStorePreviewPurchaseResults
__x_Windows_CApplicationModel_CStore_CPreview_CIStorePreviewSkuInfo
__x_Windows_CApplicationModel_CStore_CPreview_CIWebAuthenticationCoreManagerHelper
__x_Windows_CServices_CStore_CInternal_CIGetNextStoreProductOperation
__x_Windows_CServices_CStore_CInternal_CIStoreContentIdKeyIdItem
__x_Windows_CServices_CStore_CInternal_CIStoreContentIdKeyIdResponse
__x_Windows_CServices_CStore_CInternal_CIStoreContextCallerData
__x_Windows_CServices_CStore_CInternal_CIStoreContextLicensesChangedCallback
__x_Windows_CServices_CStore_CInternal_CIStoreContextServer
__x_Windows_CServices_CStore_CInternal_CIStoreContextServer2
__x_Windows_CServices_CStore_CInternal_CIStoreContextServer3
__x_Windows_CServices_CStore_CInternal_CIStorePackageLicenseLostCallback
__x_Windows_CServices_CStore_CInternal_CIStorePackageUpdatePrivate
__x_Windows_CServices_CStore_CIStoreAcquireLicenseResult
__x_Windows_CServices_CStore_CIStoreAppLicense
__x_Windows_CServices_CStore_CIStoreAppLicense2
__x_Windows_CServices_CStore_CIStoreAvailability
__x_Windows_CServices_CStore_CIStoreCanAcquireLicenseResult
__x_Windows_CServices_CStore_CIStoreCollectionData
__x_Windows_CServices_CStore_CIStoreConsumableResult
__x_Windows_CServices_CStore_CIStoreContext
__x_Windows_CServices_CStore_CIStoreContext2
__x_Windows_CServices_CStore_CIStoreContext3
__x_Windows_CServices_CStore_CIStoreContext4
__x_Windows_CServices_CStore_CIStoreContextStatics
__x_Windows_CServices_CStore_CIStoreImage
__x_Windows_CServices_CStore_CIStoreLicense
__x_Windows_CServices_CStore_CIStorePackageInstallOptions
__x_Windows_CServices_CStore_CIStorePackageLicense
__x_Windows_CServices_CStore_CIStorePackageUpdate
__x_Windows_CServices_CStore_CIStorePackageUpdateResult
__x_Windows_CServices_CStore_CIStorePackageUpdateResult2
__x_Windows_CServices_CStore_CIStorePrice
__x_Windows_CServices_CStore_CIStoreProduct
__x_Windows_CServices_CStore_CIStoreProductOptions
__x_Windows_CServices_CStore_CIStoreProductPagedQueryResult
__x_Windows_CServices_CStore_CIStoreProductQueryResult
__x_Windows_CServices_CStore_CIStoreProductResult
__x_Windows_CServices_CStore_CIStorePurchaseProperties
__x_Windows_CServices_CStore_CIStorePurchasePropertiesFactory
__x_Windows_CServices_CStore_CIStorePurchaseResult
__x_Windows_CServices_CStore_CIStoreQueueItem
__x_Windows_CServices_CStore_CIStoreQueueItem2
__x_Windows_CServices_CStore_CIStoreQueueItemCompletedEventArgs
__x_Windows_CServices_CStore_CIStoreQueueItemStatus
__x_Windows_CServices_CStore_CIStoreRateAndReviewResult
__x_Windows_CServices_CStore_CIStoreRequestHelperStatics
__x_Windows_CServices_CStore_CIStoreSendRequestResult
__x_Windows_CServices_CStore_CIStoreSendRequestResult2
__x_Windows_CServices_CStore_CIStoreSku
__x_Windows_CServices_CStore_CIStoreSubscriptionInfo
__x_Windows_CServices_CStore_CIStoreUninstallStorePackageResult
__x_Windows_CServices_CStore_CIStoreVideo
_0c0g0
_0d0l0
_amsg_exit
_AppendToDataBuffer failed
_AreAllDownloadsComplete
_availabilities->GetView(ppValue)
_BuildBeneficiaryArrayJSON
_BuildBeneficiaryJSON
_BuildGoldenBeneficiaryArrayJSON
_BuildGoldenBeneficiaryJSON
_callnewh
_CheckOptionalPackageIsValid
_ConstructRequestBody
_contentIds->GetView(value)
_ConvertAppInstallState
_ConvertStoreQueueState
_CreateConnectionAndSendRequest(pszServerName, pszUrl, fUseSecure, fUsePut ? L"PUT" : L"POST", _GetStreamSize(pUploadDataStream), port, 0, fUseAuthentication)
_DownloadData()
_errno
_except_handler4_common
_extendedJsonData.Set(value)
_FilterProductsJson
_fInitialized
_ftol2
_ftol2_sse
_GetProxyInfoForUrl(pszServerName, pszUrl, fUseSecure, &pszProxyList, &pszProxyByPass, &dwAccessType)
_hCancelInternal
_hRequest
_hRequest == 0
_hRequest == hRequest
_images->GetView(ppValue)
_initterm
_IsNetworkMetered
_items->GetView(value)
_itow_s
_keyIds->GetView(value)
_keywords->GetView(ppValue)
_licenseLostEvent.Add(pHandler, pToken)
_licenseLostEvent.Remove(token)
_lock
_mapView.CopyTo(ppValue)
_modalManager != nullptr
_name.Set(name)
_name.Set(value)
_onexit
_ParseGetProductsByKinds
_ParseLicenseInstance( spLicenseInstance, isActive, isTrial, isTrialOwnedByThisUser, trialUniqueId.GetAddressOf(), isDiscLicense, expirationDate, trialTimeRemaining, package)
_pConnection == nullptr
_pPackage.CopyTo(ppPackage)
_pPackage->get_Id(packageId.GetAddressOf())
_pPackageLicense.CopyTo(ppValue)
_productId.CopyTo(value)
_productStoreId.Set(productStoreId)
_pszStringData == nullptr
_purchaseStatus == ProductPurchaseStatus_NotPurchased
_purecall
_ReceiveResponse failed
_request.CopyTo(json)
_response.CopyTo(json)
_response.Set(json)
_s/Z{I<
_SendJsonToURLWithHttpClientForStringResponse
_set_errno
_SetProxyForCurrentRequest(pszCurrProxy, pszProxyBypass, dwAccessType)
_ShouldFilterByRelationship
_skus->GetView(ppValue)
_snwprintf_s
_spPreviewImage.CopyTo(ppValue)
_spStoreContextServer.As(&result)
_storeContextServer->SendStoreRequestWithUris( nullptr, UriHelperV7::InternalStoreEndpointExtensionUrls, UriHelperV7::GetUserCollectionForProducts, _spCV, jsonCollectionsParameters.Get(), nullptr, collectionsJsonString.GetAddressOf())
_transactionId.IsValid()
_unlock
_videos->GetView(ppValue)
_vsnprintf
_vsnwprintf
_WaitForLastAsyncCompletion failed
_wcsdup
_wcsicmp
_wcstoi64
_wcstoui64
_wcsupr
_WinStoreSDK_Receipt_Cache
_wtof
_wtoi
_wtol
_XcptFilter
`.data
`/ZQl
`0e0m0
{"status": "aborted"}
{268761a2-03f3-40df-8a8b-c3db24145b6b}
{client}
{d6d5a677-0872-4ab0-9442-bb792fce85c5}
{featureName}
{idType}
{installedPublisherId}
{lang}
{languages}
{market}
{marketCode}
{p^u!
{parentProductId}
{platformDependencyNameParam}
{productId}
{receiptType}
{Y6#kZ
|$$Pj
|$<9L$<
|hK,_
|YB f
} QVh@
}7QWh
}QWh\
~/ZxqL
+>+b+
+7 wP9L
'+h(_
+Xa] 
< <$<(<,<<<@<P<T<X<\<l<t<x<
< <$<(<,<0<4<8<<<@<D<H<L<P<T<X<\<`<d<h<l<p<t<|<
< <$<(<,<0<4<8<<<@<D<H<L<P<T<X<\<`<d<h<l<p<t<x<|<
< <$<(<,<0<4<8<<<@<H<L<P<T<X<\<`<d<h<l<p<t<x<|<
< <$<(<,<0<8<<<@<D<H<L<P<T<X<\<`<d<h<p<t<x<|<
< <$<(<,<4<8<<<@<D<H<L<P<T<X<\<`<d<h<l<p<t<x<|<
< <$<,<0<H<P<T<X<\<l<t<x<
< <$<4<8<<<L<T<X<l<t<x<
< <%<,<6<
< <(<,<0<4<8<<<@<H<L<P<T<\<d<h<l<p<t<x<|<
< <(<,<4<8<L<P<T<l<p<x<|<
< <(<0<4<8<<<P<T<\<`<t<|<
< <,<0<<<X<\<`<d<p<x<
< </<O<l<
< <-<A<N<j<
< =/=9=>=
<!<%<)<-<1<5<9<=<A<f<x<
<!<,<9<@<R<i<
<!<+<K<R<[<
<!<'<1<<<B<H<N<T<g<
<!=/=9=>=
<"<)<S<]<j<~<
<"</<9<><y<
<"<`<e<m<
<"<'<1<F<e<j<t<
<"<'<A<H<T<
<"<2<B<R<a<g<r<
<"<8<T<
<"<h<~<
<"=(=g=
<"=8===^=}=
<#</<6<@<
<#<-<_<
<#<-<2<
<#<b<g<q<
<#<Q<
<#=/=O=r=w=|=
<#=\=
<$<,<_<
<$<.<{<
<$<+<:<@<I<P<W<^<p<
<$<2<G<L<T<
<$<3<<<A<K<a<
<$<5<:<D<U<Z<d<u<z<
<$<C<L<m<
<$=.=;=J=
<$=3=e=
<%<+<3<9<?<E<
<%=*=/=6=@=f=m=w=|=
<%=2=9=@=R=]=d=k=
<%=A=N=v=
<&<,<5<<<C<J<\<
<&<,<f<m<t<
<&<1<D<X<u<
<&=1=`=m=z=
<&=8=F=R=
<(<_<v<
<(<><H<M<l<
<(<6<
<(<6<B<
<(<F<S<
<(=-=H=Y=^=j=u=
<)<]<t<
<)<8<S<]<b<
<)<u<{<
<)=9=C=H=s=
<)=c=
<*</<5<<<d<p<
<*<U<m<
<,<<<A<I<
<,<1<@<a<f<u<
<,<C<g<|<
<,<E<O<T<
<,<G<b<
<.<K<
</<4<D<I<Q<|<
</<p<
</=z=
<:<?<_<r<w<
<:<G<
<:=A=G=N=o=
<;<A<F<S<a<k<x<
<;=F=W=^=}=
<??YzU
<?=H=l=u=/>
<@<J<O<|<
<@<J<O<z<
<]<j<w<
<^<t<{<
<_=d=
<`<n<
<+<:<
<+<2<I<p<
<+<4<><L<r<
<+<D<Q<X<_<f<m<t<{<
<+<H<
<+<k<
<+<z<
<+=?=L=U=^=h=s=
<+=A=b=i=p=
<-<[<q<
<-<}<
<<<x<}<
<<=E=V=p=
<'<2<9<@<G<\<
<'<4<]<z<
<'<7<E<s<
<-<z<
<'=1=
<0<d<
<0<O<c<
<0<x<
<2=E=
<3<=<r<x<}<
<3<A<\<
<3<X<b<g<
<5=?=D=q=
<6<F<T<
<6<H<o<
<6<H<V<
<6<O<i<
<6<Y<i<w<
<6=K=\=
<7<<<D<Z<j<o<w<
<7<B<Y<^<h<
<7<M<s<
<7=Y=
<8<C<T<[<z<
<8<G<X<y<
<8<T<
<8<V<
<9=e=y=
<9=H=R=W=
<B<Z<|<
<B=R=`=
<C=g=
<e=l=v={=
<F=K=t=y=
<F=X=f=r=
<G<c<t<
<G<Q<V<
<H<x<
<H=O=T=\=
<I<`<u<
<i=p=z=
<J<Q<]<
<J<Y<e<j<o<|<
<J=Q=W=^=
<K<a<
<K=[=e=j=
<M<]<g<l<
<M<c<
<m=x=
<n<x<}<
<N=U=_=d=~=
<pqBJ
<Q<f<q<
<R<b<p<
<r<y<
<r=|=
<S<`<g<n<
<T=^=c=
<T=Y=z=
<unknown>
<V=j=
<W<{<
<W<g<u<
<W<p<{<
<Y<^<y<~<
<Y<s<
<Z<a<f<p<
= =$=(=,=0=4=8=<=@=D=H=L=P=T=X=\=`=d=h=l=p=t=x=|=
= =$=(=,=0=4=8=<=@=D=H=L=T=X=\=`=d=h=l=p=t=x=|=
= =$=(=,=0=4=8=<=@=D=H=P=T=X=\=`=d=h=l=p=t=x=|=
= =$=(=,=0=4=8=<=@=L=P=T=X=\=`=d=h=l=p=t=x=|=
= =$=(=0=4=8=<=@=D=H=L=P=T=X=\=`=d=h=l=p=t=
= =$=(=0=4=L=T=\=d=h=p=t=
= =$=(=0=L=P=T=X=\=d=h=l=
= =(=,=0=4=8=<=@=D=H=L=P=T=X=`=d=h=l=p=t=x=|=
= ='=1=]=b=g=n=x=
= =4=8=<=@=T=\=h=l=t=x=|=
= =I=V=]=d=v=
= >%>0>5>@>E>P>U>`>e>m>
=!=,=T=
=!=.=3===R=p=
=!=@=J=O=e=
=!=+=0=u=
=!=7=D=X=]=g=
=!>k>r>
="=:=]=b=l=
="='=,=3===O=x=
="='=/=f=m=r=
="='=?=M=l=
="='=1=v=
="='=8=Y=^=o=
="=-=D=I=S=v=
="=2=B=R=b=r=
="=8=T=t=
=">)>
=#=*=1=8=?=Q=j=v=
=#=,=5=<=
=#=,=c=m=z=
=#='=-=1=7===C=G=M=S=Y=_=
=#===B=J=
=#=-=2=r=x=
=#=I=
=#>*>F>K>S>
=#>>>I>
=$=(=<=D=H=\=`=d=t=x=|=
=$=)=/=M=W=\=q=
=$=)=T=h=
=$=+=|=
=$=1=6=>=o=
=$=5=:=D=Q=W=\=u=z=
=$>:>`>p>~>
=%=*=@=
=%=,=6=;=
=%=+=1=5=;=?=E=K=Q=U=Z=_=d=i=
=%=F=X=f=r=
=%=Z=t=
=%>D>t>
=&=-=3=F=S=w=~=
=&=>=C=M=c=n=v=
=&=1=@=I=]=
=&=2=>=J=V=b=
=&=l=u=
=&>+>3>X>_>d>l>
=&>8>F>y>
=(=,=0=4=8=@=D=H=L=P=T=X=\=`=d=h=l=p=t=x=|=
=(=[=
=(=\=
=(=6=B=
=(=e=o=t=
=(>/>4><>q>}>
=(>/>6>=>F>
=)=.=8=Q=W=}=
=)=<=L=j=t=y=
=)>.>8>R>
=)>B>L>Q>y>
=*=/=7=s=
=*=/=I=V=
=*=<=Y=
=*=S=v=
=,=;=\=k=
=,=0=8=<=@=H=L=T=X=p=x=
=,=7=
=,>5>q>x>
=.=D=
=.>w>
=/=5=<=F=^=x=
=/=X=g=x=
=:=?=I=m=
=:=G=N=U=[=n=y=
=:=T=
=?=J=
=[=k=y=
=\>e>
=^=e=
=_>d>l>
=`=e=m=
=+>1><>A>F>e>r>
=<?E?f?x?
=<=b=
=<=N=\=1>
=<>E>
=<>K>^>m>~>
='=.=P=d=i=|=
=-=[=q=
='=<=J=P=d=i=x=
===L=c=p=
==>J>W>]>a>g>k>q>w>}>
=-=8=?=F=[=D>j>q>x>
='=B=n=u=
='>/>6>=>C>Z>`>
=->_>
=>>V>
=->6>P>W>x>
=0=;=@=H=]=b=j=
=0=?=o=
=0=<=A=K=]=b=t={=
=0=5=?=U=e=
=0=x=
=0Y0p0
=1=?=M=R=\=q={=
=1=@=J=O=v=
=1=A=\=h=m=w=
=1=Q=a=q=
=1>:>q>
=1>F>
=2=`=o=y=~=
=2=R=w=
=3===j=q=v=}=
=3=9=R=Y=`=t=
=3=M=Z=g=m=
=3=R=a=
=3>M>^>
=4=9=C=m=
=4=A=H=O=a=l=s=z=
=4=P=Z=t=y=
=5=?=D=b=n=
=5=G=N=a=h=
=5=S=
=6=_=
=6=R=g=
=6>?>E>L>V>m>
=7=D=L=Q=[=
=7>>>C>K>u>z>
=9=C=H=w=
=9=I=W=
=AWindows::ApplicationModel::Store::AsyncOperationBase<struct Windows::Foundation::IAsyncOperation<struct HSTRING__ *>,struct Windows::Foundation::IAsyncOperationCompletedHandler<struct HSTRING__ *>,0>::DoWorkStub
=B>O>
=C=b=m=~=
=C=M=W=
=c>y>
=d>i>s>
=E=_=
=e=o=t=
=F=k={=
=F>m>
=H=a=l=y=
=I=N=X=
=I>/?N?^?t?
=I>f>
=i>p>
=J=t=
=J=U=k=
=J=Z=u=
=K=]=h=m=
=L>U>m>
=O=T={=
=q>}>
=Q>s>
=T>r>
=U>6?F?Z?
=V=[=e=}=
=V=]=b=u=
=Z=a=g=n=
> ?%?I?X?]?
> ?(?,?4?8?@?D?L?P?X?\?d?h?p?t?|?
> >$>(>,>0>4>8><>@>D>H>L>d>h>p>t>x>|>
> >$>(>,>0>4>8><>@>D>H>L>P>T>X>\>`>d>h>l>p>t>|>
> >$>(>,>0>4>8><>@>D>H>L>P>T>X>\>`>d>h>l>p>t>x>|>
> >$>(>,>0>4>8><>@>D>H>L>P>X>\>`>d>h>l>p>t>x>|>
> >$>(>,>0>4>8><>@>D>H>L>T>X>\>`>d>h>l>p>t>x>|>
> >$>,>0>D>H>L>`>h>l>t>x>
> >)>2>;>
> >.>?>D>N>f>k>s>
> >/>V>t>
> >@>D>H>L>P>X>\>`>p>t>x>
> >'>.>5>J>Q>X>_>f>
> >->b>g>q>
> >->X>
> >S>[>l>
>!?7?]?m?{?
>!>&>0>S>b>g>q>
>!>(>:>E>L>a>
>!>=>B>W>\>d>
>!>->n>
>!>b>
>!>H>]>
>">)>;>F>M>T>[>p>
>">'><>Q>`>
>">'>1>b>
>">2>B>R>b>r>
>#?(?2?b?
>#>(>2>J>T>Y>q>
>#>.>F>
>#>=>W>a>x>}>
>#>8>B>G>a>g>q>}>
>$?3?=?B?h?w?
>$?4?Q?\?k?u?z?
>$?7?<?F?{?
>$>(>,>0>4>8><>@>D>H>L>P>T>X>\>`>d>h>l>p>t>x>|>
>$>(>X>\>`>d>h>l>|>
>$>,>_>
>$>:>
>$>->H>R>s>
>$>4>?>V>y>
>$>c>
>$>D>O>
>$>S>
>%?,?3?
>%>*>4>E>J>T>e>j>t>
>%>,>1>9>_>d>v>
>%>+>4>;>B>I>[>
>%>8>A>M>T>[>e>o>
>%>C>X>z>
>%>F>e>o>t>
>&>0>5>Q>]>d>x>
>&>5>;>D>K>R>Y>k>
>&>N>]>l>
>(>J>Q>W>
>)>6>=>D>V>
>)>7>^>l>
>*?/?B?G?l?q?y?
>*>1>R>~>
>*>4>9>g>v>
>*>5>H>]>h>{>
>*>O>\>c>q>
>*>X>n>
>,?\?t?~?
>,?5?V?h?v?
>,?Y?
>,>:>H>Y>_>d>
>,>;>Y>h>
>,>0>4>8><>P>T>X>\>`>h>p>x>
>,>1>;>W>l>
>,>4>@>D>L>P>T>\>`>h>l>
>,>J>O>T>a>t>y>~>
>.>@>N>f>x>
>.>3>=>d>
>.>7>J>X>
>.>d>k>r>y>
>/?6?@?E?^?p?~?
>/?x?
>/><>
>/>5>H>b>n>u>
>/>E>i>
>/>N>[>k>
>:>A>F>N>
>:>P>
>:>P>v>
>;>D>S>
>'?,?s?
>??K?[?_?e?j?o?t?
>?>c>m>r>
>?>q>w>|>
>@>O>g>
>_>e>r>
>`>q>
>+?5?:?`?r?
>+?W?\?l?
>+>:>L>h>
>+>0>V>[>c>
>+>A>a>
><>q>v>
><>R>`>l>t>
><>s>}>
><>T>^>f>r>w>|>
>'>,>4>
>'>8>=>B>I>P>
>'>8>Y>a>k>p>
>->B>P>Z>_>
>'>X>e>
>0>:>?>|>
>0>?>]>}>
>0>M>X>
>0>N>c>
>0>t>
>0>u>
>1?7?=?B?Q?W?l?
>1?K?V?~?
>1><>
>1>6>>>x>
>2>8>]>d>k>
>2>A>K>P>m>
>2>U>j>
>3?<?K?t?~?
>4>;>^>
>5???
>5>A>
>5>E>d>
>6?H?V?b?
>6?o?
>6>;>@>o>
>7>F>m>
>8>~>
>8>G>o>~>
>9?F?M?S?f?q?
>9?q?
>9>F>P>
>9>H>a>k>p>
>A?\?e?
>A>b>l>
>A>I>N>S>{>
>A>N>a>p>
>A>X>y>
>b>r>
>D>J>P>U>d>j>
>D>P>`>d>j>o>t>y>
>D>Y>d>z>
>e?j?
>E>c>h>r>
>F?X?f?r?
>F>M>R>e>r>w>
>F>q>
>H?Q?W?]?g?
>http://www.microsoft.com/pki/certs/MicCodSigPCA_2010-07-06.crt0
>http://www.microsoft.com/pki/certs/MicRooCerAut_2010-06-23.crt0
>http://www.microsoft.com/pki/certs/MicTimStaPCA_2010-07-01.crt0
>I>q>
>J?O?T?[?e?y?
>K>Q>g>n>
>L?U?k?r?|?
>l>s>
>l>u>
>N>U>f>k>p>w>
>p?w?
>Q>e>l>q>
>R?\?n?
>V>h>v>
0 0$0(0,00040<0@0D0H0L0P0T0X0\0`0d0h0l0t0x0|0
0 0$0(0,0004080<0@0D0H0L0P0T0X0\0`0d0h0l0p0t0x0
0 0$0(0,0004080<0@0D0H0L0P0T0X0\0`0d0h0l0p0t0x0|0
0 0$0(0,0004080<0@0D0H0L0P0T0X0\0`0d0h0l0t0x0|0
0 0$0(0,0004080<0@0D0H0L0P0T0X0\0`0d0l0t0x0|0
0 0$0(0,0004080<0@0D0H0L0P0T0X0\0d0h0l0p0t0x0|0
0 0$0(0,0004080<0@0D0H0L0P0X0\0`0d0h0l0p0t0x0|0
0 0$0(0,0004080<0@0D0L0P0T0X0\0`0d0h0l0p0t0x0|0
0 0$0(0,0004080<0@0H0P0T0l0t0x0
0 0$04080<0@0H0P0X0`0h0l0t0x0
0 0$080@0D0\0d0h0p0t0
0 0&0+02080>0D0J0O0V0\0b0h0n0s0z0
0 0*0
0 0*0/0G0_0
0 0/0@0
0 0`0
0 0F0h0
0 1*10171A1
0!0%0+01070=0\0
0!0*0;0B0P0u0
0!0+0
0!00060?0F0M0T0f0
0!0F0]0w0
0!10151P1e1j1r1
0!1I1S1`1
0"0(0A0~0
0"0*0/0R0n0
0"0*0R0i0n0v0
0"0>0E0K0
0"0'010G0W0h0m0w0
0"020B0G0Q0[0h0v0
0"1:1D1I1i1
0"1'1,131:1Z1a1f1n1
0"1b1s1x1~1
0"1D1T1Y1q1
0#0*0<0G0N0c0
0#0*01080?0F0M0_0x0
0#0+0L0W0i0
0#090[0`0j0
0#0c0m0x0
0#0P0
0#1L1[1e1j1
0$0(0,0004080<0@0D0H0L0P0T0
0$0*0/0I0b0
0$0,0K0
0$0.0g0
0$0/0F0
0$050;0@0U0Z0d0u0z0
0$0i0v0}0
0$0L0k0z0
0$0U0i0
0$1;2Q2X2_2f2m2t2{2
0%0*040
0%0/040_0~0
0%0?0H0R0`0z0
0%11191F1V1`1m1
0%141>1C1i1x1
0%151:1B1
0&0B0G0L0h0q0v0
0&0G0
0&0I0V0n0}0
0&1I1j1
0(0=0C0J0T0{0
0(0=0D0K0
0(070;0A0E0K0Q0W0[0a0g0m0s0
0(2T2
0)000B0M0T0i0
0)010;0@0U0
0)090G0u0
0)0Y0b0g0r0
0)101:1
0*0/0O0X0y0
0*0;0@0H0^0l0q0|0
0*0h0}0
0,0?0
0,0004080<0H0P0T0X0\0`0h0l0t0x0
0,010:0h0o0t0|0
0,010I0j0o0
0,060;0q0
0,060A0N0U0\0c0u0
0,080=0B0o0
0,0O0
0,0y0
0,0Z0p0
0,111;1{1
0,111;1e1
0,151V1h1v1
0,171<1A1K1k1r1{1
0,1K1V1]1d1
0.090O0g0
0.131;1^1c1k1
0.1W1q1|1
0/0`0e0j0q0{0
0/0<0f0s0
0/0f0k0u0
0/0i0
0:0J0W0}0
0;0A0G0Q0W0]0
0;1P1]1p1
0@0Z0
0@1E1O1d1m1r1|1
0[0`0w0
0_0h0
0_gds
0`0f0|0
0+050?0L0f0p0u0
0+0j0u0
0+151B1o1y1
0+181E1L1S1Z1a1h1o1v1
0+1W1
0=0B0s0~0
0=0H0U0[0_0e0i0o0u0{0
0=1F1P1V1]1g1~1
0=1s1
0>0I0R0
0-0;0@0J0b0g0q0
00040<0@0D0H0L0P0T0X0\0`0d0h0l0p0t0x0|0
0004080<0@0H0L0P0T0\0`0h0l0
00050?0U0z0
000x0
000Z0_0i0
001P1
0-020M0R0Z0
0-070B0I0
0'0C0
00N0Z0
010G0h0u0|0
011;1H1
011;1H1u1
011O1T1^1
0-1q1
0'1Y1d1i1
020>0C0M0_0d0l0
03080B0X0
040:0D0Z0d0i0
040<0D0H0L0P0d0l0p0t0x0
040=0F0U0[0}0
040904B0
040t0
050<0C0J0
050A0F0P0b0g0~0
060b0m0
060I0.1a1
061M1
080A0J0b0o0v0|0
081[1
081S1
081Y1p1
090I0_0
090R0W0a0y0
091t(P
0B0:1q102
0B0f0
0B0p0
0C0c0
0D1M1
0D1Z1h1
0E0]0d0
0E0L0S0
0e0s0z0
'0E0U0_0d0
0F0k0
0F1X1]1g1
0F2c2x2
0G0N0o0t0y0
0g0q0v0
0H0M0W0
0H0U0
0H0W0h0
0h1|1
0I0`0
0i0s0
0J0Z0d0i0
0K0Q0\0a0f0
0K1U1b1
0L0Q0[0
0l1q1
0l1u1
0M1"2-2>2E2d2
0O0d0q0
0O0T0\0
0p0u0z0
0P1U1\1s1
0QSh0
0S0g0n0x0}0
0S1q1v1
0SVW3
0T0}0
0T1\1h1m1r1y1
0T1r1
0xABBACAB
0Y:ov8
0Y0p0
0Z0a0g0n0
1 1$1(1,1014181<1@1D1H1L1P1T1X1\1`1d1h1l1p1t1x1|1
1 1$1(1,1014181<1@1D1H1L1P1T1X1\1`1d1h1l1p1x1|1
1 1$1(1,1014181<1@1D1H1L1P1X1\1`1d1h1l1p1t1x1|1
1 1$1,10141<1@1H1P1X1\1`1d1h1p1t1x1|1
1 1$181<1@1T1X1`1d1x1|1
1 1%1L1a1p1
1 1(1,1014181<1@1D1H1L1P1T1X1\1`1d1h1l1p1t1x1|1
1 10141<1@1X1`1d1h1l1
1 1-121:1`1
1 141<1D1L1T1\1d1
1 1G1V1z1
1 1h1
1 2$2(2,2024282<2@2D2H2L2P2T2X2\2`2d2h2l2p2t2x2|2
1 2$2(242<2@2H2L2`2h2l2
1 2.282=2Z2h2r2w2
1 232Q2
1 2a2
1!1&1X1q1
1!1+101^1m1
1!1+11171Z1y1
1!1v1
1!2&2+222<2s2x2}2
1!2'2,242h2o2t2|2
1"111D1M1Y1a1p1
1"171<1F1w1
1"2,212N2
1"2'2/2h2m2u2
1"2'212m2
1"2L2|2
1#1(1.1H1u1
1#1)1-13191?1C1I1O1U1[1
1#1.1O1j1
1#10151?1T1b1p1}1
1#1-1t1y1
1#2.2b2y2~2
1#232C2Y2c2h2
1$1(1,1014181<1@1D1H1L1P1T1X1\1`1d1h1l1p1t1x1|1
1$1(1,1014181H1L1P1d1h1p1t1
1$1)111
1$1,1
1$1,10181<1P1X1\1p1x1|1
1$1+1@1\1x1
1$1-1D1K1P1Z1
1$151:1D1U1Z1d1u1z1
1$171J1Q1r1
1$1J1
1$1R1h1
1$2.232
1$2`2e2j2q2{2
1$2B2X2t2
1$2M2m2
1%1)1/13191?1E1I1O1S1Y1`1f1j1p1t1z1
1%1,1U1\1c1j1
1%131>1D1J1Q1W1`1t1
1%14191A1
1%1F1X1f1
1%2*222e2
1&1*10161<1@1E1J1O1T1
1&1+151M1u1
1&1I1Y1g1
1&2D2P2e2j2o2
1&2Q2t2
1(0&0
1(1+2A2~3
1(1-1
1(161B1
1(181F1U1u1
1(2/242<2u2
1(222_2f2k2r2
1(282=2h2w2|2
1)1-14181>1D1J1N1S1X1]1b1}1
1)131@1N1X1b1l1v1
1)1B1G1Q1i1
1*161B1N1Y1p1
1*191>1F1w1|1
1*1X1n1
1*212Y2
1*24292e2
1*2U2e2j2w2
1,151\1e1
1,171M1j1
1,1R1h1
1,262;2
1.151@1|1
1.2H2|2
1/0-0
1/141>1m1
1/1j1
1/262@2E2^2p2~2
1/2o2
1/Zfj
1:2A2G2N2m2
1:2Y2^2h2
1:2Y2d2z2
1;1^1d1
1;1B1L1Q1{1
1;1C1H1R1r1
1[2l2
1\1g1l1q1{1
1+212<2A2F2b2o2
1+23282C2d2o2
1<1F1M1c1
1<1p1v1|1
1<2E2f2x2
1=1J1W1\1f1{1
1>1K1W1
10.0.19041.906
10.0.19041.906 (WinBuild.160101.0800)
100701213655Z
100706204017Z
101?1`1o1
101>1C1M1j1p1z1
10151N1Y1
10191H1v1
101E1P1b1~1
102:2?2e2t2
102d2x2
1'1<1
1-11171<1A1F1
11171<1F1
1-121S1i1n1
112m2
112n2
1'191L1k1u1z1
1-1A1P1V1]1n1
1-1D1I1
1'1G1Q1V1l1
1'1r1
1-1V1h1v1
122C2H2N2h2
131:1@1
131`1
141>1C1
14181@1D1H1L1P1T1h1p1t1x1|1
14181@1D1X1\1`1p1t1x1|1
141M1\1f1k1
141T1\1a1k1
151K1
152;2y2
161=1U1b1i1p1w1}1
162H2V2
171c1m1r1
182a2k2
191c1j1q1
192D3`3
1A1c1
1A1F1
1b1i1n1x1
1B1P1_1i1n1
1B2I2S2n2u2
1B2L2^2`3
1C1-2?2I2T2a2h2o2v2
1C1S1X1b1
1C2e2
1c2n2
1D1I1S1
1d1i1s1
1D2Z2a2k2p2
1E1L1S1Z1
1F2[2x2
1H1^1
1h1o1t1|1
1http://www.microsoft.com/PKI/docs/CPS/default.htm0@
1I1P1U1]1
1I1Y1g1
1J2Y2`2
1JXJ`
1K2g2}2
1L1Q1Y1x1
1L2U2v2
1M1T1[1
1M2X2i2s2
1N1k1
1N1U1Z1b1
1o1P2
1o1v1
1O2b2
1P1r1
1Q1_1
1Q1V1f1k1{1
1QSh@p
1R1p1z1
1S1`1g1y1
1S1z1
1T1^1k1
1T2a2n2u2|2
1U1d1}1
1W1\1r1
1w2~2
1X2_2d2l2
1Y2^2o2|2
1Y2`2
1Z1w1
2 2$2(2,20242@2D2H2L2P2T2X2\2`2d2h2l2p2t2x2|2
2 2$2(2,20242<2@2D2H2L2P2T2X2\2`2d2h2l2p2t2x2|2
2 2$2(2,2024282<2@2D2H2L2P2T2X2\2`2d2h2l2p2t2x2|2
2 2$2(2,2024282<2@2D2H2L2P2T2X2\2`2d2h2l2p2x2|2
2 2$2(2,2024282<2@2D2H2P2T2X2\2`2d2h2l2p2t2x2|2
2 2%2+2/24292>2C2
2 242<2@2H2L2`2h2l2
2 2N2d2
2 3+3
2 3-343:3M3X3s3z3
2!2&202E2O2T2j2
2!2&2M2T2g2t2
2!2:2]2j2q2w2
2!2Y2b2q2\4e4
2!3<3}3
2!3'3,343h3o3t3|3
2"2(2s2~2
2"2/242>2H2N2[2`2
2"202^2t2
2"2'212s2
2"242?2R2\2a2v2
2"2I2S2X2}2
2"373q3~3
2#2*2l2y2
2#2.232>2C2N2S2[2o2u2z2
2#2K2b2m2z2
2#2v2}2
2#3e3
2$2(20242H2P2T2h2l2p2
2$2,242<2@2H2L2`2h2l2
2$2.2v2
2$2;2g2n2
2$2+222v2
2$21262@2j2y2~2
2%2*242E2J2T2e2j2t2
2%2,22262<2@2F2L2R2V2\2`2f2l2r2v2|2
2%2@2E2a2f2n2
2%262P2
2%272<2D2X2h2m2
2%2J2a2
2%343f3
2&2^2c2m2
2&2+20272A2\2
2&222
2&242b2x2
2&252H2]2l2
2&2r2
2&3-3D3M3V3_3h3q30474
2(2=2C2W2n2t2
2(2024282<2L2T2X2p2x2|2
2(20242H2L2P2`2d2h2|2
2(222>2E2L2{2
2(2g2l2v2
2(3/343<3
2(3-353U3r3
2)2@2t2
2)222
2)262=2D2W2b2t2{2
2*20242:2>2D2J2P2T2Z2^2d2k2q2u2{2
2*292?2D2q2v2
2*353
2,2:2h2~2
2,2h2
2,2R2
2,3;3@3H3
2.252@2|2
2.272D2K2
2/2?2E2Q2^2h2m2
2/343<3_3n3s3
2:2?2I2q2
2;2N2X2]2
2;2Q2a2k2
2;3A3L3Q3V3r3
2?2Z2v2
2?3[3e3j3
2?3H3w3
2[2q2
2\2e2
2_2i2n2
2+2:2?2G2p2
2<304d4
2<3E3`3
2>3X3
201215212420Z
202:2?2m2|2
202=2M2V2b2
20210321074027Z
20210321084927.337Z0
20210322074027Z0w0=
202f2x2
202Z2
20G0[0h0{0
210114190216Z
211202212420Z0t1
21262;2k2{2
212J2V2
2-2@2E2J2O2T2Y2^2c2h2s2z2
220411190216Z0
2'222;2F2M2
22393C3
230865+4631340
232?2S2j2y2~2
232>2D2X2c2i2
233E3
2-373
2-3R3Y3^3h3
242Q2c2
250701214655Z0|1
250706205017Z0~1
252<2C2J2U2Z2b2
252Q2d2
262H2V2b2
262M2g2
263H3V3
273L3p3
282?2Z2
282=2B2Y2g2s2
282=2G2w2
282H2M2x2
282n2
292C2H2v2
293@3
294m4
2A2T2
2A2T2Z2d2}2
2A3c3
2C2q2
2C2Y2y2
2D2N2T2d2o2
2D2Y2d2z2
2D3b3x3
2E2]2o2|2
2E3g3
2f3m3w3
2f3x3
2G2]2b2l2
2G3W3e3
2H2M2W2
2J2Z2j2w2
2J3V3b3g3q3
2k3r3
2K3Y3f3{3
2L2~2
2L2U2
2M2\2a2k2
2O3i3s3x3
2O3X3y3
2Q2^2e2l2~2
2Q2a2|2
2R3\3n3
2U2[2v2|2
2V2k2v2
3 3$3(3,3034383@3D3H3L3P3T3X3\3`3d3h3l3p3t3x3|3
3 3$3(3,3034383<3@3D3H3L3P3T3X3\3`3d3h3l3p3t3x3|3
3 3$3(3,3034383<3@3D3H3L3P3T3X3`3d3h3l3p3t3x3|3
3 3$3(3,3034383<3@3H3L3P3T3X3\3`3d3h3l3p3t3x3|3
3 3$3(3,30383<3@3D3H3L3P3T3X3\3`3d3h3l3p3t3x3|3
3 3$3(34383<3@3D3H3L3P3T3X3\3`3d3h3l3p3t3x3|3
3 3&3-3A3N3\3f3p3}3
3 3(3,3H3L3T3X3\3`3h3l3
3 3(30383<3@3H3L3P3T3X3\3`3d3h3l3p3t3x3|3
3 3*3/3a3
3 3*3/3s3z3
3 3;3@3H3
3 3'3.353<3C3J3P3
3 333I3R3a3x3
3 3h3
3 3H3l3
3 4*4/4s4
3 4~4
3 434P4c4
3!3&3.3U3p3
3!3&3L3[3k3
3!3+3X3
3!3<3b3
3!3L3
3!464A4W4s4
3"3(313D3c3|3
3"3)3?3T3g3l3v3
3"3~3
3"333D3y3
3"333i3
3"3k3z3
3"3L3\3a3k3
3"3P3
3"424I4
3"43484>4X4p4
3"4'4P4U4
3"494C4H4x4
3"4h4
3#3(373D3I3Q3
3#3*31373J3U3v3}3
3#3*3K3w3
3#3,373q3
3#3\3h3n3
3#4)434M4T4^4c4
3$3(3,303@3H3L3`3d3h3|3
3$3(3<3D3H3`3h3t3x3
3$3,3x3
3$30343<3@3D3L3T3X3`3d3|3
3$4:4H4M4U4t4
3$4?4y4~4
3$4>4O4
3$4J4j4
3$4U4
3%3)3/353;3?3E3K3Q3W3g3s3
3%3*343E3J3T3e3j3t3
3%313?3M3W3\3q3}3
3%3I3N3e3j3
3%3m3t3{3
3%3N3k3r3y3
3&3+3W3f3
3&30353o3
3&333\3x3
3&383F3
3&383F3R3
3&3I3
3(3,303@3H3L3d3h3l3p3
3(3/353H3Q3Z3a3y3
3(3-373h3
3(343@3s3
3(363+4
3(363A3O3_3e3{3
3(363B3
3(3E3[3
3(3J3e3}3
3(4\4e4v4
3(474V4[4`4
3(484B4G4
3)3.3U3a3q3u3{3
3)3\3n3
3)404
3,3<3J3x3
3,30383<3T3X3`3d3
3,31393s3
3,4\4t4~4
3.434=4s4
3.4I4p4
3/343N3S3[3
3/373C3s3z3
3/383F3L3
3/3x3
3:3A3F3M3\3b3k3r3y3
3;3_3h3
3;3O3y3
3?3c3i3
3@3~3
3@3c3
3[3a3w3~3
3+3K3`3u3
3<4E4
3>3C3c3h3y3
3>3T3
3>6C6K6m6r6
30:0D0Z0f0r0~0
303[3`3h3
303=3f3
303E3i3
303R3c3
30464<4A4P4V4k4}4
304H4R4p4
304M4
31373D3V3e3
313F3b3q3{3
313U3Z3d3
31464;4W4i4
323?3D3L3j3
323c3p3
323H3k3t3
32474A4{4
324p4u4
3-323<3f3}3
3-323E3J3]3b3
3-323J3O3d3i3q3
33383b3g3
333M3e3
334|4
3-373D3l3
3-373M3Z3g3
3-3D3I3
343>3_3|3O4X4
353:3?3F3P3^3i3
353a3f3p3
354F4P4Z4o4
363D3J3Q3\3
373U3Z3d3
383G3N3X3k3
384@4G4N4T4k4q4
393I3N3X3z3
39w\u,Q
3A3X3z3
3b3r3
3B4S4X4^4x4
3c4h4
3E3L3w3~3
3E3O3d3
3F3\3
3g4m4r4
3H4_4
3I4g4s4
3J3a3{3
3j3z3
3L3Q3Y3
3l4u4
3m3r3|3
3O3V3`3e3~3
3P3`3e3o3
3Q4a4o4
3S4X4
3SVmn
3taD=
3U4_4d4
3V3h3v3
3V4a4
3X4e4l4
4 4$4(4,40444@4D4H4L4P4T4X4\4`4d4h4l4p4t4x4|4
4 4$4(4,40444<4@4D4H4L4P4T4X4\4`4d4h4l4t4x4|4
4 4$4(4,4044484<4@4D4H4L4P4T4X4\4`4d4h4l4p4t4x4|4
4 4$4(4,4044484<4@4D4H4L4P4T4X4\4p4
4 4$4(4,40484<4@4D4H4L4P4T4X4\4`4d4h4l4p4t4x4|4
4 4$4,4044484<4@4D4H4L4P4T4X4\4`4d4h4l4p4t4x4|4
4 4(4=4o4t4
4 4(4044484<4L4T4X4l4p4t4
4 4:4p4
4 4`4
4 40464<4C4T4Y4g4s4y4
4 44484<4P4T4X4\4l4p4t4
4 4'4H4c4
4 4A4G4L4T4
4 5%5l5q5
4 565\5l5z5
4 5j5q5v5
4!4(424M4y4
4!414N4a4
4!4B4s4
4!5(52575[5b5|5
4!575w5~5
4"484M4T4`4
4"484R4`4j4o4
4"5/5<5C5I5\5g5y5
4"585B5G5l5
4#4(4-4|4
4#4*41474J4U4t4{4
4#464A4h4o4
4#4R4W4
4$4,424S4X4
4$4,4h4p4u4|4
4$4.4A4F4P4e4r4
4$4@4W4g4l4t4
4$414?4L4Z4d4n4x4
4$4X4h4
4$5:5A5K5P5w5~5
4$5>5{5
4$535=5B5j5y5
4$585s5~5
4%4)4.43494=4B4G4L4Q4i4}4
4%4*444E4J4T4e4j4t4
4%4=4B4J4_4n4s4{4
4%4A4J4g4l4
4%4F4X4f4r4
4%5*5G5L5T5
4%5D5J5W5i5x5
4&424
4&42474b4
4&484F4R4
4&4C4M4R4w4
4&4i4v4}4
4&4L4\4j4
4&4X4_4d4n4
4&5+535e5u5z5
4&585F5R5
4(40444H4L4P4h4l4t4x4|4
4(454<4C4J4]4f4r4y4
4(5-575|5
4(5-5V5[5v5{5
4)424;4D4M4
4)474e4{4
4)585=5G5
4)5L5
4*424<4I4S4X4
4*4c4
4*545K5
4,4:4h4~4
4,4044484<4@4D4H4P4X4`4h4
4,494T4Y4w4
4,4P4u4
4,51595W5\5n5s5
4,5J5}5
4,5k5
4.4=4V4e4o4t4
4.4l4s4}4
4/444>4V4`4e4}4
4/494>4_4e4
4:4X4t4
4;4@4J4_4y4~4
4;4@4J4r4w4|4
4;4Q4w4
4;5A5H5R5n5
4?4D4L4d4v4{4
4?4D4V4c4w4
4@4P4q4{4
4[4a4l4q4v4
4]4m4x4
4^4h4m4
4+404:4p4u4
4+555:5
4<5E5f5x5
4=4J4W4^4e4l4s4z4
4=5B5L5
4>4E4`4
4>5v5
404<4j4
4044484<4@4D4H4L4P4T4X4\4`4d4h4l4p4t4x4|4
40474<4D4z4
404J4o4
405@5E5O5v5
405p5u5
4090C0c0~0
41464@4l4
414E4^4
414i4
414P4g4
424?4L4R4e4q4w4Z5
42585>5C5R5X5m5
434?4
43484B4Z4
4'4,444L4Z4p4u4}4
44494W4w4
444D4\4
445N5_5
445O5v5
4-474<4Y4i4w4
4-4G4Z4b4h4y4
4'4H4O4V4i4
4-4q4
454B4
454I4
464M4\4a4k4
484<4@4D4H4X4\4`4p4x4|4
484=4E4
484H4V4
484O4V4
485?5D5L5
4a4f4p4
4A4G4L4V4
4A5Q5_5
4B4O4Y4^4
4b5l5~5
4C5M5R5x5
4D4K4U4
4D4l4
4E5L5S5
4es`O
4F4X4f4
4f5p5
4G4[4
4G4L4j4
4H4O4T4\4
4H4P4T4\4`4t4|4
4H4x4
4H5`5g5s5
4I4`4
4i4o4v4
4I4P4q4v4{4
4I4Y4^4h4
4j4q4w4~495@5
4k4q4|4
4l4u4
4O4f4{4
4p4z4
4P4Z4k4q4}4
4Q4W4l4
4R5\5n5
4-RZKD[
4S4o4x4
4T5k5
4V5g5
4Z5j5x5
5 5$5(5,5054585@5D5H5L5P5T5X5\5`5d5h5l5p5t5x5|5
5 5$5(5,5054585<5@5D5H5L5P5T5X5\5`5
5 5$5(5,5054585<5@5D5H5L5P5T5X5\5`5d5h5l5p5t5x5
5 5$5(5,5054585<5@5D5H5L5P5T5X5\5`5d5h5l5p5t5x5|5
5 5$5(5,50585<5@5D5H5L5P5T5X5\5`5d5h5l5p5t5x5|5
5 5$5(5054585<5@5D5H5L5P5T5X5\5`5h5l5p5t5x5|5
5 5%5-5g5n5s5{5
5 5(50585@5H5L5T5X5l5t5x5
5 5(50585@5H5P5X5`5h5p5x5
5 525<5A5W5i5q5v5
5 54585<5L5P5T5d5l5p5
5 5C5H5
5!5&5.5
5!5&5.5Z5a5f5n5
5!5(5-575^5i5
5!6,6H6Q6
5!60656?6
5"5,5
5"5/5k5q5|5
5"555<5c5
5"595K5k5
5"5U5\5c5
5"5W5^5c5k5
5"5Z5a5
5"6,6>6w6
5#5+5g5n5s5{5
5#535F5R5i5
5#555<5C5c5
5#5d5r5
5#5E5L5S5Z5a5j5
5#6O6i6
5$5(5,5054585<5@5D5H5L5P5T5`5d5h5l5p5t5x5|5
5$5/565
5$5+51555;5?5E5K5Q5U5[5a5g5m5
5$5+5v5
5$5O5
5$6(6,6064686<6@6D6H6L6P6T6X6\6`6d6h6l6t6x6
5$6)636:6O6\6m6r6|6
5$6>6O6
5%5*5?5Z5e5
5%5*545A5F5K5P5U5Z5_5d5i5n5s5x5}5
5%5,535I5
5%5,595R5a5k5p5
5%525@5J5U5}6
5%5Q5
5%6[6
5&5@5
5&525
5&5T5j5
5&6+6T6Y6a6
5&6-626<6R6y6
5(5,54585L5T5X5l5p5t5
5(5\5
5(5-5?5H5M5U5
5(5-555s5
5(565B5
5(5Q5^5e5l5~5
5)515;5@5U5
5)5I5N5\5n5s5{5
5)5L5V5u5
5)5Z5p5u5
5)6<6L6
5*5_5d5n5
5*5C5e5
5*5I5V5]5c5v5
5*5K5[5e5j5
5*6@6
5*616~6
5*616B6G6L6S6]6x6
5*6R6Y6v6
5,5:5?5I5`5y5
5,5<5J5x5
5,6`6f6l6q6
5.555T5`5g5
5.636=6U6
5/5L5
5/5P5Z5_5
5/6H6W6
5:5A5`5t5
5:5B5G5Q5z5
5;5_5n5u5z5
5;5l5{5
5?6Z6
5@5_5v5
5@5O5t5
5[5l5
5\5g5l5q5~5
5_5x5
5<6E6f6x6
5<6E6l6u6+7
5>5N5X5]5
505>5L5V5[5
50555=5c5
50585<5T5\5`5d5h5x5
505d5
515;5@5V5u5
515J5V5c5j5q5x5
515L5g5
516?6F6P6o6
516O6Y6^6
525;5B5V5x5
52575?5T5Y5d5i5q5
525N5Z5l5
535>5`5h5m5w5
545>5F5R5W5\5c5m5
546S6^6e6l6
5'515Y5g5q5{5
5-525:5T5o5
5'535c5h5r5
555:5?5W5\5f5v5
555:5B5
555<5C5
5'5-525l5q5y5
5'555`5
5'555c5y5
555A5j5
555c5h5r5
555C5O5]5t5
5-5A5h5|5
5'5N5
565>5C5M5c5x5}5
5-6H6Q6l6v6
5'6R6
576|6
576y6
585`5
585<5@5D5H5L5P5T5X5\5`5d5h5
585O5a5
585U5k5p5z5
595s5]6o6|6
596P6
5A5G5L5V5
5a5g5n5x5
5A6F6K6s6
5B6I6S6
5C5d5
5d6|6
5E5L5S5
5F5e5u5
5F5K5z5
5G5\5v5
5H5m5
5I5^5
5I5}5
5I5m5r5
5I6N6S6
5j5u5
5L5^5'7
5l6v6
5M5]5b5
5M6R6\6
5N5]5b5l5
5N6w6
5p5{5
5P5j5u5
5Q6[6f6s6z6
5R'{&
5s5x5~5
5S6e6
5T5^5d5t5
5T6r6
5V5i5|5
5Y5p5
6 6$6(6,6064686<6@6D6H6L6P6T6\6`6d6h6l6p6t6x6|6
6 6$6(6,6064686<6@6D6H6L6P6T6X6\6`6d6h6l6p6t6x6|6
6 6$6(6,6064686<6@6D6H6L6P6T6X6\6`6d6l6p6t6x6|6
6 6$6(6,6064686<6@6D6H6P6T6X6\6`6d6h6l6p6t6x6|6
6 6$6(6,6064686<6@6H6L6P6T6X6\6`6d6h6l6p6t6x6|6
6 6$6(6,60686<6@6D6H6L6P6T6X6\6`6d6h6l6p6t6x6|6
6 6$6(6,64686<6@6D6H6L6P6T6X6\6`6d6l6p6t6x6|6
6 6$64686<6L6P6T6d6l6p6
6 6&6;6M6
6 6(6,6@6H6L6`6d6h6x6|6
6 6(6,60646D6H6L6\6`6d6t6|6
6 6(6.646:6C6Y6b6g6o6u6z6
6 6*6E6q6x6
6 6\6{6
6 6>6Y6
6 6T6k6
6!6(62676\6c6
6!6+6A6]6
6!636=6H6O6
6!6'6,61666N6h6
6!7/7M7j7
6!7+707a7
6!7+707v7
6"6/6p6u6z6
6"676=6B6h6m6u6
6"6d6~6
6"6F6^6p6
6"6H6W6
6"73787>7X7p7
6"7e7
6#6(606G6T6
6#6)6-63676=6C6I6M6S6W6]6c6i6m6s6w6}6
6#6;6
6#6{7
6#6p6u6}6
6#6Q6g6
6#7,737d9v9
6$6)616
6$6*6?6u6
6$646D6T6
6$6Q6W6\6d6
6$7.737w7
6$7.747D7O7f7
6$7M7T7[7
6%6*656Y6i6v6
6%6;6E6J6
6%6+61656;6?6E6K6Q6U6[6_6e6k6q6u6{6
6%606B6
6%6F6Q6}6
6%6F6X6f6
6&6,6C6
6&6/6}6
6&6+6w6
6&626>6B6I6M6R6W6]6a6g6k6q6w6}6
6&62676<6C6M6_6
6&6E6
6&6G6L6V6
6&6L6
6&787F7R7
6&787F7R7^7
6&7U7b7
6(666|6
6(666B6
6(6-6g6s6
6(6H6h6
6(6J6Y6^6h6
6(7/747>7
6(7X7
6)6.6_6
6)6_6f6m6t6
6)646F6M6_6r6z6
6)6K6r6
6)6V6f6k6s6
6)7.737[7h7z7
6)7@7t7
6)70777>7E7L7S7_7
6*61686?6F6L6_6j6
6*Z*~*J(
6,636[6p6
6,636>6X6|6
6,64686<6@6P6T6X6h6l6p6t6x6|6
6,676g6l6t6
6,6o6
6,6P6V6[6g6l6
6,6w6
6,727<7S7
6.6>6L6z6
6.636;6
6.6D6
6/696>6^6p6
6/767=7F7]7x728A8\8
6:6C6`6s6
6;6B6I6P6\6z6
6;6H6O6V6]6d6k6q6
6;6L6y6
6;7@7e7j7
6@6U6o6
6[7p7
6\6c6h6p6
6\6c6j6q6
6]6s6
6^7c7m7
6_6n6s6
6+6<6M6a6s6x6
6+717<7A7F7b7o7
6<6e6y6
6=6B6G6^6
6=6Q6W6v6
6>6C6H6
6>7g7
6>7M7S7Z7
6>9b9l9q9
606<6|6
60686@6L6P6X6\6`6h6p6x6
606F6l6|6
606H6L6P6T6X6\6d6h6l6p6t6x6|6
61666@6Y6
61666>6x6
616E6L6\6c6o6
617;7K7d7
618W8^8e8c9
626K6}6
627C7H7N7h7
637>7M7f7u7
646_6
646Z6w6
656K6
657:7B7[7
6'6,6
6-626R6W6t6y6
666[6w6
666H6V6b6
667=7B7^7c7k7
667=7B7L7b7
6'676E6s6
667a7f7w7
6'686Y6a6k6p6
6'71777>7H7
6-737
676D6K6R6d6n6y6
677>7K7P7Z7{7
686\6u6
686=6B6e6
686u6
687?7D7L7u7{7
687=7E7
696_6
696_6p6
696E6s6
6A7Q7_7
6b7l7~7
6C6H6R6y6
6D6N6T6d6o6
6d6z6
6E6T6^6c6
6F6r6
6f6x6
6F7K7U7n7
6G6s6|6
6H6l:
6H6M6h6y6~6
6H6q6w6
6H6W6p6
6h7m7u7
6H7o7
6I6_6
6I6X6]6u6
6I7N7V7w7
6J6k6
6J6l6
6L6y6
6N6|6
6N7c7
6O7X7v7
6T6[6b7i7
6T7n7
6X6_6d6l6
6Y7b7
7 7$7(7,7074787<7@7D7H7L7P7T7X7\7`7d7h7l7p7t7x7
7 7$7(7,7074787<7@7D7H7L7P7T7X7\7`7d7h7l7p7t7x7|7
7 7$7(7,7074787<7@7D7H7L7T7X7\7`7d7h7l7p7t7x7|7
7 7$7(7,7074787<7@7D7L7P7T7X7\7`7d7h7l7p7t7x7|7
7 7$7(7,7074787<7D7H7L7P7T7X7\7`7d7h7l7p7t7x7|7
7 7$7,7074787@7D7H7L7T7X7\7`7h7l7p7t7|7
7 7$787@7H7P7X7\7`7d7t7x7|7
7 7(70787@7L7P7d7h7p7t7x7
7 7*747L7X7
7 7~7
7 7'7.747F7Q7Y7`7g7n7u7|7
7 8(8-878W8
7 8'8d8y8
7!7(7/767=7D7K7i7v7
7!7,7Q7_7}7
7!7.7N7U7`7
7!7/797D7
7!717B7F7L7P7V7Z7b7f7l7p7v7z7
7!737C7_7l7z7
7!8(8>8E8f8x8
7!8+808E8v8
7"7?7o7
7"7+717C7L7
7"737A7R7Z7p7x7
7"7'7,737=7O7x7
7"7'7f7m7
7"7I7S7X7o7|7
7"7t7
7"83888>8X8p8
7"8b8s8x8~8
7#7(7_7y7
7#7)7-73777=7C7I7M7S7W7]7c7i7m7s7w7}7
7#7*717
7#7+72797?7V7m7u7|7
7#7G7S7_7k7w7
7#828N8d8
7$7)7J7}7
7$7)7U7w7
7$7,707L7P7X7\7`7d7l7p7
7$7,747<7@7D7H7\7`7d7h7x7|7
7$767@7J7
7$8.838f8|8
7$8m8
7$8M8T8[8
7%757C7q7
7%838:8G8Q8V8
7%8I8|8
7&727
7&727>7i7
7&787F7
7&858:8D8
7&888F8R8
7(7,7074787<7@7D7H7L7P7T7X7\7`7d7h7l7p7t7x7|7
7(767B7q7
7(7-7
7(7-727b7l7q7
7)7.767
7)777e7{7
7)7A7K7P7z7
7)8@8t8
7*7/7H7O7r7z7
7*7\7o7t7~7
7*7E7K7_7r7
7*8?8o9v:
7*858F8M8l8
7,70747H7L7P7T7X7`7d7h7l7|7
7,717L7Q7b7o7t7|7
7,7B7
7,818;8^8r8
7,898F8M8S8f8q8
7.898>8C8P8~8
7/7i7
7/7J7
7/858@8G8L8R8[8c8p8v8}8
7/8u8z8
7:8~8
7;7y7
7@7V7|7
7\8e8z8
7\8z8
7_7d7n7
7+7;7@7H7q7v7
7+70787]7b7j7
7+757:7O7
7+7A7y7
7+7L7w7
7+818<8A8F8b8o8
7+8m8
7<7T7o7z7
7=7^7g7
7=7M7[7
7=8i8~8
7>7Z7g7l7v7
70787<7P7T7X7l7p7t7x7
707A7y7
707M7U7\7c7i7
707N7Y7{7
707s7
707x7
708q8
71767@7Y7{7
718?8
71878>8H8
718K8\8
727B7G7Q7f7
728<8N8
72898C8
728b8
73787B7
73787G7T7Y7a7
737N7S7[7
747K7o7
748]8d8
74898L8z8
748E8i8u8T9
757<7
757J7U7g7
757L7Q7[7
757P7\7u7
758;8B8L8
758D8I8Q8y8
767;7V7[7c7
767a7q7v7
767H7V7
768E8J8R8
7'7,7
7'7<7F7K7|7
7-777<7a7
777C7R7]7c7i7o7v7{7
777F7K7g7l7t7
7'7E7c7h7
7-7S7n7
7'7T7x7
787J7\7
787N7
797W7\7
797X7
79s\u)Q
79stu)Q
79sTu'Q
7A7g7v7{7
7a8f8
7B7S7X7^7x7
7c8h8m8
7d7s7x7
7D8b8x8
7E7j7z7
7f7s7z7
7F8M8R8\8r8
7G7a7l7
7G7N7S7p7u7}7
7G7R7h7
7G7v7
7G7V7
7H7U7\7c7u7
7I7~7
7I7Y7^7f7|7
7J7U7f7m7
7O8y8
7P7U7_7u7
7Q7t7
7T7^7c7~7
7W7\7f7
7w8.9C9
7W8\8d8
7Z>@B1
7Z8a8k8p8
8 8$8(8,80848<8@8D8H8L8P8T8X8\8`8d8h8l8p8t8x8|8
8 8$8(8,80848<8@8D8H8L8P8T8X8\8`8d8h8l8t8x8|8
8 8$8(8,8084888<8@8D8H8L8P8T8X8\8`8d8h8l8p8t8
8 8$8(8,8084888<8@8D8H8L8P8T8X8\8`8d8h8l8p8t8x8|8
8 8$8(8,8084888<8@8D8H8L8P8T8X8\8`8d8h8l8t8x8|8
8 8$8(8,8084888<8@8D8H8P8T8X8\8`8d8h8l8p8t8x8|8
8 8$8(8084888<8@8D8H8L8P8T8X8\8`8d8h8l8p8t8x8|8
8 8$8(84888<8@8D8H8L8P8T8X8\8`8h8l8p8t8x8|8
8 8$8(8P8T8X8\8`8l8t8x8
8 8%8@8K8U8f8
8 8%8-8x8}8
8 8&8,82888>8E8L8S8Z8a8h8o8w8
8 8:8?8G8
8 838<8I8P8a8n8{8
8 868F8]8v8
8 8'8.8A8%9/:
8 8C8P8W8]8p8y8
8 9T9c9~9
8!8&8.8h8o8t8|8
8!8(8/868=8D8K8R8e8
8!8*8b8i8s8
8!8,8o8
8!8;8A8G8T8Y8c8
8!8F8N8S8v8
8!8L8m8}8
8!9&909[9o9
8!9/9M9j9
8!9+989G9L9T9{9
8"8(8.82888<8B8H8N8R8X8\8b8h8n8r8x8|8
8"8,8P8
8"8@8W8^8o8
8"828B8R8b8r8
8"888l8
8"8H8n8s8}8
8"8T8Y8a8
8"9'919r9
8#808K8
8#828M8
8#888Z8_8
8#898Y8p8u8
8#8B8O8o8
8#8K8^8
8#9s9}9
8$8(8084888@8H8L8P8T8l8p8x8|8
8$8)8/848F8Z8x8
8$8.888f8
8$8.8v8}8
8$8+82898@8G8N8a8E9O:g;
8$848?8V8y8
8$868@8K8R8
8$8n8u8|8
8$9.949D9O9f9|9
8%858<8T8Y8^8t8~8
8%9W9g9q9v9
8&80858a8
8&80858P8h8
8&82878<8C8M8_8
8&83888B8l8
8&838j8r8w8
8&8H8W8\8r8w8
8&929B9F9L9Q9V9[9
8&959P9
8&969;9E9
8&989F9R9
8&9-9K9Z9d9i9
8&9e9w9
8&9H9e9/:j:
8(8\8
8(868
8(868B8
8(8U8_8l8
8(979H9i9q9{9
8)80878>8Y8`8g8n8u8
8)8M8\8o8
8)9.9E9Z9p9u9
8*8;8L8]8n8
8*8o8z8
8,8@8Z8g8t8z8
8,80848D8H8L8t8|8
8,818;8o8
8,838[8`8
8,9F9]9t9
8.8<8M8x8
8.8I8O8c8q8
8.8k8{8
8.939=9d9
8.949R9Z9l9
8/848}8
8:8_8
8:8J8X8
8:9A9H9^9
8;8@8H8g8
8?8e8l8s8
8@8T8n8{8
8@9J9a9
8[8e8r8
8\$ u
8\$(u
8\8f8k8
8\h,n<
8^)uY
8_8}8
8_hte
8`8f8o8
8+878C8V8f8r8y8
8+919<9A9F9b9o9
8<8]8
8<9E9]9j9
8=8D8K8
8=8Q8s8
8=9B9J9c9h9z9
8>8T8
8>9N9S9[9
808?8V8
80888@8L8P8X8\8`8h8p8x8
808d8
809G9W9\9f9|9
80H0S0z0
81878K8X8
819@9r9
82868B8F8U8Z8d8u8z8
828D8I8
828H8|8
829C9H9N9h9
838V8y8
839G9q9{9
848`8e8o8
848<8D8L8T8X8\8`8p8x8|8
848>8F8R8W8\8c8m8
84898l8x8
848K8S8Z8a8g8~8
849;9
849O9T9j9s9
849W9g9w9
859e9o9
879F9P9U9
8'8,8U8d8q8
8'838
8'8-8:8D8I8m8w8
888?8I8N8w8~8
888D8_8d8l8
8'8C8L8
8-8F8U8_8d8
8-8M8R8[8u8z8
8'8P8U8_8
8'9.989=9k9
898>8o8t8
8A)u(P
8a8g8l8t8
8a8u8z8
8A9e9j9t9
8D$(u
8D$?Q
8D$8u
8E8T8
8E8W8t8
8E9J9R9y9~9
8f:q:
8F8X8f8r8
8FXtU
8G(u:
8Ght(
8GhtB
8GhtO
8GXt(
8GXtB
8GXtd
8h8o8t8|8
8h9q9~9
8H9v9
8I9{9
8J8Z8u8
8J9Y9^9v9{9
8K8_8l8s8z8
8K8U8Z8z8
8l8u8+9
8l8y8
8M8c8
8M9t9
8N8h8
8n9u9{9
8O8T8\8
8o8t8~8
8Q9V9^9
8QVhh.
8T$ u
8T$(u
8T$`u
8T$0u
8T$Pu
8T8d8i8s8
8U9[9b9
8X!t9
8X1t9
8X8l8q8
8Y)u"S
8Y8p8
8Y9u%S
8Y9u3S
8Y9u5S
9 :9:>:H:t:
9 9$9(9,90949<9@9D9H9L9P9T9X9\9`9d9h9l9t9x9|9
9 9$9(9,9094989@9D9H9L9P9T9X9\9`9d9h9l9p9t9x9|9
9 9$9(9,9094989<9@9D9H9L9P9T9X9\9`9d9h9l9p9t9x9|9
9 9@9D9H9L9\9`9d9
9 94989@9D9X9\9`9d9h9l9p9t9x9|9
9 9-939S9Z9a9w9
9 9T9
9 9X9e9
9!9/9`9e9o9
9":8:P:a:f:p:
9"9/969<9O9X9a9h9
9"929B9R9b9r9
9"989l9
9"989T9w9
9"9'9_9o9t9~9
9"9a9
9#:(:0:H:Z:l:~:
9#9`9
9#9=9G9t9{9
9#999C9p9w9|9
9#9g9
9$:=:
9$:1:8:?:Q:\:c:j:
9$:7:=:G:`:e:o:
9$9(9<9D9H9`9h9l9t9x9
9$9^:i:
9$91989?9F9Y9o9z9
9$919F9K9P9t9
9$959:9D9U9Z9d9u9z9
9$9B9
9%:#;a;
9%:,:6:x:
9%:/:<:
9%:+:8:C:\:g:p:y:
9%9*9:9i9n9v9
9%949>9C9
9%969=9\9
9%9B9R9X9r9w9
9&:-:2:<:`:e:j:q:{:
9&9/9g9p9
9&919E9L9V9k9
9&969D9r9
9&9-939F9Q9c9j9
9&9r9
9(:.:8:Q:W:^:
9(:/:9:>:j:y:
9(9,94989<9@9D9H9L9P9T9X9\9`9d9h9l9p9t9x9|9
9(9,94989<9D9L9T9X9`9d9x9
9(9094989<9P9X9d9h9t9x9|9
9(9O9
9(9p9v9
9)90979K9`9k9}9
9)9D9P9a9f9p9
9*9[9
9*9>9b9p9
9*92979A9i9p9u9
9*94999b9
9,:;:Z:
9,:P:~:
9,9=9^9c9h9o9y9
9,90949D9L9P9|9
9,91999d9
9,9R9
9.9;9C9K9Q9f9p9
9.9Y9p9
9.u1h
9/:F:T:u:
9/9@9Q9[9`9u9
9/9>9C9a9{9
9/9u9z9
9::A:G:N:
9:9J9
9-:N:
9;:A:L:Q:V:r:
9;:D:I:Q:e:r:
9;9J9k9z9
9;9K9P9X9}9
9?:~:
9?9{9
9?9G9N9U9[9r9x9
9?9O9T9\9v9
9?9t9y9
9?9Y9
9@9E9J9Q9X9m9x9}9
9@9m9
9\$$t
9\$pu&Q
9\$Pw&Q
9\:e:
9^,t&h
9^0u;
9^9e9k9
9_<tM
9_9|9
9{4uv
9{8u#j
9{Huv
9~(s,j
9+:1:<:A:F:b:o:
9+:6:P:U:]:
9+909t9
9+9I9[9`9j9
9+9X9b9g9
9<:]:|:
9<:E:V:p:
90:6:@:O:Y:_:e:o:
90:W:_:g:m:s:y:
909=9C9I9
909E9p9{9
91969;9g9
919N9Z9f9r9
92";m
92:b:
92:b:q:
929>9b9
939a9g9l9v9
939E9N9
939P9
94:_:l:s:y:
94:R:h:
95:G:M:T:^:
959:9m9r9z9
959?9L9
959U9o9~9
96:H:V:
969H9V9b9
97:<:\:a:
989D9S9W9]9a9g9n9t9x9~9
989G9X9y9
9-929<9T9Y9c9
9-93999@9j9x9
9'969@9M9W9^9g9q9
9'969T9Y9^9
9'989Y9a9k9p9
9-999d9
9A:F:P:
9a:i:n:s:
9A:P:U:]:
9a9g9l9t9
9B:S:X:^:x:
9B9R9W9a9
9B9y9
9C:M:
9C9l9
9D$ t#R
9D$Dv1P
9D:Y:o:t:y:
9D9g9q9x9
9D9N9T9d9o9
9F:X:f:
9F9K9
9F9P9]9
9H9Z9
9I:P:
9K9R9W9
9l:{:
9L:p:
9l:u:
9L9U9
9M9T9[9b9
9P$v*
9Q9_9
9Q9Z9i9
9S:]:j:}:
9s@u,Q
9s\u)Q
9SaA7
9stu)Q
9sTu)Q
9U:j:
9V92:R:y:
9V9h9v9
9wlu&h0
9X$v.
9X,tb
9Y9l9q9{9
A ;B0t
A0;B@t
A0PRQ
AADAuthority
AADResource
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/
aborted
Accept:application/json
AcquiredDate
AcquireSRWLockExclusive
AcquireSRWLockShared
actionFilter
actionFilters
Actions
ActivateInstance(RuntimeClassAppInstallManager.Get(), &_appInstallManager)
activatibleClassId
Added header %s
addend
AddFileToCab
Adding calling package = %s for productId = %s
Adding optional package = %s
Add-On Product Infos (CV = %hs):
AddOnKeyword
addOnParent
Ah63o
ai8"Rs
AllocateAndInitializeSid
AllowImpersonation
AlreadyPurchased
AlternateIds
AlwaysPromptBeforePurchase
AnonymousRequest
ApiInvoked
api-ms-win-appmodel-runtime-l1-1-0.dll
api-ms-win-appmodel-runtime-l1-1-1.dll
api-ms-win-core-apiquery-l1-1-0.dll
api-ms-win-core-com-l1-1-0.dll
api-ms-win-core-com-l1-1-1.dll
api-ms-win-core-debug-l1-1-0.dll
api-ms-win-core-delayload-l1-1-0.dll
api-ms-win-core-delayload-l1-1-1.dll
api-ms-win-core-errorhandling-l1-1-0.dll
api-ms-win-core-file-l1-1-0.dll
api-ms-win-core-file-l1-2-0.dll
api-ms-win-core-file-l1-2-2.dll
api-ms-win-core-handle-l1-1-0.dll
api-ms-win-core-heap-l1-1-0.dll
api-ms-win-core-heap-l2-1-0.dll
api-ms-win-core-heap-obsolete-l1-1-0.dll
api-ms-win-core-kernel32-legacy-l1-1-0.dll
api-ms-win-core-libraryloader-l1-2-0.dll
api-ms-win-core-localization-l1-2-0.dll
api-ms-win-core-localization-l2-1-0.dll
api-ms-win-core-path-l1-1-0.dll
api-ms-win-core-processenvironment-l1-1-0.dll
api-ms-win-core-processthreads-l1-1-0.dll
api-ms-win-core-processthreads-l1-1-1.dll
api-ms-win-core-profile-l1-1-0.dll
api-ms-win-core-registry-l1-1-0.dll
api-ms-win-core-registry-l1-1-1.dll
api-ms-win-core-shlwapi-legacy-l1-1-0.dll
api-ms-win-core-string-l1-1-0.dll
api-ms-win-core-synch-l1-1-0.dll
api-ms-win-core-synch-l1-2-0.dll
api-ms-win-core-sysinfo-l1-1-0.dll
api-ms-win-core-threadpool-l1-2-0.dll
api-ms-win-core-threadpool-legacy-l1-1-0.dll
api-ms-win-core-timezone-l1-1-0.dll
api-ms-win-core-url-l1-1-0.dll
api-ms-win-core-util-l1-1-0.dll
api-ms-win-core-winrt-error-l1-1-0.dll
api-ms-win-core-winrt-error-l1-1-1.dll
api-ms-win-core-winrt-l1-1-0.dll
api-ms-win-core-winrt-string-l1-1-0.dll
api-ms-win-eventing-legacy-l1-1-0.dll
api-ms-win-eventing-provider-l1-1-0.dll
api-ms-win-security-base-l1-1-0.dll
api-ms-win-security-base-l1-2-0.dll
api-ms-win-security-capability-l1-1-0.dll
api-ms-win-security-sddl-l1-1-0.dll
api-ms-win-shcore-stream-l1-1-0.dll
api-ms-win-shcore-stream-winrt-l1-1-0.dll
api-ms-win-shcore-taskpool-l1-1-0.dll
ApiSetQueryApiSetPresence
AppDownloadLimit
Application
application/json
AppServiceName
AppServiceResponseStatus
args->SetMemInfo(experienceToken, modalManager)
array
Assert
Assert (%s): %s
assertVersion
AsyncActionCompletedHandler
AsyncOperationCompletedHandler`1
AsyncOperationCompletedHandler`1<Boolean>
AsyncOperationCompletedHandler`1<String>
AsyncOperationCompletedHandler`1<Windows.ApplicationModel.Store.FulfillmentResult>
AsyncOperationCompletedHandler`1<Windows.ApplicationModel.Store.LicenseManagement.LicenseSatisfactionResult>
AsyncOperationCompletedHandler`1<Windows.ApplicationModel.Store.ListingInformation>
AsyncOperationCompletedHandler`1<Windows.ApplicationModel.Store.Preview.StorePreviewPurchaseResults>
AsyncOperationCompletedHandler`1<Windows.ApplicationModel.Store.PurchaseResults>
AsyncOperationCompletedHandler`1<Windows.Foundation.Collections.IVectorView`1<Windows.ApplicationModel.Store.Preview.StorePreviewProductInfo>>
AsyncOperationCompletedHandler`1<Windows.Foundation.Collections.IVectorView`1<Windows.ApplicationModel.Store.Preview.StoreSystemFeature>>
AsyncOperationCompletedHandler`1<Windows.Foundation.Collections.IVectorView`1<Windows.ApplicationModel.Store.UnfulfilledConsumable>>
AsyncOperationCompletedHandler`1<Windows.Foundation.Collections.IVectorView`1<Windows.Services.Store.StorePackageUpdate>>
AsyncOperationCompletedHandler`1<Windows.Foundation.Collections.IVectorView`1<Windows.Services.Store.StoreQueueItem>>
AsyncOperationCompletedHandler`1<Windows.Security.Authentication.Web.Core.WebTokenRequestResult>
AsyncOperationCompletedHandler`1<Windows.Services.Store.StoreAcquireLicenseResult>
AsyncOperationCompletedHandler`1<Windows.Services.Store.StoreAppLicense>
AsyncOperationCompletedHandler`1<Windows.Services.Store.StoreCanAcquireLicenseResult>
AsyncOperationCompletedHandler`1<Windows.Services.Store.StoreConsumableResult>
AsyncOperationCompletedHandler`1<Windows.Services.Store.StoreProductPagedQueryResult>
AsyncOperationCompletedHandler`1<Windows.Services.Store.StoreProductQueryResult>
AsyncOperationCompletedHandler`1<Windows.Services.Store.StoreProductResult>
AsyncOperationCompletedHandler`1<Windows.Services.Store.StorePurchaseResult>
AsyncOperationCompletedHandler`1<Windows.Services.Store.StoreRateAndReviewResult>
AsyncOperationCompletedHandler`1<Windows.Services.Store.StoreSendRequestResult>
AsyncOperationCompletedHandler`1<Windows.Services.Store.StoreUninstallStorePackageResult>
AsyncOperationCompletedHandler`1<Windows.Storage.Streams.IRandomAccessStreamReference>
AsyncOperationCompletedHandler`1<Windows.UI.Popups.IUICommand>
AsyncOperationProgressHandler`2
AsyncOperationProgressHandler`2<Windows.Services.Store.StorePackageUpdateResult, Windows.Services.Store.StorePackageUpdateStatus>
AsyncOperationWithProgressCompletedHandler`2
AsyncOperationWithProgressCompletedHandler`2<Windows.Services.Store.StorePackageUpdateResult, Windows.Services.Store.StorePackageUpdateStatus>
Attached event handler for item %s
Attempting to set the install order to: %hs
authority
Authorization
authTicket.IsValid()
AuthToken
AuthType
Availabilities
AvailabilityId
b/+6(
B0L0^0
Bearer 
BeginOperation
beneficiaries
beneficiary
beneficiaryArray
BigId
BigIds
bNdb#
BodyBufferMaxSize
BodyForcePrompt
BodyPromptSettings
BodyTemplate
buffer != nullptr
Build Name
BuildStoreInAppInfo
BuildStoreInAppSkuInfo
BundledSkus
C*XjP
C:\data\systemdata\etw\StoreOperational.etl
C;\$ 
C3R/Z
CABINET
Cabinet.dll
callContext
CallContext:[%hs] 
callerModule
callerReturnAddressOffset
CampaignId
campaignId
Canceling redirect for 0x%08x
CapabilityCheck
Caption
Catalog failure looking for BigCatId.
CatalogServiceProxyV6::AddOnsIterator::GetNext
CatalogServiceProxyV6::AddOnsIterator::GetNextBatch
CatalogServiceProxyV6::AddOnsIterator::Initialize
CatalogServiceProxyV6::GetB2BKey
CatalogServiceProxyV6::GetCustomerCollectionsId
CatalogServiceProxyV6::GetCustomerPurchaseId
CatalogServiceProxyV6::GetProduct
CatalogServiceProxyV6::QueryCatalogForBigCatIdByPackageFullName
CatalogServiceProxyV6::QueryCatalogForBigCatIdByPackageFullNameAndType
cbStatus >= sizeof(DWORD)
cbStatus >= sizeof(WINHTTP_ASYNC_RESULT)
cchRemaining < urlLength && "We should have copied *something*"
CClientSTAHelper::AppPurchase
CClientSTAHelper::DoWork
CClientSTAHelper::GetAddOnProduct
CClientSTAHelper::GetBigCatIds
CClientSTAHelper::ProductPurchase
CClientSTAHelper::ProductPurchaseViaInAppOfferToken
CClientSTAHelper::ProductPurchaseViaInAppOfferTokenWithDisplayData
CClientSTAHelper::ProductPurchaseViaInAppOfferTokenWithResults
CHANh
CheckTokenMembershipEx
ChkAlloc(_releaseLicenseTimer)
ChkAlloc(_results)
ChkAlloc(_spCV)
ChkAlloc(_spInAppOffers)
ChkAlloc(cv.Get())
ChkAlloc(hashMap)
ChkAlloc(licenseBuffer)
ChkAlloc(m_spStoreCommerceFactory)
ChkAlloc(m_timer)
ChkAlloc(pwszUppercaseRegion)
ChkAlloc(spbResponseData)
ChkAlloc(spInAppOffer)
ChkAlloc(spInAppOffer->pInAppSkuList)
ChkAlloc(spInAppSkuInfo)
ChkAlloc(spListingInformation)
ChkAlloc(spManufacturerInfo)
ChkAlloc(spNewProductLicense)
ChkAlloc(spOperation)
ChkAlloc(spProductInfo)
ChkAlloc(spProductLicense)
ChkAlloc(spPurchaseResults)
ChkAlloc(spReceiptData)
ChkAlloc(spRequestProductPurchaseWithDisplayPropertiesInfo)
ChkAlloc(spSkuInfo = Make<StorePreviewSkuInfoServer>())
ChkAlloc(spStoreAppInfo)
ChkAlloc(spStoreAppInfo->pInAppOfferList)
ChkAlloc(spszDestBuffer = new WCHAR[cchDestBuffer])
ChkAlloc(spszFormattedPrice)
ChkAlloc(spUnfulfilledConsumable)
ChkAlloc(tag)
ChkAlloc(tokenUser)
ChkArg(_messageDialogHelper)
ChkArg(action)
ChkArg(appId)
ChkArg(authResponse)
ChkArg(balanceRemaining)
ChkArg(cchFolder)
ChkArg(ContentIdentifiers)
ChkArg(context)
ChkArg(getAppReceiptOperation)
ChkArg(getCollectionsIdOperation)
ChkArg(getProductReceiptOperation)
ChkArg(getPurchaseIdOperation)
ChkArg(hstrUri)
ChkArg(items)
ChkArg(keywords)
ChkArg(lpszURL)
ChkArg(operation)
ChkArg(package)
ChkArg(pAppId)
ChkArg(pAppInfo)
ChkArg(pAppInformation)
ChkArg(pcbResponseData)
ChkArg(pCoreWindow)
ChkArg(pCustomerCollectionsId)
ChkArg(pCustomerPurchaseId)
ChkArg(pFulfillmentResult)
ChkArg(pHandler)
ChkArg(pHresult)
ChkArg(phWndCurrent)
ChkArg(pInAppInformation)
ChkArg(pInAppOffer)
ChkArg(pInAppSkuInformation)
ChkArg(pLinkUri)
ChkArg(pMandatory)
ChkArg(pOptionalPackage)
ChkArg(ppAppLicense)
ChkArg(ppAppReceiptOperation)
ChkArg(ppbResponseData)
ChkArg(ppData)
ChkArg(ppGetCollectionsIdOperation)
ChkArg(ppGetPurchaseIdOperation)
ChkArg(ppGetUnfulfilledConsumablesOperation)
ChkArg(ppLinkUri)
ChkArg(ppListingInformation)
ChkArg(ppLoadAddOnProductInfosOperation)
ChkArg(ppLoadListingOperation)
ChkArg(ppOperation)
ChkArg(ppPackage)
ChkArg(ppProductReceiptOperation)
ChkArg(ppPurchaseResults)
ChkArg(ppQueueItems)
ChkArg(ppReportConsumableFulfillmentOperation)
ChkArg(ppRequestAppPurchaseOperation)
ChkArg(ppRequestProductPurchaseOperation)
ChkArg(ppRequestProductPurchaseWithResultsOperation)
ChkArg(ppRequestPurchaseBySkuIdOperation)
ChkArg(ppResults)
ChkArg(pProductPurchaseStatus)
ChkArg(ppStoreContext)
ChkArg(ppStoreProductQueryResult)
ChkArg(ppStoreProductResult)
ChkArg(ppszUri)
ChkArg(ppUpdateList)
ChkArg(ppUpdateStatuses)
ChkArg(ppUri)
ChkArg(ppValue)
ChkArg(pReceipt)
ChkArg(pResult)
ChkArg(pResults)
ChkArg(productIds)
ChkArg(productKinds)
ChkArg(productStoreId)
ChkArg(pStorePackageUpdateResult)
ChkArg(pStorePackageUpdates)
ChkArg(pszBuffer)
ChkArg(pToken)
ChkArg(publisherUserId)
ChkArg(pUnfulfilledList)
ChkArg(pUpdateState)
ChkArg(pUser)
ChkArg(pValue)
ChkArg(result)
ChkArg(results)
ChkArg(serviceTicket)
ChkArg(spJsonArray)
ChkArg(status)
ChkArg(storeId || packageFamilyName)
ChkArg(storeIds)
ChkArg(storePurchaseProperties)
ChkArg(trackingId)
ChkArg(transactionId)
ChkArg(uri < UriHelper::UriMax)
ChkArg(uri < UriHelperV7::UriMax)
ChkArg(uri >= 0)
ChkArg(uriBase < UriHelper::UriMax)
ChkArg(user)
ChkArg(value)
ChkBool(!!cHasCurrent, ((HRESULT)0x80070057L))
ChkBool(!_hstrUri.IsValid(), HRESULT_FROM_WIN32(1247L))
ChkBool(!hasEmbeddedNull, ((HRESULT)0x80070057L))
ChkBool(!WindowsIsStringEmpty(productId.Get()), ((HRESULT)0x80070057L))
ChkBool(!WindowsIsStringEmpty(storeId), ((HRESULT)0x80070057L))
ChkBool((_productStoreId.IsValid() || ClientProcessUtils::IsDataMartApplication()), ((HRESULT)0x803F6107L))
ChkBool((nullptr != *ppProduct), ((HRESULT)0x803F6102L))
ChkBool((nullptr != productId), ((HRESULT)0x803F6103L))
ChkBool((quantity > 0), ((HRESULT)0x80070057L))
ChkBool(*entry != nullptr, HRESULT_FROM_WIN32(1168L))
ChkBool(*last == ':', ((HRESULT)0x80070057L))
ChkBool(_hstrUri.IsValid(), HRESULT_FROM_WIN32(1003L))
ChkBool(_productStoreId.IsValid(), ((HRESULT)0x803F6107L))
ChkBool(_productStoreId.IsValid(), ((HRESULT)0x803F6108L))
ChkBool(_spNextQueryOperation != nullptr, ((HRESULT)0x8000FFFFL))
ChkBool(_spNextQueryOperation == nullptr, ((HRESULT)0x8000FFFFL))
ChkBool(_spNextQueryOperation == nullptr, ((HRESULT)0x803F6107L))
ChkBool(_storeContext == nullptr, ((HRESULT)0x8000FFFFL))
ChkBool(asterisk == nullptr, ((HRESULT)0x80070057L))
ChkBool(callingProcessId == hwndProcessId, ((HRESULT)0x80070005L))
ChkBool(cchCurrency != 0, LR2HR(GetLastError()))
ChkBool(colon == nullptr, ((HRESULT)0x80070057L))
ChkBool(commandId == OkCommandId, ((HRESULT)0x80004004L))
ChkBool(filterCount < 2, ((HRESULT)0x80070057L))
ChkBool(filterSize < 2, ((HRESULT)0x80070057L))
ChkBool(found, ((HRESULT)0x80070005L))
ChkBool(found, ((HRESULT)0x80070057L))
ChkBool(hasCurrent, ((HRESULT)0x80070057L))
ChkBool(hstrProductId.IsValid() && hstrSkuId.IsValid() && hstrAvailabilityId.IsValid(), (_apiType == ClientApiType_AppPurchase) ? ((HRESULT)0x803F6101L) : ((HRESULT)0x803F6102L))
ChkBool(hwnd != 0, HRESULT_FROM_WIN32(1168L))
ChkBool(itemCount != 0, ((HRESULT)0x803F6107L))
ChkBool(last == pchEnd, ((HRESULT)0x80070057L))
ChkBool(length >= (count * 2), ((HRESULT)0x80070057L))
ChkBool(LoadStringW(g_hinst, uId, szUnformattedString, (sizeof(*RtlpNumberOf(szUnformattedString)))), HRESULT_FROM_WIN32(GetLastError()))
ChkBool(maxItemsToRetrieve > 0, ((HRESULT)0x80070057L))
ChkBool(nullptr != _storeContext, ((HRESULT)0x803F6107L))
ChkBool(packageCount > 0, ((HRESULT)0x80004005L))
ChkBool(packageFamilyName.IsValid(), ((HRESULT)0x803F6107L))
ChkBool(packageFamilyNameToUninstall.IsValid(), ((HRESULT)0x803F6107L))
ChkBool(pCallerData != nullptr, ((HRESULT)0x803F610BL))
ChkBool(pCallerData != nullptr, HRESULT_FROM_WIN32(1400L))
ChkBool(pCommand != nullptr, ((HRESULT)0x80004004L))
ChkBool(pProductIdCache != nullptr, ((HRESULT)0x803F6107L))
ChkBool(productCount > 0, HRESULT_FROM_WIN32(1168L))
ChkBool(productId.IsValid(), ((HRESULT)0x80070057L))
ChkBool(productKind.IsValid(), HRESULT_FROM_WIN32(1168L))
ChkBool(productsLength > 0, HRESULT_FROM_WIN32(1168L))
ChkBool(provider == AccountProviderType::MSA, ((HRESULT)0x8000FFFFL))
ChkBool(pszCloseBrace != 0, ((HRESULT)0x80004005L))
ChkBool(size <= 3, ((HRESULT)0x80070057L))
ChkBool(size == 1, ((HRESULT)0x803F6107L))
ChkBool(sizeResult == 1, ((HRESULT)0x803F6107L))
ChkBool(sizeResult > 0, ((HRESULT)0x803F6107L))
ChkBool(spLicenseInfoServer != nullptr, ((HRESULT)0x803F6107L))
ChkBool(spLicenseInstance != nullptr, ((HRESULT)0x803F6107L))
ChkBool(StringHelpers::AreEqualCaseInsensitive(productKind.Get(), ConsumableKind.Get()) || StringHelpers::AreEqualCaseInsensitive(productKind.Get(), UnmanagedConsumableKind.Get()), HRESULT_FROM_WIN32(1168L))
ChkBool(tagComponentsSize != 0, ((HRESULT)0x80070057L))
ChkBool(tagComponentsSize <= 3, ((HRESULT)0x80070057L))
ChkBool(ticketCount == 1, ((HRESULT)0x803F6107L))
ChkBool(uReceiptNodeChildrenLength > 0, HRESULT_FROM_WIN32(1168L))
ChkBool(uReceiptNodesLength > 0, HRESULT_FROM_WIN32(1168L))
ChkBool(wuResults != nullptr, ((HRESULT)0x80004003L))
ChkHr(((HRESULT) (((unsigned long)(1)<<31) | ((unsigned long)(25)<<16) | ((unsigned long)(httpRequest.GetRequestStatusCode()))) ))
ChkHr(((HRESULT) ((RtlQueryWnfStateData( &initialChangeStamp, WNF_LM_CONTENT_LICENSE_CHANGED, _WnfLicenseStateChangeCallback, nullptr, nullptr)) | 0x10000000)))
ChkHr(((HRESULT) ((RtlQueryWnfStateData( &initialChangeStamp, WNF_LM_CONTENT_LICENSE_CHANGED, WnfLicenseStateChangeCallback, nullptr, nullptr)) | 0x10000000)))
ChkHr(((HRESULT) ((RtlQueryWnfStateData( &initialChangeStamp, WNF_LM_OPTIONAL_PACKAGE_SUSPEND_REQUIRED, OnEventCallback, nullptr , nullptr )) | 0x10000000)))
ChkHr(((HRESULT) ((RtlSubscribeWnfStateChangeNotification( &_subscription, WNF_LM_OPTIONAL_PACKAGE_SUSPEND_REQUIRED, initialChangeStamp, OnEventCallback, reinterpret_cast<PVOID>(this), nullptr , 0 , 0x00000004UL)) | 0x10000000)))
ChkHr(((HRESULT) ((RtlSubscribeWnfStateChangeNotification( &_wnfLicenseChanged, WNF_LM_CONTENT_LICENSE_CHANGED, initialChangeStamp, _WnfLicenseStateChangeCallback, context, nullptr, 0, 0x00000001UL)) | 0x10000000)))
ChkHr(((HRESULT) ((RtlSubscribeWnfStateChangeNotification( &m_wnfLicenseChanged, WNF_LM_CONTENT_LICENSE_CHANGED, initialChangeStamp, WnfLicenseStateChangeCallback, context, nullptr, 0, 0x00000001UL)) | 0x10000000)))
ChkHr(((HRESULT)0x8000000BL))
ChkHr(((HRESULT)0x80004001L))
ChkHr(((HRESULT)0x80004005L))
ChkHr(((HRESULT)0x80070005L))
ChkHr(((HRESULT)0x8007000EL))
ChkHr(((HRESULT)0x80070057L))
ChkHr(((HRESULT)0x80190194L))
ChkHr(((HRESULT)0x80270254L))
ChkHr(((HRESULT)0x803F6101L))
ChkHr(((HRESULT)0x803F6103L))
ChkHr(((HRESULT)0x803F6107L))
ChkHr(((HRESULT)0x803F6108L))
ChkHr(((HRESULT)0x803F6109L))
ChkHr(((HRESULT)0x803F610BL))
ChkHr(((HRESULT)0x803F610CL))
ChkHr(((HRESULT)0x803F610DL))
ChkHr(((HRESULT)0x803F610EL))
ChkHr(((HRESULT)0x83750007L))
ChkHr((AgileHashMap<HSTRING, IStorePackageLicenseLostCallback*>::Make(&_pOptionalPfnToCallbackMap)))
ChkHr((AgileHashMap<HSTRING, ProductListing*,StringUpperCaseHash, StringCaseInsensitiveEquals>::Make(&_spInAppOffers)))
ChkHr((hrGetProduct == ((HRESULT)0x80190194L)) ? ((HRESULT)0x803F6101L) : hrGetProduct)
ChkHr((MakeAndInitialize<LicenseInformationServer, LicenseInformationServer>(spLicenseInformationServerSingleton.GetAddressOf())))
ChkHr((static_cast<HRESULT>(__hr)))
ChkHr(::ActivateInstance( StoreContextServerClassId.Get(), storeContextServer.GetAddressOf()))
ChkHr(::ActivateInstance(StoreContextServerClassId.Get(), storeContextServer.GetAddressOf()))
ChkHr(::ActivateInstance(StringReference(RuntimeClass_Windows_Internal_Shell_ModalExperience_ModalExperienceOptions).Get(), &modalExperienceOptions))
ChkHr(::ParseReceiptResponse(pbResponse, cbResponse, &tmpReceiptData, &cbReceiptData))
ChkHr(::WindowsDuplicateString(_collectionsId.Get(), pCustomerCollectionsId))
ChkHr(::WindowsDuplicateString(_extendedJsonData.Get(), pValue))
ChkHr(::WindowsDuplicateString(_purchaseId.Get(), pCustomerPurchaseId))
ChkHr(::WindowsDuplicateString(_skuStoreId.Get(), pValue))
ChkHr(::WindowsDuplicateString(_storeId.Get(), pValue))
ChkHr(::WindowsDuplicateString(productId, storeId))
ChkHr(::WindowsDuplicateString(productIdSkuId.Get(), storeId))
ChkHr(::WindowsDuplicateString(publisherUserId, &publisherUserIdCopy))
ChkHr(::WindowsDuplicateString(serviceTicket, &serviceTicketCopy))
ChkHr(::WindowsStringHasEmbeddedNull(inputString, &hasEmbeddedNull))
ChkHr(::WindowsSubstringWithSpecifiedLength( str, count, length - (count * 2), resultString))
ChkHr(::WindowsTrimStringEnd(trimmedStart.Get(), Space.Get(), trimmedString.GetAddressOf()))
ChkHr(::WindowsTrimStringStart(timeSpanString, Space.Get(), trimmedStart.GetAddressOf()))
ChkHr(__winrt_hr__)
ChkHr(_addOnLicenses->get_Size(&count))
ChkHr(_addOnLicenses->GetAt(i, license.GetAddressOf()))
ChkHr(_appInstallItem.As(&item2))
ChkHr(_appInstallItem->add_Completed(completedHandler.Get(), &_completedToken))
ChkHr(_appInstallItem->add_StatusChanged(statusChangedHandler.Get(), &_statusChangedToken))
ChkHr(_appInstallItem->get_InstallType(&installType))
ChkHr(_appInstallItem->get_PackageFamilyName(packageFamilyName.GetAddressOf()))
ChkHr(_appInstallItem->get_PackageFamilyName(value))
ChkHr(_appInstallItem->get_ProductId(value))
ChkHr(_appInstallItem->GetCurrentStatus(&appInstallStatus))
ChkHr(_appInstallItem->GetCurrentStatus(&status))
ChkHr(_appName.Set(appName))
ChkHr(_AttachAllEventHandlers(_queueItems.Get()))
ChkHr(_availabilities.As(&inspectableProducts))
ChkHr(_availabilities->First(&availabilityIter))
ChkHr(_availabilities->First(&iter))
ChkHr(_availabilities->get_Size(&size))
ChkHr(_availabilities->GetAt(index, &currentAvailability))
ChkHr(_availabilities->RemoveAt(bestIndex))
ChkHr(_bigIds->First(&spIter))
ChkHr(_bigIds->get_Size(&size))
ChkHr(_BuildBeneficiaryArrayJSON(user, accountProviderType, promptType, hwnd, forceRetailSandbox, jsonBeneficiaries))
ChkHr(_BuildBeneficiaryJSON( tickets[index].m_providerType, tickets[index].m_ticket.Get(), tickets[index].m_webAccountId.Get(), jsonBeneficiary))
ChkHr(_BuildBeneficiaryJSON(providerType, authTicket.Get(), DefaultWebAccountIdString.Get(), jsonBeneficiary))
ChkHr(_BuildGoldenBeneficiaryArrayJSON(user, jsonBeneficiaries))
ChkHr(_BuildGoldenBeneficiaryJSON(user, beneficiary))
ChkHr(_BuildGoldenBeneficiaryJSON(user, jsonBeneficiary))
ChkHr(_BuildModalExperienceOptions(modalExperienceOptions, _size))
ChkHr(_bundledSkuIds->GetView(ppValue))
ChkHr(_cachedLicenseJson.CopyTo(result))
ChkHr(_ChangeStatusStringToEnumValue())
ChkHr(_CheckOptionalPackageIsValid(optionalPackageName, _user))
ChkHr(_CheckOptionalPackageIsValid(packageIdentifier, _user))
ChkHr(_ClearEventHandler(item))
ChkHr(_ClearEventHandler(item.Get()))
ChkHr(_collectionData.CopyTo(ppValue))
ChkHr(_collectionData->First(&iter))
ChkHr(_completedEvent.Add(handler, token))
ChkHr(_completedEvent.InvokeAll(this, args.Get()))
ChkHr(_completedEvent.Remove(token))
ChkHr(_ConstructRequestBody( jsonBody, _user, static_cast<WinStoreAuth::AccountProviderType>(requestParams.userTokenTypes), userAuthPromptType, hwnd, requestParams.forceRetailSandbox, jsonInternalParameters))
ChkHr(_ConstructRequestBody(childObject, user, accountProviderType, promptType, hwnd, forceRetailSandbox, jsonParameters))
ChkHr(_ConstructRequestBody(jsonElement, user, accountProviderType, promptType, hwnd, forceRetailSandbox, jsonParameters))
ChkHr(_contextString.CopyTo(value))
ChkHr(_continuationToken.Set(continuationToken))
ChkHr(_ConvertAppInstallState(appInstallState, isStaged, isDownloaded, &state, &extendedState))
ChkHr(_ConvertDuration(_billingPeriodUnitType.Get(), _billingPeriod, &_billingPeriodUnit))
ChkHr(_ConvertDuration(_trialPeriodUnitType.Get(), _trialPeriod, &_trialPeriodUnit))
ChkHr(_ConvertStoreQueueState(extendedState, &packageStatus.PackageUpdateState))
ChkHr(_CreatePurchaseResultsInformation( productPurchaseStatus, &_spPurchaseResults))
ChkHr(_CreatePurchaseResultsInformation( productPurchaseStatus, transactionId, receipt.Get(), &_spPurchaseResults))
ChkHr(_CreateUnfulfilledConsumable( inAppOfferTokenString.Get(), transactionId, offerIdString.Get(), &consumable))
ChkHr(_currentBatch->GetObjectAt(_currentItemIndex, ppJsonIAP))
ChkHr(_cv.Set(cv))
ChkHr(_data->get_Size(&dataSize))
ChkHr(_data->GetAt(index, data.GetAddressOf()))
ChkHr(_extendedJsonData.Set(extendedJsonData))
ChkHr(_FillTheRequestWithRequiredParameters())
ChkHr(_FilterProductsJson(productJsonString, CatalogRelationshipType::AddOnParent, _productStoreId.Get()))
ChkHr(_FilterProductsJson(productJsonString, relationshipFilter, _productStoreId.Get()))
ChkHr(_FindUriWithIndex(requestIndex, spJsonUriArray, entry))
ChkHr(_GetCurrencyFormatter(currencyCode, userLocale.Get(), region, &spNumberFormatter))
ChkHr(_GetPackageLocalAppDataPath(szPackageFamilyName, pszFolder, cchFolder))
ChkHr(_GetRawStringFromOS(uri, data.GetAddressOf()))
ChkHr(_hresultOfOperation)
ChkHr(_hstrCurrencyCode.CopyTo(pValue))
ChkHr(_hstrCurrencyCode.Set(pAppInfo->PricingInfo.CurrencyCode))
ChkHr(_hstrCurrencyCode.Set(pInAppOffer->PricingInfo.CurrencyCode))
ChkHr(_hstrCurrencyCode.Set(pInAppSkuInformation->PricingInfo.CurrencyCode))
ChkHr(_hstrCurrentMarket.CopyTo(pValue))
ChkHr(_hstrCurrentMarket.Set(pAppInfo->Market))
ChkHr(_hstrCustomDeveloperData.CopyTo(pValue))
ChkHr(_hstrDescription.CopyTo(hstrValue))
ChkHr(_hstrDescription.CopyTo(pValue))
ChkHr(_hstrDescription.Set(hstrValue))
ChkHr(_hstrDescription.Set(pAppInfo->Description))
ChkHr(_hstrDescription.Set(pInAppInformation->Description))
ChkHr(_hstrDescription.Set(pInAppOffer->Description))
ChkHr(_hstrDescription.Set(pInAppSkuInformation->Description))
ChkHr(_hstrDevOfferId.Set(devOfferId))
ChkHr(_hstrExtendedData.CopyTo(pValue))
ChkHr(_hstrFormattedBasePrice.CopyTo(pValue))
ChkHr(_hstrFormattedListPrice.CopyTo(pValue))
ChkHr(_hstrFormattedPrice.CopyTo(pValue))
ChkHr(_hstrHardwareManufacturerId.CopyTo(value))
ChkHr(_hstrHardwareManufacturerId.Set(value))
ChkHr(_hstrImageUri.Set(pInAppOffer->ImageUri))
ChkHr(_hstrInAppOfferToken.CopyTo(pValue))
ChkHr(_hstrInAppOfferToken.Set(inAppOfferToken))
ChkHr(_hstrInAppOfferToken.Set(pInAppOffer->InAppOfferToken))
ChkHr(_hstrLocale.Set(pAppInfo->Locale))
ChkHr(_hstrManufacturerName.CopyTo(value))
ChkHr(_hstrManufacturerName.Set(value))
ChkHr(_hstrModelName.CopyTo(value))
ChkHr(_hstrModelName.Set(value))
ChkHr(_hstrName.CopyTo(hstrValue))
ChkHr(_hstrName.CopyTo(pValue))
ChkHr(_hstrName.Set(hstrName))
ChkHr(_hstrName.Set(hstrValue))
ChkHr(_hstrName.Set(pAppInfo->Name))
ChkHr(_hstrName.Set(pInAppOffer->Name))
ChkHr(_hstrOfferId.CopyTo(hstrOfferId))
ChkHr(_hstrOfferId.CopyTo(offerId))
ChkHr(_hstrOfferId.Set(offerId))
ChkHr(_hstrProductId.CopyTo(hstrProductId))
ChkHr(_hstrProductId.CopyTo(pValue))
ChkHr(_hstrProductId.Set(pInAppInformation->InAppProductId))
ChkHr(_hstrProductId.Set(productId))
ChkHr(_hstrProductTag.CopyTo(pValue))
ChkHr(_hstrProductTag.Set(pInAppOffer->ProductTag))
ChkHr(_hstrProductType.CopyTo(pValue))
ChkHr(_hstrProductType.Set(L"Consumable"))
ChkHr(_hstrProductType.Set(L"Durable"))
ChkHr(_hstrProductType.Set(L"Unknown"))
ChkHr(_hstrReceipt.CopyTo(pValue))
ChkHr(_hstrReceiptXml.CopyTo(hstrReceiptXml))
ChkHr(_hstrReceiptXml.Set(receiptXml))
ChkHr(_hstrSkuId.CopyTo(pValue))
ChkHr(_hstrSkuId.Set(pInAppSkuInformation->SkuId))
ChkHr(_hstrSkuId.Set(skuId))
ChkHr(_hstrSkuType.CopyTo(pValue))
ChkHr(_hstrSkuType.Set(pInAppSkuInformation->SkuType))
ChkHr(_hstrStoreContentModifierId.CopyTo(value))
ChkHr(_hstrStoreContentModifierId.Set(value))
ChkHr(_hstrTitle.CopyTo(pValue))
ChkHr(_hstrTitle.Set(pInAppInformation->Name))
ChkHr(_hstrTitle.Set(pInAppSkuInformation->Title))
ChkHr(_Initialize( packageFullName, "StoreContext.RequestDownloadAndInstallStorePackagesAsync", storeIds, nullptr , nullptr , true , true , false , pszCV, pMessageDialogHelper, asyncId))
ChkHr(_Initialize( packageFullName, pszOperationName, nullptr , nullptr , pStorePackageUpdates, install, shouldPromptForConsent, totallySilent, pszCV, pMessageDialogHelper, asyncId))
ChkHr(_Initialize( packageFullName, pszOperationName, storeIds, storePackageInstallOptions, nullptr , true , shouldPromptForConsent, totallySilent, pszCV, pMessageDialogHelper, asyncId))
ChkHr(_IsNetworkMetered(&onMeteredNetwork))
ChkHr(_jsonData.Set(jsonData))
ChkHr(_jsonResponse.CopyTo(pValue))
ChkHr(_jsonResponse.Set(LR"({"status": "aborted"})"))
ChkHr(_jsonValue.SetReference(json))
ChkHr(_keywords->Append(keyword.Get()))
ChkHr(_keywords->GetView(&spVectorView))
ChkHr(_licensableSku.Set(licensableSku))
ChkHr(_LoadLicenseJson(spLicenseInstance))
ChkHr(_MakeDefaultLicenseResponse(package))
ChkHr(_mapView.CopyTo(ppValue))
ChkHr(_messageDialogFactory->CreateWithTitle(content.Get(), title.Get(), &spMessageDialog))
ChkHr(_messageDialogHelper.As(&messageDialogHelper))
ChkHr(_newOrder->Append(productId.Get()))
ChkHr(_offlineLicensesChangedEvent.Add(pHandler, pToken))
ChkHr(_offlineLicensesChangedEvent.Remove(token))
ChkHr(_optionalPackageLicenseWatcher.AddOptionalPackageToWatch(optionalPackageName, pOptionalPackageLicense))
ChkHr(_optionalPackageLicenseWatcher.Initialize())
ChkHr(_optionalPackageLicenseWatcher.RemoveOptionalPackageToWatch(optionalPackageName))
ChkHr(_package.CopyTo(ppPackage))
ChkHr(_package->get_Id(packageId.GetAddressOf()))
ChkHr(_packageFamilyName.Set(packageFamilyName))
ChkHr(_packageFamilyNameToUninstall.Set(packageFamilyNameToUninstall))
ChkHr(_packageFullName.Set(packageFullName))
ChkHr(_packageFullName.Set(PFN))
ChkHr(_packageIdentifier.Set(packageIdentifier))
ChkHr(_ParseGetProductsByKinds(hydrateResult.Get(), products.GetAddressOf()))
ChkHr(_ParseGetProductsByKinds(productJsonString.Get(), products.GetAddressOf()))
ChkHr(_PFN.Set(PFN))
ChkHr(_pOptionalPfnToCallbackMap->HasKey(optionalPackageFullName, &foundOptionalPackage))
ChkHr(_pOptionalPfnToCallbackMap->Insert(optionalPackageFullName, storePackageLicenseCallback, &replaced))
ChkHr(_pOptionalPfnToCallbackMap->Remove(optionalPackageFullName))
ChkHr(_pPackage->get_Id(packageId.GetAddressOf()))
ChkHr(_price.CopyTo(ppValue))
ChkHr(_productId.Set(productId))
ChkHr(_productId.Set(value))
ChkHr(_productIdTable->HasKey(inAppOfferToken, &hasKey))
ChkHr(_productIdTable->Insert(inAppOfferToken, productId, &dontCare))
ChkHr(_productKinds.As(&productKinds))
ChkHr(_products.As(&inspectableProducts))
ChkHr(_products.CopyTo(spProducts.GetAddressOf()))
ChkHr(_products->get_Size(&count))
ChkHr(_products->get_Size(&countOfProducts))
ChkHr(_products->GetAt(0, &_product))
ChkHr(_productStoreId.Set(productStoreId))
ChkHr(_pStoreContextServer.As(&storeContextServer2))
ChkHr(_publisherUserId.Set(publisherUserId))
ChkHr(_queueItems.CopyTo(result))
ChkHr(_queueItems->get_Size(&size))
ChkHr(_RefreshAllStatusesAndOverallState(_queueItems.Get(), StorePackageUpdateState_Canceled, true ))
ChkHr(_RefreshAllStatusesAndOverallState(_queueItems.Get(), StorePackageUpdateState_Completed, false ))
ChkHr(_RefreshAllStatusesAndOverallState(_queueItems.Get(), StorePackageUpdateState_Completed, true ))
ChkHr(_RefreshAllStatusesAndOverallState(_queueItems.Get(), StorePackageUpdateState_OtherError, false ))
ChkHr(_RefreshAllStatusesAndOverallState(_queueItems.Get(), StorePackageUpdateState_Pending, false ))
ChkHr(_RefreshStatus(item, true ))
ChkHr(_RefreshStatus(item.Get(), raiseEvent))
ChkHr(_request.Set(jsonRequest))
ChkHr(_request->SetNamedValue(HStringReference(g_DoNotLogTheseValues[i]).Get(), nullptr))
ChkHr(_RequestDownloadAndInstallStorePackagesWithInstallOptionsAsync( cv, __FSTREXP __FUNCTION__  , storeIds, false, false, nullptr, operation))
ChkHr(_RequestDownloadAndInstallStorePackagesWithInstallOptionsAsync(cv, __FSTREXP __FUNCTION__  , pStoreIds, true , false , nullptr , ppOperation))
ChkHr(_RequestDownloadAndInstallStorePackagesWithInstallOptionsAsync(cv, __FSTREXP __FUNCTION__  , storeIds, true , false , storePackageInstallOptions, operation))
ChkHr(_RequestPurchase( pCallerData, nullptr, nullptr, body.Get(), cv.GetHStringReference().Get(), InvokedApi_SendStoreRequest.Get(), jsonResponse))
ChkHr(_response.Set(jsonInitialResponse))
ChkHr(_response.Set(response))
ChkHr(_results.CopyTo(ppResults))
ChkHr(_results.CopyTo(ppStoreProductQueryResult))
ChkHr(_RetrieveHWNDFromCallerData(pCallerData, &hwnd))
ChkHr(_serviceTicket.Set(serviceTicket))
ChkHr(_ShouldFilterByRelationship(product, relationshipType, parentProductId, &remove))
ChkHr(_skuId.CopyTo(pValue))
ChkHr(_skuId.Set(skuId))
ChkHr(_skus.As(&inspectableProducts))
ChkHr(_skus->First(&iter))
ChkHr(_skus->get_Size(&size))
ChkHr(_skus->GetAt(i, &sku))
ChkHr(_skus->GetAt(index, &currentSku))
ChkHr(_skus->RemoveAt(bestIndex))
ChkHr(_SortAvailabilities())
ChkHr(_SortSkus())
ChkHr(_spAppLicense.CopyTo(ppResults))
ChkHr(_spDisplayProperties->get_Name(nameOverride.GetAddressOf()))
ChkHr(_spImageUri.CopyTo(pValue))
ChkHr(_spInAppOffers->GetView(ppValue))
ChkHr(_spInAppOffers->Insert( pInAppOffer->InAppOfferToken, spProductListing.Get(), &replaced ))
ChkHr(_spLicenseInformationInternal.CopyTo(__uuidof(**(value)), IID_PPV_ARGS_Helper(value)))
ChkHr(_spLicenseInformationInternal->GetProductId(_appCatalogId.GetAddressOf()))
ChkHr(_spLicenseManager.As(&appLicenseManager2))
ChkHr(_spNextQueryOperation.CopyTo(spNextPagedOperation.GetAddressOf()))
ChkHr(_spNextQueryOperation->GetNextAsync( productJson.GetAddressOf(), nextOp.GetAddressOf()))
ChkHr(_spNextQueryOperation->GetNextAsync( productJsonString.GetAddressOf(), nextOp.GetAddressOf()))
ChkHr(_spNextQueryOperation->HasMorePages(&hasMorePages))
ChkHr(_spNextQueryOperation->HasMorePages(hasMorePages))
ChkHr(_spQueueItems.CopyTo(ppQueueItems))
ChkHr(_spStoreCommerceServer->GetExclusiveLockForProduct(productId.Get(), &pendingPurchaseOperationForProduct))
ChkHr(_spStoreContextServer->CaptureStoreContextCallerData(reinterpret_cast<UINT64>(hwnd), &callerData))
ChkHr(_spUnfulfilledList->GetView(pUnfulfilledList))
ChkHr(_spUri.CopyTo(ppValue))
ChkHr(_statusChangedEvent.Add(handler, token))
ChkHr(_statusChangedEvent.InvokeAll(this, nullptr))
ChkHr(_statusChangedEvent.Remove(token))
ChkHr(_statusChangedTokenMap->get_Size(&size))
ChkHr(_statusChangedTokenMap->HasKey(packageFamilyName.Get(), &hasKey))
ChkHr(_statusChangedTokenMap->Insert(packageFamilyName.Get(), regToken, &replaced))
ChkHr(_statusChangedTokenMap->Lookup(packageFamilyName.Get(), &regToken))
ChkHr(_statusChangedTokenMap->Remove(packageFamilyName.Get()))
ChkHr(_storeContext->AssociateWithStoreContext(inspectableProducts))
ChkHr(_storeContext->GetIsAnySkuInstalledAsync(_storeId.Get(), ppOperation))
ChkHr(_storeContext->GetIsAnySkuInstalledAsync(storeId.Get(), ppOperation))
ChkHr(_storeContext->RequestPurchaseAsync(storeId.Get(), ppOperation))
ChkHr(_storeContext->RequestPurchaseWithPurchasePropertiesAsync(storeId.Get(), storePurchaseProperties, ppOperation))
ChkHr(_storeContextServer->SendStoreRequestWithUris( nullptr, UriHelperV7::InternalStoreEndpointExtensionUrls, UriHelperV7::GetProductsByFamilyFromParent, _spCV, jsonCatalogParameters.Get(), nullptr, productJsonString.GetAddressOf()))
ChkHr(_storeContextServer->SendStoreRequestWithUris( nullptr, UriHelperV7::InternalStoreEndpointExtensionUrls, UriHelperV7::GetProductsNoParent, _spCV, jsonCatalogParameters.Get(), &statusCode, jsonCatalogString.GetAddressOf()))
ChkHr(_storeContextServer->SendStoreRequestWithUris( nullptr, UriHelperV7::InternalStoreEndpointExtensionUrls, UriHelperV7::GetUserCollectionForParentProductByFamily, _spCV, jsonCollectionsParameters.Get(), &statusCode, jsonCollectionsString.GetAddressOf()))
ChkHr(_storeId.Set(storeId))
ChkHr(_storeIds.As(&storeIds))
ChkHr(_storePackageUpdates.As(&updates))
ChkHr(_storeQueueItem->get_IsMandatory(&_mandatory))
ChkHr(_subscriptionInfo.CopyTo(ppValue))
ChkHr(_updateStatusMap->First(&iterator))
ChkHr(_updateStatusMap->Insert(packageFamilyName.Get(), newStatus, &replaced))
ChkHr(_uriRuntimeClass.CopyTo(ppValue))
ChkHr(actionFilters->get_Size(&filterSize))
ChkHr(actionFilters->GetAt(0, actionFilter.GetAddressOf()))
ChkHr(ActivateInstance( HStringReference(RuntimeClass_Windows_Management_Deployment_PackageManager).Get(), &spPackageManager))
ChkHr(ActivateInstance(AppServiceConnectionRef.Get(), &pdConnection))
ChkHr(ActivateInstance(HStringReference(RuntimeClass_Windows_Data_Xml_Dom_XmlDocument).Get(), &spXMLResponse))
ChkHr(ActivateInstance(HStringReference(RuntimeClass_Windows_Web_Http_Filters_HttpBaseProtocolFilter).Get(), &filter))
ChkHr(ActivateInstance(RuntimeClassAppInstallOptions.Get(), &appInstallOptions))
ChkHr(ActivateInstance(RuntimeClassWindowsManagementDeploymentPackageManager.Get(), &packageManager))
ChkHr(ActivateInstance(RuntimeClassWindowsXboxSystemInternalDeploymentAvailablePackageProvider.Get(), &packageProvider))
ChkHr(ActivateInstance(ValueSetRef.Get(), &message))
ChkHr(activationFactory.As(&uriFactory))
ChkHr(AddCommands(hr, spMessageDialog.Get()))
ChkHr(AddItem(inAppOfferToken.Get(), productId.Get()))
ChkHr(addOns.GetNext(&jsonIAP))
ChkHr(addOns.GetNext(&spProduct))
ChkHr(addOns.Initialize(_spStoreCommerceServer.Get(), _pCV))
ChkHr(addOns.Initialize(pStoreCommerceServer, pCV))
ChkHr(AgileVector<HSTRING>::Make(&_actionFilters))
ChkHr(AgileVector<HSTRING>::Make(&_keywords))
ChkHr(AgileVector<HSTRING>::Make(&_newOrder))
ChkHr(AgileVector<HSTRING>::Make(&contentIds))
ChkHr(AgileVector<HSTRING>::Make(&foundProductIds))
ChkHr(AgileVector<HSTRING>::Make(&keyIds))
ChkHr(AgileVector<HSTRING>::Make(&outputs))
ChkHr(AgileVector<HSTRING>::Make(&productIdsInAppInstallQueue))
ChkHr(AgileVector<HSTRING>::Make(&pVector))
ChkHr(AgileVector<StorePackageUpdate*>::Make(&updates))
ChkHr(AgileVector<StorePreviewProductInfo*>::Make(&spProductInfosList))
ChkHr(AgileVector<StorePreviewSkuInfo*>::Make(&spSkuInfoList))
ChkHr(AgileVector<StoreQueueItem*>::Make(&queuedItemResults))
ChkHr(AgileVector<StoreQueueItem*>::Make(&queueItems))
ChkHr(AllowImpersonation(appLicenseManager2.Get()))
ChkHr(AllowImpersonation(m_spLicenseManager.Get()))
ChkHr(alm->LoadLicenseWithBytes(AppType_UniversalApp, licenseBufferLength, licenseBuffer, L"", licenseInstance.GetAddressOf()))
ChkHr(alm->RefreshLicenses(refreshPolicy))
ChkHr(alternateIds->GetObjectAt(iId, &altId))
ChkHr(appInstallItem->get_ProductId(appInstallItemProductId.GetAddressOf()))
ChkHr(appInstallItem2->CancelWithTelemetry(cv.GetHStringReference().Get()))
ChkHr(appInstallItem2->PauseWithTelemetry(cv.GetHStringReference().Get()))
ChkHr(appInstallItem2->RestartWithTelemetry(cv.GetHStringReference().Get()))
ChkHr(appInstallItems->get_Size(&size))
ChkHr(appInstallItems->GetAt(index, &item))
ChkHr(appInstallManager.As(&appInstallManager2))
ChkHr(appInstallManager.As(&appInstallManager5))
ChkHr(appInstallManager.As(&appInstallManagerInternal))
ChkHr(appInstallManager->get_AppInstallItems(&appInstallItems))
ChkHr(appInstallManager->get_AutoUpdateSetting(&autoUpdates))
ChkHr(appInstallManager5->SetQueueOrder(cvIn, productIds))
ChkHr(appInstallManager5->StartProductInstallWithOptionsForUserAsync( _user.Get(), productId.Get(), nullptr, nullptr, true, downloadOnAnyNetwork, cv.GetHStringReference().Get(), appInstallOptions.Get(), &asyncOp))
ChkHr(appInstallManagerInternal->GetAppInstallItemsForUser(_user.Get(), &appInstallItems))
ChkHr(appInstallManagerInternal->SearchForUpdatesWithPausedAddAsync( _user.Get(), appModelPackagesVV.Get(), true , cv.GetHStringReference().Get(), appInstallItemsOp.GetAddressOf()))
ChkHr(appInstallOptions->put_AllowForcedAppRestart(allowForcedAppRestart))
ChkHr(appInstallStatus.As(&appInstallStatus3))
ChkHr(appInstallStatus.As(&appInstallStatusInternal))
ChkHr(appInstallStatus->get_BytesDownloaded(&packageStatus.PackageBytesDownloaded))
ChkHr(appInstallStatus->get_DownloadSizeInBytes(&packageStatus.PackageDownloadSizeInBytes))
ChkHr(appInstallStatus->get_ErrorCode(&errorCode))
ChkHr(appInstallStatus->get_InstallState(&appInstallState))
ChkHr(appInstallStatus->get_PercentComplete(&percentComplete))
ChkHr(appInstallStatus3->get_IsStaged(&isStaged))
ChkHr(appInstallStatusInternal->get_IsDownloaded(&isDownloaded))
ChkHr(appLicenseManager2->GetOfflineLicenseForInstalledPackage( WindowsGetStringRawBuffer(packageFullName, nullptr), AppContentType::AppType_Unknown, license.GetAddressOf()))
ChkHr(appmodelPackages->Append(spAppmodelPackage.Get()))
ChkHr(appmodelPackages->Append(supplement.Get()))
ChkHr(appmodelPackages->get_Size(&packagesSize))
ChkHr(appmodelPackages->GetAt(packagesIndex, &package))
ChkHr(appmodelPackages->GetView(appModelPackagesVV.GetAddressOf()))
ChkHr(appProductId.Set(_spStoreCommerceServer->GetAppCatalogId(_pCV)))
ChkHr(args->get_JsonResponse(jsonResponse.GetAddressOf()))
ChkHr(args->get_ResultCode(&hr))
ChkHr(args->RuntimeClassInitialize( jsonRequestString.Get(), jsonIntialResponse.Get(), _size))
ChkHr(arrAdditionalHeaders.Append(dhStr))
ChkHr(AsAgile(pMessageDialogHelper, &_messageDialogHelper))
ChkHr(AsAgile(productKinds, &_productKinds))
ChkHr(AsAgile(pStorePackageUpdates, &_storePackageUpdates))
ChkHr(AsAgile(spLicenseManager.Get(), &_spLicenseManager))
ChkHr(AsAgile(storeIds, &_storeIds))
ChkHr(AskWuWhichHardwareIsAvailable(guidArray, availableArray))
ChkHr(AsWeak(pStorePackageLicense, &_wrStorePackageLicense))
ChkHr(AsyncBase::CheckValidStateForResultsCall())
ChkHr(AuthenticationInternal::GetStorePrimaryAccountTicket( 0, AuthenticationEndpoint::OneStore, PromptType::Silent, false, nullptr, authTicket.GetAddressOf(), providerType, spWebTokenRequestResult.GetAddressOf()))
ChkHr(availabilities->GetObjectAt(0, &availability))
ChkHr(availabilities->GetObjectAt(iAvailability, &availability))
ChkHr(availability.As(&availabilityPrivate))
ChkHr(availability->get_Price(ppValue))
ChkHr(availabilityIter->get_Current(&availability))
ChkHr(availabilityIter->get_HasCurrent(&hasCurrent))
ChkHr(availabilityIter->MoveNext(&hasCurrent))
ChkHr(availabilityPrivate->set_ProductIdSkuId(_productId.Get(), _skuId.Get()))
ChkHr(BackgroundPurchaseDialogTask(body.Get(), cv.GetHStringReference().Get(), jsonResponse))
ChkHr(basePrice->Stringify(&pricingInfo->BasePrice))
ChkHr(bestSku.As(&skuPrivate))
ChkHr(bigIds->Append(_productStoreId.Get()))
ChkHr(BlockOnCompletion(spAsyncOperation.Get(), COWAIT_WAITALL))
ChkHr(BlockOnCompletion(spPagedOperation.Get()))
ChkHr(BlockOnCompletionAndGetResults(appInstallItemsOp.Get(), &appInstallItems))
ChkHr(BlockOnCompletionAndGetResults(asyncOp.Get(), &installItemVector))
ChkHr(BlockOnCompletionAndGetResults(deploymentOperation.Get(), &deploymentResult))
ChkHr(BlockOnCompletionAndGetResults(messageDialogOperation.Get(), &command))
ChkHr(BlockOnCompletionAndGetResults(openOperation.Get(), &status))
ChkHr(BlockOnCompletionAndGetResults(operation.Get(), jsonResponse))
ChkHr(BlockOnCompletionAndGetResults(purchaseOperation.Get(), jsonResponse))
ChkHr(BlockOnCompletionAndGetResults(purchaseOperation.Get(), jsonResponse.GetAddressOf()))
ChkHr(BlockOnCompletionAndGetResults(readOperation.Get(), phstrContent))
ChkHr(BlockOnCompletionAndGetResults(requestOperation.Get(), &responseMessage))
ChkHr(BlockOnCompletionAndGetResults(sendMessageOperation.Get(), &response))
ChkHr(bstr.Initialize(L"", 0))
ChkHr(BuildKnownFeatureAndGuidArrays(systemFeatures, guidArray, knownFeaturesArray))
ChkHr(BuildStoreInAppSkuInfo(skuAvailability.Get(), &spInAppSkuInformation))
ChkHr(cacheStatics->GetPackageByFullName(packageFullNameToUninstall.Get(), internalPackage.GetAddressOf()))
ChkHr(callingPackage->get_Dependencies(dependencies.GetAddressOf()))
ChkHr(CanSilentlyDownloadStorePackageUpdates(cv.GetHStringReference().Get(), &canSilentlyDownload))
ChkHr(CatalogServiceProxyV6::GetProduct( _inAppProductId.Get(), _pCV, &spProduct))
ChkHr(CatalogServiceProxyV6::GetProduct(pStoreCommerceServer->GetAppCatalogId(pCV), pCV, &product))
ChkHr(CatalogServiceProxyV6::GetProduct(pStoreCommerceServer->GetAppCatalogId(pCV), pCV, &spJsonObject))
ChkHr(CatalogServiceProxyV6::QueryCatalogForBigCatIdByPackageFullNameAndType( _packageFullName.Get(), _appType, pCV, _appCatalogId.GetAddressOf()))
ChkHr(ChangeStatusStringToEnumValue())
ChkHr(ClientProcessUtils::CheckMultipleUserSupport(usedMultiUser))
ChkHr(ClientProcessUtils::GetAppContentTypeForInstalledPackage(_packageFullName.Get(), &_appType))
ChkHr(ClientProcessUtils::GetCallerTokenFromComCall(&hToken))
ChkHr(ClientProcessUtils::GetCallingAppName(appName.GetAddressOf()))
ChkHr(ClientProcessUtils::GetCallingAppPackage(_user.Get(), callingPackage.GetAddressOf()))
ChkHr(ClientProcessUtils::GetCallingAppPackage(_user.Get(), spAppmodelPackage.GetAddressOf()))
ChkHr(ClientProcessUtils::GetCallingAppPackage(user.Get(), &parentPackage))
ChkHr(ClientProcessUtils::GetCallingAppPackageFamilyName(packageFamilyName.GetAddressOf()))
ChkHr(ClientProcessUtils::GetCallingAppPackageFullName(_packageFullName.GetAddressOf()))
ChkHr(ClientProcessUtils::GetCallingAppPackageFullName(packageFullName.GetAddressOf()))
ChkHr(ClientProcessUtils::GetCallingAppWindowHandle(&hwndOwner))
ChkHr(ClientProcessUtils::GetModalExperienceManager(&modalManager))
ChkHr(ClientProcessUtils::GetSidForUser(_user.Get(), sidString.GetAddressOf()))
ChkHr(ClientProcessUtils::GetSidForUser(_user.Get(), userSid.GetAddressOf()))
ChkHr(ClientProcessUtils::GetSidForUser(user.Get(), userSid.GetAddressOf()))
ChkHr(ClientProcessUtils::IsCallerERA(&_isERA))
ChkHr(ClientProcessUtils::IsCallerERA(&isERA))
ChkHr(CMiscHelpers::ConvertTextBlob2WideChar(spbReceipt, cbReceipt, &shReceipt))
ChkHr(CMiscHelpers::StringToGuid(transactionIdString.GetRawBuffer(nullptr), &transactionId))
ChkHr(CMiscHelpers::StringToGuid(WindowsGetStringRawBuffer(pAppInfo->Id, nullptr), &_id))
ChkHr(CoCreateInstance( __uuidof(ApplicationLicenseManager), nullptr, (CLSCTX_INPROC_SERVER|CLSCTX_LOCAL_SERVER|CLSCTX_REMOTE_SERVER), __uuidof(**(&m_spLicenseManager)), IID_PPV_ARGS_Helper(&m_spLicenseManager)))
ChkHr(CoCreateInstance( __uuidof(ApplicationLicenseManager), nullptr, (CLSCTX_INPROC_SERVER|CLSCTX_LOCAL_SERVER|CLSCTX_REMOTE_SERVER), __uuidof(**(&spLicenseManager)), IID_PPV_ARGS_Helper(&spLicenseManager)))
ChkHr(CoCreateInstance(__uuidof(ApplicationLicenseManager), nullptr, CLSCTX_LOCAL_SERVER, __uuidof(**(alm.GetAddressOf())), IID_PPV_ARGS_Helper(alm.GetAddressOf())))
ChkHr(CoCreateInstance(__uuidof(InstallServiceUserBroker), nullptr, CLSCTX_INPROC_SERVER, __uuidof(**(&pinToHelper)), IID_PPV_ARGS_Helper(&pinToHelper)))
ChkHr(CoCreateInstance(__uuidof(XboxDevelopmentPackageManager), nullptr, CLSCTX_LOCAL_SERVER, __uuidof(**(&packageManager)), IID_PPV_ARGS_Helper(&packageManager)))
ChkHr(CoCreateInstance(CLSID_HardwareCapability, nullptr, (CLSCTX_INPROC_SERVER|CLSCTX_LOCAL_SERVER|CLSCTX_REMOTE_SERVER), __uuidof(**(&spHardwareCapability)), IID_PPV_ARGS_Helper(&spHardwareCapability)))
ChkHr(CoCreateInstance(CLSID_SLSClient, nullptr, CLSCTX_INPROC_SERVER, __uuidof(**(&spSLSClient2)), IID_PPV_ARGS_Helper(&spSLSClient2)))
ChkHr(CoGetCallContext(__uuidof(**(&spCallingProcessInfo)), IID_PPV_ARGS_Helper(&spCallingProcessInfo)))
ChkHr(CoGetCallerTID(&_callerThreadId))
ChkHr(CoGetCallerTID(&callerThreadId))
ChkHr(collectionData.As(&collectionDataPrivate))
ChkHr(collectionDataArray->GetObjectAt(collectionIndex, &collectionItem))
ChkHr(collectionDataPrivate->get_ProductId(productId.GetAddressOf()))
ChkHr(collectionDataPrivate->get_SkuId(skuId.GetAddressOf()))
ChkHr(CollectionsServiceProxyV6::ConsumeConsumable(itemProductId.Get(), itemTransactionId.Get(), cv.Get()))
ChkHr(CollectionsServiceProxyV6::GetUnfulfilledConsumables(bigCatId, pCV, items))
ChkHr(CollectionsServiceProxyV6::GetUnfulfilledConsumables(GetAppCatalogId(cv.Get()), cv.Get(), items))
ChkHr(CollectionsServiceProxyV6::GetUnfulfilledConsumables(parentProductId, pCV, items))
ChkHr(componentLauncher->RequestTokenWithUIElementHostingAndWebAccountAsync(request, account, uiElement, asyncInfo))
ChkHr(componentLauncher->RequestTokenWithUIElementHostingAsync(request, uiElement, asyncInfo))
ChkHr(ComposeLegacyXboxContentIdFromInstalledContentId(WindowsGetStringRawBuffer(packageIdentifier, nullptr), contentId.addressof()))
ChkHr(connectionProfile->GetConnectionCost(&cost))
ChkHr(contentFactory->CreateFromStringWithEncodingAndMediaType( requestJsonString.Get(), Windows::Storage::Streams::UnicodeEncoding::UnicodeEncoding_Utf8, HStringReference(L"application/json").Get(), &requestContent))
ChkHr(contentFactory->CreateFromStringWithEncodingAndMediaType( requestJsonString.Get(), Windows::Storage::Streams::UnicodeEncoding::UnicodeEncoding_Utf8, JsonMediaType.Get(), &requestContent))
ChkHr(contentId.CopyTo(packageFamilyNameToUninstall.GetAddressOf()))
ChkHr(ContentIdentifiers->First(&spContentIdsIter))
ChkHr(contentIdKeyIdItem->get_ContentIds(&contentIds))
ChkHr(contentIdKeyIdItem->get_KeyIds(&keyIds))
ChkHr(contentIdResponse->get_Items(&items))
ChkHr(contentIds->Append(contentId.Get()))
ChkHr(contentIds->Append(HStringReference(szGuid).Get()))
ChkHr(contentIds->Append(packageIdentifier))
ChkHr(contentIds->get_Size(&contentIdSize))
ChkHr(contentIds->get_Size(&contentIdsSize))
ChkHr(contentIds->get_Size(&contentSize))
ChkHr(contentIds->get_Size(&size))
ChkHr(contentIds->get_Size(&sizeOfContentIds))
ChkHr(contentIds->GetAt(contentIdIndex, contentId.GetAddressOf()))
ChkHr(contentIds->GetAt(i, contentId.GetAddressOf()))
ChkHr(contentIds->GetView(&contentIdsVectorView))
ChkHr(contentInfo->GetCatalogId(&storeIdFromLicense))
ChkHr(ConvertJsonObjectToPropertySet(jsonDataObj, message))
ChkHr(ConvertPropertySetToJsonObject(responseMessage, jsonOutput))
ChkHr(ConvertWebAccountIdFromAppToRealIdForUser(user, AccountProviderType::AAD, callingAppPfn, webAccountId, realId.GetAddressOf()))
ChkHr(ConvertWebAccountIdFromAppToRealIdForUser(user, AccountProviderType::MSA, callingAppPfn, webAccountId, realId.GetAddressOf()))
ChkHr(ConvertWebAccountIdFromRealIdToAppForUser(user, AccountProviderType::AAD, callingAppPfn, realId.Get(), pWebAccountId))
ChkHr(ConvertWebAccountIdFromRealIdToAppForUser(user, AccountProviderType::MSA, callingAppPfn, realId.Get(), pWebAccountId))
ChkHr(CopyToNotNull(_productReceipt, pReceipt))
ChkHr(CopyToNotNull(_receipt, pReceipt))
ChkHr(CopyToNotNull(spLicenseInformationServerSingleton, value))
ChkHr(CopyToNotNull(spProductInfos, ppValue))
ChkHr(coreApp->get_MainView(coreAppView.GetAddressOf()))
ChkHr(coreAppView->get_CoreWindow(coreWindow.GetAddressOf()))
ChkHr(CoreQueryApplicationService(processId, __uuidof(ICoreApplication), __uuidof(**(&spCoreAppPrivate)), IID_PPV_ARGS_Helper(&spCoreAppPrivate)))
ChkHr(coreWindow.As(&coreWinInterop))
ChkHr(coreWindowStatic->GetForCurrentThread(coreWindow.GetAddressOf()))
ChkHr(coreWinInterop->get_WindowHandle(&hwnd))
ChkHr(cost->get_NetworkCostType(&costType))
ChkHr(cost->get_Roaming(&isRoaming))
ChkHr(CoSwitchCallContext(nullptr, &oldCtx))
ChkHr(CoSwitchCallContext(nullptr, &pOldCtx))
ChkHr(CoSwitchCallContext(pOldCtx, &pTmpCtx))
ChkHr(CreateCommand( 1020, Microsoft::WRL::Callback<Windows::UI::Popups::IUICommandInvokedHandler>( [](Windows::UI::Popups::IUICommand *) -> HRESULT { HRESULT __hr = ((HRESULT)0L);; { ComPtr<IUriRuntimeClass> spUri; { { __hr = (IAPUtils::CreateUri(HStringReference(L"ms-windows-store://signin").Get(), &spUri)); }; if ((((HRESULT)((static_cast<HRESULT>(__hr)))) < 0)) { ; (void)TraceHR( "onecoreuap\\enduser\\winstore\\licensing\\winrt\\lib\\windows\\messagedialoghelper.cpp", 136, __FSTREXP __FUNCTION__  , "ChkHr(IAPUtils::CreateUri(HStringReference(L\"ms-windows-store://signin\").Get(), &spUri))", __hr, false ); CBreakOnFailure::CheckToBreakOnFailure(__hr); goto Exit; } }; ComPtr<ILauncherStatics> spLauncherStatics; { { __hr = (GetActivationFactory(StringReference(RuntimeClass_Windows_System_Launcher).Get(), &spLauncherStatics)); }; if ((((HRESULT)((static_cast<HRESULT>(__hr)))) < 0)) { ; (void)TraceHR( "onecoreuap\\enduser\\winstore\\licensing\\winrt\\lib\\windows\\messagedialoghelper.cpp", 136, __FSTREXP __FUNCTION__  , "ChkHr(GetActivationFactory(StringReference(RuntimeClass_Windows_System_Launcher).Get(), &spLauncherStatics))", __hr, false ); CBreakOnFailure::CheckToBreakOnFailure(__hr); goto Exit; } }; ComPtr<IAsyncOperation<bool>> spAsyncOperation; { { __hr = (spLauncherStatics->LaunchUriAsync(spUri.Get(), &spAsyncOperation)); }; if ((((HRESULT)((static_cast<HRESULT>(__hr)))) < 0)) { ; (void)TraceHR( "onecoreuap\\enduser\\winstore\\licensing\\winrt\\lib\\windows\\messagedialoghelper.cpp", 136, __FSTREXP __FUNCTION__  , "ChkHr(spLauncherStatics->LaunchUriAsync(spUri.Get(), &spAsyncOperation))", __hr, false ); CBreakOnFailure::CheckToBreakOnFailure(__hr); goto Exit; } }; } goto Exit; Exit: CChkMacroETWLogger::LogHResultEvent(__hr); return __hr;;; }).Get(), &spCommand))
ChkHr(CreateCommand( 1022, nullptr, &spCommand))
ChkHr(CreateCommand( uLabelId, pHandler, spCommand.GetAddressOf()))
ChkHr(CreateCommandWithInt32Id( 2002, OkCommandId, nullptr, spCommand.GetAddressOf()))
ChkHr(CreateCommandWithInt32Id( 2003, DenyCommandId, nullptr, spCommand.GetAddressOf()))
ChkHr(CreateGetItemsRequest(authTicket.GetRawBuffer(nullptr), &request))
ChkHr(CreateGuid(&guidCorrelationId))
ChkHr(CreateGuid(&guidRequestId))
ChkHr(CreateHttpClient(&httpClient))
ChkHr(CreateListingInformation( _spStoreCommerceServer.Get(), cv.Get(), _hCancelEvent, _inAppOfferTokens.Get(), _keywords.Get(), &_spListingInformation))
ChkHr(CreateMessageDialogHelper(hwnd, dialogHelper))
ChkHr(CreateRandomAccessStreamOverStream(stream, BSOS_OPTIONS::BSOS_DEFAULT, __uuidof(**(&randAccStream)), IID_PPV_ARGS_Helper(&randAccStream)))
ChkHr(CreateStoreContextServer(pUser, _spStoreContextServer))
ChkHr(cryptoFactory->DecodeFromBase64String( encodedString, &spHashBuffer))
ChkHr(CSP6Internal::CreateCatalogHttpClient(&_httpClient))
ChkHr(CSP6Internal::CreateCatalogHttpClient(&httpClient))
ChkHr(currentAvailability.As(&currentAvailabilityPrivate))
ChkHr(currentAvailabilityPrivate->get_Rank(&currentRank))
ChkHr(CurrentEraTitleInfo::GetAppId(pfnBuff, pfnLength))
ChkHr(CurrentEraTitleInfo::GetProxyAppPid(&pid))
ChkHr(currentOperation->GetNextAsync(productJson, nextOperation))
ChkHr(currentOperation->GetNextAsync(productJsonResponse, nextOperation))
ChkHr(currentPair->get_Key(keyName.GetAddressOf()))
ChkHr(currentPair->get_Key(tag->destinationKey.GetAddressOf()))
ChkHr(currentPair->get_Value(jsonValue.GetAddressOf()))
ChkHr(currentPair->get_Value(value.GetAddressOf()))
ChkHr(currentSku.As(&currentSkuPrivate))
ChkHr(currentSkuPrivate->get_Rank(&currentRank))
ChkHr(customPolicyDecoded.Set(customPolicyEncoded))
ChkHr(CWSHttpHelper::AddTHAdditionalHeaders(arrRequestHeaders))
ChkHr(CWSHttpHelper::AddTHAdditionalRequestHeader(arrAdditionalHeaders, L"MS-CorrelationId", wszCorrelationId))
ChkHr(CWSHttpHelper::AddTHAdditionalRequestHeader(arrAdditionalHeaders, L"MS-RequestId", wszRequestId))
ChkHr(CWSHttpHelper::AddTHAdditionalRequestHeader(arrRequestHeaders, L"MS-CV", cv.GetUnicode()))
ChkHr(CWSHttpHelper::AddTHAdditionalRequestHeader(arrRequestHeaders, L"MS-SiteName", WindowsGetStringRawBuffer(authDomain, nullptr)))
ChkHr(data->pThis->GetContentIdKeyIdsForProductIds(spIds.Get(), cv.Get(), &response))
ChkHr(dataReaderFactory->FromBuffer(licenseBuffer.Get(), licenseReader.GetAddressOf()))
ChkHr(dependencies.As(&dependenciesIteratable))
ChkHr(dependencies->get_Size(&size))
ChkHr(dependencies->GetAt(index, &package))
ChkHr(dependenciesIteratable->First(&dependenciesIterator))
ChkHr(dependenciesIterator->get_Current(&dependentPackage))
ChkHr(dependenciesIterator->get_HasCurrent(&hasCurrentDependencies))
ChkHr(dependenciesIterator->MoveNext(&hasCurrentDependencies))
ChkHr(dependentPackage.As(&dependentPackage4))
ChkHr(dependentPackage->get_Id(&dependentPackageId))
ChkHr(dependentPackage4->get_SignatureKind(&signatureKindDependent))
ChkHr(dependentPackageId->get_FullName(dependentPackageFullName.GetAddressOf()))
ChkHr(deploymentResult->get_ExtendedErrorCode(&deploymentResultCode))
ChkHr(deploymentResultCode)
ChkHr(dialogHelper->put_ContextString(packageDisplayName.Get()))
ChkHr(dialogHelper->ShowDialogWithResultsAsync( ((HRESULT)0x803F6209L), nullptr, messageDialogOperation.GetAddressOf()))
ChkHr(displaySkuAvailabilities->GetObjectAt(0, &firstSkuAvail))
ChkHr(displaySkuAvailabilities->GetObjectAt(iSku, &item))
ChkHr(displaySkuAvailabilities->GetObjectAt(iSkuAvailability, &skuAvailability))
ChkHr(EnsureWindowFromCallingProcess(*phwndOwner))
ChkHr(EventTokenHashMap::Make(&_statusChangedTokenMap))
ChkHr(extendedError)
ChkHr(factory->Create(filter.Get(), &httpClient))
ChkHr(FileTimeToString(strTime, 200, UINT64_TO_FILETIME(value.UniversalTime)))
ChkHr(filter.As(&filter2))
ChkHr(filter2->put_MaxVersion(Windows::Web::Http::HttpVersion_Http11))
ChkHr(FilterUnsupportedFeaturesInternal(spPotentialSystemFeatures.Get(), resultsView))
ChkHr(FormatNameValuePairs(pszFinalUri, urlLength, pszInitialUri, nameValuePairs, cNameValuePairs, encodeParameters))
ChkHr(FormatNameValuePairs(pszRemaining, cchRemaining, pathFormat, nameValuePairs, cNameValuePairs, false))
ChkHr(FormatStrings(L"%1\n[CV:%2]", ppszFormattedString, pszMessage, WindowsGetStringRawBuffer(cv, nullptr)))
ChkHr(foundProductIds.As(&foundProductIdsIVector))
ChkHr(foundProductIds->Append(productId.Get()))
ChkHr(get_StoreId(storeId.GetAddressOf()))
ChkHr(GetActivationFactory( CryptographicBufferRuntimeClassName.Get(), &cryptoFactory))
ChkHr(GetActivationFactory( HStringReference(RuntimeClass_Windows_Internal_StateRepository_Package).Get(), &spPackageStatics))
ChkHr(GetActivationFactory( HStringReference(RuntimeClass_Windows_Internal_StateRepository_PackageResourceResolver).Get(), &spPackageResolverStatics))
ChkHr(GetActivationFactory( NetworkingConnectivityNetworkInformation.Get(), &netInfoStatics))
ChkHr(GetActivationFactory( StateRepositoryPackageClassId.Get(), &spPackageStatics))
ChkHr(GetActivationFactory( StateRepositoryUserClassId.Get(), &spUserStatics))
ChkHr(GetActivationFactory(HStringReference(RuntimeClass_Windows_ApplicationModel_Core_CoreApplication).Get(), coreApp.GetAddressOf()))
ChkHr(GetActivationFactory(HStringReference(RuntimeClass_Windows_Data_Json_JsonValue).Get(), &spJsonValueStatics))
ChkHr(GetActivationFactory(HStringReference(RuntimeClass_Windows_Foundation_PropertyValue).Get(), spPropValueFactory.GetAddressOf()))
ChkHr(GetActivationFactory(HStringReference(RuntimeClass_Windows_Internal_StateRepository_Package).Get(), &spPackageStatics))
ChkHr(GetActivationFactory(HStringReference(RuntimeClass_Windows_Internal_StateRepository_TargetDeviceFamily).Get(), &spTargetDeviceFamilyStatics))
ChkHr(GetActivationFactory(HStringReference(RuntimeClass_Windows_Security_Authentication_Web_Core_WebAuthenticationCoreManager).Get(), &componentLauncher))
ChkHr(GetActivationFactory(HStringReference(RuntimeClass_Windows_Storage_Streams_RandomAccessStreamReference).Get(), &spStreamReferenceStatics))
ChkHr(GetActivationFactory(HStringReference(RuntimeClass_Windows_Web_Http_HttpClient).Get(), &factory))
ChkHr(GetActivationFactory(HStringReference(RuntimeClass_Windows_Web_Http_HttpMethod).Get(), &methodStatics))
ChkHr(GetActivationFactory(HStringReference(RuntimeClass_Windows_Web_Http_HttpRequestMessage).Get(), &requestFactory))
ChkHr(GetActivationFactory(PropertyValueRef.Get(), &propertyValueFactory))
ChkHr(GetActivationFactory(RuntimeClassWindowsXboxApplicationModelStateInternalStateHelperCache.Get(), cacheStatics.GetAddressOf()))
ChkHr(GetActivationFactory(StringReference(RuntimeClass_Windows_System_Launcher).Get(), &spLauncherStatics))
ChkHr(GetActivationFactory(StringReference(RuntimeClass_Windows_System_UserProfile_GlobalizationPreferences).Get(), &spGlobalizationPreferences))
ChkHr(GetActivationFactory(StringReference(RuntimeClass_Windows_UI_Core_CoreWindow).Get(), &spCoreWindowStatic))
ChkHr(GetActivationFactory(StringReference(RuntimeClass_Windows_UI_Core_CoreWindow).Get(), coreWindowStatic.GetAddressOf()))
ChkHr(GetActivationFactory(StringReference(RuntimeClass_Windows_UI_Popups_MessageDialog).Get(), &_messageDialogFactory))
ChkHr(GetActivationFactory(WindowsFoundationUri.Get(), &uriEscapeStatics))
ChkHr(GetAddOnProduct(&spProduct))
ChkHr(GetALM(alm.GetAddressOf()))
ChkHr(GetAppName(szArgument, (sizeof(*RtlpNumberOf(szArgument)))))
ChkHr(GetB2BKey(collectionKeysUri.Get(), serviceTicket, publisherUserId, pCV, collectionsId))
ChkHr(GetB2BKey(purchaseKeysUri.Get(), serviceTicket, publisherUserId, pCV, purchaseId))
ChkHr(GetBigCatIds(productId.GetAddressOf(), skuId.GetAddressOf(), availabilityId.GetAddressOf(), productType.GetAddressOf()))
ChkHr(GetCallingAppPackageFullName(fullName.GetAddressOf()))
ChkHr(GetCallingAppPackageFullName(packageFullName.GetAddressOf()))
ChkHr(GetCallingAppSupportsMultipleUser(&supportsMultipleUsers))
ChkHr(GetContentId(szPackageFamilyName, cpt, &guidContentId))
ChkHr(GetContentId(WindowsGetStringRawBuffer(packageIdentifier, nullptr), CPT_UNIVERSAL_APP, &guidContentId))
ChkHr(GetContentIdKeyIdsForProductIds( productIdsIter.Get(), cv.Get(), &contentIdResponse))
ChkHr(GetContentIdKeyIdsForProductIds(ids.Get(), cv.Get(), &response))
ChkHr(GetContentIdKeyIdsForProductIds(spIds.Get(), cv.Get(), &response))
ChkHr(GetCurrentStatus(&status))
ChkHr(GetDeviceContextId(L"MOID", szEncodedMoId, (sizeof(szEncodedMoId)/sizeof(szEncodedMoId[0]))))
ChkHr(GetDeviceContextId(L"OEMID", szEncodedOemId, (sizeof(szEncodedOemId)/sizeof(szEncodedOemId[0]))))
ChkHr(GetDeviceContextId(L"SCMID", szEncodedScmId, (sizeof(szEncodedScmId)/sizeof(szEncodedScmId[0]))))
ChkHr(GetEnterpriseStoreWebAccountIdInternal(nullptr , packageFamilyName.Get(), pValue))
ChkHr(GetEnterpriseStoreWebAccountIdInternal(user, packageFamilyName.Get(), pValue))
ChkHr(GetERAPackageFullNameByAumid(pfnBuff, wil::out_param(callerPackageFullName)))
ChkHr(GetFormattedPriceUsingCurrencyFormatter( dblPrice, currencyCode, locale, region, formattedPrice))
ChkHr(GetFormattedPriceUsingCurrencyFormatter( price, currencyCode, language.Get(), HStringReference((const WCHAR*)pwszUppercaseRegion).Get(), formattedPrice))
ChkHr(GetFormattedPriceUsingCurrencyFormatter( priceValue, pStorePricingInfo->CurrencyCode, locale, HStringReference(pwszUppercaseRegion).Get(), formattedPrice))
ChkHr(GetHardwareManufacturerInfoInternal(value))
ChkHr(GetHttpResponse( pHttpClient, hstrURL, verb, pCV, requestContent.Get(), pStatusCode, hstrResponse))
ChkHr(GetJsonFromURLWithHttpClient(httpClient.Get(), hstrURL, pCV, ppJsonObject))
ChkHr(GetNamedString(spJson, pszName, timeString.GetAddressOf()))
ChkHr(GetNextBatch())
ChkHr(GetPackageFamilyNameFromPackage(pOptionalPackage, packageFamilyName))
ChkHr(GetPackageFamilyNameFromToken(spProcessToken, &pkgFamilyNameSize, pkgFamilyName))
ChkHr(GetPhoneReceiptFilepath(geoId, language, eReceiptType, featureName, packageFullName, szCacheFileFullPath, (sizeof(*RtlpNumberOf(szCacheFileFullPath)))))
ChkHr(GetPriceInfo(product, &spInAppOffer->PricingInfo))
ChkHr(GetPriceInfo(product, &spStoreAppInfo->PricingInfo))
ChkHr(GetPriceInfoFromAvailability(availability, &spInAppSkuInfo->PricingInfo))
ChkHr(GetPriceInfoFromAvailability(availability, pricingInfo))
ChkHr(getProcessPackageResult)
ChkHr(GetProducts(productKinds, storeIds.Get(), cv.GetHStringReference().Get(), productJson))
ChkHr(GetProductsByKinds( nullptr, ids.Get(), nullptr, cv.Get(), CatalogRelationshipType::All, hydrateResult.GetAddressOf()))
ChkHr(GetProductsByKinds( nullptr, productIdsInAppInstallQueue.Get(), nullptr, cv.Get(), CatalogRelationshipType::SellableBy, hydrateResult.GetAddressOf()))
ChkHr(GetProductsByKinds( nullptr, spIds.Get(), nullptr, cv.Get(), CatalogRelationshipType::SellableBy, hydrateResult.GetAddressOf()))
ChkHr(GetProductsByKinds( productKinds.Get(), productIds.Get(), nullptr, cv.Get(), CatalogRelationshipType::AddOnParent, productJsonString.GetAddressOf()))
ChkHr(GetProductsByKinds(productKinds, storeIds, nullptr, cv.Get(), CatalogRelationshipType::SellableBy, productJson))
ChkHr(GetProductsByKinds(productKinds, storeIds, storeProductOptions, cv.Get(), CatalogRelationshipType::SellableBy, productJson))
ChkHr(GetPublisherId(pStoreCommerceServer, pCV, hstrPublisherId.GetAddressOf()))
ChkHr(GetReceiptCacheFileName(geoId, language, eReceiptType, featureName, szCacheFileName, (sizeof(*RtlpNumberOf(szCacheFileName)))))
ChkHr(GetReceiptCacheFolder(packageFullName, pszCacheFilepath, cchCacheFilepath))
ChkHr(GetRequiredEkbFromContentId(contentId.get(), keyId.addressof()))
ChkHr(GetSidForUser(user, sidString.GetAddressOf()))
ChkHr(GetStoreCommerce(&spStoreCommerce))
ChkHr(GetStoreCommerce(&spStoreCommerceWithConsumables))
ChkHr(GetStoreWebAccountIdInternal(nullptr , packageFamilyName.Get(), pValue))
ChkHr(GetStoreWebAccountIdInternal(user, packageFamilyName.Get(), pValue))
ChkHr(GetStringFromURLWithHttpClient(pHttpClient, hstrURL, pCV, nullptr, jsonString.GetAddressOf()))
ChkHr(GetText(hr, cv, content.GetAddressOf(), title.GetAddressOf()))
ChkHr(GetUnfulfilledConsumablesOperationServer::GetUnfulfilledConsumablesSync( m_productId.Get(), pCV, nullptr, spUnfulfilledList.Get()))
ChkHr(GetUnfulfilledConsumablesSync( _spStoreCommerceServer->GetAppCatalogId(cv.Get()), cv.Get(), _spStoreCommerceServer->GetProductIdCache(), _spUnfulfilledList.Get()))
ChkHr(GetWindowHandle(spCoreWindow.Get(), &hwnd))
ChkHr(GuidToStringWithoutBraces(&anid, szAnid))
ChkHr(GuidToStringWithoutBraces(&guidContentId, szContentId))
ChkHr(GuidToStringWithoutBraces(&guidContentId, szGuid))
ChkHr(GuidToStringWithoutBraces(&guidCorrelationId, wszCorrelationId))
ChkHr(GuidToStringWithoutBraces(&guidRequestId, wszRequestId))
ChkHr(GuidToStringWithoutBraces(&pStoreCommerceServer->GetAppId(), szProductIdGuid))
ChkHr(GuidToStringWithoutBraces(&pStoreCommerceServer->GetAppId(), wszAppId))
ChkHr(hashMap.As(&_productIdTable))
ChkHr(hashMap->GetView(&_addOnLicensesMap))
ChkHr(hashMap->GetView(ppMapView))
ChkHr(hashMap->Insert(skuStoreId.Get(), license.Get(), &replaced))
ChkHr(hashMap->Insert(storeId.Get(), product.Get(), &replaced))
ChkHr(headers.As(&headersMap))
ChkHr(headers->Append(HStringReference(L"MS-SiteName").Get(), authDomain))
ChkHr(headers->Append(HStringReference(L"X-WP-ANID").Get(), HStringReference(szAnid).Get()))
ChkHr(headers->get_UserAgent(&userAgent))
ChkHr(headers->TryAppendWithoutValidation( HStringReference(L"Authorization").Get(), formattedAuthToken.Get(), &succeeded))
ChkHr(headers->TryAppendWithoutValidation( HStringReference(L"Authorization").Get(), ticket, &succeeded))
ChkHr(headers->TryAppendWithoutValidation(HStringReference(L"Authorization").Get(), authTicket, &b))
ChkHr(headersMap->Insert(HStringReference(L"MS-CV").Get(), cv.GetHStringReference().Get(), &replaced))
ChkHr(hr)
ChkHr(hrCallContext)
ChkHr(hrCommerceOp)
ChkHr(hrCopy)
ChkHr(hrEntry)
ChkHr(hresult)
ChkHr(HRESULT_FROM_RPC(hr))
ChkHr(HRESULT_FROM_RPC(OptionalPackageRundownNotification( rpcHandle, appPfn.GetRawBuffer(nullptr), sessionId, sidString.GetRawBuffer(nullptr), WindowsGetStringRawBuffer(optionalPackageName, nullptr))))
ChkHr(HRESULT_FROM_RPC(RpcBindingFromStringBindingW(rpcStringBinding, &rpcHandle)))
ChkHr(HRESULT_FROM_RPC(RpcBindingSetAuthInfoExW( rpcHandle, nullptr, 6, 10, 0, 0, reinterpret_cast<RPC_SECURITY_QOS *>(&qos))))
ChkHr(HRESULT_FROM_WIN32(::RegGetValueW(hKey, nullptr, valueName, 0x00000002, nullptr, pszBuffer, &cbData)))
ChkHr(HRESULT_FROM_WIN32(::RegOpenKeyExW(root, subKey, 0, ((((0x00020000L)) | (0x0001) | (0x0008) | (0x0010)) & (~(0x00100000L))), &hKey)))
ChkHr(HRESULT_FROM_WIN32(::RegSetKeyValueW(root, subKey, valueName, ( 11ul ), &value, sizeof(value))))
ChkHr(HRESULT_FROM_WIN32(::RegSetKeyValueW(root, subKey, valueName, ( 1ul ), value, dwSize)))
ChkHr(HRESULT_FROM_WIN32(1168L))
ChkHr(HRESULT_FROM_WIN32(122L))
ChkHr(HRESULT_FROM_WIN32(1244L))
ChkHr(HRESULT_FROM_WIN32(13L))
ChkHr(HRESULT_FROM_WIN32(1400L))
ChkHr(HRESULT_FROM_WIN32(15861L))
ChkHr(HRESULT_FROM_WIN32(15862L))
ChkHr(HRESULT_FROM_WIN32(1630L))
ChkHr(HRESULT_FROM_WIN32(50L))
ChkHr(HRESULT_FROM_WIN32(5L))
ChkHr(HRESULT_FROM_WIN32(erf.erfOper))
ChkHr(HRESULT_FROM_WIN32(error))
ChkHr(HRESULT_FROM_WIN32(GetLastError()))
ChkHr(HRESULT_FROM_WIN32(rc))
ChkHr(HRESULT_FROM_WIN32(RtlNtStatusToDosError(status)))
ChkHr(hrFamilies)
ChkHr(hrFetch)
ChkHr(hrGetAllAccounts)
ChkHr(hrGetPackage)
ChkHr(hrGetPackageFamilyName)
ChkHr(hrGetString)
ChkHr(hrGoldenTicket)
ChkHr(hrHttp)
ChkHr(hrImpersonate)
ChkHr(hrInfo)
ChkHr(hrInfosIter)
ChkHr(hrInnerIter)
ChkHr(hrItemIter)
ChkHr(hrIter)
ChkHr(hrJoin)
ChkHr(hrJoinActionFilters)
ChkHr(hrJoinStoreIds)
ChkHr(hrKinds)
ChkHr(hrMake)
ChkHr(hrModalAsUser)
ChkHr(hrOp)
ChkHr(hrOperation)
ChkHr(hrPackage)
ChkHr(hrPost)
ChkHr(hrProductsIter)
ChkHr(hrRequest)
ChkHr(hstrContent.Set(pszContent))
ChkHr(hstrEntitlementId.Set(entitlementId))
ChkHr(hstrPreferredSkuId.Set(_inAppProductSkuId.Get()))
ChkHr(hstrProductId.Set(_spStoreCommerceServer->GetAppCatalogId(_pCV)))
ChkHr(hstrTitle.Set(pszTitle))
ChkHr(httpClient->get_DefaultRequestHeaders(&headers))
ChkHr(httpRequest.Initialize (0))
ChkHr(httpRequest.SetAuthorizationHeader(authResponse))
ChkHr(httpRequest.UploadAndFetchResourceByUrl ( lpszURL, 0, 0, 1, 1 ))
ChkHr(IAPUtils::BuildEntitlementFiltersJSON(jsonEntitlementFilters, _productKinds.Get()))
ChkHr(IAPUtils::BuildEntitlementFiltersJSON(jsonEntitlementFilters, productKinds))
ChkHr(IAPUtils::BuildEntitlementFiltersJSON(jsonEntitlementFilters, productKinds.Get()))
ChkHr(IAPUtils::BuildStoreId( _productId.Get(), _skuId.Get(), _availabilityId.Get(), _storeId.GetAddressOf()))
ChkHr(IAPUtils::BuildStoreId( _productId.Get(), _skuId.Get(), nullptr, _skuStoreId.GetAddressOf()))
ChkHr(IAPUtils::BuildStoreId( _productId.Get(), _skuId.Get(), nullptr, _storeId.GetAddressOf()))
ChkHr(IAPUtils::BuildStoreId( productId.Get(), skuId.Get(), nullptr, storeId.GetAddressOf()))
ChkHr(IAPUtils::BuildStoreId(productId.Get(), skuId.Get(), availabilityId.Get(), storeId.GetAddressOf()))
ChkHr(IAPUtils::CheckProductKinds(productKinds))
ChkHr(IAPUtils::CombineProductsAndCollectionsJson( jsonCatalogString.Get(), jsonCollectionsString.Get(), productJsonResponse))
ChkHr(IAPUtils::CombineProductsAndCollectionsJson( productJsonString.Get(), collectionsJsonString.Get(), productJson))
ChkHr(IAPUtils::CombineProductsAndCollectionsJson( productJsonString.Get(), collectionsJsonString.Get(), productJsonResponse))
ChkHr(IAPUtils::ConstructSlsUri(requestParams.uriToFormat.Get(), requestParams.cchUriMax, jsonInternalParameters, uri.GetAddressOf()))
ChkHr(IAPUtils::CreateHttpClient(&httpClient))
ChkHr(IAPUtils::CreateHttpClient(httpClient.GetAddressOf()))
ChkHr(IAPUtils::CreateHttpClient(ppHttpClient))
ChkHr(IAPUtils::CreateHttpClientWithAuthHeader( authToken.Get(), false, httpClient.GetAddressOf()))
ChkHr(IAPUtils::CreateHttpClientWithAuthHeader( ticket.Get(), false, ppHttpClient))
ChkHr(IAPUtils::CreateHttpClientWithAuthHeader(authTicket.Get(), false, &httpClient))
ChkHr(IAPUtils::CreateHttpClientWithAuthHeader(authTicket.Get(), true, &httpClient))
ChkHr(IAPUtils::CreateHttpClientWithAuthHeader(ticket.Get(), true, ppHttpClient))
ChkHr(IAPUtils::CreateHttpClientWithAuthIfAvailable(_user.Get(), &httpClient, requestParams.forceRetailSandbox))
ChkHr(IAPUtils::CreateUri(_hstrImageUri.Get(), &_spImageUri))
ChkHr(IAPUtils::CreateUri(HStringReference(L"ms-windows-store://signin").Get(), &spUri))
ChkHr(IAPUtils::CreateUri(hstrLinkUri.Get(), ppLinkUri))
ChkHr(IAPUtils::CreateUri(hstrUri.Get(), &_uriRuntimeClass))
ChkHr(IAPUtils::CreateUri(uri.Get(), &_spUri))
ChkHr(IAPUtils::CreateUri(uriString.Get(), ppValue))
ChkHr(IAPUtils::GetDeviceContextId(L"MOID", szEncodedMoId, (sizeof(szEncodedMoId)/sizeof(szEncodedMoId[0]))))
ChkHr(IAPUtils::GetDeviceContextId(L"OEMID", szEncodedOemId, (sizeof(szEncodedOemId)/sizeof(szEncodedOemId[0]))))
ChkHr(IAPUtils::GetDeviceContextId(L"SCMID", szEncodedScmId, (sizeof(szEncodedScmId)/sizeof(szEncodedScmId[0]))))
ChkHr(IAPUtils::GetDeviceContextString(deviceContextString.GetAddressOf()))
ChkHr(IAPUtils::GetDeviceIds(moid, oemid, scmid))
ChkHr(IAPUtils::GetFormattedPrice(_basePrice, _currencyCode.Get(), _formattedBasePrice.GetAddressOf()))
ChkHr(IAPUtils::GetFormattedPrice(_listPrice, _currencyCode.Get(), _formattedPrice.GetAddressOf()))
ChkHr(IAPUtils::GetFormattedPrice(_recurrencePrice, _currencyCode.Get(), _formattedRecurrencePrice.GetAddressOf()))
ChkHr(IAPUtils::GetJsonFromURL(hstrUri.Get(), pCV, &jsonObject))
ChkHr(IAPUtils::GetJsonFromURLWithHttpClient( _httpClient.Get(), HStringReference(szNextUrl).Get(), _spCV, &jsonIAPs))
ChkHr(IAPUtils::GetJsonFromURLWithHttpClient(httpClient.Get(), hstrUri.Get(), pCV, spJsonObject.GetAddressOf()))
ChkHr(IAPUtils::GetLanguage(hstrLanguage.GetAddressOf()))
ChkHr(IAPUtils::GetLanguage(language.GetAddressOf()))
ChkHr(IAPUtils::GetLanguage(temp.GetAddressOf()))
ChkHr(IAPUtils::GetLanguages(&spLanguages))
ChkHr(IAPUtils::GetLanguagesString(languages.GetAddressOf()))
ChkHr(IAPUtils::GetMarket(hstrGeoId.GetAddressOf()))
ChkHr(IAPUtils::GetMarket(hstrMarket.GetAddressOf()))
ChkHr(IAPUtils::GetMarket(market.GetAddressOf()))
ChkHr(IAPUtils::GetMarket(temp.GetAddressOf()))
ChkHr(IAPUtils::GetTimeSpanDifference(dtTrialTimeRemaining, &trialTimeRemaining))
ChkHr(IAPUtils::GetTimeSpanDifference(expirationDate, &trialTimeRemaining))
ChkHr(IAPUtils::IsCallingProcessAppContainer(&_isAppContainer))
ChkHr(IAPUtils::IsCallingProcessAppContainer(&isAppContainer))
ChkHr(IAPUtils::ParseStoreId( productStoreId, productId.GetAddressOf(), nullptr, nullptr))
ChkHr(IAPUtils::ParseStoreId( storeId, productId.GetAddressOf(), nullptr, nullptr))
ChkHr(IAPUtils::ParseStoreId( storeId.Get(), productId.GetAddressOf(), nullptr, nullptr))
ChkHr(IAPUtils::ParseStoreId(data->storeIdToRefresh.Get(), productId.GetAddressOf(), nullptr, nullptr))
ChkHr(IAPUtils::ParseStoreId(storeId.Get(), productId.GetAddressOf(), nullptr , nullptr ))
ChkHr(IAPUtils::SetDateTime(ftAddOnExpirationTime, &addOnExpirationTime))
ChkHr(IAPUtils::SetDateTime(ftExpirationTime, &expirationDate))
ChkHr(IAPUtils::SetDateTime(ftExpirationTime, &m_dtExpiration))
ChkHr(IAPUtils::SetDateTime(ftExpireTime, &m_dtExpiration))
ChkHr(IAPUtils::SetDateTime(ftTrialTimeRemaining, &dtTrialTimeRemaining))
ChkHr(IAPUtils::SetMaxDateTime(&_expirationDate))
ChkHr(IAPUtils::SetMaxDateTime(&expirationDate))
ChkHr(IAPUtils::SetMaxDateTime(&m_dtExpiration))
ChkHr(IAPUtils::TimeSpanToString(value, timeSpanString.GetAddressOf()))
ChkHr(ids->Append(productId.Get()))
ChkHr(images->GetObjectAt(iImage, &image))
ChkHr(impersonator.Impersonate())
ChkHr(inAppOfferTokens->get_Size(&cInAppOfferTokens))
ChkHr(inAppOfferTokens->GetAt(p, temp.GetAddressOf()))
ChkHr(info->get_IsSatisfied(&isSatisfied))
ChkHr(infos.As(&infosIterable))
ChkHr(infos->get_Size(&sizeResult))
ChkHr(infosIterable->First(&infosIterator))
ChkHr(infosIterator->get_Current(&keyValuePair))
ChkHr(infosIterator->get_HasCurrent(&hasCurrent))
ChkHr(Initialize())
ChkHr(InitializeIdsFromLicense())
ChkHr(initWithWindow->Initialize(_hwnd))
ChkHr(inspectable.As(&productPrivate))
ChkHr(installItemVector->get_Size(&installVectorSize))
ChkHr(installOptions->get_AllowForcedAppRestart(&allowForcedAppRestart))
ChkHr(installStatus->get_PackageInstallExtendedState(&entendedQueueState))
ChkHr(installStatus->get_PackageInstallExtendedState(&extendedState))
ChkHr(installStatus->get_PackageInstallState(&queueState))
ChkHr(installStatus->get_UpdateStatus(&newStatus))
ChkHr(internalPackage->get_DisplayName(displayName.GetAddressOf()))
ChkHr(IsCallerERA(&isERA))
ChkHr(IsStoreWebAccountIdInternal(nullptr , packageFamilyName.Get(), webAccountId, *value))
ChkHr(IsStoreWebAccountIdInternal(user, packageFamilyName.Get(), webAccountId, *value))
ChkHr(it.As(&spWebTokenRequestResult))
ChkHr(item->add_StatusChanged( Microsoft::WRL::Callback<ITypedEventHandler<StoreQueueItem*, IInspectable*>>( this, &DownloadAndInstallStorePackagesOperation::_OnStoreQueueItemStatusChanged).Get(), &regToken))
ChkHr(item->get_ContentIds(&contentIds))
ChkHr(item->get_KeyIds(&keyIds))
ChkHr(item->get_PackageFamilyName(packageFamilyName.GetAddressOf()))
ChkHr(item->get_PackageFamilyName(packageFamilyName.ReleaseAndGetAddressOf()))
ChkHr(item->get_ProductId(productId.GetAddressOf()))
ChkHr(item->GetCurrentStatus(installStatus.GetAddressOf()))
ChkHr(item->remove_StatusChanged(regToken))
ChkHr(item2->get_Mandatory(value))
ChkHr(Items.Append(item))
ChkHr(items->get_Size(&count))
ChkHr(items->get_Size(&itemCount))
ChkHr(items->get_Size(&size))
ChkHr(items->GetAt(0, &contentIdKeyIdItem))
ChkHr(items->GetAt(0, item.GetAddressOf()))
ChkHr(items->GetAt(i, inspectable.GetAddressOf()))
ChkHr(items->GetAt(index, &item))
ChkHr(items->GetAt(index, item.GetAddressOf()))
ChkHr(items->GetObjectAt(i, &item))
ChkHr(iter->get_Current(&availability))
ChkHr(iter->get_Current(&collectionData))
ChkHr(iter->get_Current(&item))
ChkHr(iter->get_Current(&sku))
ChkHr(iter->get_HasCurrent(&hasCurrent))
ChkHr(iter->MoveNext(&hasCurrent))
ChkHr(iterator->get_Current(&status))
ChkHr(iterator->get_HasCurrent(&hasCurrent))
ChkHr(iterator->MoveNext(&hasCurrent))
ChkHr(json.As(&jsonObjectIterable))
ChkHr(jsonArray->GetObjectAt(i, jsonElement.GetAddressOf()))
ChkHr(JsonHelpers::AppendObject(authTokensArray, jsonBeneficiary))
ChkHr(JsonHelpers::AppendObject(jsonBeneficiaries, beneficiary))
ChkHr(JsonHelpers::AppendObject(jsonProductSkuIds, productSku))
ChkHr(JsonHelpers::AppendObject(productSkuIds, productSku))
ChkHr(JsonHelpers::AppendObject(spBeneficiaryArray, spBeneficiary))
ChkHr(JsonHelpers::AppendString(jsonEntitlementFilters, entitlementFilter.Get()))
ChkHr(JsonHelpers::AppendString(productTypes, L"Application"))
ChkHr(JsonHelpers::AppendString(productTypes, L"UnmanagedConsumable"))
ChkHr(JsonHelpers::CreateJsonArray(&addOns))
ChkHr(JsonHelpers::CreateJsonArray(&authTokensArray))
ChkHr(JsonHelpers::CreateJsonArray(&jsonBeneficiaries))
ChkHr(JsonHelpers::CreateJsonArray(&jsonEntitlementFilters))
ChkHr(JsonHelpers::CreateJsonArray(&jsonProductSkuIds))
ChkHr(JsonHelpers::CreateJsonArray(&products))
ChkHr(JsonHelpers::CreateJsonArray(&productSkuIds))
ChkHr(JsonHelpers::CreateJsonArray(&productTypes))
ChkHr(JsonHelpers::CreateJsonArray(&spBeneficiaryArray))
ChkHr(JsonHelpers::CreateJsonObject(&_request))
ChkHr(JsonHelpers::CreateJsonObject(&_response))
ChkHr(JsonHelpers::CreateJsonObject(&beneficiary))
ChkHr(JsonHelpers::CreateJsonObject(&includeRelationship))
ChkHr(JsonHelpers::CreateJsonObject(&jsonCatalogParameters))
ChkHr(JsonHelpers::CreateJsonObject(&jsonCollectionsParameters))
ChkHr(JsonHelpers::CreateJsonObject(&jsonInternalParameters))
ChkHr(JsonHelpers::CreateJsonObject(&jsonOutput))
ChkHr(JsonHelpers::CreateJsonObject(&jsonParameters))
ChkHr(JsonHelpers::CreateJsonObject(&jsonResultObject))
ChkHr(JsonHelpers::CreateJsonObject(&newResults))
ChkHr(JsonHelpers::CreateJsonObject(&package))
ChkHr(JsonHelpers::CreateJsonObject(&previewResultJson))
ChkHr(JsonHelpers::CreateJsonObject(&productSku))
ChkHr(JsonHelpers::CreateJsonObject(&request))
ChkHr(JsonHelpers::CreateJsonObject(&spBeneficiary))
ChkHr(JsonHelpers::CreateJsonObject(&spRequest))
ChkHr(JsonHelpers::CreateJsonObject(&userAuth))
ChkHr(JsonHelpers::CreateJsonObject(jsonTemp.GetAddressOf()))
ChkHr(JsonHelpers::GetArraySizeFromJsonArray(_currentBatch, &_currentBatchCount))
ChkHr(JsonHelpers::GetArraySizeFromJsonArray(alternateIds, &count))
ChkHr(JsonHelpers::GetArraySizeFromJsonArray(availabilities, &countAvailabilities))
ChkHr(JsonHelpers::GetArraySizeFromJsonArray(collectionDataArray, &collectionSize))
ChkHr(JsonHelpers::GetArraySizeFromJsonArray(displaySkuAvailabilities, &count))
ChkHr(JsonHelpers::GetArraySizeFromJsonArray(displaySkuAvailabilities, &countSkuAvailabilities))
ChkHr(JsonHelpers::GetArraySizeFromJsonArray(images, &countImages))
ChkHr(JsonHelpers::GetArraySizeFromJsonArray(items, &count))
ChkHr(JsonHelpers::GetArraySizeFromJsonArray(jsonArray, &count))
ChkHr(JsonHelpers::GetArraySizeFromJsonArray(jsonSKUAvailabilities, &cchSKUAvailablilities))
ChkHr(JsonHelpers::GetArraySizeFromJsonArray(jsonUriArray, &countUris))
ChkHr(JsonHelpers::GetArraySizeFromJsonArray(localizedProperties, &count))
ChkHr(JsonHelpers::GetArraySizeFromJsonArray(marketProperties, &count))
ChkHr(JsonHelpers::GetArraySizeFromJsonArray(productAddOns, &addOnSize))
ChkHr(JsonHelpers::GetArraySizeFromJsonArray(products, &productsSize))
ChkHr(JsonHelpers::GetArraySizeFromJsonArray(productsArray, &productSize))
ChkHr(JsonHelpers::GetArraySizeFromJsonArray(relatedProducts, &relatedProductsSize))
ChkHr(JsonHelpers::GetArraySizeFromJsonArray(searchTitles, &countTitles))
ChkHr(JsonHelpers::GetArraySizeFromJsonArray(skuAvailabilities, &skuAvailabilitySize))
ChkHr(JsonHelpers::GetArraySizeFromJsonArray(skuLocalizedProperties, &count))
ChkHr(JsonHelpers::GetArraySizeFromJsonArray(spActions, &actionsSize))
ChkHr(JsonHelpers::GetArraySizeFromJsonArray(spAlternateIds, &alternateIdsSize))
ChkHr(JsonHelpers::GetArraySizeFromJsonArray(spAvailabilities, &availabilitiesSize))
ChkHr(JsonHelpers::GetArraySizeFromJsonArray(spDisplaySkuAvailabilities, &displaySkuAvailabilitiesSize))
ChkHr(JsonHelpers::GetArraySizeFromJsonArray(storeProductArray, &productCount))
ChkHr(JsonHelpers::GetNamedArray(collectionData, L"items", &collectionDataArray))
ChkHr(JsonHelpers::GetNamedArray(customPolicyObject, L"packages", &packages))
ChkHr(JsonHelpers::GetNamedArray(displayProductSearchResult, L"Products", &_currentBatch))
ChkHr(JsonHelpers::GetNamedArray(displayProductSearchResult, L"Products", &products))
ChkHr(JsonHelpers::GetNamedArray(item, L"Availabilities", &availabilities))
ChkHr(JsonHelpers::GetNamedArray(jsonResult, L"Products", &products))
ChkHr(JsonHelpers::GetNamedArray(marketProperty, L"RelatedProducts", &relatedProducts))
ChkHr(JsonHelpers::GetNamedArray(package, L"productAddOns", &productAddOns))
ChkHr(JsonHelpers::GetNamedArray(product, L"AlternateIds", &alternateIds))
ChkHr(JsonHelpers::GetNamedArray(product, L"DisplaySkuAvailabilities", &displaySkuAvailabilities))
ChkHr(JsonHelpers::GetNamedArray(product, L"DisplaySkuAvailabilities", &skuAvailabilities))
ChkHr(JsonHelpers::GetNamedArray(product, L"LocalizedProperties", &localizedProperties))
ChkHr(JsonHelpers::GetNamedArray(product, L"MarketProperties", &marketProperties))
ChkHr(JsonHelpers::GetNamedArray(productsResultObject, L"Products", &productsArray))
ChkHr(JsonHelpers::GetNamedArray(properties, L"Images", &images))
ChkHr(JsonHelpers::GetNamedArray(properties, L"SearchTitles", &searchTitles))
ChkHr(JsonHelpers::GetNamedArray(response, L"items", &items))
ChkHr(JsonHelpers::GetNamedArray(sku, L"LocalizedProperties", &skuLocalizedProperties))
ChkHr(JsonHelpers::GetNamedArray(skuAvailability, L"Availabilities", &availabilities))
ChkHr(JsonHelpers::GetNamedArray(spAvailability, L"Actions", &spActions))
ChkHr(JsonHelpers::GetNamedArray(spDisplaySkuAvailability, L"Availabilities", &spAvailabilities))
ChkHr(JsonHelpers::GetNamedArray(spJson, L"DisplaySkuAvailabilities", &displaySkuAvailabilities))
ChkHr(JsonHelpers::GetNamedArray(spProduct, L"AlternateIds", &spAlternateIds))
ChkHr(JsonHelpers::GetNamedArray(spProduct, L"DisplaySkuAvailabilities", &spDisplaySkuAvailabilities))
ChkHr(JsonHelpers::GetNamedDateTime(conditions, L"EndDate", &pricingInfo->SaleEndDate))
ChkHr(JsonHelpers::GetNamedInteger(customPolicyObject, L"version", &version))
ChkHr(JsonHelpers::GetNamedInteger(displayProductSearchResult, L"TotalResultCount", &totalResultCount))
ChkHr(JsonHelpers::GetNamedInteger(displayProductSearchResult, L"TotalResultCount", (int *)&count))
ChkHr(JsonHelpers::GetNamedInteger(marketProperty, L"MinimumUserAge", &rating))
ChkHr(JsonHelpers::GetNamedObject(availability, L"Properties", &availabilityProperties))
ChkHr(JsonHelpers::GetNamedObject(firstSkuAvail, L"Sku", &firstSkuAvailSku))
ChkHr(JsonHelpers::GetNamedObject(firstSkuAvailSku, L"Properties", &firstSkuAvailSkuProperties))
ChkHr(JsonHelpers::GetNamedObject(jsonIAPs, L"DisplayProductSearchResult", &displayProductSearchResult))
ChkHr(JsonHelpers::GetNamedObject(jsonObject, L"DisplayProductSearchResult", &displayProductSearchResult))
ChkHr(JsonHelpers::GetNamedObject(jsonObject, L"DisplaySkuSearchResult", &displayProductSearchResult))
ChkHr(JsonHelpers::GetNamedObject(orderManagementData, L"Price", &price))
ChkHr(JsonHelpers::GetNamedObject(productResult, L"Product", &product))
ChkHr(JsonHelpers::GetNamedObject(sku, L"Properties", &skuProperties))
ChkHr(JsonHelpers::GetNamedObject(skuAvailability, L"Sku", &sku))
ChkHr(JsonHelpers::GetNamedObject(skuProperties, L"LicensingData", &skuLicensingData))
ChkHr(JsonHelpers::GetNamedObject(spAvailability, L"Conditions", &conditions))
ChkHr(JsonHelpers::GetNamedObject(spAvailability, L"OrderManagementData", &orderManagementData))
ChkHr(JsonHelpers::GetNamedObject(spDisplaySkuAvailability, L"Sku", &spSku))
ChkHr(JsonHelpers::GetNamedObject(spJsonObject, L"Product", ppJsonObject))
ChkHr(JsonHelpers::GetNamedString(altId, L"IdType", type.GetAddressOf()))
ChkHr(JsonHelpers::GetNamedString(altId, L"Value", &spInAppOffer->InAppOfferToken))
ChkHr(JsonHelpers::GetNamedString(availability, L"SkuId", skuId.GetAddressOf()))
ChkHr(JsonHelpers::GetNamedString(collectionItem, L"productId", collectionProductId.GetAddressOf()))
ChkHr(JsonHelpers::GetNamedString(collectionItem, L"skuId", collectionSkuId.GetAddressOf()))
ChkHr(JsonHelpers::GetNamedString(firstProduct, L"ProductId", bigCatId))
ChkHr(JsonHelpers::GetNamedString(firstProduct, L"ProductId", bigCatIdOut))
ChkHr(JsonHelpers::GetNamedString(firstSkuAvailSkuProperties, L"CustomDeveloperData", &spInAppOffer->ProductTag))
ChkHr(JsonHelpers::GetNamedString(image, L"ImagePurpose", purpose.GetAddressOf()))
ChkHr(JsonHelpers::GetNamedString(image, L"Uri", &spInAppOffer->ImageUri))
ChkHr(JsonHelpers::GetNamedString(item, L"inAppOfferToken", inAppOfferToken.GetAddressOf()))
ChkHr(JsonHelpers::GetNamedString(item, L"inAppOfferToken", inAppOfferTokenString.GetAddressOf()))
ChkHr(JsonHelpers::GetNamedString(item, L"inAppOfferToken", itemInAppOfferToken.GetAddressOf()))
ChkHr(JsonHelpers::GetNamedString(item, L"productId", itemProductId.GetAddressOf()))
ChkHr(JsonHelpers::GetNamedString(item, L"productId", productId.GetAddressOf()))
ChkHr(JsonHelpers::GetNamedString(item, L"productId", productIdString.GetAddressOf()))
ChkHr(JsonHelpers::GetNamedString(item, L"skuType", skuType.GetAddressOf()))
ChkHr(JsonHelpers::GetNamedString(item, L"transactionId", itemTransactionId.GetAddressOf()))
ChkHr(JsonHelpers::GetNamedString(item, L"transactionId", transactionIdString.GetAddressOf()))
ChkHr(JsonHelpers::GetNamedString(jsonDataObj, L"AppServiceName", appServiceName.GetAddressOf()))
ChkHr(JsonHelpers::GetNamedString(jsonParameters, L"AuthToken", authToken.GetAddressOf()))
ChkHr(JsonHelpers::GetNamedString(jsonResponse, L"key", result))
ChkHr(JsonHelpers::GetNamedString(package, L"skuId", _skuId.GetAddressOf()))
ChkHr(JsonHelpers::GetNamedString(pagingInfo, L"continuationToken", ContinuationToken))
ChkHr(JsonHelpers::GetNamedString(price, L"CurrencyCode", &pricingInfo->CurrencyCode))
ChkHr(JsonHelpers::GetNamedString(product, L"ProductId", &spInAppOffer->InAppProductId))
ChkHr(JsonHelpers::GetNamedString(product, L"ProductId", currentProductId.GetAddressOf()))
ChkHr(JsonHelpers::GetNamedString(product, L"ProductId", productId.GetAddressOf()))
ChkHr(JsonHelpers::GetNamedString(product, L"ProductType", productType.GetAddressOf()))
ChkHr(JsonHelpers::GetNamedString(productAddOn, L"productId", addOnProductId.GetAddressOf()))
ChkHr(JsonHelpers::GetNamedString(productAddOn, L"skuId", addOnSkuId.GetAddressOf()))
ChkHr(JsonHelpers::GetNamedString(properties, L"ProductDescription", &spInAppOffer->Description))
ChkHr(JsonHelpers::GetNamedString(properties, L"ProductDescription", &spStoreAppInfo->Description))
ChkHr(JsonHelpers::GetNamedString(properties, L"ProductTitle", &spInAppOffer->Name))
ChkHr(JsonHelpers::GetNamedString(properties, L"ProductTitle", &spStoreAppInfo->Name))
ChkHr(JsonHelpers::GetNamedString(relatedProduct, L"RelatedProductId", relatedProductId.GetAddressOf()))
ChkHr(JsonHelpers::GetNamedString(relatedProduct, L"RelationshipType", type.GetAddressOf()))
ChkHr(JsonHelpers::GetNamedString(response, L"key", key))
ChkHr(JsonHelpers::GetNamedString(sku, L"SkuId", &spInAppSkuInfo->SkuId))
ChkHr(JsonHelpers::GetNamedString(sku, L"SkuId", skuId.GetAddressOf()))
ChkHr(JsonHelpers::GetNamedString(sku, L"SkuType", &spInAppSkuInfo->SkuType))
ChkHr(JsonHelpers::GetNamedString(skuFirstLocalizedProperties, L"SkuDescription", &spInAppSkuInfo->Description))
ChkHr(JsonHelpers::GetNamedString(skuFirstLocalizedProperties, L"SkuTitle", &spInAppSkuInfo->Title))
ChkHr(JsonHelpers::GetNamedString(skuLicensingData, L"ProductId", &spInAppSkuInfo->ProductId))
ChkHr(JsonHelpers::GetNamedString(skuProperties, L"CustomDeveloperData", &spInAppSkuInfo->CustomDeveloperData))
ChkHr(JsonHelpers::GetNamedString(spAlternateId, L"IdType", alternateIdType.GetAddressOf()))
ChkHr(JsonHelpers::GetNamedString(spAlternateId, L"Value", alternateIdValue.GetAddressOf()))
ChkHr(JsonHelpers::GetNamedString(spAvailability, L"AvailabilityId", hstrAvailabilityId.GetAddressOf()))
ChkHr(JsonHelpers::GetNamedString(spJson, L"PreferredSkuId", preferredSkuId.GetAddressOf()))
ChkHr(JsonHelpers::GetNamedString(spProduct, L"PreferredSkuId", hstrPreferredSkuId.GetAddressOf()))
ChkHr(JsonHelpers::GetNamedString(spProduct, L"ProductId", hstrProductId.GetAddressOf()))
ChkHr(JsonHelpers::GetNamedString(spProduct, L"ProductType", hstrProductType.GetAddressOf()))
ChkHr(JsonHelpers::GetNamedString(spSku, L"SkuId", hstrSkuId.GetAddressOf()))
ChkHr(JsonHelpers::GetNamedString(title, L"SearchTitleString", searchTitleString.GetAddressOf()))
ChkHr(JsonHelpers::GetNamedString(title, L"SearchTitleType", titleType.GetAddressOf()))
ChkHr(JsonHelpers::GetNamedValue(price, L"ListPrice", &listPrice))
ChkHr(JsonHelpers::GetNamedValue(price, L"MSRP", &basePrice))
ChkHr(JsonHelpers::ParseToJsonArray(data.GetRawBuffer(nullptr), &spJsonUriArray))
ChkHr(JsonHelpers::ParseToJsonArray(data.GetRawBuffer(nullptr), spJsonUriArray.ReleaseAndGetAddressOf()))
ChkHr(JsonHelpers::ParseToJsonObject(::WindowsGetStringRawBuffer(collectionsJson, nullptr), &collectionData))
ChkHr(JsonHelpers::ParseToJsonObject(::WindowsGetStringRawBuffer(productsJson, nullptr), &productsResultObject))
ChkHr(JsonHelpers::ParseToJsonObject(_jsonRequest.GetRawBuffer(nullptr), jsonDataObj.GetAddressOf()))
ChkHr(JsonHelpers::ParseToJsonObject(customPolicyDecoded.GetRawBuffer(nullptr), &customPolicyObject))
ChkHr(JsonHelpers::ParseToJsonObject(jsonBodyString.GetRawBuffer(nullptr), &jsonResult))
ChkHr(JsonHelpers::ParseToJsonObject(jsonResponse.GetRawBuffer(nullptr), _response.GetAddressOf()))
ChkHr(JsonHelpers::ParseToJsonObject(jsonResponseString.GetRawBuffer(nullptr), &jsonResponse))
ChkHr(JsonHelpers::ParseToJsonObject(modalFlowSizes.GetRawBuffer(nullptr), modalFlowJsonData.GetAddressOf()))
ChkHr(JsonHelpers::ParseToJsonObject(productJsonString.GetRawBuffer(nullptr), &productResult))
ChkHr(JsonHelpers::ParseToJsonObject(productJsonString.GetRawBuffer(nullptr), &spResults))
ChkHr(JsonHelpers::ParseToJsonObject(results.GetRawBuffer(nullptr), &spResults))
ChkHr(JsonHelpers::ParseToJsonObject(tmp.GetRawBuffer(nullptr), _request.GetAddressOf()))
ChkHr(JsonHelpers::ParseToJsonObject(WindowsGetStringRawBuffer(jsonDataString, nullptr), jsonData.GetAddressOf()))
ChkHr(JsonHelpers::ParseToJsonObject(WindowsGetStringRawBuffer(overrideJsonRequest, nullptr), &_request))
ChkHr(JsonHelpers::ParseToJsonObject(WindowsGetStringRawBuffer(parametersAsJson, nullptr), &jsonObject))
ChkHr(JsonHelpers::RemoveAt(products, static_cast<UINT32>(index)))
ChkHr(JsonHelpers::SetNamedArray(jsonCollectionsParameters, L"entitlementFilters", jsonEntitlementFilters))
ChkHr(JsonHelpers::SetNamedArray(jsonCollectionsParameters, L"productSkuIds", jsonProductSkuIds))
ChkHr(JsonHelpers::SetNamedArray(jsonCollectionsParameters, L"productSkuIds", productSkuIds))
ChkHr(JsonHelpers::SetNamedArray(jsonInput, jsonSubstitutionList->destinationKey.GetRawBuffer(nullptr), substituteArray))
ChkHr(JsonHelpers::SetNamedArray(jsonParameters, jsonSubstitutionList->destinationKey.GetRawBuffer(nullptr), jsonBeneficiaries))
ChkHr(JsonHelpers::SetNamedArray(newResults.Get(), L"Products", products))
ChkHr(JsonHelpers::SetNamedArray(package, L"productAddOns", addOns))
ChkHr(JsonHelpers::SetNamedArray(request, L"productSkuIds", productSkuIds))
ChkHr(JsonHelpers::SetNamedArray(request, L"productTypes", productTypes))
ChkHr(JsonHelpers::SetNamedArray(spRequest, L"beneficiaries", spBeneficiaryArray))
ChkHr(JsonHelpers::SetNamedArray(userAuth, userSid.GetRawBuffer(nullptr), authTokensArray))
ChkHr(JsonHelpers::SetNamedBool(_request, L"HasPreviewCapability", hasPreviewCapability))
ChkHr(JsonHelpers::SetNamedBool(json, keyName.GetRawBuffer(nullptr), boolValue))
ChkHr(JsonHelpers::SetNamedBool(package, L"isActive", !!isActive))
ChkHr(JsonHelpers::SetNamedBool(package, L"isDiscLicense", isDiscLicense))
ChkHr(JsonHelpers::SetNamedBool(package, L"isTrial", !!isTrial))
ChkHr(JsonHelpers::SetNamedBool(package, L"isTrialOwnedByThisUser", isTrialOwnedByThisUser))
ChkHr(JsonHelpers::SetNamedBool(productAddOn, L"isActive", true))
ChkHr(JsonHelpers::SetNamedBool(spRequest, L"expandSatisfyingItems", false))
ChkHr(JsonHelpers::SetNamedDateTime(package, L"expiration", expirationDate))
ChkHr(JsonHelpers::SetNamedDateTime(productAddOn, L"expiration", addOnExpirationTime))
ChkHr(JsonHelpers::SetNamedNumber(_response, L"error", hrPurchase))
ChkHr(JsonHelpers::SetNamedNumber(json, keyName.GetRawBuffer(nullptr), byteValue))
ChkHr(JsonHelpers::SetNamedNumber(json, keyName.GetRawBuffer(nullptr), doubleValue))
ChkHr(JsonHelpers::SetNamedNumber(json, keyName.GetRawBuffer(nullptr), floatValue))
ChkHr(JsonHelpers::SetNamedNumber(json, keyName.GetRawBuffer(nullptr), int16Value))
ChkHr(JsonHelpers::SetNamedNumber(json, keyName.GetRawBuffer(nullptr), int32Value))
ChkHr(JsonHelpers::SetNamedNumber(json, keyName.GetRawBuffer(nullptr), static_cast<double>(int64Value)))
ChkHr(JsonHelpers::SetNamedNumber(json, keyName.GetRawBuffer(nullptr), static_cast<double>(uint64Value)))
ChkHr(JsonHelpers::SetNamedNumber(json, keyName.GetRawBuffer(nullptr), uint16Value))
ChkHr(JsonHelpers::SetNamedNumber(json, keyName.GetRawBuffer(nullptr), uint32Value))
ChkHr(JsonHelpers::SetNamedNumber(jsonCollectionsParameters, L"maxPageSize", _maxItems))
ChkHr(JsonHelpers::SetNamedNumber(jsonCollectionsParameters, L"quantity", quantity))
ChkHr(JsonHelpers::SetNamedNumber(jsonInput, jsonSubstitutionList->destinationKey.GetRawBuffer(nullptr), substituteNumber))
ChkHr(JsonHelpers::SetNamedNumber(jsonOutput, L"AppServiceResponseStatus", responseStatus))
ChkHr(JsonHelpers::SetNamedNumber(jsonResultObject, L"NewQuantity", 0))
ChkHr(JsonHelpers::SetNamedNumber(jsonResultObject, L"NewQuantity", isInUserCollection ? 1 : 0))
ChkHr(JsonHelpers::SetNamedNumber(previewResultJson, L"licensableStatus", licenseQueryStatus))
ChkHr(JsonHelpers::SetNamedObject(jsonCollectionsParameters, L"includeRelationship", includeRelationship))
ChkHr(JsonHelpers::SetNamedObject(jsonInput, jsonSubstitutionList->destinationKey.GetRawBuffer(nullptr), substituteObject))
ChkHr(JsonHelpers::SetNamedObject(jsonParameters, jsonSubstitutionList->destinationKey.GetRawBuffer(nullptr), jsonBeneficiary))
ChkHr(JsonHelpers::SetNamedObject(request, L"beneficiary", spBeneficiary))
ChkHr(JsonHelpers::SetNamedObject(sku, L"CollectionData", collectionItem.Get()))
ChkHr(JsonHelpers::SetNamedString( jsonCatalogParameters.Get(), L"productIdsWithCommas", storeIdsWithCommas.GetRawBuffer(nullptr)))
ChkHr(JsonHelpers::SetNamedString( jsonCatalogParameters.Get(), L"productKinds", productKindsWithCommas.GetRawBuffer(nullptr)))
ChkHr(JsonHelpers::SetNamedString(_request, L"CV", cv.GetUnicode()))
ChkHr(JsonHelpers::SetNamedString(_request, L"DeviceContext", deviceContextString.GetRawBuffer(nullptr)))
ChkHr(JsonHelpers::SetNamedString(_request, L"InvokedApi", invokedApi))
ChkHr(JsonHelpers::SetNamedString(_request, L"Name", tmp.GetRawBuffer(nullptr)))
ChkHr(JsonHelpers::SetNamedString(_request, L"ParentProductId", WindowsGetStringRawBuffer(appProductId, nullptr)))
ChkHr(JsonHelpers::SetNamedString(_request, L"StoreId", storeProductId.GetRawBuffer(nullptr)))
ChkHr(JsonHelpers::SetNamedString(_request, L"UserId", realId.GetRawBuffer(nullptr)))
ChkHr(JsonHelpers::SetNamedString(_request, L"Version", hstrPurchaseAppAPIVersion.GetRawBuffer(nullptr)))
ChkHr(JsonHelpers::SetNamedString(_response, L"purchaseStatus", L"AlreadyPurchased"))
ChkHr(JsonHelpers::SetNamedString(_response, L"purchaseStatus", L"NetworkError"))
ChkHr(JsonHelpers::SetNamedString(_response, L"purchaseStatus", L"NotPurchased"))
ChkHr(JsonHelpers::SetNamedString(_response, L"purchaseStatus", L"ServerError"))
ChkHr(JsonHelpers::SetNamedString(beneficiary, L"identityType", L"Aad"))
ChkHr(JsonHelpers::SetNamedString(beneficiary, L"identityType", L"Msa"))
ChkHr(JsonHelpers::SetNamedString(beneficiary, L"identityValue", ::WindowsGetStringRawBuffer(token, nullptr)))
ChkHr(JsonHelpers::SetNamedString(beneficiary, L"localTicketReference", ::WindowsGetStringRawBuffer(accountId, nullptr)))
ChkHr(JsonHelpers::SetNamedString(includeRelationship, L"relatedProductId", _productStoreId.Get()))
ChkHr(JsonHelpers::SetNamedString(includeRelationship, L"relationshipType", SellableBy.Get()))
ChkHr(JsonHelpers::SetNamedString(json, keyName.GetRawBuffer(nullptr), stringValue.GetRawBuffer(nullptr)))
ChkHr(JsonHelpers::SetNamedString(jsonCatalogParameters, L"actionFilter", actionFilter.Get()))
ChkHr(JsonHelpers::SetNamedString(jsonCatalogParameters, L"productIdsWithCommas", productId))
ChkHr(JsonHelpers::SetNamedString(jsonCatalogParameters, L"productIdsWithCommas", storeIdsWithCommas.Get()))
ChkHr(JsonHelpers::SetNamedString(jsonCatalogParameters, L"productKinds", productKindsWithCommas.Get()))
ChkHr(JsonHelpers::SetNamedString(jsonCatalogParameters.Get(), L"itemCount", maxItemsAsHstring.GetRawBuffer(nullptr)))
ChkHr(JsonHelpers::SetNamedString(jsonCatalogParameters.Get(), L"productKinds", productKindsWithCommas.GetRawBuffer(nullptr)))
ChkHr(JsonHelpers::SetNamedString(jsonCatalogParameters.Get(), L"skipCount", skipCountAsHString.GetRawBuffer(nullptr)))
ChkHr(JsonHelpers::SetNamedString(jsonCollectionsParameters, L"consumableProductId", productId))
ChkHr(JsonHelpers::SetNamedString(jsonCollectionsParameters, L"continuationToken", _continuationToken.Get()))
ChkHr(JsonHelpers::SetNamedString(jsonCollectionsParameters, L"trackingId", HStringReference(szTrackingId).Get()))
ChkHr(JsonHelpers::SetNamedString(jsonDataObj, L"CV", _cv.GetRawBuffer(nullptr)))
ChkHr(JsonHelpers::SetNamedString(jsonInput, jsonSubstitutionList->destinationKey.GetRawBuffer(nullptr), substituteString.Get()))
ChkHr(JsonHelpers::SetNamedString(jsonInternalParameters.Get(), L"deviceFamily", deviceFamily.GetRawBuffer(nullptr)))
ChkHr(JsonHelpers::SetNamedString(jsonInternalParameters.Get(), L"deviceMoid", moid.GetRawBuffer(nullptr)))
ChkHr(JsonHelpers::SetNamedString(jsonInternalParameters.Get(), L"deviceOemid", oemid.GetRawBuffer(nullptr)))
ChkHr(JsonHelpers::SetNamedString(jsonInternalParameters.Get(), L"deviceScmid", scmid.GetRawBuffer(nullptr)))
ChkHr(JsonHelpers::SetNamedString(jsonInternalParameters.Get(), L"languages", languages.GetRawBuffer(nullptr)))
ChkHr(JsonHelpers::SetNamedString(jsonInternalParameters.Get(), L"locale", language.GetRawBuffer(nullptr)))
ChkHr(JsonHelpers::SetNamedString(jsonInternalParameters.Get(), L"market", market.GetRawBuffer(nullptr)))
ChkHr(JsonHelpers::SetNamedString(jsonInternalParameters.Get(), L"parentProductId", _productStoreId.GetRawBuffer(nullptr)))
ChkHr(JsonHelpers::SetNamedString(jsonInternalParameters.Get(), L"PFN", _packageFullName.GetRawBuffer(nullptr)))
ChkHr(JsonHelpers::SetNamedString(jsonParameters, L"publisherUserId", publisherUserId))
ChkHr(JsonHelpers::SetNamedString(jsonParameters, L"serviceTicket", serviceTicket))
ChkHr(JsonHelpers::SetNamedString(jsonTemp, L"DevOfferId", _devOfferId.Get()))
ChkHr(JsonHelpers::SetNamedString(jsonTemp, L"StoreId", storeId.Get()))
ChkHr(JsonHelpers::SetNamedString(package, L"productId", _productStoreId.Get()))
ChkHr(JsonHelpers::SetNamedString(package, L"skuId", _skuId.Get()))
ChkHr(JsonHelpers::SetNamedString(package, L"trialUniqueId", trialUniqueId.Get()))
ChkHr(JsonHelpers::SetNamedString(previewResultJson, L"licensableSku", licensableSku.Get()))
ChkHr(JsonHelpers::SetNamedString(productSku, L"productId", productId))
ChkHr(JsonHelpers::SetNamedString(productSku, L"productId", productId.Get()))
ChkHr(JsonHelpers::SetNamedString(request, L"AuthToken", HStringReference(L"").Get()))
ChkHr(JsonHelpers::SetNamedString(request, L"continuationToken", continuationToken.Get()))
ChkHr(JsonHelpers::SetNamedString(request, L"parentProductId", ParentProductId))
ChkHr(JsonHelpers::SetNamedString(request, L"productId", catalogProductId))
ChkHr(JsonHelpers::SetNamedString(request, L"productIds", productIdsString.Get()))
ChkHr(JsonHelpers::SetNamedString(request, L"publisherUserId", publisherUserId))
ChkHr(JsonHelpers::SetNamedString(request, L"serviceTicket", serviceTicket))
ChkHr(JsonHelpers::SetNamedString(request, L"transactionId", transactionId))
ChkHr(JsonHelpers::SetNamedString(spBeneficiary, L"identityType", L"msa"))
ChkHr(JsonHelpers::SetNamedString(spBeneficiary, L"identityValue", authTicket.GetRawBuffer(nullptr)))
ChkHr(JsonHelpers::SetNamedString(spBeneficiary, L"identityValue", MsaTicket))
ChkHr(JsonHelpers::SetNamedString(spBeneficiary, L"localTicketReference", L"0"))
ChkHr(JsonHelpers::SetNamedString(spRequest, L"market", market.Get()))
ChkHr(JsonHelpers::SetNamedString(spRequest, L"validityType", L"Valid"))
ChkHr(JsonHelpers::SetNamedTimeSpan(package, L"trialTimeRemaining", trialTimeRemaining))
ChkHr(JsonHelpers::Stringify(_jsonValue, _stringifiedValue.GetAddressOf()))
ChkHr(JsonHelpers::Stringify(_request, jsonRequest.GetAddressOf()))
ChkHr(JsonHelpers::Stringify(_request, jsonRequestString.GetAddressOf()))
ChkHr(JsonHelpers::Stringify(_response, jsonIntialResponse.GetAddressOf()))
ChkHr(JsonHelpers::Stringify(_response, jsonResponse.GetAddressOf()))
ChkHr(JsonHelpers::Stringify(entry, entryJson.GetAddressOf()))
ChkHr(JsonHelpers::Stringify(jsonBody.Get(), body.GetAddressOf()))
ChkHr(JsonHelpers::Stringify(jsonObject, cleansedParameterAsJson.GetAddressOf()))
ChkHr(JsonHelpers::Stringify(jsonOutput, _jsonResponse.GetAddressOf()))
ChkHr(JsonHelpers::Stringify(jsonResult, jsonBodyString.GetAddressOf()))
ChkHr(JsonHelpers::Stringify(jsonResultObject, jsonResult))
ChkHr(JsonHelpers::Stringify(jsonTemp, overrideJsonRequest.GetAddressOf()))
ChkHr(JsonHelpers::Stringify(newResults, productJsonString.GetAddressOf()))
ChkHr(JsonHelpers::Stringify(package, _cachedLicenseJson.GetAddressOf()))
ChkHr(JsonHelpers::Stringify(pRequest, requestJsonString.GetAddressOf()))
ChkHr(JsonHelpers::Stringify(previewResultJson, licenseSatisfactionResultJson))
ChkHr(JsonHelpers::Stringify(request, requestJson.GetAddressOf()))
ChkHr(jsonInput.As(&jsonObjectIterable))
ChkHr(jsonInput->SetNamedValue(jsonSubstitutionList->destinationKey.Get(), jsonSubstitutionList->defaultValue.Get()))
ChkHr(jsonLegacyWindowsPhoneLicensingData->GetNamedString(HStringReference(L"PublisherId").Get(), strPublisherId.GetAddressOf()))
ChkHr(jsonLicensingData->GetNamedObject(HStringReference(L"LegacyWindowsPhoneLicensingData").Get(), &jsonLegacyWindowsPhoneLicensingData))
ChkHr(jsonObject->SetNamedValue(HStringReference(g_DoNotLogTheseValues[i]).Get(), nullptr))
ChkHr(jsonObjectIterable->First(&jsonObjectIterator))
ChkHr(jsonObjectIterator->get_Current(&currentPair))
ChkHr(jsonObjectIterator->get_HasCurrent(&hasCurrent))
ChkHr(jsonObjectIterator->MoveNext(&hasCurrent))
ChkHr(jsonObjectStatics->Parse(jsonString, &jsonObject))
ChkHr(jsonObjectStatics->Parse(jsonString.Get(), &jsonObject))
ChkHr(jsonObjectStatics->Parse(responseJsonString.Get(), &responseJson))
ChkHr(JsonParser::ParseJSONStringToObject( _jsonResponse, this, requestStoreRateAndReviewTable))
ChkHr(JsonParser::ParseJSONStringToObject( _response, this, purchaseResultsTable))
ChkHr(JsonParser::ParseJSONStringToObject( jsonCollectionsString, this, collectionQueryResultsTable))
ChkHr(JsonParser::ParseJSONStringToObject( jsonResponse, this, purchaseResultsTable))
ChkHr(JsonParser::ParseJSONStringToObject( jsonString, this, itemsTable))
ChkHr(JsonParser::ParseJSONStringToObject( jsonString, this, queryResultsTable))
ChkHr(JsonParser::ParseJSONStringToObject( licenseSatisfactionResult, this, previewLicenseResultsTable))
ChkHr(JsonParser::ParseJSONStringToObject( productJson, this, productQueryResultsTable))
ChkHr(JsonParser::ParseJSONStringToObject( productJson, this, queryResultsTable))
ChkHr(JsonParser::ParseJSONStringToObject( productJsonString, &results, getProductsByKindsResultsTable))
ChkHr(JsonParser::ParseJSONStringToObject( productJsonString, this, productQueryResultsTable))
ChkHr(JsonParser::ParseJSONStringToObject( productJsonString, this, queryResultsTable))
ChkHr(JsonParser::ParseJSONStringToObject( scope, &requestParams, responseTable))
ChkHr(JsonParser::ParseJSONToObject( childObject, tag, responseTable))
ChkHr(JsonParser::ParseJSONToObject( entry, &requestParams, responseTable))
ChkHr(JsonParser::ParseJSONToObject( json, this, AppLicenseTable))
ChkHr(JsonParser::ParseJSONToObject( json, this, AvailabilityRootTable))
ChkHr(JsonParser::ParseJSONToObject( json, this, DisplaySkuAvailabilitiesTable))
ChkHr(JsonParser::ParseJSONToObject( json, this, imageTable))
ChkHr(JsonParser::ParseJSONToObject( json, this, itemTable))
ChkHr(JsonParser::ParseJSONToObject( json, this, LicenseTable))
ChkHr(JsonParser::ParseJSONToObject( json, this, OrderManagementDataTable))
ChkHr(JsonParser::ParseJSONToObject( json, this, ProductTable))
ChkHr(JsonParser::ParseJSONToObject( json, this, RecurrenceTable))
ChkHr(JsonParser::ParseJSONToObject( json, this, videoTable))
ChkHr(jsonProperties->GetNamedObject(HStringReference(L"LicensingData").Get(), &jsonLicensingData))
ChkHr(jsonSKU->GetNamedObject(HStringReference(L"Properties").Get(), &jsonProperties))
ChkHr(jsonSKUAvailabilities->GetObjectAt(0, &jsonSKUAvailability))
ChkHr(jsonSKUAvailability->GetNamedObject(HStringReference(L"Sku").Get(), &jsonSKU))
ChkHr(jsonSubstitutionList->defaultValue->get_ValueType(&defaultValueType))
ChkHr(jsonSubstitutionList->defaultValue->Stringify(defaultValueString.GetAddressOf()))
ChkHr(jsonSubstitutionList->destinationKey.CopyTo(jsonSubstitutionList->sourceKey.GetAddressOf()))
ChkHr(jsonUriArray->GetObjectAt(index, &object))
ChkHr(jsonValue->get_ValueType(&jsonType))
ChkHr(jsonValue->get_ValueType(&type))
ChkHr(jsonValue->get_ValueType(&valueType))
ChkHr(jsonValue->GetArray(jsonArray.GetAddressOf()))
ChkHr(jsonValue->GetBoolean(&value))
ChkHr(jsonValue->GetNumber(&value))
ChkHr(jsonValue->GetObjectW(&childObject))
ChkHr(jsonValue->GetObjectW(jsonObject.GetAddressOf()))
ChkHr(jsonValue->GetString(value.GetAddressOf()))
ChkHr(jsonValue->Stringify(value.GetAddressOf()))
ChkHr(KeyIdentifiers->First(&spKeyIdsIter))
ChkHr(keyIds->Append(HStringReference(keyId.get()).Get()))
ChkHr(keyIds->Append(keyId.Get()))
ChkHr(keyIds->get_Size(&keySize))
ChkHr(keyIds->GetAt(i, keyId.GetAddressOf()))
ChkHr(keyIds->GetView(&keyIdsVectorView))
ChkHr(keyValuePair->get_Value(&info))
ChkHr(keywords->get_Size(&cKeywords))
ChkHr(keywords->GetAt(k, filterKeyword.GetAddressOf()))
ChkHr(license->get_SkuStoreId(skuStoreId.GetAddressOf()))
ChkHr(license->GetContentInfo(__uuidof(**(contentInfo.GetAddressOf())), IID_PPV_ARGS_Helper(contentInfo.GetAddressOf())))
ChkHr(License->GetIsTrial(&isTrial))
ChkHr(License->GetLicenseGrantReason(&_grantReason))
ChkHr(licensedProducts.As(&products))
ChkHr(licensedProducts->Append(productId.Get()))
ChkHr(licensedProducts->get_Size(&size))
ChkHr(licenseInfo->get_IsTrial(&isTrial))
ChkHr(LicenseInformationServer::CreateInstance( _packageFullName.Get(), _appType, cv.Get(), &_spLicenseInformationInternal))
ChkHr(licenseManager->GetSatisfactionInfos( contentIds.Get(), keyIds.Get(), &licenseSatisfactionResult))
ChkHr(licenseManager->GetSatisfactionInfos( contentIdsVectorView.Get(), keyIdsVectorView.Get(), &licenseSatisfactionResult))
ChkHr(licenseManager->GetSatisfactionInfos( contentIdsVectorView.Get(), nullptr, &licenseSatisfactionResult))
ChkHr(LicenseParseReceiptResponse(spbReceiptResponse, cbReceiptResponse, &spbReceipt, &cbReceipt))
ChkHr(licenseReader->get_UnconsumedBufferLength(&licenseBufferLength))
ChkHr(licenseReader->ReadBytes(licenseBufferLength, licenseBuffer))
ChkHr(licenseSatisfactionInfoForAll->Clear())
ChkHr(licenseSatisfactionInfoForAll->GetView(&licenseSatisfactionInfoReadOnlyForAll))
ChkHr(licenseSatisfactionInfoForAll->Insert(contentId.Get(), leinfo.Get(), &replaced))
ChkHr(licenseSatisfactionResult.As(&licenseSatisfactionResultInternal))
ChkHr(licenseSatisfactionResult->get_ExtendedError(&extendedError))
ChkHr(licenseSatisfactionResult->get_LicenseSatisfactionInfos(&infos))
ChkHr(listPrice->Stringify(&pricingInfo->Price))
ChkHr(LoadFormattedString( uLabelId, nullptr, &pszContent))
ChkHr(LoadFormattedString( uTitleId, nullptr, &pszTitle, &szArgument))
ChkHr(LoadFormattedString(uContentId, cv, &pszContent, &szArgument, &szArgument2))
ChkHr(LocalAllocArray(cchBuffer, &pszBuffer))
ChkHr(LocalAllocBytes(cbData, &pszBuffer))
ChkHr(LocalAllocBytes(cbReceipt, &pbReceipt))
ChkHr(localizedProperties->GetObjectAt(0, &properties))
ChkHr(m_evtLicenseStatusChangedEvent.Add(pHandler, pCookie))
ChkHr(m_evtLicenseStatusChangedEvent.InvokeAll())
ChkHr(m_evtLicenseStatusChangedEvent.Remove(iCookie))
ChkHr(m_hstrProductId.CopyTo(pValue))
ChkHr(m_hstrProductId.Set(featureId))
ChkHr(m_hstrProductId.Set(pszProductId))
ChkHr(m_pProductLicenseMap.CopyTo(ppValue))
ChkHr(m_productId.Set(bigCatId))
ChkHr(m_spHashMap.As(&m_spIterable))
ChkHr(m_spHashMap->get_Size(pcItems))
ChkHr(m_spHashMap->GetView(&spHashView))
ChkHr(m_spHashMap->GetView(view))
ChkHr(m_spHashMap->HasKey(hstrKey, pfHasKey))
ChkHr(m_spHashMap->Insert(strProductId.Get(), spProductLicense.Get(), &replaced))
ChkHr(m_spIterable->First(ppIterator))
ChkHr(m_spPackageFullName.Set(packageFullName))
ChkHr(m_spStoreCommerce.As(spRef))
ChkHr(m_spStoreCommerceFactory->CreateStoreCommerceServer(&spStoreCommerce))
ChkHr(MakeAndInitialize<AcquireStoreLicenseForOptionalPackageOperation>( ppOperation, _packageFullName.Get(), __FSTREXP __FUNCTION__  , this, cv.GetAnsi(), pOptionalPackage, _InterlockedIncrement(&_asyncIds)))
ChkHr(MakeAndInitialize<BackgroundTaskOperation>(&operation, jsonRequest, cv.GetHStringReference().Get()))
ChkHr(MakeAndInitialize<BulkHydrateOperation>( ppOperation, _packageFullName.Get(), __FSTREXP __FUNCTION__  , this, cv.GetAnsi(), productKinds, storeIds, nullptr, _InterlockedIncrement(&_asyncIds)))
ChkHr(MakeAndInitialize<BulkHydrateOperation>( ppOperation, _packageFullName.Get(), __FSTREXP __FUNCTION__  , this, cv.GetAnsi(), productKinds, storeIds, storeProductOptions, _InterlockedIncrement(&_asyncIds)))
ChkHr(MakeAndInitialize<DownloadAndInstallStorePackagesOperation>( operation, _packageFullName.Get(), pszOperationName, this, storeIds, storePackageInstallOptions, shouldPromptForConsent, totallySilent, cv.GetAnsi(), dialogHelper.Get(), _InterlockedIncrement(&_asyncIds)))
ChkHr(MakeAndInitialize<DownloadAndInstallStorePackagesOperation>( ppOperation, _packageFullName.Get(), __FSTREXP __FUNCTION__  , this, pStorePackageUpdates, false, false, false, cv.GetAnsi(), nullptr, _InterlockedIncrement(&_asyncIds)))
ChkHr(MakeAndInitialize<DownloadAndInstallStorePackagesOperation>( ppOperation, _packageFullName.Get(), __FSTREXP __FUNCTION__  , this, pStorePackageUpdates, false, true, false, cv.GetAnsi(), dialogHelper.Get(), _InterlockedIncrement(&_asyncIds)))
ChkHr(MakeAndInitialize<DownloadAndInstallStorePackagesOperation>( ppOperation, _packageFullName.Get(), __FSTREXP __FUNCTION__  , this, pStorePackageUpdates, true, false, true, cv.GetAnsi(), nullptr, _InterlockedIncrement(&_asyncIds)))
ChkHr(MakeAndInitialize<DownloadAndInstallStorePackagesOperation>( ppOperation, _packageFullName.Get(), __FSTREXP __FUNCTION__  , this, pStorePackageUpdates, true, true, false, cv.GetAnsi(), dialogHelper.Get(), _InterlockedIncrement(&_asyncIds)))
ChkHr(MakeAndInitialize<DownloadAndInstallStorePackagesOperation>( ppOperation, this, _packageFullName.Get(), pStoreIds, cv.GetAnsi(), messageDialogHelper.Get(), _InterlockedIncrement(&_asyncIds)))
ChkHr(MakeAndInitialize<FindStoreProductForPackageOperation>( ppOperation, _packageFullName.Get(), __FSTREXP __FUNCTION__  , this, cv.GetAnsi(), productKinds, package, _InterlockedIncrement(&_asyncIds)))
ChkHr(MakeAndInitialize<GetAppAndSupplementalStorePackageUpdatesOperation>( ppOperation, _packageFullName.Get(), __FSTREXP __FUNCTION__  , this, cv.GetAnsi(), _InterlockedIncrement(&_asyncIds)))
ChkHr(MakeAndInitialize<GetAssociatedStoreProductsOperation>( ppOperation, _packageFullName.Get(), __FSTREXP __FUNCTION__  , this, cv.GetAnsi(), productKinds, _InterlockedIncrement(&_asyncIds)))
ChkHr(MakeAndInitialize<GetAssociatedStoreProductsPagedOperation>( ppOperation, _packageFullName.Get(), __FSTREXP __FUNCTION__  , this, cv.GetAnsi(), productKinds, maxItemsToRetrieve, _InterlockedIncrement(&_asyncIds)))
ChkHr(MakeAndInitialize<GetAssociatedStoreProductsPagedOperation>( spPagedOperation.GetAddressOf(), _PFN.Get(), nullptr, _storeContext.Get(), cv.GetAnsi(), productKinds.Get(), -1, asyncId ))
ChkHr(MakeAndInitialize<GetAssociatedStoreQueueItemsOperation>( operation, _packageFullName.Get(), __FSTREXP __FUNCTION__  , this, items, cv.GetAnsi(), _InterlockedIncrement(&_asyncIds)))
ChkHr(MakeAndInitialize<GetAssociatedStoreQueueItemsOperation>( operation, _packageFullName.Get(), __FSTREXP __FUNCTION__  , this, nullptr, cv.GetAnsi(), _InterlockedIncrement(&_asyncIds)))
ChkHr(MakeAndInitialize<GetConsumableBalanceRemainingOperation>( ppOperation, _packageFullName.Get(), __FSTREXP __FUNCTION__  , this, cv.GetAnsi(), productStoreId, _InterlockedIncrement(&_asyncIds)))
ChkHr(MakeAndInitialize<GetCustomerCollectionsIdOperation>( ppOperation, _packageFullName.Get(), __FSTREXP __FUNCTION__  , this, cv.GetAnsi(), serviceTicket, publisherUserId, _InterlockedIncrement(&_asyncIds)))
ChkHr(MakeAndInitialize<GetCustomerPurchaseIdOperation>( ppOperation, _packageFullName.Get(), __FSTREXP __FUNCTION__  , this, cv.GetAnsi(), serviceTicket, publisherUserId, _InterlockedIncrement(&_asyncIds)))
ChkHr(MakeAndInitialize<GetIsAnySkuInstalledOperation>( ppOperation, productStoreId, _packageFullName.Get(), __FSTREXP __FUNCTION__  , this, cv.GetAnsi(), _InterlockedIncrement(&_asyncIds)))
ChkHr(MakeAndInitialize<GetNextAssociatedStoreProducts>( &currentOperation, this, _productStoreId.Get(), productKinds, 0, maxItems, true, _user.Get(), cv.GetAnsi(), nullptr ))
ChkHr(MakeAndInitialize<GetNextAssociatedStoreProducts>( &nextOperation, _storeContextServer.Get(), _productStoreId.Get(), _productKinds.Get(), _skipCount + _maxItems, _maxItems, _hasMorePages, _user.Get(), szCV, _httpClient.Get()))
ChkHr(MakeAndInitialize<GetNextUserCollection>( &currentOperation, this, _productStoreId.Get(), productKinds, nullptr, maxPageSize, _user.Get(), cv.GetAnsi(), nullptr))
ChkHr(MakeAndInitialize<GetNextUserCollection>( &nextOperation, _storeContextServer.Get(), _productStoreId.Get(), _productKinds.Get(), _continuationToken.Get(), _maxItems, _user.Get(), szCV, _httpClient.Get()))
ChkHr(MakeAndInitialize<GetOfflineLicensesOperation>( ppOperation, _packageFullName.Get(), __FSTREXP __FUNCTION__  , this, cv.GetAnsi(), _InterlockedIncrement(&_asyncIds)))
ChkHr(MakeAndInitialize<GetStoreProductOperation>( ppOperation, _packageFullName.Get(), __FSTREXP __FUNCTION__  , this, cv.GetAnsi(), _InterlockedIncrement(&_asyncIds)))
ChkHr(MakeAndInitialize<GetStoreQueueItemsOperation>( operation, _packageFullName.Get(), __FSTREXP __FUNCTION__  , this, cv.GetAnsi(), storeIds, _InterlockedIncrement(&_asyncIds)))
ChkHr(MakeAndInitialize<GetUnfulfilledConsumablesOperationServer>( &spCheckConsumables, _packageFullName.Get(), this, cv.GetAnsi(), _InterlockedIncrement(&_receiptRequestId)))
ChkHr(MakeAndInitialize<GetUserCollectionOperation>( ppOperation, _packageFullName.Get(), __FSTREXP __FUNCTION__  , this, cv.GetAnsi(), productKinds, _InterlockedIncrement(&_asyncIds)))
ChkHr(MakeAndInitialize<GetUserCollectionPagedOperation>( ppOperation, _packageFullName.Get(), __FSTREXP __FUNCTION__  , this, cv.GetAnsi(), productKinds, maxItemsToRetrievePerPage, _InterlockedIncrement(&_asyncIds)))
ChkHr(MakeAndInitialize<GetUserCollectionPagedOperation>( spPagedOperation.GetAddressOf(), _PFN.Get(), nullptr, _storeContext.Get(), _szCV, productKinds.Get(), -1, asyncId ))
ChkHr(MakeAndInitialize<LicenseSatisfactionInfo>( &leinfo, license))
ChkHr(MakeAndInitialize<LicenseSatisfactionResult>( result, licenseSatisfactionInfoReadOnlyForAll, hrOperation, skuId ? HStringReference(skuId).Get() : nullptr))
ChkHr(MakeAndInitialize<MessageDialogHelper>(&messageDialogHelper, appName.Get(), (HWND)0 ))
ChkHr(MakeAndInitialize<MessageDialogHelper>(&spMessageDialogHelper, nullptr , hwnd))
ChkHr(MakeAndInitialize<MessageDialogHelper>(&spMessageDialogHelper, nullptr, hwnd))
ChkHr(MakeAndInitialize<ProductIdCache>(&_spProductIdCache))
ChkHr(MakeAndInitialize<ProductReceiptRetrievalOperationServer>( &spLoadAsyncInfo, _packageFullName.Get(), this, cv.GetAnsi(), _InterlockedIncrement(&_receiptRequestId), productId ))
ChkHr(MakeAndInitialize<PurchaseOperation>( &purchaseOperation, _packageFullName.Get(), _productStoreId.Get(), storeId, storePurchaseProperties, overrideJsonRequest, _user.Get(), cv.GetHStringReference().Get(), hwnd, _hasPreviewCapability, invokedApi ))
ChkHr(MakeAndInitialize<PurchaseOperation>( &purchaseOperation, _PFN.Get(), appProductId.Get(), storeId.Get(), storePurchaseProperties.Get(), overrideJsonRequest.Get(), nullptr, cv.GetHStringReference().Get(), _parentHwnd, _hasPreviewCapability, InvokedApi_RequestPurchase.Get() ))
ChkHr(MakeAndInitialize<ReceiptRetrievalOperationServer>( &spLoadAsyncInfo, _packageFullName.Get(), this, cv.GetAnsi(), _InterlockedIncrement(&_receiptRequestId) ))
ChkHr(MakeAndInitialize<ReportConsumableFulfillmentOperationServer>( &spReportProdFulfillOp, _packageFullName.Get(), this, cv.GetAnsi(), _InterlockedIncrement(&_fulfillRequestId), productId, transactionId ))
ChkHr(MakeAndInitialize<ReportConsumableOperation>( ppOperation, _packageFullName.Get(), __FSTREXP __FUNCTION__  , this, cv.GetAnsi(), productStoreId, quantity, trackingId, _InterlockedIncrement(&_asyncIds)))
ChkHr(MakeAndInitialize<RequestAppPurchaseOperationServer>( &spRequestAppPurchaseInfo, _packageFullName.Get(), this, cv.GetAnsi(), _InterlockedIncrement(&_requestAppPurchaseId), fIncludeReceipt, hwndOwner, pMessageDialogHelper ))
ChkHr(MakeAndInitialize<RequestProductPurchaseBySkuIdOperationServer>( &spRequestPurchaseBySkuIdOperation, _packageFullName.Get(), this, cv.GetAnsi(), _InterlockedIncrement(&_requestProductPurchaseId), productId, skuId, hasPreviewCapability, hwndOwner, pMessageDialogHelper ))
ChkHr(MakeAndInitialize<RequestProductPurchaseOperationServer>( &spRequestProductPurchaseInfo, _packageFullName.Get(), this, cv.GetAnsi(), _InterlockedIncrement(&_requestProductPurchaseId), productId, fIncludeReceipt, hwndOwner, pMessageDialogHelper ))
ChkHr(MakeAndInitialize<RequestProductPurchaseWithResultsOperationServer>( &spRequestProductPurchaseWithResultsInfo, _packageFullName.Get(), this, cv.GetAnsi(), _InterlockedIncrement(&_requestProductPurchaseId), productId, hwndOwner, pMessageDialogHelper ))
ChkHr(MakeAndInitialize<RequestPurchaseOperation>( ppOperation, _packageFullName.Get(), __FSTREXP __FUNCTION__  , this, callerData.Get(), cv.GetAnsi(), storeId, nullptr, nullptr, _InterlockedIncrement(&_asyncIds)))
ChkHr(MakeAndInitialize<RequestPurchaseOperation>( ppOperation, _packageFullName.Get(), __FSTREXP __FUNCTION__  , this, callerData.Get(), cv.GetAnsi(), storeId, storePurchaseProperties, nullptr, _InterlockedIncrement(&_asyncIds)))
ChkHr(MakeAndInitialize<RequestStoreRateAndReviewOperation>( ppOperation, _packageFullName.Get(), __FSTREXP __FUNCTION__  , this, callerData.Get(), cv.GetAnsi(), _InterlockedIncrement(&_asyncIds)))
ChkHr(MakeAndInitialize<StoreAcquireLicenseResult>( ppResults, _pStorePackageLicense.Get(), _hresultOfOperation ))
ChkHr(MakeAndInitialize<StoreAppLicense>(&_spAppLicense,  spResults))
ChkHr(MakeAndInitialize<StoreCanAcquireLicenseResult>( ppResults, _licenseQueryStatus, _licensableSku.Get(), _hresultOfOperation ))
ChkHr(MakeAndInitialize<StoreConsumableResult>( ppResults, _trackingId, _consumableStatus, _balanceRemaining, _hresultOfOperation ))
ChkHr(MakeAndInitialize<StoreConsumableResult>( ppResults, GUID_NULL, _consumableStatus, _quantity, _hresultOfOperation ))
ChkHr(MakeAndInitialize<StoreContentIdKeyIdResponse>(response, responseJson.Get()))
ChkHr(MakeAndInitialize<StoreContext>(ppStoreContext, cv.GetAnsi(), nullptr, packageFullName.Get()))
ChkHr(MakeAndInitialize<StoreContext>(ppStoreContext, cv.GetAnsi(), pUser, packageFullName.Get()))
ChkHr(MakeAndInitialize<StoreContextCallerData>(ppCallerData, appWindowHandle))
ChkHr(MakeAndInitialize<StoreContextLicenseChangedCallback>(&_spLicenseChangedCallback, this))
ChkHr(MakeAndInitialize<StorePackageLicense>( &_pStorePackageLicense, _pOptionalPackage.Get(), _storeContext.Get() ))
ChkHr(MakeAndInitialize<StorePackageLicenseLostCallback>(&spStorePackageLicenseLostCallback, this))
ChkHr(MakeAndInitialize<StorePackageUpdate>(&storePackageUpdate, package.Get(), storeQueueItem.Get()))
ChkHr(MakeAndInitialize<StorePackageUpdateResult>( pStorePackageUpdateResult, _overallState, _updateStatuses.Get(), _queueItems.Get()))
ChkHr(MakeAndInitialize<StoreProduct>(&spStoreProduct,  storeProductJson))
ChkHr(MakeAndInitialize<StoreProductResult>( ppStoreProductResult, _products, _hResultOfOperation))
ChkHr(MakeAndInitialize<StoreProductResult>(ppResults, _products, _hresultOfOperation))
ChkHr(MakeAndInitialize<StorePurchaseProperties>(&storePurchaseProperties, _nameOverride.Get()))
ChkHr(MakeAndInitialize<StorePurchaseProperties>(ppData, name))
ChkHr(MakeAndInitialize<StorePurchaseProperties>(ppData, nullptr))
ChkHr(MakeAndInitialize<StorePurchaseResult>(ppResults, _status, _hresultOfOperation))
ChkHr(MakeAndInitialize<StoreQueueItem>(&queueItem, installItem.Get(), cv.GetAnsi()))
ChkHr(MakeAndInitialize<StoreQueueItem>(&storeQueueItem, appInstallItem.Get(), cv.GetAnsi()))
ChkHr(MakeAndInitialize<StoreQueueItem>(&storeQueueItem, item.Get(), cv.GetAnsi()))
ChkHr(MakeAndInitialize<StoreQueueItemCompletedEventArgs>(&args, status.Get()))
ChkHr(MakeAndInitialize<StoreQueueItemStatus>(&status, state, extendedState, packageStatus, errorCode))
ChkHr(MakeAndInitialize<StoreRateAndReviewResult>( ppResults, _status, _jsonResponse.Get(), _wasUpdated, _hresultOfOperation))
ChkHr(MakeAndInitialize<StoreRequestOperation>( ppOperation, _packageFullName.Get(), __FSTREXP __FUNCTION__  , this, callerData.Get(), cv.GetAnsi(), requestKind, parametersAsJson, _InterlockedIncrement(&_asyncIds)))
ChkHr(MakeAndInitialize<StoreSendRequestResult>( ppResults, _jsonResponse.Get(), _hresultOfOperation, _statusCode))
ChkHr(MakeAndInitialize<StoreUninstallStorePackageResult>( &result, _resultCode, _resultStatus ))
ChkHr(MakeAndInitialize<UninstallStorePackageOperation>( operation, _packageFullName.Get(), function, storeId, packageFamilyName, shouldPrompt, dialogHelper.Get(), this, cv.GetAnsi(), _InterlockedIncrement(&_asyncIds)))
ChkHr(MakeAsyncAction<AsyncCausalityOptions<AddLicenseAsyncActionName>>( ::Windows::Internal::ComTaskPoolHandler(::Windows::Internal::TaskApartment::Any, ::Windows::Internal::TaskOptions::SyncNesting), Action, TrustLevel::BaseTrust, [licenseBuffer](CNoResult &) -> HRESULT { HRESULT __hr = ((HRESULT)0L);; { ComPtr<IDataReaderStatics> dataReaderFactory; { { __hr = (Windows::Foundation::GetActivationFactory(HStringReference(RuntimeClass_Windows_Storage_Streams_DataReader).Get(), &dataReaderFactory)); }; if ((((HRESULT)((static_cast<HRESULT>(__hr)))) < 0)) { ; (void)TraceHR( "onecoreuap\\enduser\\winstore\\licensing\\winrt\\lib\\windows\\winrtapi.cpp", 81, __FSTREXP __FUNCTION__  , "ChkHr(Windows::Foundation::GetActivationFactory(HStringReference(RuntimeClass_Windows_Storage_Streams_DataReader).Get(), &dataReaderFactory))", __hr, false ); CBreakOnFailure::CheckToBreakOnFailure(__hr); goto Exit; } }; ComPtr<IDataReader> licenseReader; { { __hr = (dataReaderFactory->FromBuffer(licenseBuffer.Get(), licenseReader.GetAddressOf())); }; if ((((HRESULT)((static_cast<HRESULT>(__hr)))) < 0)) { ; (void)TraceHR( "onecoreuap\\enduser\\winstore\\licensing\\winrt\\lib\\windows\\winrtapi.cpp", 81, __FSTREXP __FUNCTION__  , "ChkHr(dataReaderFactory->FromBuffer(licenseBuffer.Get(), licenseReader.GetAddressOf()))", __hr, false ); CBreakOnFailure::CheckToBreakOnFailure(__hr); goto Exit; } }; UINT32 licenseBufferLength; { { __hr = (licenseReader->get_UnconsumedBufferLength(&licenseBufferLength)); }; if ((((HRESULT)((static_cast<HRESULT>(__hr)))) < 0)) { ; (void)TraceHR( "onecoreuap\\enduser\\winstore\\licensing\\winrt\\lib\\windows\\winrtapi.cpp", 81, __FSTREXP __FUNCTION__  , "ChkHr(licenseReader->get_UnconsumedBufferLength(&licenseBufferLength))", __hr, false ); CBreakOnFailure::CheckToBreakOnFailure(__hr); goto Exit; } }; SP_CPP_ARRAY<BYTE> licenseBuffer; licenseBuffer = new BYTE[licenseBufferLength]; { if (!(licenseBuffer)) { Windows::Foundation::Diagnostics::OriginateError(((HRESULT)0x8007000EL), nullptr); } { if (!(licenseBuffer)) { { __hr = (((HRESULT)0x8007000EL)); }; ; (void)TraceHR( "onecoreuap\\enduser\\winstore\\licensing\\winrt\\lib\\windows\\winrtapi.cpp", 81, __FSTREXP __FUNCTION__  , "ChkAlloc(licenseBuffer)", __hr, false ); CBreakOnFailure::CheckToBreakOnFailure(__hr); goto Exit; } }; }; { { __hr = (licenseReader->ReadBytes(licenseBufferLength, licenseBuffer)); }; if ((((HRESULT)((static_cast<HRESULT>(__hr)))) < 0)) { ; (void)TraceHR( "onecoreuap\\enduser\\winstore\\licensing\\winrt\\lib\\windows\\winrtapi.cpp", 81, __FSTREXP __FUNCTION__  , "ChkHr(licenseReader->ReadBytes(licenseBufferLength, licenseBuffer))", __hr, false ); CBreakOnFailure::CheckToBreakOnFailure(__hr); goto Exit; } }; ComPtr<IApplicationLicenseManager3> alm; { { __hr = (GetALM(alm.GetAddressOf())); }; if ((((HRESULT)((static_cast<HRESULT>(__hr)))) < 0)) { ; (void)TraceHR( "onecoreuap\\enduser\\winstore\\licensing\\winrt\\lib\\windows\\winrtapi.cpp", 81, __FSTREXP __FUNCTION__  , "ChkHr(GetALM(alm.GetAddressOf()))", __hr, false ); CBreakOnFailure::CheckToBreakOnFailure(__hr); goto Exit; } }; ComPtr<ILicenseInstance> licenseInstance; { { __hr = (alm->LoadLicenseWithBytes(AppType_UniversalApp, licenseBufferLength, licenseBuffer, L"", licenseInstance.GetAddressOf())); }; if ((((HRESULT)((static_cast<HRESULT>(__hr)))) < 0)) { ; (void)TraceHR( "onecoreuap\\enduser\\winstore\\licensing\\winrt\\lib\\windows\\winrtapi.cpp", 81, __FSTREXP __FUNCTION__  , "ChkHr(alm->LoadLicenseWithBytes(AppType_UniversalApp, licenseBufferLength, licenseBuffer, L\"\", licenseInstance.GetAddressOf()))", __hr, false ); CBreakOnFailure::CheckToBreakOnFailure(__hr); goto Exit; } }; } goto Exit; Exit: CChkMacroETWLogger::LogHResultEvent(__hr); return __hr;;; }))
ChkHr(MakeAsyncAction<AsyncCausalityOptions<CancelInstallAsyncOperationName>>( ::Windows::Internal::ComTaskPoolHandler(::Windows::Internal::TaskApartment::Any, ::Windows::Internal::TaskOptions::SyncNesting), action, TrustLevel::BaseTrust, [spThis](CNoResult &) -> HRESULT { CVHelperIncrementOnce cv(spThis->_cv); HRESULT __hr = ((HRESULT)0L);; ComPtr<IAppInstallItem2> appInstallItem2; { { __hr = (spThis->_appInstallItem.As(&appInstallItem2)); }; if ((((HRESULT)((static_cast<HRESULT>(__hr)))) < 0)) { ; (void)TraceHR( "onecoreuap\\enduser\\winstore\\licensing\\winrt\\lib\\windows\\storequeueitem.cpp", 392, __FSTREXP __FUNCTION__  , "ChkHr(spThis->_appInstallItem.As(&appInstallItem2))", __hr, false ); CBreakOnFailure::CheckToBreakOnFailure(__hr); goto Exit; } }; { { __hr = (appInstallItem2->CancelWithTelemetry(cv.GetHStringReference().Get())); }; if ((((HRESULT)((static_cast<HRESULT>(__hr)))) < 0)) { ; (void)TraceHR( "onecoreuap\\enduser\\winstore\\licensing\\winrt\\lib\\windows\\storequeueitem.cpp", 392, __FSTREXP __FUNCTION__  , "ChkHr(appInstallItem2->CancelWithTelemetry(cv.GetHStringReference().Get()))", __hr, false ); CBreakOnFailure::CheckToBreakOnFailure(__hr); goto Exit; } }; goto Exit; Exit: CChkMacroETWLogger::LogHResultEvent(__hr); return __hr;;; }))
ChkHr(MakeAsyncAction<AsyncCausalityOptions<PauseInstallAsyncOperationName>>( ::Windows::Internal::ComTaskPoolHandler(::Windows::Internal::TaskApartment::Any, ::Windows::Internal::TaskOptions::SyncNesting), action, TrustLevel::BaseTrust, [spThis](CNoResult &) -> HRESULT { CVHelperIncrementOnce cv(spThis->_cv); HRESULT __hr = ((HRESULT)0L);; ComPtr<IAppInstallItem2> appInstallItem2; { { __hr = (spThis->_appInstallItem.As(&appInstallItem2)); }; if ((((HRESULT)((static_cast<HRESULT>(__hr)))) < 0)) { ; (void)TraceHR( "onecoreuap\\enduser\\winstore\\licensing\\winrt\\lib\\windows\\storequeueitem.cpp", 417, __FSTREXP __FUNCTION__  , "ChkHr(spThis->_appInstallItem.As(&appInstallItem2))", __hr, false ); CBreakOnFailure::CheckToBreakOnFailure(__hr); goto Exit; } }; { { __hr = (appInstallItem2->PauseWithTelemetry(cv.GetHStringReference().Get())); }; if ((((HRESULT)((static_cast<HRESULT>(__hr)))) < 0)) { ; (void)TraceHR( "onecoreuap\\enduser\\winstore\\licensing\\winrt\\lib\\windows\\storequeueitem.cpp", 417, __FSTREXP __FUNCTION__  , "ChkHr(appInstallItem2->PauseWithTelemetry(cv.GetHStringReference().Get()))", __hr, false ); CBreakOnFailure::CheckToBreakOnFailure(__hr); goto Exit; } }; goto Exit; Exit: CChkMacroETWLogger::LogHResultEvent(__hr); return __hr;;; }))
ChkHr(MakeAsyncAction<AsyncCausalityOptions<RefreshLicensesAsyncActionName>>( ::Windows::Internal::ComTaskPoolHandler(::Windows::Internal::TaskApartment::Any, ::Windows::Internal::TaskOptions::SyncNesting), Action, TrustLevel::BaseTrust, [refreshPolicy](CNoResult &) -> HRESULT { HRESULT __hr = ((HRESULT)0L);; ComPtr<IApplicationLicenseManager3> alm; { { __hr = (GetALM(alm.GetAddressOf())); }; if ((((HRESULT)((static_cast<HRESULT>(__hr)))) < 0)) { ; (void)TraceHR( "onecoreuap\\enduser\\winstore\\licensing\\winrt\\lib\\windows\\winrtapi.cpp", 206, __FSTREXP __FUNCTION__  , "ChkHr(GetALM(alm.GetAddressOf()))", __hr, false ); CBreakOnFailure::CheckToBreakOnFailure(__hr); goto Exit; } }; { { __hr = (alm->RefreshLicenses(refreshPolicy)); }; if ((((HRESULT)((static_cast<HRESULT>(__hr)))) < 0)) { ; (void)TraceHR( "onecoreuap\\enduser\\winstore\\licensing\\winrt\\lib\\windows\\winrtapi.cpp", 206, __FSTREXP __FUNCTION__  , "ChkHr(alm->RefreshLicenses(refreshPolicy))", __hr, false ); CBreakOnFailure::CheckToBreakOnFailure(__hr); goto Exit; } }; goto Exit; Exit: CChkMacroETWLogger::LogHResultEvent(__hr); return __hr;;; }))
ChkHr(MakeAsyncAction<AsyncCausalityOptions<ResumeInstallAsyncOperationName>>( ::Windows::Internal::ComTaskPoolHandler(::Windows::Internal::TaskApartment::Any, ::Windows::Internal::TaskOptions::SyncNesting), action, TrustLevel::BaseTrust, [spThis](CNoResult &) -> HRESULT { CVHelperIncrementOnce cv(spThis->_cv); HRESULT __hr = ((HRESULT)0L);; ComPtr<IAppInstallItem2> appInstallItem2; { { __hr = (spThis->_appInstallItem.As(&appInstallItem2)); }; if ((((HRESULT)((static_cast<HRESULT>(__hr)))) < 0)) { ; (void)TraceHR( "onecoreuap\\enduser\\winstore\\licensing\\winrt\\lib\\windows\\storequeueitem.cpp", 442, __FSTREXP __FUNCTION__  , "ChkHr(spThis->_appInstallItem.As(&appInstallItem2))", __hr, false ); CBreakOnFailure::CheckToBreakOnFailure(__hr); goto Exit; } }; { { __hr = (appInstallItem2->RestartWithTelemetry(cv.GetHStringReference().Get())); }; if ((((HRESULT)((static_cast<HRESULT>(__hr)))) < 0)) { ; (void)TraceHR( "onecoreuap\\enduser\\winstore\\licensing\\winrt\\lib\\windows\\storequeueitem.cpp", 442, __FSTREXP __FUNCTION__  , "ChkHr(appInstallItem2->RestartWithTelemetry(cv.GetHStringReference().Get()))", __hr, false ); CBreakOnFailure::CheckToBreakOnFailure(__hr); goto Exit; } }; goto Exit; Exit: CChkMacroETWLogger::LogHResultEvent(__hr); return __hr;;; }))
ChkHr(MakeAsyncOperation<CHSTRINGResult>( ::Windows::Internal::ComTaskPoolHandler(::Windows::Internal::TaskApartment::Any, ::Windows::Internal::TaskOptions::SyncNesting), getCollectionsIdOperation, BaseTrust, [spThisKeepAlive, serviceTicketCopy, publisherUserIdCopy, cv](CHSTRINGResult& result) mutable -> HRESULT { CVHelperExtend cvExtend(cv.GetAnsi()); AutoThreadActivityIdFromCV actid(cvExtend); HString collectionsId; HRESULT hrOperation = CatalogServiceProxyV6::GetCustomerCollectionsId( serviceTicketCopy, publisherUserIdCopy, cvExtend.Get(), collectionsId.GetAddressOf()); if ((((HRESULT)(hrOperation)) >= 0)) { result.Set(collectionsId.Get()); } Telemetry::EndOperation("CurrentApp.GetCustomerCollectionsIdAsync", hrOperation, cv.GetAnsi(), spThisKeepAlive->_packageFullName.Get(), "serviceTicket", serviceTicketCopy, "publisherUserId", publisherUserIdCopy); ::WindowsDeleteString(serviceTicketCopy); ::WindowsDeleteString(publisherUserIdCopy); return hrOperation; }))
ChkHr(MakeAsyncOperation<CHSTRINGResult>( ::Windows::Internal::ComTaskPoolHandler(::Windows::Internal::TaskApartment::Any, ::Windows::Internal::TaskOptions::SyncNesting), getPurchaseIdOperation, BaseTrust, [spThisKeepAlive, serviceTicketCopy, publisherUserIdCopy, cv](CHSTRINGResult& result) mutable -> HRESULT { CVHelperExtend cvExtend(cv.GetAnsi()); AutoThreadActivityIdFromCV actid(cvExtend); HString purchaseId; HRESULT hrOperation = CatalogServiceProxyV6::GetCustomerPurchaseId( serviceTicketCopy, publisherUserIdCopy, cvExtend.Get(), purchaseId.GetAddressOf()); if ((((HRESULT)(hrOperation)) >= 0)) { result.Set(purchaseId.Get()); } Telemetry::EndOperation("CurrentApp.GetCustomerPurchaseIdAsync", hrOperation, cv.GetAnsi(), spThisKeepAlive->_packageFullName.Get(), "serviceTicket", serviceTicketCopy, "publisherUserId", publisherUserIdCopy); ::WindowsDeleteString(serviceTicketCopy); ::WindowsDeleteString(publisherUserIdCopy); return hrOperation; }))
ChkHr(MakeAsyncOperation<CHSTRINGResult>( ::Windows::Internal::ComTaskPoolHandler(::Windows::Internal::TaskApartment::Any, ::Windows::Internal::TaskOptions::SyncNesting), ppOperation, BaseTrust, [spThisKeepAlive, cv](CHSTRINGResult& result) mutable -> HRESULT { CVHelperExtend cvExtend(cv.GetAnsi()); AutoThreadActivityIdFromCV actid(cvExtend); HString campaignId; HRESULT hrOperation = CollectionsServiceProxyV6::GetCampaignId( spThisKeepAlive->GetAppCatalogId(cvExtend.Get()), cvExtend.Get(), campaignId.GetAddressOf()); if ((((HRESULT)(hrOperation)) >= 0)) { result.Set(campaignId.Get()); } Telemetry::EndOperation("CurrentApp.GetAppPurchaseCampaignIdAsync", hrOperation, cv.GetAnsi(), spThisKeepAlive->_packageFullName.Get()); return hrOperation; }))
ChkHr(MakeAsyncOperation<CMarshaledInterfaceResult<IVectorView<StorePreviewProductInfo*>>>( ::Windows::Internal::ComTaskPoolHandler(::Windows::Internal::TaskApartment::Any, ::Windows::Internal::TaskOptions::SyncNesting), ppLoadAddOnProductInfosOperation, BaseTrust, [spThisKeepAlive, cv](CMarshaledInterfaceResult<IVectorView<StorePreviewProductInfo*>>& result) mutable { CVHelperExtend cvExtend(cv.GetAnsi()); AutoThreadActivityIdFromCV actid(cvExtend); ComPtr<IVectorView<StorePreviewProductInfo*>> spProductInfos; HRESULT hrOperation = spThisKeepAlive->LoadAddOnProductInfos(cvExtend.Get(), &spProductInfos); if ((((HRESULT)(hrOperation)) >= 0)) { result.Set(spProductInfos.Get()); } Telemetry::EndOperation("StorePreview.LoadAddOnProductInfosAsync", hrOperation, cv.GetAnsi(), spThisKeepAlive->_packageFullName.Get()); return hrOperation; }))
ChkHr(MakeAsyncOperation<CMarshaledInterfaceResult<IVectorView<StoreSystemFeature>>>( ::Windows::Internal::ComTaskPoolHandler(::Windows::Internal::TaskApartment::Any, ::Windows::Internal::TaskOptions::SyncNesting), operation, TrustLevel::PartialTrust, [spThisKeepAlive, spPotentialSystemFeatures, cv](CMarshaledInterfaceResult<IVectorView<StoreSystemFeature>> & results) mutable -> HRESULT { HRESULT __hr = ((HRESULT)0L);; ComPtr<IVectorView<StoreSystemFeature>> resultsView; { { __hr = (FilterUnsupportedFeaturesInternal(spPotentialSystemFeatures.Get(), resultsView)); }; if ((((HRESULT)((static_cast<HRESULT>(__hr)))) < 0)) { ; (void)TraceHR( "onecoreuap\\enduser\\winstore\\licensing\\winrt\\lib\\windows\\storeconfigurationserver.cpp", 229, __FSTREXP __FUNCTION__  , "ChkHr(FilterUnsupportedFeaturesInternal(spPotentialSystemFeatures.Get(), resultsView))", __hr, false ); CBreakOnFailure::CheckToBreakOnFailure(__hr); goto Exit; } }; { { __hr = (results.Set(resultsView.Get())); }; if ((((HRESULT)((static_cast<HRESULT>(__hr)))) < 0)) { ; (void)TraceHR( "onecoreuap\\enduser\\winstore\\licensing\\winrt\\lib\\windows\\storeconfigurationserver.cpp", 229, __FSTREXP __FUNCTION__  , "ChkHr(results.Set(resultsView.Get()))", __hr, false ); CBreakOnFailure::CheckToBreakOnFailure(__hr); goto Exit; } }; goto Exit; Exit:; Telemetry::EndOperation("StoreConfigurationServer::FilterUnsupportedSystemFeaturesAsync", (static_cast<HRESULT>(__hr)), cv.GetAnsi(), spThisKeepAlive->_PFN.Get()); CChkMacroETWLogger::LogHResultEvent(__hr); return __hr;;; }))
ChkHr(MakeAsyncOperation<CMarshaledInterfaceResult<Windows::Storage::Streams::IRandomAccessStreamReference>>( ::Windows::Internal::ComTaskPoolHandler(::Windows::Internal::TaskApartment::Any, ::Windows::Internal::TaskOptions::SyncNesting), operation, TrustLevel::PartialTrust, [spThisKeepAlive, options, cv](CMarshaledInterfaceResult<Windows::Storage::Streams::IRandomAccessStreamReference>& results) mutable -> HRESULT { HRESULT __hr = ((HRESULT)0L);; ComPtr<Windows::Storage::Streams::IRandomAccessStreamReference> resultsView; { { __hr = (WSCollector::CollectStoreLog(options, resultsView)); }; if ((((HRESULT)((static_cast<HRESULT>(__hr)))) < 0)) { ; (void)TraceHR( "onecoreuap\\enduser\\winstore\\licensing\\winrt\\lib\\windows\\storeconfigurationserver.cpp", 338, __FSTREXP __FUNCTION__  , "ChkHr(WSCollector::CollectStoreLog(options, resultsView))", __hr, false ); CBreakOnFailure::CheckToBreakOnFailure(__hr); goto Exit; } }; { { __hr = (results.Set(resultsView.Get())); }; if ((((HRESULT)((static_cast<HRESULT>(__hr)))) < 0)) { ; (void)TraceHR( "onecoreuap\\enduser\\winstore\\licensing\\winrt\\lib\\windows\\storeconfigurationserver.cpp", 338, __FSTREXP __FUNCTION__  , "ChkHr(results.Set(resultsView.Get()))", __hr, false ); CBreakOnFailure::CheckToBreakOnFailure(__hr); goto Exit; } }; goto Exit; Exit:; Telemetry::EndOperation("StoreConfigurationServer::GetStoreLogDataAsync", (static_cast<HRESULT>(__hr)), cv.GetAnsi(), spThisKeepAlive->_PFN.Get()); CChkMacroETWLogger::LogHResultEvent(__hr); return __hr;;; }))
ChkHr(marketProperties->GetObjectAt(0, &marketProperty))
ChkHr(memStatics->GetModalExperienceManager(modalExperienceManager))
ChkHr(message->put_Content(pRequestContent))
ChkHr(messageDialogHelper->ShowDialogWithResultsAsync( onMeteredNetwork ? ((HRESULT)0x803F6206L) : ((HRESULT)0x803F6203L), nullptr, messageDialogOperation.GetAddressOf()))
ChkHr(methodStatics->get_Head(&method))
ChkHr(methodStatics->get_Options(&method))
ChkHr(methodStatics->get_Patch(&method))
ChkHr(modalExperienceOptions->put_AllowWin32Owner(true))
ChkHr(modalExperienceOptions->put_Centered(true))
ChkHr(modalExperienceOptions->put_ExperienceDefaultSize(size))
ChkHr(modalExperienceOptions->put_ExperienceMaximumSize(size))
ChkHr(modalExperienceOptions->put_ExperienceMinimumSize(size))
ChkHr(modalExperienceOptions->put_ExperienceTitle((nameOverride == nullptr ? HStringReference(L" ").Get() : nameOverride.Get())))
ChkHr(modalExperienceOptions->put_SuspendExemptionType(static_cast<UINT32>(PLM_TASKCOMPLETION_CATEGORY_FLAGS::PT_TC_NONE)))
ChkHr(moId.Set(szEncodedMoId))
ChkHr(nameOverride.Set(L""))
ChkHr(netInfoStatics->GetInternetConnectionProfile(&connectionProfile))
ChkHr(newOrder->First(&iter))
ChkHr(nextOp.CopyTo(_spNextQueryOperation.ReleaseAndGetAddressOf()))
ChkHr(oemId.Set(szEncodedOemId))
ChkHr(optionalPackageId->get_FamilyName(packageFamilyName.GetAddressOf()))
ChkHr(optionalPackageId->get_FullName(packageFullName.GetAddressOf()))
ChkHr(outputBuffer.Preallocate(uriBufferMax, &pszDest))
ChkHr(outputBuffer.Promote(output.GetAddressOf()))
ChkHr(outputs->Append(inputString))
ChkHr(outputs->Append(output.Get()))
ChkHr(outputs->GetView(outputStrings))
ChkHr(outValue.Set(pszBuffer))
ChkHr(package.As(&package2))
ChkHr(package.As(&package4))
ChkHr(package->get_EffectiveSupportedUsers(&supportedUsers))
ChkHr(package->get_Id(&optionalPackageId))
ChkHr(package->get_Id(&packageId))
ChkHr(package->get_PackageType(&packageType))
ChkHr(package->get_TargetDeviceFamily(&foreignKey))
ChkHr(package->GetDisplayNameLocalized(appName))
ChkHr(package2->get_PackageFullName(packageFullNameToUninstall.GetAddressOf()))
ChkHr(package4->get_IsOptional(&isOptional))
ChkHr(package4->get_IsOptional(&isOptionalPackage))
ChkHr(package4->get_SignatureKind(&signatureKind))
ChkHr(packageFamilyName.Set(requestorFamilyName))
ChkHr(packageFamilyNameToUninstall.Set(packageFamilyName))
ChkHr(packageFullName.Set(bstr.Get()))
ChkHr(packageFullName.Set(requestorFullName))
ChkHr(packageId->get_FamilyName(packageFamilyName.GetAddressOf()))
ChkHr(packageId->get_FamilyName(packageFamilyName.ReleaseAndGetAddressOf()))
ChkHr(packageId->get_FullName(optionalPfn.GetAddressOf()))
ChkHr(packageId->get_FullName(packageFullName.GetAddressOf()))
ChkHr(packageId->get_Name(packageName.GetAddressOf()))
ChkHr(packageManager->FindPackagesByUserSecurityIdPackageFamilyName(userSid.Get(), packageFamilyNameToUninstall.Get(), packages.GetAddressOf()))
ChkHr(packageManager->RemovePackageAsync(packageFullName.Get(), &deploymentOperation))
ChkHr(packageManager->UninstallPackage(packageFullNameToUninstall.GetRawBuffer(nullptr)))
ChkHr(packageProvider->FindAvailablePackage(packageFamilyNameToUninstall.Get(), AvailablePackageIdentityType_ContentId, &package))
ChkHr(packages->First(&packagesIterator))
ChkHr(packages->GetObjectAt(0, &package))
ChkHr(packagesIterator->get_Current(&package))
ChkHr(packagesIterator->get_HasCurrent(&hasCurrent))
ChkHr(packagesIterator->MoveNext(&hasCurrent))
ChkHr(pAppAddOn->GetExpireTime(&ftExpireTime))
ChkHr(pAppAddOn->GetProductId(&pszProductId))
ChkHr(pAppAddOn->GetProductType(&m_eAddOnType))
ChkHr(parentPackage->get_Dependencies(&dependencies))
ChkHr(pArgs->get_State(&state))
ChkHr(ParseJSONToObject( jsonObject, pObj, entry.pChildren))
ChkHr(ParseJSONToObject( jsonObject, pObj, table))
ChkHr(ParseSLSJson(onestoreClientData.GetRawBuffer(nullptr), UriHelper::s_rghstrUris, UriHelper::s_rgpszUriNames, (sizeof(*RtlpNumberOf(UriHelper::s_rghstrUris))), true))
ChkHr(ParseSLSJson(pszJson, UriHelper::s_rghstrUris, UriHelper::s_rgpszUriNames, (sizeof(*RtlpNumberOf(UriHelper::s_rghstrUris))), false))
ChkHr(ParseSLSJson(pszJson, UriHelperV7::s_rghstrUrisSLS, UriHelperV7::s_rgpszUriNames, (sizeof(*RtlpNumberOf(UriHelperV7::s_rghstrUrisSLS))), false))
ChkHr(ParseUriSubstitutionTag(tag.Get(), tagKey.GetAddressOf(), tagName.GetAddressOf(), tagMeta.GetAddressOf()))
ChkHr(PathCchAddExtension(pszCacheFileName, cchCacheFileName, L".dat"))
ChkHr(PathCchAppendEx(pszCacheFilepath, cchCacheFilepath, szCacheFileName, 0))
ChkHr(PathCchAppendEx(pszFolder, cchFolder, L"_WinStoreSDK_Receipt_Cache", 0))
ChkHr(pCallerData->QueryInterface(__uuidof(**(&spCallerDataPrivate)), IID_PPV_ARGS_Helper(&spCallerDataPrivate)))
ChkHr(pCommand->get_Id(&spPropertyValue))
ChkHr(pdConnection->OpenAsync(&openOperation))
ChkHr(pdConnection->put_AppServiceName(appServiceName.Get()))
ChkHr(pdConnection->put_PackageFamilyName(PurchaseDialogPFNRef.Get()))
ChkHr(pdConnection->SendMessageAsync(message.Get(), sendMessageOperation.GetAddressOf()))
ChkHr(pHttpClient->DeleteAsync(uri.Get(), &requestOperation))
ChkHr(pHttpClient->get_DefaultRequestHeaders(&headers))
ChkHr(pHttpClient->GetAsync(uri.Get(), &requestOperation))
ChkHr(pHttpClient->PostAsync(uri.Get(), pRequestContent, &requestOperation))
ChkHr(pHttpClient->PutAsync(uri.Get(), pRequestContent, &requestOperation))
ChkHr(pHttpClient->SendRequestAsync(message.Get(), &requestOperation))
ChkHr(pickle->SetBlanket( punk, 0xFFFFFFFFL, 0xffffffff, ( ( OLECHAR * )( INT_PTR )-1 ), 0, 4, nullptr, EOAC_DEFAULT))
ChkHr(pInAppInfo->spKeywords->get_Size(&cInAppOfferListKeywords))
ChkHr(pInAppInfo->spKeywords->GetAt(i, inAppKeyword.GetAddressOf()))
ChkHr(pInAppOffer->spKeywords->get_Size(&cKeywords))
ChkHr(pInAppOffer->spKeywords->GetAt(i, keyword.GetAddressOf()))
ChkHr(pInAppOfferTokens->get_Size(&cInAppOfferTokens))
ChkHr(pinToHelper->PinToShell(WindowsGetStringRawBuffer(appPackageFamilyName, nullptr), 0x02000000u))
ChkHr(pKeywords->get_Size(&cKeywords))
ChkHr(pkIter->get_Current(requestedProductKind.GetAddressOf()))
ChkHr(pkIter->get_HasCurrent(&hasCurrent))
ChkHr(pkIter->MoveNext(&hasCurrent))
ChkHr(pLicenseInstance->GetIsActive(&isActive))
ChkHr(pMessageDialog->get_Commands(&spCommands))
ChkHr(pMessageDialogHelper->ShowDialogWithResultsAsync( message, nullptr, messageDialogOperation.GetAddressOf()))
ChkHr(pObject->SetNamedValue(HStringReference(pszName).Get(), spJsonValue.Get()))
ChkHr(pObject->SetNamedValue(HStringReference(pszName).Get(), spValue.Get()))
ChkHr(pProductIdCache->AddItem( _inAppOfferToken.Get(), hstrProductId.Get()))
ChkHr(pProductIdCache->AddItem(inAppOfferTokenString.Get(), productIdString.Get()))
ChkHr(pProductIdCache->ProductIdFromInAppOfferToken( _inAppOfferToken.Get(), _spStoreCommerceServer->GetAppCatalogId(cv.Get()), cv.Get(), productId.GetAddressOf()))
ChkHr(previewLicenses.CopyTo(&_mapView))
ChkHr(product->get_ProductKind(actualProductKind.GetAddressOf()))
ChkHr(product->get_StoreId(productId.GetAddressOf()))
ChkHr(product->get_StoreId(storeId.GetAddressOf()))
ChkHr(productAddOns->GetObjectAt(i, &productAddOn))
ChkHr(ProductIdFromInAppOfferTokenTable(inAppOfferToken, productId))
ChkHr(ProductIdHashMap::Make(&hashMap))
ChkHr(productIds.As(&productIdsIter))
ChkHr(productIds->Append(productId))
ChkHr(productIds->Append(productId.Get()))
ChkHr(productIdsInAppInstallQueue->Append(appInstallItemProductId.Get()))
ChkHr(productIdsInAppInstallQueue->get_Size(&size))
ChkHr(productJsonString.CopyTo(productJson))
ChkHr(productJsonString.CopyTo(productJsonResponse))
ChkHr(productKindHashMap->HasKey(actualProductKind.Get(), &found))
ChkHr(productKindHashMap->Insert(requestedProductKind.Get(), true, &replaced))
ChkHr(productKinds->Append(ConsumableKind.Get()))
ChkHr(productKinds->Append(UnmanagedConsumableKind.Get()))
ChkHr(productKinds->First(&pkIter))
ChkHr(productKinds->First(&spIter))
ChkHr(ProductLicenseHashMap::Make(&m_spHashMap))
ChkHr(productPrivate->SetStoreContext(this))
ChkHr(products.As(&productsIVector))
ChkHr(products.CopyTo(&_products))
ChkHr(products.CopyTo(_products.GetAddressOf()))
ChkHr(products->get_Size(&count))
ChkHr(products->get_Size(&productCount))
ChkHr(products->get_Size(&productsLength))
ChkHr(products->GetAt(0, spStoreProduct.GetAddressOf()))
ChkHr(products->GetAt(i, product.GetAddressOf()))
ChkHr(products->GetObjectAt(0, &firstProduct))
ChkHr(products->GetObjectAt(static_cast<UINT32>(index), &product))
ChkHr(productsArray->GetObjectAt(productIndex, &product))
ChkHr(propertySet.As(&propertySetIterable))
ChkHr(propertySet.As(&propertySetMap))
ChkHr(propertySetIterable->First(&propertySetIterator))
ChkHr(propertySetIterator->get_Current(&currentPair))
ChkHr(propertySetIterator->get_HasCurrent(&hasCurrent))
ChkHr(propertySetIterator->MoveNext(&hasCurrent))
ChkHr(propertySetMap->Insert(keyName.Get(), propValue.Get(), &replaced))
ChkHr(propertyValueFactory->CreateBoolean(value, propValue.GetAddressOf()))
ChkHr(propertyValueFactory->CreateDouble(value, propValue.GetAddressOf()))
ChkHr(propertyValueFactory->CreateEmpty(propValue.GetAddressOf()))
ChkHr(propertyValueFactory->CreateString(value.Get(), propValue.GetAddressOf()))
ChkHr(propValue->get_Type(&type))
ChkHr(propValue->GetBoolean(&boolValue))
ChkHr(propValue->GetDouble(&doubleValue))
ChkHr(propValue->GetInt16(&int16Value))
ChkHr(propValue->GetInt32(&int32Value))
ChkHr(propValue->GetInt64(&int64Value))
ChkHr(propValue->GetSingle(&floatValue))
ChkHr(propValue->GetString(stringValue.GetAddressOf()))
ChkHr(propValue->GetUInt16(&uint16Value))
ChkHr(propValue->GetUInt32(&uint32Value))
ChkHr(propValue->GetUInt64(&uint64Value))
ChkHr(propValue->GetUInt8(&byteValue))
ChkHr(pStorePackageUpdates->First(&updateIterator))
ChkHr(pStrings->First(spIter.GetAddressOf()))
ChkHr(pThis->_pOptionalPfnToCallbackMap->Lookup(HStringReference(pData->OptionalPackageFullName).Get(), callback.GetAddressOf()))
ChkHr(pUnfulfilledConsumable->get_ProductId(m_hstrProductId.GetAddressOf()))
ChkHr(pUnfulfilledList->Append(consumable.Get()))
ChkHr(pUnfulfilledList->get_Size(&size))
ChkHr(pUnfulfilledList->GetAt(lProduct, spUnfulfilledConsumable.GetAddressOf()))
ChkHr(pValue.As(&spJsonValue))
ChkHr(pVector.As(&pIVector))
ChkHr(pVector->Append(hstrCurrent.Get()))
ChkHr(quantityParts->get_Size(&partsSize))
ChkHr(quantityParts->GetAt(1, newQuantity.GetAddressOf()))
ChkHr(queuedItemResults->Append(storeQueueItem.Get()))
ChkHr(queuedItemResults->GetView(queuedItems))
ChkHr(queueItems->Append(queueItem.Get()))
ChkHr(queueItems->Append(storeQueueItem.Get()))
ChkHr(queueItems->GetView(&_spQueueItems))
ChkHr(queueItems->GetView(queuedItems))
ChkHr(ReceiptHelpers::FetchReceipt( _PFN.Get(), _spStoreCommerceServer.Get(), _pCV, IAPReceiptType_App, nullptr, authTicket.Get(), spWebTokenRequestResult.Get(), _pReceipt))
ChkHr(ReceiptHelpers::FetchReceipt( _PFN.Get(), _spStoreCommerceServer.Get(), _pCV, IAPReceiptType_OneProduct, _inAppOfferToken.Get(), authTicket.Get(), spWebTokenRequestResult.Get(), _pReceipt))
ChkHr(ReceiptHelpers::FetchReceipt( _PFN.Get(), _spStoreCommerceServer.Get(), cv.Get(), IAPReceiptType_App, nullptr, authTicket.Get(), spWebTokenRequestResult.Get(), _receipt.GetAddressOf()))
ChkHr(ReceiptHelpers::FetchReceipt( _PFN.Get(), _spStoreCommerceServer.Get(), cv.Get(), IAPReceiptType_OneProduct, _productId.Get(), authTicket.Get(), spWebTokenRequestResult.Get(), _productReceipt.GetAddressOf()))
ChkHr(ReceiptHelpers::GetFormattedPrice( locale, market, &pInAppSkuInformation->PricingInfo, false , _hstrFormattedListPrice.GetAddressOf()))
ChkHr(ReceiptHelpers::GetFormattedPrice(locale, market, &pInAppOffer->PricingInfo, false , _hstrFormattedPrice.GetAddressOf()))
ChkHr(ReceiptHelpers::GetFormattedPrice(locale, market, &pInAppOffer->PricingInfo, true , _hstrFormattedBasePrice.GetAddressOf()))
ChkHr(ReceiptHelpers::GetFormattedPrice(pAppInfo->Locale, pAppInfo->Market, &pAppInfo->PricingInfo, false , _hstrFormattedPrice.GetAddressOf()))
ChkHr(ReceiptHelpers::GetFormattedPrice(pAppInfo->Locale, pAppInfo->Market, &pAppInfo->PricingInfo, true , _hstrFormattedBasePrice.GetAddressOf()))
ChkHr(RefreshInternalState(false, pCV))
ChkHr(RefreshInternalState(true, pCV))
ChkHr(RefreshTableFromService(parentProductId, pCV))
ChkHr(RegistryHelper::SetQwordValue((( HKEY ) (ULONG_PTR)((LONG)0x80000002) ), RegistryHelper::STORE_CONFIGURATION_REGISTRY_PATH, L"AppDownloadLimit", actualAppDownloadLimit))
ChkHr(RegistryHelper::SetQwordValue((( HKEY ) (ULONG_PTR)((LONG)0x80000002) ), RegistryHelper::STORE_CONFIGURATION_REGISTRY_PATH, L"OEMDiscoveryTTL", systemConfigurationExpiration.UniversalTime))
ChkHr(RegistryHelper::SetQwordValue((( HKEY ) (ULONG_PTR)((LONG)0x80000002) ), RegistryHelper::STORE_CONFIGURATION_REGISTRY_PATH, L"UpdateDownloadLimit", actualUpdateDownloadLimit))
ChkHr(RegistryHelper::SetStringValue((( HKEY ) (ULONG_PTR)((LONG)0x80000001) ), RegistryHelper::STORE_CURRENTIDENTITY_REGISTRY_PATH, L"StoreAADAccountId", realId.GetRawBuffer(nullptr)))
ChkHr(RegistryHelper::SetStringValue((( HKEY ) (ULONG_PTR)((LONG)0x80000001) ), RegistryHelper::STORE_REGISTRY_PATH, L"PrimaryWebAccountId", realId.GetRawBuffer(nullptr)))
ChkHr(RegistryHelper::SetStringValue((( HKEY ) (ULONG_PTR)((LONG)0x80000002) ), RegistryHelper::STORE_CONFIGURATION_REGISTRY_PATH, L"Hardware", WindowsGetStringRawBuffer(catalogHardwareDescriptor, nullptr)))
ChkHr(RegistryHelper::SetStringValue((( HKEY ) (ULONG_PTR)((LONG)0x80000002) ), RegistryHelper::STORE_CONFIGURATION_REGISTRY_PATH, L"MOID", WindowsGetStringRawBuffer(mobileOperatorId, nullptr)))
ChkHr(RegistryHelper::SetStringValue((( HKEY ) (ULONG_PTR)((LONG)0x80000002) ), RegistryHelper::STORE_CONFIGURATION_REGISTRY_PATH, L"OEMID", WindowsGetStringRawBuffer(catalogHardwareManufacturerId, nullptr)))
ChkHr(RegistryHelper::SetStringValue((( HKEY ) (ULONG_PTR)((LONG)0x80000002) ), RegistryHelper::STORE_CONFIGURATION_REGISTRY_PATH, L"SCMID", WindowsGetStringRawBuffer(catalogStoreContentModifierId, nullptr)))
ChkHr(relatedProducts->GetObjectAt(relatedIndex, &relatedProduct))
ChkHr(request->get_ClientId(clientId.GetAddressOf()))
ChkHr(request->get_Scope(scope.GetAddressOf()))
ChkHr(requestFactory->Create(method.Get(), uri.Get(), &message))
ChkHr(response->get_Items(&items))
ChkHr(response->get_Message(&responseMessage))
ChkHr(response->get_Status(&responseStatus))
ChkHr(responseContent->ReadAsStringAsync(&readOperation))
ChkHr(responseContent->TryComputeLength(&responseSizeBytes, &tryComputeLengthSucceeded))
ChkHr(responseMessage->EnsureSuccessStatusCode(&responseSuccess))
ChkHr(responseMessage->get_Content(&responseContent))
ChkHr(responseMessage->get_StatusCode(&httpStatusCode))
ChkHr(result.CopyTo(results))
ChkHr(result.Set(licenseSatisfactionResult.Get()))
ChkHr(ResultFromLastError())
ChkHr(results.Products.CopyTo(products))
ChkHr(results.Set(resultsView.Get()))
ChkHr(RetrieveJsonResponseFromResources(L"JSON_RESPONSE_INTERNAL_STORE_ENDPOINT_EXTENSION_URLS", UriHelperV7::s_rghstrUris[UriHelperV7::InternalStoreEndpointExtensionUrls].GetAddressOf()))
ChkHr(RetrieveJsonResponseFromResources(L"JSON_RESPONSE_MODAL_FLOW_SIZES", UriHelperV7::s_rghstrUris[UriHelperV7::ModalFlowSizes].GetAddressOf()))
ChkHr(RetrieveJsonResponseFromResources(L"JSON_RESPONSE_ONE_STORE_CLIENT_DATA_URLS", onestoreClientData.GetAddressOf()))
ChkHr(RetrieveJsonResponseFromResources(L"JSON_RESPONSE_STORE_ENDPOINT_EXTENSION_URLS", UriHelperV7::s_rghstrUris[UriHelperV7::StoreEndpointExtensionUrls].GetAddressOf()))
ChkHr(RoFileTimeToDateTime(fileTime, pDateTime))
ChkHr(RpcHelpers::GetRpcHandle(&rpcHandle))
ChkHr(scmId.Set(szEncodedScmId))
ChkHr(searchTitles->GetObjectAt(iTitle, &title))
ChkHr(SendStoreRequest( nullptr, _hasPreviewCapability ? 14 : 13, cv.GetHStringReference().Get(), requestJson.Get(), &status, responseJson.GetAddressOf()))
ChkHr(SendStoreRequestWithUris( nullptr, UriHelperV7::InternalStoreEndpointExtensionUrls, UriHelperV7::InternalStoreEndpointExtensionUrlsIds::GetCustomerCollectionsId, cv.Get(), jsonParameters.Get(), nullptr, jsonResponseString.GetAddressOf()))
ChkHr(SendStoreRequestWithUris( nullptr, UriHelperV7::InternalStoreEndpointExtensionUrls, UriHelperV7::InternalStoreEndpointExtensionUrlsIds::GetCustomerPurchaseId, cv.Get(), jsonParameters.Get(), nullptr, jsonResponseString.GetAddressOf()))
ChkHr(SendStoreRequestWithUris( nullptr, UriHelperV7::InternalStoreEndpointExtensionUrls, UriHelperV7::InternalStoreEndpointExtensionUrlsIds::GetParentProduct, cv.Get(), nullptr, nullptr, productJsonString.GetAddressOf()))
ChkHr(SendStoreRequestWithUris( nullptr, UriHelperV7::InternalStoreEndpointExtensionUrls, UriHelperV7::InternalStoreEndpointExtensionUrlsIds::GetProductsFromParent, cv.Get(), jsonCatalogParameters.Get(), nullptr, productJsonString.GetAddressOf()))
ChkHr(SendStoreRequestWithUris( nullptr, UriHelperV7::InternalStoreEndpointExtensionUrls, UriHelperV7::InternalStoreEndpointExtensionUrlsIds::GetUserCollectionForProducts, cv.Get(), jsonCollectionsParameters.Get(), nullptr, jsonResult))
ChkHr(SendStoreRequestWithUris( nullptr, UriHelperV7::InternalStoreEndpointExtensionUrls, uriId, cv, jsonCatalogParameters.Get(), nullptr, productJsonString.GetAddressOf()))
ChkHr(SendStoreRequestWithUris( pCallerData, UriHelperV7::StoreEndpointExtensionUrls, requestKind, cv.Get(), jsonData.Get(), statusCode, jsonResponse))
ChkHr(SetEnterpriseStoreWebAccountIdInternal(nullptr , packageFamilyName.Get(), webAccountId))
ChkHr(SetEnterpriseStoreWebAccountIdInternal(user, packageFamilyName.Get(), webAccountId))
ChkHr(SetMaxDateTime(&maxDateTime))
ChkHr(SetMaxDateTime(pDateTime))
ChkHr(SetMobileOperatorConfigurationInternal(mobileOperatorId, appDownloadLimitInMegabytes, updateDownloadLimitInMegabytes))
ChkHr(SetStoreWebAccountIdInternal(nullptr , packageFamilyName.Get(), webAccountId))
ChkHr(SetStoreWebAccountIdInternal(user, packageFamilyName.Get(), webAccountId))
ChkHr(SetSystemConfigurationInternal(catalogHardwareManufacturerId, catalogStoreContentModifierId, systemConfigurationExpiration, catalogHardwareDescriptor))
ChkHr(ShouldRestrictToEnterpriseStoreOnlyInternal(nullptr , value))
ChkHr(ShouldRestrictToEnterpriseStoreOnlyInternal(user, value))
ChkHr(signInMgr->GetHandleForUser(_user.Get(), &userContextToken))
ChkHr(signInMgr->GetHandleForUser(user, &userContextToken))
ChkHr(sku.As(&skuPrivate))
ChkHr(sku->get_IsInUserCollection(&isInCollection))
ChkHr(sku->get_Price(ppValue))
ChkHr(skuAvailabilities->GetObjectAt(skuAvailabilityIndex, &skuAvailability))
ChkHr(skuLocalizedProperties->GetObjectAt(0, &skuFirstLocalizedProperties))
ChkHr(skuPrivate->get_FulfillmentType(fulfillmentType.GetAddressOf()))
ChkHr(skuPrivate->set_ProductId(_storeId.Get()))
ChkHr(sortedAvailabilities->Append(bestAvailability.Get()))
ChkHr(sortedSkus->Append(bestSku.Get()))
ChkHr(spActions->GetStringAt(k, action.GetAddressOf()))
ChkHr(spAlternateIds->GetObjectAt(i, &spAlternateId))
ChkHr(spAnalyticsInfo->get_VersionInfo(&spVersionInfo))
ChkHr(spAppAddOn->GetCatalogId(&licenseAddOnCatalogId))
ChkHr(spAppAddOn->GetExpireTime(&ftAddOnExpirationTime))
ChkHr(spAppAddOn->GetProductId(&pszProductId))
ChkHr(spAppAddOn->GetSKUId(&licenseAddOnSkuId))
ChkHr(spAppContentInfo->GetCatalogId(&bigCatId))
ChkHr(spAppContentInfo->GetCatalogId(&productStoreId))
ChkHr(spAppContentInfo->GetWindowsStoreAppId(&m_appId))
ChkHr(spApplicationContentInfo->GetAddOnAtPosition(lProduct, spAppAddOn.GetAddressOf()))
ChkHr(spApplicationContentInfo->GetAddOnCount(&nCount))
ChkHr(spApplicationContentInfo->GetCustomPolicy(&customPolicyLengthInBytes, reinterpret_cast<BYTE**>(&customPolicyEncoded)))
ChkHr(spApplicationContentInfo->GetEntitlementId(&entitlementId))
ChkHr(spApplicationContentInfo->GetTrialTimeRemaining(&ftTrialTimeRemaining))
ChkHr(spApplicationContentInfo->GetUserId(&lmUserId))
ChkHr(spAppmodelPackage->get_Dependencies(supplementalPackages.GetAddressOf()))
ChkHr(spAppmodelPackage->get_Id(&packageId))
ChkHr(spArray.As(&spJsonVector))
ChkHr(spAvailabilities->GetObjectAt(j, &spAvailability))
ChkHr(spBufferAsBytes->Buffer(reinterpret_cast<BYTE**>(&pDecodedBuffer)))
ChkHr(spCallerDataPrivate->GetAppWindowHandle(&appWindowHandle))
ChkHr(spCallingProcessInfo->OpenCallerProcessHandle((0x1000), &callingProcessHandle))
ChkHr(spCommand->put_Id(spPropertyValue.Get()))
ChkHr(spCommand->put_Invoked(pHandler))
ChkHr(spCommand->put_Label(HStringReference((const WCHAR*)pszContent).Get()))
ChkHr(spCommands->Append(spCommand.Get()))
ChkHr(spContentIdsIter->get_Current(contentId.GetAddressOf()))
ChkHr(spContentIdsIter->get_HasCurrent(&cHasCurrent))
ChkHr(spContentIdsIter->MoveNext(&cHasCurrent))
ChkHr(spCoreAppPrivate->GetAppDisplayName(appName.GetAddressOf()))
ChkHr(spCoreAppPrivate->GetWindowFromThreadId(callerThreadId, &spCoreWindow))
ChkHr(spCoreWindow.As(&spCoreWinInterop))
ChkHr(spCoreWindowStatic->GetForCurrentThread(&spCoreWindow))
ChkHr(spCoreWinInterop->get_WindowHandle(&hwnd))
ChkHr(spCoreWinInterop->get_WindowHandle(phWndCurrent))
ChkHr(spDisplayData->Initialize(hstrName))
ChkHr(spDisplayData->Initialize(nullptr))
ChkHr(spDisplaySkuAvailabilities->GetObjectAt(i, &spDisplaySkuAvailability))
ChkHr(spGlobalizationPreferences->get_Languages(ppLanguages))
ChkHr(spHardwareCapability->EvaluateHardwareCapabilities( GUID_WinStoreServiceID, arraySize, rawGuidArray, &wuResults, &hrOnlineCheck))
ChkHr(spHashBuffer.As(&spBufferAsBytes))
ChkHr(spHashBuffer->get_Length(&decodedBufferLength))
ChkHr(spHashView->Split(firstPartition, secondPartition))
ChkHr(spIds->Append(productId.Get()))
ChkHr(spIter->get_Current(hstrCurrent.GetAddressOf()))
ChkHr(spIter->get_Current(productKind.GetAddressOf()))
ChkHr(spIter->get_Current(storeId.GetAddressOf()))
ChkHr(spIter->get_Current(value.GetAddressOf()))
ChkHr(spIter->get_HasCurrent(&fHasCurrent))
ChkHr(spIter->get_HasCurrent(&hasCurrent))
ChkHr(spIter->MoveNext(&fHasCurrent))
ChkHr(spIter->MoveNext(&hasCurrent))
ChkHr(spIterator->get_Current(&feature))
ChkHr(spIterator->get_HasCurrent(&hasCurrent))
ChkHr(spIterator->MoveNext(&hasCurrent))
ChkHr(spJsonArray.As(&spJsonVector))
ChkHr(spJsonArrayStatics->Parse(HStringReference(pszJson).Get(), &spJsonArray))
ChkHr(spJsonObject.As(&spJsonValue))
ChkHr(spJsonObject->GetNamedArray(HStringReference(L"DisplaySkuAvailabilities").Get(), &jsonSKUAvailabilities))
ChkHr(spJsonObjectStatics->Parse(HStringReference(pszJson).Get(), &spJsonObject))
ChkHr(spJsonStatics->Parse(HStringReference(pszJson).Get(), &spJsonObject))
ChkHr(spJsonValue->Stringify(hJsonString))
ChkHr(spJsonValueStatics->CreateBooleanValue(fValue, &spValue))
ChkHr(spJsonValueStatics->CreateNullValue(&spValue))
ChkHr(spJsonValueStatics->CreateNumberValue(fValue, &spValue))
ChkHr(spJsonValueStatics->CreateStringValue(HStringReference((const WCHAR*)strTime).Get(), &spValue))
ChkHr(spJsonValueStatics->CreateStringValue(HStringReference(pszValue).Get(), &spValue))
ChkHr(spJsonValueStatics->CreateStringValue(hValue, &spValue))
ChkHr(spJsonValueStatics->CreateStringValue(timeSpanString.Get(), &spValue))
ChkHr(spJsonVector->Append(spJsonValue.Get()))
ChkHr(spJsonVector->Append(spValue.Get()))
ChkHr(spJsonVector->RemoveAt(index))
ChkHr(spKeyIdsIter->get_Current(keyId.GetAddressOf()))
ChkHr(spKeyIdsIter->get_HasCurrent(&eHasCurrent))
ChkHr(spKeyIdsIter->MoveNext(&eHasCurrent))
ChkHr(spLanguages->get_Size(&size))
ChkHr(spLanguages->GetAt(0, pLanguage))
ChkHr(spLanguages->GetAt(i, language.GetAddressOf()))
ChkHr(spLauncherStatics->LaunchUriAsync(spUri.Get(), &spAsyncOperation))
ChkHr(spLicenseInformationServerSingleton->Initialize(lpszPackageFullName, eAppType, pCV))
ChkHr(spLicenseInfoServer.As(&licenseInfo))
ChkHr(spLicenseInstance->GetContentInfo(__uuidof(**(&spAppContentInfo)), IID_PPV_ARGS_Helper(&spAppContentInfo)))
ChkHr(spLicenseInstance->GetExpirationDateTime(&ftExpirationTime))
ChkHr(spLicenseInstance->GetIsActive(&m_bActive))
ChkHr(spLicenseInstance->GetIsTrial(&isTrial))
ChkHr(spLicenseInstance->GetIsTrial(&m_bIsTrial))
ChkHr(spLicenseInstance->GetLicenseGrantReason(&grantReason))
ChkHr(spLicenseManager->EnsureLicenseForApplicationDeployment(contentId.GetRawBuffer(nullptr), nullptr , nullptr ))
ChkHr(spListingInformation->Initialize(spStoreAppInfo))
ChkHr(spManufacturerInfo->put_HardwareManufacturerId(buffer.Get()))
ChkHr(spManufacturerInfo->put_ManufacturerName(buffer.Get()))
ChkHr(spManufacturerInfo->put_ModelName(buffer.Get()))
ChkHr(spManufacturerInfo->put_StoreContentModifierId(buffer.Get()))
ChkHr(spMessageDialog.As(&initWithWindow))
ChkHr(spMessageDialog->ShowAsync(&spAsyncOperation))
ChkHr(spMessageDialog->ShowAsync(ppMessageDialogOperation))
ChkHr(spNewProductLicense->InitializeInvalid(hstrKey))
ChkHr(spNextQueryOperation.CopyTo(_spNextQueryOperation.GetAddressOf()))
ChkHr(spNumberFormatter->FormatDouble(price, formattedPrice))
ChkHr(spOperation->BeginWork(1))
ChkHr(spPackageManager->FindPackageByPackageFullName(fullName.Get(), ppPackage))
ChkHr(spPackageManager->FindPackageByUserSecurityIdPackageFullName(sidString.Get(), fullName.Get(), ppPackage))
ChkHr(spPackageResolver->GetDisplayNameLocalized(appName.GetAddressOf()))
ChkHr(spPackageResolverStatics->Create(spPackage.Get(), &spPackageResolver))
ChkHr(spPackages->get_Size(&packageCount))
ChkHr(spPackages->GetAt(0, &spPackage))
ChkHr(spPackageStatics->ExistsByPackageFamilyName( packageFamilyName.Get(), pValue))
ChkHr(spPackageStatics->ExistsByUserAndPackageFamilyName( spUser.Get(), packageFamilyName.Get(), pValue))
ChkHr(spPackageStatics->FindByPackageFamilyNameAndPackageType( HStringReference(pkgFamilyName).Get(), PackageType_Main | PackageType_Xap, &spPackages))
ChkHr(spPackageStatics->GetByPackageFullName(packageFullName.Get(), package.GetAddressOf()))
ChkHr(spPagedOperation->GetResults( &hresult, &hasMoreResults, products, spNextQueryOperation))
ChkHr(spProductInfo->Initialize( spStoreAppInfo->Locale, spStoreAppInfo->Market, spStoreAppInfo, pInAppOffer))
ChkHr(spProductInfosList->Append(spProductInfo.Get()))
ChkHr(spProductInfosList->GetView(&spProductInfos))
ChkHr(spProductLicense->Initialize(spAppAddOn.Get()))
ChkHr(spProductLicense->Initialize(spUnfulfilledConsumable.Get()))
ChkHr(spProductLicenseMap->Initialize(spLicenseInstance.Get(), spUnfulfilledList.Get()))
ChkHr(spProductListing->Initialize(_hstrLocale.Get(), _hstrCurrentMarket.Get(), pAppInfo->IsUAP, pInAppOffer))
ChkHr(spPropertyValue->GetInt32(&commandId))
ChkHr(spPropValueFactory->CreateInt32(id, &spPropertyValue))
ChkHr(spPurchaseResults->Initialize( productPurchaseStatus, transactionId, pszReceipt, _hstrDevOfferId.Get()))
ChkHr(spPurchaseResults->Initialize(productPurchaseStatus, transactionId, pszReceipt, nullptr))
ChkHr(spPurchaseResults->Initialize(static_cast<StorePreviewProductPurchaseStatus>(productPurchaseStatus)))
ChkHr(spReceiptContent.As(&spXmlNodeSerializer))
ChkHr(spReceiptNode->get_ChildNodes(&spReceiptNodeChildren))
ChkHr(spReceiptNodeChildren->get_Length(&uReceiptNodeChildrenLength))
ChkHr(spReceiptNodeChildren->Item(0, &spReceiptContent))
ChkHr(spReceiptNodes->get_Length(&uReceiptNodesLength))
ChkHr(spReceiptNodes->Item(0, &spReceiptNode))
ChkHr(spRequestAppPurchaseInfo.As(&spAsyncInfo))
ChkHr(spRequestProductPurchaseWithDisplayPropertiesInfo->RuntimeClassInitialize( _packageFullName.Get(), this, cv.GetAnsi(), _InterlockedIncrement(&_requestProductPurchaseId), productId, hwndOwner, devOfferId, pDisplayProperties, pMessageDialogHelper ))
ChkHr(spResults->GetNamedArray(HStringReference(L"Products").Get(), &storeProductArray))
ChkHr(spSkuInfo->Initialize( locale, market, pAppInformation, pInAppInformation, pInAppSku))
ChkHr(spSkuInfoList->Append(spSkuInfo.Get()))
ChkHr(spSkuInfoList->GetView(&_spSkuInfoList))
ChkHr(spSLSClient2->GetSLSDataChunk(GUID_StoreFrontServiceID, 0, L"//ServiceEnvironment/StoreSDK", &pszJson, &lastModified))
ChkHr(spStoreCommerce->GetAppId(&m_appID))
ChkHr(spStoreCommerce->GetAppPurchaseCampaignIdAsync(cv.GetHStringReference().Get(), ppOperation))
ChkHr(spStoreCommerce->GetAppReceiptAsync(cv.GetHStringReference().Get(), getAppReceiptOperation))
ChkHr(spStoreCommerce->GetCustomerCollectionsIdAsync( cv.GetHStringReference().Get(), serviceTicket, publisherUserId, ppGetCollectionsIdOperation))
ChkHr(spStoreCommerce->GetCustomerPurchaseIdAsync( cv.GetHStringReference().Get(), serviceTicket, publisherUserId, ppGetPurchaseIdOperation))
ChkHr(spStoreCommerce->GetLicenseInformation(ppAppLicense))
ChkHr(spStoreCommerce->GetLinkUri(hstrLinkUri.GetAddressOf()))
ChkHr(spStoreCommerce->GetProductReceiptAsync(productId, cv.GetHStringReference().Get(), getProductReceiptOperation))
ChkHr(spStoreCommerce->Initialize(cv.GetHStringReference().Get()))
ChkHr(spStoreCommerce->LoadAddOnProductInfosAsync(cv.GetHStringReference().Get(), ppLoadAddOnProductInfosOperation))
ChkHr(spStoreCommerce->LoadListingInformationAsync( nullptr, keywords, cv.GetHStringReference().Get(), ppLoadListingOperation))
ChkHr(spStoreCommerce->LoadListingInformationAsync( productIds, nullptr, cv.GetHStringReference().Get(), ppLoadListingOperation))
ChkHr(spStoreCommerce->LoadListingInformationAsync(nullptr, nullptr, cv.GetHStringReference().Get(), ppLoadListingOperation))
ChkHr(spStoreCommerce->RequestAppPurchaseAsync( includeReceipt, reinterpret_cast<UINT64>(hwnd), spMessageDialogHelper.Get(), cv.GetHStringReference().Get(), ppRequestAppPurchaseOperation))
ChkHr(spStoreCommerce->RequestProductPurchaseAsync(productId, includeReceipt, reinterpret_cast<UINT64>(hwnd), spMessageDialogHelper.Get(), cv.GetHStringReference().Get(), ppRequestProductPurchaseOperation))
ChkHr(spStoreCommerce->RequestProductPurchaseByProductIdAndSkuIdAsync( productId, skuId, reinterpret_cast<UINT64>(hwnd), spMessageDialogHelper.Get(), cv.GetHStringReference().Get(), ppRequestPurchaseBySkuIdOperation))
ChkHr(spStoreCommerceWithConsumables->GetUnfulfilledConsumablesAsync( cv.GetHStringReference().Get(), ppGetUnfulfilledConsumablesOperation))
ChkHr(spStoreCommerceWithConsumables->ReportConsumableFulfillmentAsync( productId, transactionId, cv.GetHStringReference().Get(), ppReportConsumableFulfillmentOperation))
ChkHr(spStoreCommerceWithConsumables->ReportConsumableFulfillmentSync(productId, cv.GetHStringReference().Get()))
ChkHr(spStoreCommerceWithConsumables->RequestProductPurchaseWithDisplayPropertiesAsync( productId, devOfferId, displayProperties, reinterpret_cast<UINT64>(hwnd), spMessageDialogHelper.Get(), cv.GetHStringReference().Get(), ppRequestProductPurchaseOperation))
ChkHr(spStoreCommerceWithConsumables->RequestProductPurchaseWithResultsAsync( productId, reinterpret_cast<UINT64>(hwnd), spMessageDialogHelper.Get(), cv.GetHStringReference().Get(), ppRequestProductPurchaseWithResultsOperation))
ChkHr(spStoreContext.As(&spStoreContextPrivate))
ChkHr(spStoreContextPrivate->SendStoreRequestAsync( requestKind, parametersAsJson, ppOperation))
ChkHr(spStoreContextServer.As(&spStoreContextServer3))
ChkHr(spStoreContextServer->GetAssociatedStoreQueueItems( cv.GetHStringReference().Get(), &_queueItems))
ChkHr(spStoreContextServer->GetProduct( cv.GetHStringReference().Get(), productJson.GetAddressOf()))
ChkHr(spStoreContextServer->GetStoreQueueItems( storeIds.Get(), cv.GetHStringReference().Get(), &_queueItems))
ChkHr(spStoreContextServer3->SetInstallOrderForAssociatedStoreQueueItems( cv.GetHStringReference().Get(), _newOrder.Get()))
ChkHr(spStoreProduct.As(&storeProductPrivate))
ChkHr(spStoreProduct->get_HasDigitalDownload(&hasDigitalDownload))
ChkHr(spStoreProduct->get_IsInUserCollection(&isInUserCollection))
ChkHr(spStoreProduct->get_ProductKind(productKind.GetAddressOf()))
ChkHr(spStreamReferenceStatics->CreateFromStream(randAccStream.Get(), result.GetAddressOf()))
ChkHr(spTargetDeviceFamily->get_Name(&targetPlatform))
ChkHr(spTargetDeviceFamilyStatics->Get(foreignKey, &spTargetDeviceFamily))
ChkHr(spThis->_appInstallItem.As(&appInstallItem2))
ChkHr(spThis->GetSatisfactionInfos(contentIdsVectorView.Get(), keyIdsVectorView.Get(), licenseSatisfactionResult.GetAddressOf()))
ChkHr(spUnfulfilledConsumable->get_ProductId(strProductId.GetAddressOf()))
ChkHr(spUnfulfilledConsumable->Initialize(pszProductId, transactionId, pszDevOfferId))
ChkHr(spUserStatics->GetByUserSid(userSid.Get(), &spUser))
ChkHr(spValue.As(&spJsonValue))
ChkHr(spVectorView.As(&spIterable))
ChkHr(spVersionInfo->get_DeviceFamily(deviceFamily.GetAddressOf()))
ChkHr(spWebTokenRequestResults->get_Size(&resultsCount))
ChkHr(spWebTokenRequestResults->GetAt(0, it.GetAddressOf()))
ChkHr(spXmlDocumentIO->LoadXml(hResponse.Get()))
ChkHr(spXmlNodeSerializer->GetXml(hstrReceiptContent.GetAddressOf()))
ChkHr(spXMLResponse.As(&spXmlDocumentIO))
ChkHr(spXMLResponse->GetElementsByTagName(HStringReference(L"Receipt").Get(), &spReceiptNodes))
ChkHr(StartOperation(1))
ChkHr(StartOperation(asyncId))
ChkHr(StartOperation(iAsyncId))
ChkHr(status.As(&statusInternal))
ChkHr(status.CopyTo(result))
ChkHr(status->get_Value(&updateStatus))
ChkHr(statusInternal->get_IsDownloaded(value))
ChkHr(StoreConfigurationServer::GetPurchasePromptingPolicyInternal(nullptr , value))
ChkHr(StoreConfigurationServer::GetPurchasePromptingPolicyInternal(user, value))
ChkHr(StoreConfigurationServer::HasStoreWebAccountInternal(nullptr , *value))
ChkHr(StoreConfigurationServer::HasStoreWebAccountInternal(user, *value))
ChkHr(StoreConfigurationServer::PutPurchasePromptingPolicyInternal(nullptr , value))
ChkHr(StoreConfigurationServer::PutPurchasePromptingPolicyInternal(user, value))
ChkHr(storeContextServer->AcquireStoreLicenseForOptionalPackage( optionalPfn.Get(), spStorePackageLicenseLostCallback.Get(), &_valid))
ChkHr(storeContextServer->CanSilentlyDownloadStorePackageUpdates(cv.GetHStringReference().Get(), value))
ChkHr(storeContextServer->DownloadStorePackages( storeIds.Get(), _storePackageInstallOptions.Get(), cv.GetHStringReference().Get(), _shouldPromptForConsent, _totallySilent, messageDialogHelper.Get(), &_queueItems, &canceled))
ChkHr(storeContextServer->DownloadStorePackageUpdates( updates.Get(), cv.GetHStringReference().Get(), _install, _shouldPromptForConsent, messageDialogHelper.Get(), &_queueItems, &canceled))
ChkHr(storeContextServer->FocusOnWindow((UINT64)hwnd))
ChkHr(storeContextServer->GetAppAndOptionalStorePackageUpdates(cv.GetHStringReference().Get(), &queuedItems))
ChkHr(storeContextServer->GetAssociatedStoreProducts( productKinds.Get(), maxCountPerPage, cv.GetHStringReference().Get(), productJsonString.GetAddressOf(), &_spNextQueryOperation))
ChkHr(storeContextServer->GetConsumableBalanceRemaining( _productId.Get(), cv.GetHStringReference().Get(), jsonString.GetAddressOf()))
ChkHr(storeContextServer->GetCustomerCollectionsId( _serviceTicket.Get(), _publisherUserId.Get(), cv.GetHStringReference().Get(), _collectionsId.GetAddressOf()))
ChkHr(storeContextServer->GetCustomerPurchaseId( _serviceTicket.Get(), _publisherUserId.Get(), cv.GetHStringReference().Get(), _purchaseId.GetAddressOf()))
ChkHr(storeContextServer->GetLinkUri(storeId.Get(), uriString.GetAddressOf()))
ChkHr(storeContextServer->GetOfflineLicenses( cv.GetHStringReference().Get(), results.GetAddressOf()))
ChkHr(storeContextServer->GetPreviewLicenseResultForPackage( _packageIdentifier.Get(), cv.GetHStringReference().Get(), licenseSatisfactionResult.GetAddressOf()))
ChkHr(storeContextServer->GetProductForPackage( productKinds.Get(), packageFullName.Get(), cv.GetHStringReference().Get(), productJson.GetAddressOf()))
ChkHr(storeContextServer->GetProductsWithOptions( productKinds.Get(), storeIds.Get(), _storeProductOptions.Get(), cv.GetHStringReference().Get(), productJsonString.GetAddressOf()))
ChkHr(storeContextServer->GetUserCollection( productKinds.Get(), maxCountPerPage, cv.GetHStringReference().Get(), productJson.GetAddressOf(), &_spNextQueryOperation))
ChkHr(storeContextServer->Initialize(false, nullptr))
ChkHr(storeContextServer->Initialize(pUser != nullptr, _spLicenseChangedCallback.Get()))
ChkHr(storeContextServer->IsStoreProductInstalled( _productStoreId.Get(), cv.GetHStringReference().Get(), &_isInstalled))
ChkHr(storeContextServer->RequestPurchase( _storeContextCallerData.Get(), _storeId.Get(), _storePurchaseProperties.Get(), _jsonData.Get(), cv.GetHStringReference().Get(), _response.GetAddressOf()))
ChkHr(storeContextServer->SendStoreRequest( _storeContextCallerData.Get(), _requestKind, cv.GetHStringReference().Get(), _jsonData.Get(), &_statusCode, _jsonResponse.GetAddressOf()))
ChkHr(storeContextServer->SendStoreRequest( _storeContextCallerData.Get(), 16, cv.GetHStringReference().Get(), nullptr, &statusCode, _jsonResponse.GetAddressOf()))
ChkHr(storeContextServer->SetUser(pUser))
ChkHr(storeContextServer->UninstallStorePackage( _storeId.Get(), _packageFamilyNameToUninstall.Get(), cv.GetHStringReference().Get(), _shouldPrompt, _dialogHelper.Get(), &_resultStatus ))
ChkHr(storeContextServer2->GetPreviewLicenseResultForStoreId( _productStoreId.Get(), cv.GetHStringReference().Get(), licenseSatisfactionResult.GetAddressOf()))
ChkHr(storeId.Set(L""))
ChkHr(storeIdComponents->get_Size(&size))
ChkHr(storeIdComponents->GetAt(0, pProductId))
ChkHr(storeIds->Append(HStringReference(storeIdFromLicense).Get()))
ChkHr(storeIds->Append(storeId.Get()))
ChkHr(StoreInfoBuilders::BuildStoreAppInfo( _spStoreCommerceServer.Get(), cv.Get(), 0, &spStoreAppInfo))
ChkHr(StoreInfoBuilders::BuildStoreAppInfo( pStoreCommerceServer, pCV, hCancel, &spStoreAppInfo))
ChkHr(StoreInfoBuilders::BuildStoreAppInfo( this, pCV, nullptr, &spStoreAppInfo))
ChkHr(StorePackageUpdateManagerUtils::StorePackageUpdateStatusLifetimeTraits::Construct(value, _status))
ChkHr(storePackageUpdateStatuses->Append(updateStatus))
ChkHr(storePackageUpdateStatuses->GetView(&_updateStatuses))
ChkHr(StorePackageUpdateStatusHashMap::Make(&_updateStatusMap))
ChkHr(StorePackageUpdateStatusVector::Make(&storePackageUpdateStatuses))
ChkHr(storeProductArray->GetObjectAt(0, storeProductJson.GetAddressOf()))
ChkHr(storeProductId.Set(storeId))
ChkHr(storeProductOptions->get_ActionFilters(&actionFilters))
ChkHr(StoreProductPagedQueryResult::BuildMap( products, productKinds, &_mapView))
ChkHr(storeProductPrivate->get_PackageFamilyName(packageFamilyName.GetAddressOf()))
ChkHr(storeProductPrivate->get_PackageFamilyName(packageFamilyNameToUninstall.GetAddressOf()))
ChkHr(storePurchaseProperties->get_ExtendedJsonData(tmp.GetAddressOf()))
ChkHr(storePurchaseProperties->get_Name(tmp.GetAddressOf()))
ChkHr(storeQueueItem->get_ProductId(productId.GetAddressOf()))
ChkHr(storeQueueItem->GetCurrentStatus(&installStatus))
ChkHr(STRAPI_Create(pszBuffer, &dhStr))
ChkHr(strAuthTokenPrefixed.CopyTo(authToken.ReleaseAndGetAddressOf()))
ChkHr(stringBuffer.Preallocate(decodedBufferLength + 1, &pszDecodedString))
ChkHr(stringBuffer.Preallocate(urlLength, &pszFinalUri))
ChkHr(stringBuffer.Promote(result.GetAddressOf()))
ChkHr(StringCaseInsensitiveEquals()(StorePackageUpdateLeft.PackageFamilyName, StorePackageUpdateRight.PackageFamilyName, fEquals))
ChkHr(StringCchCatExW(pszLanguagesEnd, cchRemaining, L",", &pszLanguagesEnd, &cchRemaining, 0))
ChkHr(StringCchCatExW(pszLanguagesEnd, cchRemaining, pszLanguage, &pszLanguagesEnd, &cchRemaining, 0))
ChkHr(StringCchCatW(szQueryUri, (sizeof(*RtlpNumberOf(szQueryUri))), L"v6.0/collections/consume"))
ChkHr(StringCchCatW(szQueryUri, (sizeof(*RtlpNumberOf(szQueryUri))), L"v6.0/collections/query"))
ChkHr(StringCchCopyA(szDestFileNameA, (sizeof(*RtlpNumberOf(szDestFileNameA))), pszDest))
ChkHr(StringCchCopyExW( pszRemaining, cchRemaining, escapedData.GetRawBuffer(nullptr), &pszRemaining, &cchRemaining, 0x00000100))
ChkHr(StringCchCopyExW( pszRemaining, cchRemaining, L"=", &pszRemaining, &cchRemaining, 0x00000100))
ChkHr(StringCchCopyExW( pszRemaining, cchRemaining, seenQuestionMark ? L"&" : L"?", &pszRemaining, &cchRemaining, 0x00000100))
ChkHr(StringCchCopyExW( pszRemaining, cchRemaining, tagName.GetRawBuffer(nullptr), &pszRemaining, &cchRemaining, 0x00000100))
ChkHr(StringCchCopyExW(pszRemaining, cchRemaining, L"/", &pszRemaining, &cchRemaining, 0))
ChkHr(StringCchCopyExW(pszRemaining, cchRemaining, pszUriBase, &pszRemaining, &cchRemaining, 0))
ChkHr(StringCchCopyExW(pszRemaining, cchRemaining, WindowsGetStringRawBuffer(nameValuePairs[i].value, nullptr), &pszRemaining, &cchRemaining, 0x00000100))
ChkHr(StringCchCopyNExW(pszRemaining, cchRemaining, pszFormatCursor, pszOpenBrace - pszFormatCursor, &pszRemaining, &cchRemaining, 0))
ChkHr(StringCchCopyW(pszIdValue, cchIdValue, L"Public"))
ChkHr(StringCchCopyW(pszRemaining, cchRemaining, pszFormatCursor))
ChkHr(StringCchCopyW(szQueryUri, (sizeof(*RtlpNumberOf(szQueryUri))), collectionsUriBase.GetRawBuffer(nullptr)))
ChkHr(StringCchPrintfW( buffer, (sizeof(*RtlpNumberOf(buffer))), L"%s%02d:%02d:%09.6f", isNegative ? L"-" : L"", hours, minutes, seconds))
ChkHr(StringCchPrintfW( buffer, (sizeof(*RtlpNumberOf(buffer))), L"%s%d.%02d:%02d:%09.6f", isNegative ? L"-" : L"", static_cast<int>(days), hours, minutes, seconds))
ChkHr(StringCchPrintfW( spszDestBuffer, cchDestBuffer, pszFormat, szEncodedMoId, szEncodedOemId, szEncodedScmId ))
ChkHr(StringCchPrintfW( szNextUrl, (sizeof(*RtlpNumberOf(szNextUrl))), _runningCount == 0 ? L"%ws" : L"%ws&$skip=%u", _hstrUri.GetRawBuffer(nullptr), _runningCount))
ChkHr(StringCchPrintfW(pszBuffer, cchBuffer, L"%s:%s", header, value))
ChkHr(StringCchPrintfW(szArgument, (sizeof(*RtlpNumberOf(szArgument))), L"0x%X", hr))
ChkHr(StringCchPrintfW(szSeedName, (sizeof(*RtlpNumberOf(szSeedName))), L"%s-%s-%d-%s", WindowsGetStringRawBuffer(geoId, nullptr), WindowsGetStringRawBuffer(language, nullptr), static_cast<UINT32>(eReceiptType), WindowsGetStringRawBuffer(featureName, nullptr)))
ChkHr(StringHelpers::DecodeBase64( HStringReference(customPolicyEncoded.GetPtr(), customPolicyLength).Get(), customPolicyDecoded.GetAddressOf()))
ChkHr(StringHelpers::Join( _productKinds.Get(), false, productKindsWithCommas.GetAddressOf()))
ChkHr(StringHelpers::Join( productKinds, false, productKindsWithCommas.GetAddressOf()))
ChkHr(StringHelpers::Join( productKinds.Get(), false, productKindsWithCommas.GetAddressOf()))
ChkHr(StringHelpers::Join( storeIds, false, storeIdsWithCommas.GetAddressOf()))
ChkHr(StringHelpers::Join( storeIds.Get(), false, storeIdsWithCommas.GetAddressOf()))
ChkHr(StringHelpers::Join(_newOrder.Get(), false, productIdList.GetAddressOf()))
ChkHr(StringHelpers::Join(productIds, false, productIdsString.GetAddressOf()))
ChkHr(StringHelpers::SplitString(data.Get(), L":", quantityParts.GetAddressOf()))
ChkHr(StringHelpers::SplitString(rawInputTag.Get(), L":", &tagComponents))
ChkHr(StringHelpers::SplitString(storeId, g_pszStoreIdSeparator, &storeIdComponents))
ChkHr(StringHelpers::TrimEnds(inputTag, 1, rawInputTag.GetAddressOf()))
ChkHr(StringHelpers::TrimString(output.Get(), uriOutput))
ChkHr(StringHelpers::TrimString(result.Get(), hstrUri))
ChkHr(StringToFileTime(timeString.GetRawBuffer(nullptr), &ft, 0))
ChkHr(strPrefixAuthToken.CopyTo(ticket.ReleaseAndGetAddressOf()))
ChkHr(strProductId.Set(pszProductId))
ChkHr(substituteValue->get_ValueType(&valueType))
ChkHr(substituteValue->GetArray(&substituteArray))
ChkHr(substituteValue->GetNumber(&substituteNumber))
ChkHr(substituteValue->GetObjectW(&substituteObject))
ChkHr(substituteValue->GetString(substituteString.GetAddressOf()))
ChkHr(supplement.As(&supplement4))
ChkHr(supplement->get_Id(packageId.ReleaseAndGetAddressOf()))
ChkHr(supplement4->get_IsOptional(&isOptional))
ChkHr(supplementalPackages->get_Size(&supplementalPackagesSize))
ChkHr(supplementalPackages->GetAt(i, supplement.GetAddressOf()))
ChkHr(supportedFeaturesVector->GetView(&resultsView))
ChkHr(systemFeatures->First(&spIterator))
ChkHr(tag.Set(pszOpenBrace, static_cast<UINT32>(pszCloseBrace - pszOpenBrace) + 1))
ChkHr(tagComponents->get_Size(&tagComponentsSize))
ChkHr(tagComponents->GetAt(0, outputKey))
ChkHr(tagComponents->GetAt(1, outputName))
ChkHr(tagComponents->GetAt(2, outputMeta))
ChkHr(temp.Set(InternalGetRuntimeClassName()))
ChkHr(temp.Set(pszUri))
ChkHr(temp.Set(shReceipt))
ChkHr(temp.Set(spszFormattedPrice))
ChkHr(temp.Set(wszAppId))
ChkHr(threadContext._devOfferId.Set(devOfferId))
ChkHr(threadContext._inAppOfferToken.Set(inAppOfferToken))
ChkHr(threadContext._inAppProductId.Set(productId))
ChkHr(threadContext._inAppProductSkuId.Set(skuId))
ChkHr(threadContext._nameOverride.Set(nameOverride))
ChkHr(threadContext._PFN.Set(PFN))
ChkHr(threadContext.DoWork())
ChkHr(TrimString(result.Get(), resultString))
ChkHr(ULongMult(static_cast<DWORD>(wcslen(value)) + 1, sizeof(*value), &dwSize))
ChkHr(UMgrQueryUserToken(userContextToken, &userToken))
ChkHr(UninstallStorePackageAsyncHelper(cv, __FSTREXP __FUNCTION__  , 0, packageFamilyName.Get(), false , operation))
ChkHr(UninstallStorePackageAsyncHelper(cv, __FSTREXP __FUNCTION__  , 0, packageFamilyName.Get(), true , operation))
ChkHr(UninstallStorePackageAsyncHelper(cv, __FSTREXP __FUNCTION__  , storeId, 0, false , operation))
ChkHr(UninstallStorePackageAsyncHelper(cv, __FSTREXP __FUNCTION__  , storeId, 0, true , operation))
ChkHr(UnpackHStringIIterable(inAppOfferTokens, &_inAppOfferTokens))
ChkHr(UnpackHStringIIterable(keywords, &_keywords))
ChkHr(update.As(&updatePrivate))
ChkHr(updateIterator->get_Current(&update))
ChkHr(updateIterator->get_HasCurrent(&hasCurrent))
ChkHr(updateIterator->MoveNext(&hasCurrent))
ChkHr(updatePrivate->get_StoreQueueItem(&storeQueueItem))
ChkHr(updates->Append(storePackageUpdate.Get()))
ChkHr(updates->First(&updateIterator))
ChkHr(updates->GetView(queuedItems))
ChkHr(uriEscapeStatics->EscapeComponent(substituteString.Get(), escapedData.GetAddressOf()))
ChkHr(uriFactory->CreateUri(hstrURL, &uri))
ChkHr(UriHelper::GetUri(UriHelper::LinkUriFormat, rgNameValuePairs, (sizeof(*RtlpNumberOf(rgNameValuePairs))), pLinkUri))
ChkHr(UriHelper::GetUri(UriHelper::MDCollections, collectionsUriBase.GetAddressOf()))
ChkHr(UriHelper::GetUri(UriHelper::MDGetAppReceiptsDesktop, rgNameValuePairs, (sizeof(*RtlpNumberOf(rgNameValuePairs))), hstrServiceUri.GetAddressOf()))
ChkHr(UriHelper::GetUri(UriHelper::MDGetAppReceiptsMobile, rgNameValuePairs, (sizeof(*RtlpNumberOf(rgNameValuePairs))), hstrServiceUri.GetAddressOf()))
ChkHr(UriHelper::GetUri(UriHelper::MDGetOneProductReceiptMobile, rgNameValuePairs, (sizeof(*RtlpNumberOf(rgNameValuePairs))), hstrServiceUri.GetAddressOf()))
ChkHr(UriHelper::GetUri(UriHelper::OneStoreAuthenticationDomain, hstrAuthDomain.GetAddressOf()))
ChkHr(UriHelper::GetUriWithPath( UriHelper::MDCollections, HStringReference(L"v6.0/beneficiaries/me/keys").Get(), collectionKeysUri.GetAddressOf()))
ChkHr(UriHelper::GetUriWithPath( UriHelper::MDPurchase, HStringReference(L"v6.0/users/me/keys").Get(), purchaseKeysUri.GetAddressOf()))
ChkHr(UriHelper::GetUriWithPathAndParameters( UriHelper::MDDisplayCatalog, CSP6Internal::GetProductDetailsPath(), rgNameValuePairs, (sizeof(*RtlpNumberOf(rgNameValuePairs))), hstrUri.GetAddressOf()))
ChkHr(UriHelper::GetUriWithPathAndParameters( UriHelper::MDDisplayCatalog, CSP6Internal::GetSearchAddOnsPath(), rgNameValuePairs, (sizeof(*RtlpNumberOf(rgNameValuePairs))), _hstrUri.GetAddressOf()))
ChkHr(UriHelper::GetUriWithPathAndParameters( UriHelper::MDDisplayCatalog, CSP6Internal::GetSearchProductsByPackageFamilyNamePath(), rgNameValuePairs, (sizeof(*RtlpNumberOf(rgNameValuePairs))), hstrUri.GetAddressOf()))
ChkHr(UriHelper::GetUriWithPathAndParameters( UriHelper::MDDisplayCatalog, CSP6Internal::GetSearchSkusByContentIdPath(), rgNameValuePairs, (sizeof(*RtlpNumberOf(rgNameValuePairs))), hstrUri.GetAddressOf()))
ChkHr(UriHelperInternal::GetUriEx(s_rghstrUris, uri, nameValuePairs, cNameValuePairs, false, hstrUri))
ChkHr(UriHelperInternal::GetUriEx(s_rghstrUris, uri, nullptr, 0, false, hstrUri))
ChkHr(UriHelperInternal::GetUriString(rghstrUris, index, &pszInitialUri))
ChkHr(UriHelperInternal::GetUriString(rghstrUris, index, &pszUriBase))
ChkHr(UriHelperInternal::GetUriString(s_rghstrUris, uri, &pszUri))
ChkHr(UriHelperInternal::GetUriString(s_rghstrUrisSLS, uri, &pszUri))
ChkHr(UriHelperInternal::GetUriWithPathAndParametersEx( s_rghstrUris, uriBase, hstrPath, nameValuePairs, cNameValuePairs, hstrUri))
ChkHr(UriHelperInternal::GetUriWithPathAndParametersEx(s_rghstrUris, uriBase, hstrPath, nullptr, 0, hstrUri))
ChkHr(UriHelperV7::GetIndexedEntry(slsUri, requestKind, entry.GetAddressOf()))
ChkHr(UriHelperV7::GetRawString(UriHelperV7::DeviceFamily, deviceFamily.GetAddressOf()))
ChkHr(UriHelperV7::GetRawString(UriHelperV7::ModalFlowSizes, modalFlowSizes.GetAddressOf()))
ChkHr(UrlEscapeW(idValueUnescaped.GetRawBuffer(nullptr), pszIdValue, &cchIdValue, 0))
ChkHr(userAuth->GetNamedArray(userSid.Get(), &jsonBeneficiaries))
ChkHr(UserAwareCallerIdentity::GetCallingProcessPackageFullName(packageFullName))
ChkHr(UserAwareCallerIdentity::GetCallingProcessUserContext(&userContextToken))
ChkHr(userLocale.Set(locale))
ChkHr(userLocale.Set(szUserLocale))
ChkHr(userMgr.As(&signInMgr))
ChkHr(UuidCreate(&anid))
ChkHr(UuidFromStringW((PWCHAR)_transactionId.GetRawBuffer(nullptr), _pTransactionId))
ChkHr(value.As(&propValue))
ChkHr(value->get_Value(&dwValue))
ChkHr(Vector<HSTRING>::Make(&_bigIds))
ChkHr(Vector<HSTRING>::Make(&_bundledSkuIds))
ChkHr(Vector<HSTRING>::Make(&_keywords))
ChkHr(Vector<HSTRING>::Make(&bigIds))
ChkHr(Vector<HSTRING>::Make(&contentIds))
ChkHr(Vector<HSTRING>::Make(&ids))
ChkHr(Vector<HSTRING>::Make(&keyIds))
ChkHr(Vector<HSTRING>::Make(&licensedProducts))
ChkHr(Vector<HSTRING>::Make(&productIds))
ChkHr(Vector<HSTRING>::Make(&productKinds))
ChkHr(Vector<HSTRING>::Make(&spIds))
ChkHr(Vector<HSTRING>::Make(&storeIds))
ChkHr(Vector<Package*>::Make(&appmodelPackages))
ChkHr(Vector<StoreAvailability*>::Make(&sortedAvailabilities))
ChkHr(Vector<StoreImage*>::Make(&_images))
ChkHr(Vector<StoreSku*>::Make(&sortedSkus))
ChkHr(Vector<StoreSystemFeature>::Make(&supportedFeaturesVector))
ChkHr(Vector<StoreVideo*>::Make(&_videos))
ChkHr(Vector<UnfulfilledConsumable*>::Make(&_spUnfulfilledList))
ChkHr(Vector<UnfulfilledConsumable*>::Make(&m_spUnfulfilledList))
ChkHr(Vector<UnfulfilledConsumable*>::Make(&spUnfulfilledList))
ChkHr(VerifyCapability(requestParams.requiredCapability.Get()))
ChkHr(VerifyCapability(StoreConfigurationCapability.Get()))
ChkHr(VerifyCapability(StoreLicenseManagement.Get()))
ChkHr(wil::com_weak_query_nothrow(this, &weakThis))
ChkHr(Windows::Foundation::ActivateInstance( HStringReference(RuntimeClass_Windows_UI_Popups_UICommand).Get(), &spCommand))
ChkHr(Windows::Foundation::GetActivationFactory( HStringReference(RuntimeClass_Windows_Foundation_Uri).Get(), &uriFactory))
ChkHr(Windows::Foundation::GetActivationFactory( HStringReference(RuntimeClass_Windows_Web_Http_HttpStringContent).Get(), &contentFactory))
ChkHr(Windows::Foundation::GetActivationFactory( Microsoft::WRL::Wrappers::HStringReference(RuntimeClass_Windows_Internal_Shell_ModalExperience_ModalExperienceManager).Get(), &memStatics))
ChkHr(Windows::Foundation::GetActivationFactory(HStringReference(L"Windows.Foundation.Uri").Get(), &activationFactory))
ChkHr(Windows::Foundation::GetActivationFactory(HStringReference(RuntimeClass_Windows_Data_Json_JsonArray).Get(), &spJsonArrayStatics))
ChkHr(Windows::Foundation::GetActivationFactory(HStringReference(RuntimeClass_Windows_Data_Json_JsonObject).Get(), &jsonObjectStatics))
ChkHr(Windows::Foundation::GetActivationFactory(HStringReference(RuntimeClass_Windows_Data_Json_JsonObject).Get(), &spJsonObjectStatics))
ChkHr(Windows::Foundation::GetActivationFactory(HStringReference(RuntimeClass_Windows_Data_Json_JsonObject).Get(), &spJsonStatics))
ChkHr(Windows::Foundation::GetActivationFactory(HStringReference(RuntimeClass_Windows_Storage_Streams_DataReader).Get(), &dataReaderFactory))
ChkHr(Windows::Foundation::GetActivationFactory(HStringReference(RuntimeClass_Windows_System_Profile_AnalyticsInfo).Get(), &spAnalyticsInfo))
ChkHr(Windows::Foundation::GetActivationFactory(UserManagerClassId.Get(), &userMgr))
ChkHr(WindowsCompareStringOrdinal(productId, _currentProductBeingPurchased.Get(), &comparisonResult))
ChkHr(WindowsConcatString( HStringReference(L"WLID1.0=").Get(), ticket, formattedAuthToken.GetAddressOf()))
ChkHr(WindowsConcatString( productId, StoreIdSeparator.Get(), productIdWithSeparator.GetAddressOf()))
ChkHr(WindowsConcatString( productIdSkuId.Get(), StoreIdSeparator.Get(), productIdSkuIdWithSeparator.GetAddressOf()))
ChkHr(WindowsConcatString( productIdSkuIdWithSeparator.Get(), availabilityId, storeId))
ChkHr(WindowsConcatString( productIdWithSeparator.Get(), skuId, productIdSkuId.GetAddressOf()))
ChkHr(WindowsConcatString(EntitlementFilterPrefix.Get(), productKind.Get(), entitlementFilter.GetAddressOf()))
ChkHr(WindowsConcatString(HStringReference(L"http:").Get(), _hstrImageUri.Get(), uri.GetAddressOf()))
ChkHr(WindowsConcatString(HStringReference(L"http:").Get(), _ImageUri.Get(), uri.GetAddressOf()))
ChkHr(WindowsConcatString(HStringReference(L"http:").Get(), _VideoUri.Get(), uri.GetAddressOf()))
ChkHr(WindowsConcatString(HStringReference(L"WLID1.0=").Get(), authTicket, hstrAuthTicketWithPrefix.GetAddressOf()))
ChkHr(WindowsCreateString(pszResource, cch, jsonString))
ChkHr(WindowsCreateString(reinterpret_cast<PCWSTR>(pbReceipt), cbReceipt / 2, receipt))
ChkHr(WindowsCreateString(sidString, (UINT32)wcslen(sidString), sid))
ChkHr(WindowsCreateString(spszDestBuffer, (UINT32)wcslen(spszDestBuffer), pDeviceContext))
ChkHr(WindowsDuplicateString(_licensableSku.Get(), pValue))
ChkHr(WindowsPromoteStringBuffer(buffer, string))
ChkHr(WindowsSubstring(inputString, lastDelimeterIndex, output.GetAddressOf()))
ChkHr(WindowsSubstringWithSpecifiedLength(hstrReceiptContent.Get(), 9, WindowsGetStringLen(hstrReceiptContent.Get()) - 12, receipt))
ChkHr(WindowsSubstringWithSpecifiedLength(inputString, lastDelimeterIndex, delimeterIndex - lastDelimeterIndex, output.GetAddressOf()))
ChkHr(WinStoreAuth::AuthenticationInternal::GetDeviceTicketWithBroker( true, authToken.GetAddressOf()))
ChkHr(WinStoreAuth::AuthenticationInternal::GetStorePrimaryAccountTicket( 0, WinStoreAuth::AuthenticationEndpoint::OneStore, WinStoreAuth::PromptType::Silent, false, nullptr, authTicket.GetAddressOf(), providerType, spWebTokenRequestResult.GetAddressOf()))
ChkHr(WinStoreAuth::AuthenticationInternal::GetStorePrimaryAccountTicket( 0, WinStoreAuth::AuthenticationEndpoint::OneStore, WinStoreAuth::PromptType::Silent, WinStoreAuth::AuthenticationInternal::UseXToken(), _user.Get(), authTicket.GetAddressOf(), providerType, spPrimaryAccountTokenRequestResult.GetAddressOf()))
ChkHr(WinStoreAuth::AuthenticationInternal::GetStorePrimaryAccountTicket( 0, WinStoreAuth::AuthenticationEndpoint::OneStore, WinStoreAuth::PromptType::Silent, WinStoreAuth::AuthenticationInternal::UseXToken(), user.Get(), authTicket.GetAddressOf(), providerType, spPrimaryAccountTokenRequestResult.GetAddressOf()))
ChkHr(WinStoreAuth::AuthenticationInternal::PrefixTicketForMDollar((WinStoreAuth::AccountProviderType)requestParams.authType, authToken.Get(), strAuthTokenPrefixed.GetAddressOf()))
ChkHr(WinStoreAuth::AuthenticationInternal::PrefixTicketForMDollar(providerType, ticket.Get(), strPrefixAuthToken.GetAddressOf()))
ChkHr(WinStoreAuth::ConvertWebAccountIdFromRealIdToAppForUser(_user.Get(), authType, hstrPurchaseAppPfn.Get(), userId.Get(), realId.GetAddressOf()))
ChkHr(WSCollector::CollectStoreLog(options, resultsView))
ChkReturn(((HRESULT)0x80040001L))
ChkReturn(((HRESULT)0x80040002L))
ChkReturn(((HRESULT)0x8007000EL))
ChkReturn(_productIdTable->Lookup(inAppOfferToken, productId))
ChkReturn(hr)
ChkReturn(HRESULT_FROM_WIN32(1168L))
ChkWin32(Expr)
CHttpConnection::_Initialize
CHttpConnection::Connect
CHttpConnectionCache::GetConnection
CHttpRequest response header: %s : %s
CHttpRequest::_AddDebugHeaderIfPresent
CHttpRequest::_AppendToDataBuffer
CHttpRequest::_CreateConnectionAndSendRequest
CHttpRequest::_DownloadData
CHttpRequest::_GetProxyInfoForUrl
CHttpRequest::_LocalAllocHeader
CHttpRequest::_ReceiveResponse
CHttpRequest::_SendRequestWithRetry
CHttpRequest::_SetProxyForCurrentRequest
CHttpRequest::_WaitForLastAsyncCompletion
CHttpRequest::_WinHttpCompletionCallback
CHttpRequest::~CHttpRequest
CHttpRequest::AbortRequest
CHttpRequest::AddRequestHeader
CHttpRequest::Initialize
CHttpRequest::s_WinHttpCompletionCallback
CHttpRequest::SetAuthorizationHeader
CHttpRequest::UploadAndFetchResource
CHttpRequest::UploadAndFetchResourceByUrl
CHttpSession::_Initialize
className
Cleared event hander for item %s
Client_ShowSkipForceAuthentication
ClientProcessUtils::CheckMultipleUserSupport
ClientProcessUtils::EnsureWindowFromCallingProcess
ClientProcessUtils::GetAppContentTypeForInstalledPackage
ClientProcessUtils::GetCallerTokenFromComCall
ClientProcessUtils::GetCallingAppName
ClientProcessUtils::GetCallingAppPackage
ClientProcessUtils::GetCallingAppPackage(_user.Get(), package.GetAddressOf())
ClientProcessUtils::GetCallingAppPackageFamilyName
ClientProcessUtils::GetCallingAppPackageFullName
ClientProcessUtils::GetCallingAppPackageFullName(_PFN.GetAddressOf())
ClientProcessUtils::GetCallingAppPackageFullName(m_PFN.GetAddressOf())
ClientProcessUtils::GetCallingAppSessionGuid
ClientProcessUtils::GetCallingAppSupportsMultipleUser
ClientProcessUtils::GetCallingAppWindowHandle
ClientProcessUtils::GetCallingAppWindowHandleFromThreadId
ClientProcessUtils::GetModalExperienceManager
ClientProcessUtils::GetSidForUser
ClientProcessUtils::GetWindowHandle
ClientProcessUtils::IsCallerERA
CloseHandle
CloseState
CloseThreadpoolTimer
cNameValuePairs >= 0
CoCreateFreeThreadedMarshaler
CoCreateInstance
CoGetApartmentType
CoGetCallContext
CoGetCallerTID
CoGetInterfaceAndReleaseStream
CoGetMalloc
CoImpersonateClient
CollectionData
CollectionsServiceProxyV6::ConsumeConsumable
CollectionsServiceProxyV6::GetCampaignId
CollectionsServiceProxyV6::GetUnfulfilledConsumables
CoMarshalInterface
combase.dll
CompanyName
CompareFileTime
CompareStringOrdinal
CompareStringW
ComposeLegacyXboxContentIdFromInstalledContentId
Conditions
ConstrainedImpersonateLoggedOnUser::GenerateImpersonationToken
Consumable
consumableProductId
consumers
ContentIds
continuationToken
Conversion to hex failed: %s
Conversion to UINT64 failed: %s
Converted Store Queue State for Package %s - AppInstallState: %d and IsStaged: %s and IsDownloaded: %s to StoreQueueItemState: %d and StoreQueueItemExtendedState: %d
ConvertSidToStringSidW
CopySid
CoReleaseMarshalData
CoRevertToSelf
CoRevertToSelf()
CoSetProxyBlanket
CoSwitchCallContext
CoTaskMemAlloc
CoTaskMemFree
CoTaskMemRealloc
count
CoWaitForMultipleHandles
CreateDirectoryW
CreateEvent failed
CreateEventExW
CreateEventW
CreateFileA
CreateFileW
CreateGetItemsRequest
CreateListingInformation
CreateMutexExW
CreateProcessW
CreateRandomAccessStreamOverStream
CreateSemaphoreExW
CreateStreamOnHGlobal
CreateThreadpoolTimer
Creating reg.exe process failed
CryptAcquireContextW
CryptCreateHash
CryptDestroyHash
CryptGetHashParam
CryptHashData
CryptReleaseContext
CRYPTSP.dll
CSP6Internal::CreateCatalogHttpClient
CStdStubBuffer_AddRef
CStdStubBuffer_Connect
CStdStubBuffer_CountRefs
CStdStubBuffer_DebugServerQueryInterface
CStdStubBuffer_DebugServerRelease
CStdStubBuffer_Disconnect
CStdStubBuffer_Invoke
CStdStubBuffer_IsIIDSupported
CStdStubBuffer_QueryInterface
CStdStubBuffer2_Connect
CStdStubBuffer2_CountRefs
CStdStubBuffer2_Disconnect
CStdStubBuffer2_QueryInterface
CurrencyCode
CurrencySymbol
CurrentApp.AppId
CurrentApp.GetAppPurchaseCampaignIdAsync
CurrentApp.GetAppReceiptAsync
CurrentApp.GetCustomerCollectionsIdAsync
CurrentApp.GetCustomerPurchaseIdAsync
CurrentApp.GetProductReceiptAsync
CurrentApp.GetUnfulfilledConsumablesAsync
CurrentApp.LicenseInformation
CurrentApp.LinkUri
CurrentApp.LoadListingInformationAsync
CurrentApp.ReportConsumableFulfillmentAsync
CurrentApp.ReportProductFulfillment
CurrentApp.RequestAppPurchaseAsync
CurrentApp.RequestProductPurchaseAsync
CurrentApp.RequestProductPurchaseWithDisplayPropertiesAsync
CurrentApp.RequestProductPurchaseWithResultsAsync
currentContextId
currentContextMessage
currentContextName
CurrentEraTitleInfo::GetAppId
CurrentEraTitleInfo::GetProxyAppPid
CustomDeveloperData
CWSHttpHelper::AddTHAdditionalHeaders
CWSHttpHelper::AddTHAdditionalRequestHeader
CWSHttpHelper::FetchURL
D$ 9D$
D$ Ph
D$ Ph`
D$ Phh
D$ PhX
D$ Pj
D$ PQ
D$ PSW
D$ PWWWW
D$ QQ
D$ SVW
D$$Ph
D$$Ph(
D$$Pj
D$$PQ
D$(Ph
D$(Pj
D$(PQ
D$(PVj
D$(QQj
D$(SV
D$(SV3
D$,Pj
D$,PQ
D$,SQj
D$,YY9D$
D$@PQ
D$@PV
D$<;D$H
D$<Pj
D$<PQ
D$<PV
D$<PVj
D$<QQWh<
D$0;D$8r
D$0Ph
D$0Pj
D$0PV
D$0VP
D$4P2
D$4PQ
D$8P2
D$8Pj
D$8PQQ
D$8PV
D$8QV
D$D;D$\r
D$DPQ
D$HPj
D$HPQQ
D$hPQQ
D$hQQ
D$lSP
D$Pl5
D$pPh
D$tPV
D$XQQ
D$XSP
D$XSV
d,DrP
d/Zc1q
D;P>5
D?xJv
d0j0q0{0
D0K0b0
D0X0u0
DataDownloaded callback failed
DebugBreak
DecodePointer
defaultValue
DelayLoadFailureHook
DeleteCriticalSection
DeleteFileA
DeleteFileW
Developer
DeviceContext
DeviceFamily
deviceFamily
deviceMoid
deviceOemid
deviceScmid
devOfferId
DevOfferId
devOfferId
DisableThreadLibraryCalls
DisplayProductSearchResult
DisplayRank
DisplaySkuAvailabilities
DisplaySkuSearchResult
DllCanUnloadNow
DllGetActivationFactory
DllGetClassObject
DoDelete
DoHead
DoOptions
DoPatch
DoPost
DoPut
DPA_SortedInsertPtr failed on handle 0x%08x for %s:%d
DumpListingToDebugger
DuplicateTokenEx
Durable
Duration
dVEm8t"
dwContext != 0
DWordAdd(dwNeeded, 1, &cbSizeToAlloc)
E(SVW
e/X4V
E_NOT_SET
E1k1r1y1
Eh-'=
Ehttp://crl.microsoft.com/pki/crl/products/MicCodSigPCA_2010-07-06.crl0Z
Ehttp://crl.microsoft.com/pki/crl/products/MicRooCerAut_2010-06-23.crl0Z
Ehttp://crl.microsoft.com/pki/crl/products/MicTimStaPCA_2010-07-01.crl0Z
enabled
EnabledFeatureUsage
EncodePointer
EndDate
EndOperation
EnterCriticalSection
Enterprise
entitlementFilters
entitlementId
Entry cannot have a Body Template: %s
Entry requires a Body Template: %s
en-US
eReceiptType
Error
ERROR
error
Error
Error Code
ErrorCode
ErrorLocation
ErrorMessage
ErrorMethod
EtwEventEnabled
EtwEventRegister
EtwEventSetInformation
EtwEventUnregister
EtwEventWrite
EtwEventWriteTransfer
EventActivityIdControl
EventData
EventProviderEnabled
EventRegister
EventSetInformation
EventUnregister
EventWriteTransfer
EvtExportLog
EW;SA
Exception
Exception Details
ExpandEnvironmentStringsA
ExpandEnvironmentStringsW
expandSatisfyingItems
expiration
ExtendedData
ext-ms-win-appmodel-state-ext-l1-2-0.dll
ext-ms-win-core-licensemanager-l1-1-0
ext-ms-win-core-licensemanager-l1-1-0.dll
ext-ms-win-kernel32-package-l1-1-0.dll
ext-ms-win-ntuser-keyboard-l1-1-0.dll
ext-ms-win-ntuser-keyboard-l1-3-0.dll
ext-ms-win-rtcore-ntuser-window-ext-l1-1-0.dll
ext-ms-win-session-usermgr-l1-1-0
ext-ms-win-session-usermgr-l1-1-0.dll
ext-ms-win-session-usermgr-l1-2-0
f;F$u
f;F.u
F0Vh 6
F0X0f0r0
Failed
Failed to convert systemtime to filetime
Failed to find substitute value with key %s and no default value provided.
Failed to find substitute value with key %s!
Failed to parse property '%s'
Failed to substitute value with key %s because we were given an invalid type!
FailFast
failureCount
failureId
failureType
FallbackError
FallbackToDeviceAuth
false
FALSE
false
false && "AppInstallItem returned an unexpected InstallType!"
false && "Store service returned an unexpected enum!"
FChkHr(HRESULT_FROM_RPC(RpcStringBindingComposeW(nullptr, reinterpret_cast<RPC_WSTR>(L"ncalrpc"), nullptr, nullptr, nullptr, &rpcStringBinding)))
featureBaseVersion
FeatureError
featureId
featureStage
FeatureUsage
FeatureVariantUsage
featureVersion
File Name
FileDescription
fileName
FileTimeToDosDateTime
FileTimeToLocalFileTime
FileTimeToSystemTime
FileVersion
FilterIAPs
FindClose
FindFirstFileA
FindFirstFileExA
FindNextFileA
FindResourceExW
FindWindowExW
FiWWVP
floor
FlushTrace for %s failed
FlushTraces
FlushTraceW
ForcePrompt
ForceRetailSandbox
FormatMessageW
FormatNameValuePairs
Found matching package for %s
Found update for package = %s
Foundation
FreeLibrary
FreeResource
FreeSid
FRtlQueryFeatureConfiguration
Fsq^V
FulfillmentType
Function
function
Function
FWindows::ApplicationModel::Store::AsyncOperationBase<struct Windows::Foundation::IAsyncOperation<class Windows::Services::Store::StoreUninstallStorePackageResult *>,struct Windows::Foundation::IAsyncOperationCompletedHandler<class Windows::Services::Store::StoreUninstallStorePackageResult *>,0>::DoWorkStub
FYWWVP
G ;A0t(
G PhHj
G PhT(
G,PSWh`5
G0;A@t(
G4VVWP
get_AppId() invoked.
get_LicenseInformation() invoked.
get_LinkUri() invoked.
GetAppPurchaseCampaignIdAsync invoked.
GetAppReceiptAsync() invoked.
GetCallingProcessPackageFullName
GetContinuationToken
GetCurrencyFormatEx
GetCurrentPackageFullName
GetCurrentProcess
GetCurrentProcessId
GetCurrentThread
GetCurrentThreadId
GetCustomerCollectionsIdAsync() invoked.
GetCustomerPurchaseIdAsync() invoked.
GetERAPackageFullNameByAumid
GetExitCodeProcess
GetExitCodeProcess failed
GetFileInformationByHandle
GetFileSize
GetForegroundWindow
GetFormattedPriceUsingCurrencyFormatter
GetGeoInfoW
GetHttpResponse
GetLastError
GetLastError()
GetLengthSid
GetLocaleInfoEx
GetLocalTime
GetModuleFileNameA
GetModuleHandleExW
GetModuleHandleW
GetPackageFamilyNameFromToken
GetPackageFullName
GetPackageFullNameFromToken
GetPriceInfo
GetPriceInfoFromAvailability
GetProcAddress
GetProcessHeap
GetProcessId
GetProcessIdOfThread
GetProductReceiptAsync(%s) invoked.
GetRequiredEkbFromContentId
GetRestrictedErrorInfo
GetStateFolder
GetSystemTime
GetSystemTimeAsFileTime
GetTempFileNameA
GetTempPathA
GetTempPathW
GetTempPathW failed
GetTickCount
GetTickCount64
GetTokenInformation
GetUnfulfilledConsumablesAsync() invoked.
GetUserDefaultLocaleName
GetUserGeoID
GetVersionExA
GetWindowTextW
GetWindowThreadProcessId
gG#mF
GIDR8P
GlobalCollection
GlobalFree
Going to catalog again to find BigCatId: QueryCatalogForBigCatIdByPackageFullNameAndType
Going to catalog to find BigCatId: QueryCatalogForBigCatIdByPackageFullName
goldenBeneficiary
goldenBeneficiaryArray
Got event for item with Package Family Name %s after the events were unregistered.
H,;J@t>
Hardware
HasMorePages
HasPreviewCapability
HasTrial
hbl\W
HeapAlloc
HeapFree
HeapReAlloc
Height
HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\SIH
HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Dnscache\Parameters\DnsPolicyConfig
hModule != nullptr
hresult
HRESULT_FROM_WIN32(1317L)
HResultOfOperation
hrInfo
HSTRING_UserFree
HSTRING_UserMarshal
HSTRING_UserSize
HSTRING_UserUnmarshal
HStringBufferWrapper::Promote
http%s://%s/%s
http:
https://
https://login.microsoft.com
https://login.windows.local
https://login.windows.net/common
https://onestore.microsoft.com
https://purchase.mp.microsoft.com
I_RpcBindingInqLocalClientPID
I0G1-0+
I8QWh
I'ae#
IAPReceiptType_App
IAPReceiptType_OneProduct
IAPUtils::BuildEntitlementFiltersJSON
IAPUtils::BuildStoreId
IAPUtils::CheckProductKinds
IAPUtils::CombineProductsAndCollectionsJson
IAPUtils::ConstructSlsUri
IAPUtils::CreateHttpClient
IAPUtils::CreateHttpClientWithAuthHeader
IAPUtils::CreateHttpClientWithAuthIfAvailable
IAPUtils::CreateUri
IAPUtils::GetDeviceContextId
IAPUtils::GetDeviceContextString
IAPUtils::GetDeviceIds
IAPUtils::GetFormattedPrice
IAPUtils::GetJsonFromURL
IAPUtils::GetJsonFromURLWithHttpClient
IAPUtils::GetLanguage
IAPUtils::GetLanguages
IAPUtils::GetLanguagesString
IAPUtils::GetTimeSpanDifference
IAPUtils::IsCallingProcessAppContainer
IAPUtils::ParseStoreId
IAPUtils::ParseTimeSpan
IAPUtils::ParseTimeSpan(timeString.Get(), &date)
IAPUtils::ParseUriSubstitutionTag
IAPUtils::PostJsonToURLWithHttpClient
IAPUtils::SetDateTime
IAPUtils::TimeSpanToString
IAsyncAction
IAsyncOperation`1
IAsyncOperation`1<Boolean>
IAsyncOperation`1<String>
IAsyncOperation`1<Windows.ApplicationModel.Store.FulfillmentResult>
IAsyncOperation`1<Windows.ApplicationModel.Store.LicenseManagement.LicenseSatisfactionResult>
IAsyncOperation`1<Windows.ApplicationModel.Store.ListingInformation>
IAsyncOperation`1<Windows.ApplicationModel.Store.Preview.StorePreviewPurchaseResults>
IAsyncOperation`1<Windows.ApplicationModel.Store.PurchaseResults>
IAsyncOperation`1<Windows.Foundation.Collections.IVectorView`1<Windows.ApplicationModel.Store.Preview.StorePreviewProductInfo>>
IAsyncOperation`1<Windows.Foundation.Collections.IVectorView`1<Windows.ApplicationModel.Store.Preview.StoreSystemFeature>>
IAsyncOperation`1<Windows.Foundation.Collections.IVectorView`1<Windows.ApplicationModel.Store.UnfulfilledConsumable>>
IAsyncOperation`1<Windows.Foundation.Collections.IVectorView`1<Windows.Services.Store.StorePackageUpdate>>
IAsyncOperation`1<Windows.Foundation.Collections.IVectorView`1<Windows.Services.Store.StoreQueueItem>>
IAsyncOperation`1<Windows.Security.Authentication.Web.Core.WebTokenRequestResult>
IAsyncOperation`1<Windows.Services.Store.StoreAcquireLicenseResult>
IAsyncOperation`1<Windows.Services.Store.StoreAppLicense>
IAsyncOperation`1<Windows.Services.Store.StoreCanAcquireLicenseResult>
IAsyncOperation`1<Windows.Services.Store.StoreConsumableResult>
IAsyncOperation`1<Windows.Services.Store.StoreProductPagedQueryResult>
IAsyncOperation`1<Windows.Services.Store.StoreProductQueryResult>
IAsyncOperation`1<Windows.Services.Store.StoreProductResult>
IAsyncOperation`1<Windows.Services.Store.StorePurchaseResult>
IAsyncOperation`1<Windows.Services.Store.StoreRateAndReviewResult>
IAsyncOperation`1<Windows.Services.Store.StoreSendRequestResult>
IAsyncOperation`1<Windows.Services.Store.StoreUninstallStorePackageResult>
IAsyncOperation`1<Windows.Storage.Streams.IRandomAccessStreamReference>
IAsyncOperation`1<Windows.UI.Popups.IUICommand>
IAsyncOperationWithProgress`2
IAsyncOperationWithProgress`2<Windows.Services.Store.StorePackageUpdateResult, Windows.Services.Store.StorePackageUpdateStatus>
identityType
identityValue
IdType
iertutil.dll
IIDFromString
imageName
ImagePurpose
Images
imageSize
ImpersonateLoggedOnUser
InAppOfferToken
inAppOfferToken
includeReceipt
includeRelationship
Index
InitialDuration
InitializeCriticalSection
InitializeCriticalSectionEx
InitializeSRWLock
InitOnceBeginInitialize
InitOnceComplete
InitOnceExecuteOnce
innererror
Installs to complete, continuing
InsufficientConsumeQuantity
InternalName
InternalStoreEndpointExtensionUrls
InvokedApi
InvokePurchaseFlow
iR{I<
isActive
IsDebuggerPresent
isDiscLicense
IsErrorPropagationEnabled
isOptional
IsRecurring
IsRpcServerCallOnLocalTransport
IsTrial
isTrial
isTrialOwnedByThisUser
itemCount
Items
items
IUnknown_AddRef_Proxy
IUnknown_QueryInterface_Proxy
IUnknown_Release_Proxy
IWQQQP
j h0]
j j!3
j j!h
j!h(Y
j"j#h
j#j$3
j#j$h
j$h0a
j$j%h
j%j&h
J%n%H
j(j)3
j(j)h
j(j)h0
j)j*h
j)j*h(
j,j-hP
j,j-hp\
j.j/hX
j/j0h
j:[f9
j;Xf9E
j;Zf;
j?j@h
j?j@h0p
j@jAh
j_htg
j`htg
j+Xf;
j=j>h@J
j=j>h8
J0W0^0d0w0
j1j2h
j2j3h
j2j3h8X
j3j43
j3j4h
j5j6h
j8j9h
j8j9hxa
j9hpY
jAjBhXr
jc_!0
jEjFh
JGFY__x_Windows_CInternal_CStore_CIPurchaseEventArgsRedstone
jGjHh
jGjHh0k
jH{:uLGM
j'j(h
j-j.3
j-j.hX
jjjjjj
jljmh
JQVh0
jQWh@M
Json document is missing a required field.
JSON_RESPONSE
JSON_RESPONSE(JSON_RESPONSE_ONE_STORE_CLIENT_DATA_URLS+JSON_RESPONSE_STORE_ENDPOINT_EXTENSION_URLS4JSON_RESPONSE_INTERNAL_STORE_ENDPOINT_EXTENSION_URLS
JSON_RESPONSE_INTERNAL_STORE_ENDPOINT_EXTENSION_URLS
JSON_RESPONSE_MODAL_FLOW_SIZES
JSON_RESPONSE_ONE_STORE_CLIENT_DATA_URLS
JSON_RESPONSE_STORE_ENDPOINT_EXTENSION_URLS
jsonArray->GetObjectAt(0, jsonElement.GetAddressOf())
jsonArray->GetObjectAt(i, jsonElement.GetAddressOf())
jsonArray->GetStringAt(i, text.GetAddressOf())
JsonHelpers::AppendObject
JsonHelpers::AppendString
JsonHelpers::GetArraySizeFromJsonArray
JsonHelpers::GetArraySizeFromJsonArray(jsonArray, &count)
JsonHelpers::GetArraySizeFromJsonArray(jsonArray, &len)
JsonHelpers::GetNamedDateTime
JsonHelpers::ParseToJsonArray
JsonHelpers::ParseToJsonObject
JsonHelpers::RemoveAt
JsonHelpers::SetNamedArray
JsonHelpers::SetNamedBool
JsonHelpers::SetNamedDateTime
JsonHelpers::SetNamedNull
JsonHelpers::SetNamedNumber
JsonHelpers::SetNamedObject
JsonHelpers::SetNamedString
JsonHelpers::SetNamedTimeSpan
JsonHelpers::Stringify
JsonHelpers::Stringify(_response, jsonResponse)
JsonHelpers::Stringify(productsResultObject, pCombinedJson)
jsonRequest: %s
jsonResponse: %s
jsonValue->GetArray(jsonArray.GetAddressOf())
jsonValue->GetBoolean(&value)
jsonValue->GetNumber(&result)
jsonValue->GetNumber(&valueAsDouble)
jsonValue->GetObject(jsonObject.GetAddressOf())
jsonValue->GetString(string.GetAddressOf())
jsonValue->GetString(timeString.GetAddressOf())
jSXf;
JTk_S/
jUjVh(
j-Xf;F
jxjyh
j-Yf9L$8u
jyhh^
j-Zf;
K PV3
k(M-]v
K<Vu j
K8PVW
kernelbase.dll
keybd_event
KeyIds
keywords
KnILk
KxBb>
L$ ;L$$
L$ 9L$$
L$ PQ
L$ Qh
L$ QV
L$ QW
L$ VW
L$#QV
L$$9L$
L$$Qhd
L$(;L$<
L$(QS
L$(QSP
L$(VW
L$,QS
L$,QV
L$@QPj
L$@VW
L$\CS
L$\QW
L$`;L$T
L$`9L$T
L$`CS
L$<CS
L$<PV
L$<QV
L$0QP
L$0QPj
L$0QV
L$0VW
L$4^3
L$4_^[3
L$8PS
L$D;L$X
L$D_^[3
L$D9L$X
L$DQV
L$HCS
L$HPj
L$HQS
L$HQW
L$HVW
L$l_^[3
L$LQV
L$PQV
L$PQVPj
L$XQRP
L\9}'
l| H?p
l7*X7~
Language
languages
latencyMs
LCMapStringEx
LeaveCriticalSection
LegacyWindowsPhoneLicensingData
Legal_Policy_Statement
LegalCopyright
length >= (count * 2)
licensableSku
licensableStatus
License Info for app %s: (CV = %hs)
LicensingData
Line Number
LineNumber
lineNumber
LineNumber
LinkUriFormat
Listing Information (after filtering, CV = %hs):
ListPrice
LoadAddOnProductInfosAsync() invoked.
LoadListingInformationAsync() invoked.
LoadListingInformationByKeywordsAsync() invoked.
LoadListingInformationByProductIdsAsync() invoked.
LoadResource
LoadStringW
Local\SM0:%d:%d:%hs
LocalAlloc
locale
LocalFree
LocalizedProperties
localTicketReference
LockResource
LogHr
LogMessage
LogSimpleMessage
Lookup failed for user's ownership of the trial. isTrialOwnedByThisUser=%s
M QRSP
m_bInitialized
m_productId.CopyTo(productId)
Machine
MakeAndInitialize<StoreProductPagedQueryResult>( &_results, _products, productKinds.Get(), _maxCountPerPage, hasMorePages, _hresultOfOperation, _spNextQueryOperation)
MakeAndInitialize<StoreProductPagedQueryResult>( &_results, _products, productKinds.Get(), _maxPageSize, hasMorePages, _hresultOfOperation, _spNextQueryOperation)
MakeAndInitialize<StoreProductQueryResult>( &_results, _products, productKinds.Get(), ChkGetHr())
MakeAndInitialize<T>(&image, DEBUG_PARSER_PARAMETERS_ARGS jsonElement)
MakeAndInitialize<T>(obj.GetAddressOf(), DEBUG_PARSER_PARAMETERS_ARGS jsonObject)
malloc
MapVirtualKeyW
market
MarketProperties
maxItemsToRetrieve
maxItemsToRetrievePerPage
maxPageSize
MBI_SSL
mbi_ssl
mbstowcs_s
MDCollections
MDDisplayCatalog
MDGetAppReceiptsDesktop
MDGetAppReceiptsMobile
MDGetOneProductReceiptMobile
MDPurchase
Member Name
memcmp
memcpy
memcpy_s
memmove
memmove_s
memset
message
Message
message
Message
message
Message
Messages
Microsoft
Microsoft Code Signing PCA 2010
Microsoft Code Signing PCA 20100
Microsoft Corporation
Microsoft Corporation0
Microsoft Corporation1
Microsoft Corporation1&0$
Microsoft Corporation1(0&
Microsoft Corporation1)0'
Microsoft Corporation1200
Microsoft Enhanced RSA and AES Cryptographic Provider
Microsoft Store Runtime DLL
Microsoft Time-Stamp PCA 2010
Microsoft Time-Stamp PCA 20100
Microsoft Time-Stamp Service
Microsoft Time-Stamp Service0
Microsoft.StorePurchaseApp_8wekyb3d8bbwe
Microsoft.StorePurchaseApp_8wekyb3d8bbwe!App
Microsoft.Windows.ApplicationModel.Store.Telemetry
Microsoft.Windows.Wil.FeatureLogging
Microsoft-Windows-AppXDeploymentServer/Operational
Microsoft-Windows-AppXDeploymentServer-Operational.evtx
Microsoft-Windows-Store/Operational
Microsoft-Windows-Store-Operational.evtx
Microsoft-Windows-TWinUI/Operational
Microsoft-Windows-TWinUI-Operational.evtx
Microsoft-Windows-WindowsUpdateClient/Operational
Microsoft-Windows-WindowsUpdateClient-Operational.evtx
minATL$__a
minATL$__m
minATL$__r
minATL$__z
MinimumUserAge
Minute
mobilling.microsoft.com
MOBillingAuthenticationDomain
ModalFlow
ModalFlowSizes
modalManager->ShowForContractByAppID( hstrPurchaseAppUserModelId.Get(), StringReference(L"Windows.Launch").Get(), activatedEventArgs.Get(), modalExperienceOptions.Get(), reinterpret_cast<Windows::Internal::Shell::ViewManagerInterop::WindowInstanceId>(_hwnd), handler.Get(), &experienceToken)
modalManagerAsUser->ShowForContractByAppIDAsUser( hstrPurchaseAppUserModelId.Get(), StringReference(L"Windows.Launch").Get(), activatedEventArgs.Get(), modalExperienceOptions.Get(), reinterpret_cast<Windows::Internal::Shell::ViewManagerInterop::WindowInstanceId>(_hwnd), handler.Get(), userContextToken, &experienceToken)
module
Module Name
ModuleCollection
ModuleLoaded
moId=%s&oemId=%s&scmId=%s
Month
Moving %s to final state: %d
mR*M(
MSAHW1.0=
MS-CorrelationId
MS-CV
Msg:[%ws] 
MS-RequestId
MS-SiteName
msvcrt.dll
ms-windows-store://signin
MultiByteToWideChar
MYF{m
N0L0J
nameValuePairs || (cNameValuePairs == 0)
ncalrpc
NdrClientCall4
NdrCStdStubBuffer_Release
NdrCStdStubBuffer2_Release
NdrDllCanUnloadNow
NdrDllGetClassObject
NdrOleAllocate
NdrOleFree
NdrStubCall2
NdrStubForwardingFunction
NetworkError
networkError
neutral
NewQuantity
No contentInfo could be obtained from the preview license response.
No products found
No Sku Id could be obtained from the preview license response.
not set
NotPurchased
ntdll.dll
NtQueryInformationProcess
NtQueryWnfStateData
NtUpdateWnfStateData
number
Nw<x"
-N-x-
O PVS
O(PSV
O(PVS
O0M0K
O0o0t0~0
O4PVS
object
Oc7Wa
OEMDiscoveryTTL
OEMID
oK0D$"<
OmitAuthTokenPrefix
onecore\internal\onecore\priv_sdk\inc\ConstrainedImpersonationUtil.h
onecore\internal\sdk\inc\wil\opensource\wil\com.h
onecore\internal\sdk\inc\wil\opensource\wil\resource.h
onecore\internal\sdk\inc\wil\Staging.h
onecore\internal\shell\inc\asyncoperationhelper.h
onecore\internal\shell\inc\AsyncOperationHelper.h
onecore\internal\shell\inc\windowsinternalstring.h
onecore\shell\lib\calleridentity\calleridentity.cpp
onecoreuap\enduser\winstore\auth\lib\winstoreauth.cpp
onecoreuap\enduser\winstore\auth\lib\winstoreauthstatics.cpp
onecoreuap\enduser\winstore\lib\httprequest.cpp
onecoreuap\enduser\winstore\licensing\winrt\dllsrv\windows\log.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\acquirestorelicenseforoptionalpackageoperation.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\AsyncBase.h
onecoreuap\enduser\winstore\licensing\winrt\lib\AsyncBaseWithProgress.h
onecoreuap\enduser\winstore\licensing\winrt\lib\bulkhydrateoperation.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\canacquirestorelicenseforoptionalpackageoperation.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\canacquirestorelicenseoperation.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\downloadandinstallstorepackagesoperation.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\findstoreproductforpackageoperation.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\getassociatedstorequeueitemsoperation.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\getconsumablebalanceremainingoperation.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\getcustomercollectionsidoperation.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\getcustomerpurchaseidoperation.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\getisanyskuinstalledoperation.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\getofflinelicensesoperation.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\getstorelistingoperation.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\getstorelistingsforassociatedproductsoperation.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\getstorelistingsforassociatedproductspagedoperation.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\getstorequeueitemsoperation.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\getusercollectionoperation.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\getusercollectionpagedoperation.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\iaputils.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\jsonhelpers.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\ParserJSON.h
onecoreuap\enduser\winstore\licensing\winrt\lib\purchasedisplayproperties.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\registryhelper.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\reportconsumableoperation.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\requestpurchaseoperation.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\requeststorerateandreviewoperation.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\sendstorerequestresult.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\storeacquirelicenseresult.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\storeapplicense.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\storeavailability.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\storecanacquirelicenseresult.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\storecollectiondata.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\storeconsumableresult.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\storecontext.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\StoreContext.h
onecoreuap\enduser\winstore\licensing\winrt\lib\storeimage.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\storelicense.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\storelistingpagedqueryresult.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\storelistingqueryresult.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\storepackageinstalloptions.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\storepackagelicense.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\StorePackageLicense.h
onecoreuap\enduser\winstore\licensing\winrt\lib\StorePackageUpdateManagerUtils.h
onecoreuap\enduser\winstore\licensing\winrt\lib\storepackageupdateresult.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\storeprice.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\storeproduct.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\storeproductoptions.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\storeproductresult.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\storepurchaseresult.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\storequeueitemcompletedeventargs.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\storequeueitemstatus.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\storerateandreviewresult.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\storerequesthelper.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\storerequestoperation.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\storesku.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\storesubscriptiondata.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\storeuninstallstorepackageoperation.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\storevideo.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\stringhelpers.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\StringHelpers.h
onecoreuap\enduser\winstore\licensing\winrt\lib\StringifiedJsonValue.h
onecoreuap\enduser\winstore\licensing\winrt\lib\windows\appinfo.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\windows\apppurchaseoperationserver.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\windows\backgroundtaskoperation.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\windows\catalogserviceproxy.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\windows\clientprocessutils.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\windows\collectionsserviceproxy.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\windows\currentappserver.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\windows\CurrentAppServer.h
onecoreuap\enduser\winstore\licensing\winrt\lib\windows\external\inc\eratitleinfo.h
onecoreuap\enduser\winstore\licensing\winrt\lib\windows\getappandsupplementalstorepackageupdatesoperation.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\windows\getnextstorelistingforassociatedproducts.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\windows\getnextusercollection.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\windows\getunfulfilledconsumablesoperationserver.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\windows\licenseinformationserver.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\windows\licensesatisfactioninfo.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\windows\licensesatisfactionresult.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\windows\listinginformationserver.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\windows\loadlistingoperationserver.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\windows\messagedialoghelper.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\windows\priceformat.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\windows\productidcache.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\windows\productlicensemap.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\windows\productlicenseserver.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\windows\productlistingserver.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\windows\productpurchasedisplaypropertiesserver.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\windows\productpurchaseoperationserver.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\windows\productreceiptretrievaloperationserver.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\windows\purchaseeventargsredstone.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\windows\purchaseoperation.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\windows\purchaseresultsserver.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\windows\purchasestahelper.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\windows\PurchaseSTAHelper.h
onecoreuap\enduser\winstore\licensing\winrt\lib\windows\receipthelpers.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\windows\receiptretrievaloperationserver.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\windows\reportconsumablefulfillmentoperationserver.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\windows\requestproductpurchasebyskuidoperationserver.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\windows\requestproductpurchasewithdisplaypropertiesoperationserver.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\windows\requestproductpurchasewithresultsoperationserver.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\windows\rpchelpers.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\windows\storecommerceserver.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\windows\storeconfigurationserver.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\windows\StoreContentIdKeyIdItem.h
onecoreuap\enduser\winstore\licensing\winrt\lib\windows\StoreContentIdKeyIdResponse.h
onecoreuap\enduser\winstore\licensing\winrt\lib\windows\storecontextserver.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\windows\storehardwaremanufacturerinfoserver.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\windows\StorePackageLicenseWnfWatcher.h
onecoreuap\enduser\winstore\licensing\winrt\lib\windows\storepackageupdate.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\windows\storepreviewproductinfoserver.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\windows\storepreviewpurchaseresultsserver.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\windows\storepreviewserver.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\windows\storepreviewskuinfoserver.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\windows\storequeueitem.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\windows\tokenbrokercomponentuilauncher.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\windows\trialownership.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\windows\unfulfilledconsumableserver.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\windows\urihelper.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\windows\winrtapi.cpp
onecoreuap\enduser\winstore\licensing\winrt\lib\windows\wscollector.cpp
onecoreuap\enduser\Winstore\licensing\wsinc\WSErrorUtils.h
onecoreuap\enduser\Winstore\licensing\wsinc\WSHttpHelper.h
onecoreuap\internal\base\inc\userawarecalleridentity.h
onecoreuap\shell\lib\activationevents\src\activatedeventargsbase.cpp
OneStoreAuthenticationDomain
OneStoreAuthenticationPolicy
onlineIdTicket
OPCO 
OpenProcess
OpenProcessToken
OpenSemaphoreW
OpenStateExplicit
OpenThread
OpenThreadToken
OPTIONAL
options
oQWh`
Order
orderId
OrderManagementData
organizations
OriginalFilename
originatingContextId
originatingContextMessage
originatingContextName
originCallerModule
originCallerReturnAddressOffset
originFile
originLineNumber
originModule
originName
OutgoingServiceRequest
OutputDebugStringW
OWShxs
P$9X,u
P/Z/y<
P<7&b6
P9w u
P9w0u
package.As(&package4)
package4->get_SignatureKind(&signatureKind)
PackageFamilyName
PackageFamilyNameFromFullName
packageFullName = %s, appType = %d, appId = %s, appCatalogId = %s
packageId->get_FullName(optionalPfn.GetAddressOf())
packageIdentifier
PackageNameAndPublisherIdFromFamilyName
packages
packageType
pagingInfo
parametersAsJson
ParentProductId
parentProductId
ParseJSONStringToObject(DEBUG_PARSER_PARAMETERS_ARGS jsonString.Get(), pObj, table)
ParseJSONToObject(DEBUG_PARSER_PARAMETERS_ARGS jsonElement, pObj, table)
ParseSLSJson
PartA_PrivTags
PartB_Ms.Qos.OutgoingServiceRequest
PartB_Ms.Telemetry.Error
PathAppendA
PathAppendW
PathAppendW failed
PathCchAddExtension
PathCchAppendEx
PathCombineA
PathRemoveFileSpecA
pid != nullptr
Pj#h0{
Pj%hXj
Pj)h`}
Pj*h ~
Pj*hpl
Pj.hPo
Pj/hHg
Pj/hhh
Pj?h@`
Pj[h`
Pj[h`@
Pj\hx
Pj`h@
Pj`hx
Pj`hX
Pj{h 
Pj}hX'
Pj1hx
Pj2h8
Pj2h8X
Pj2hpd
Pj3h c
Pj3hhf
Pj4h@
Pj7h`i
PjBh@|
Pjbhp<
PjchX
Pjdh(
Pjfh`
Pj-h0q
Pj-h8$
Pjhh@
Pj'hpZ
PjIh`v
Pjihp
PjJh8
PjKh8
PjLhxF
PjMh0
PjMhP
PjNh8
PjOhH
PjOhHD
PjQh0
PjQhH
PjRhh
PjRhP
PjThx
PjUh(A
PjVh(
PjWh`
Pjwh0
Pjxh(
PjYh@%
PPPPPP
PPPPPPV
PPPPPPVW
PPPPPPW
PPPPSh
PPPPSh\
PPPPShl
PPPPVh
PPPPVhl
PPPPWh
PPPPWhl
ppszProxyList && ppszProxyByPass && pdwAccessType
PQQQQ
pQVh0
PreferredSkuId
Preview license response did not have skuId. (CV = %hs)
Preview license response did not have skuId. (CV:%hs)
PreviewImage
previewStore
Price
PrimaryWebAccountId
process
Process Name
Product
productAddOns
ProductDescription
ProductId
productId
ProductIdCache::AddItem
ProductIdCache::ProductIdFromInAppOfferToken
ProductIdCache::ProductIdFromInAppOfferTokenTable
ProductIdCache::RefreshTableFromService
ProductIdCache::RuntimeClassInitialize
productIds
productIdsWithCommas
ProductKind
productKinds
ProductName
Products
productSkuIds
productStoreId
ProductTitle
ProductType
productTypes
ProductVersion
Prompt required, but not possible, cancel - canSilentlyDownload = %s, install = %s
Properties
protocolStatusCode
Proxy list = %s, Proxy bypass = %s, Proxy access type = %i
PRVA\
PSSSS
PSSSSSSSj
PSVQQ
pszAuthorizationHeader
pszFullUrl
pszServerName && pszUrl
Public
PublisherId
publisherUserId
Purchase
PurchaseMEM
PurchaseOperation
purchaseStatus
PVVVV
PVWWW
q}X>N
QPhxb
QQPPPPPP
QQPPPPPPV
QQPPPPPPW
QQQQQQ
QQQQWh
QQRRRR
QQRRRRPh
QQSSSSSSV
QQSSSSSSW
QQSVW
QQSVW3
QQSVWh
QQVh<
QQVW3
QQWWWW
QQWWWWWW
QRPh\p
QRPh\q
QRPh\r
QRPh|p
QRPh|q
QRPh|r
QRPh<q
QRPh<r
QSh '
QSh +
QSh m
QSh q
QSh v
QSh@!
QSh@j
QSh@l
QSh@v
QSh@z
QSh`/
QSh`0
QSh`l
QSh`v
QSh`y
QSh|>
QSh<y
QSh0|
QSh0P
QSh0y
QSh4\
QSh8^
QSh8~
QSh8u
QShd~
QShH!
QShH(
QShh{
QShHk
QShHR
QShhw
QShp%
QShP\
QShP+
QSht*
QSht3
QShTm
QShto
QShx 
QShX}
QShxE
QShxN
QShXp
QSVW3
QSVWh
QSVWj@3
quantity
QuantityAvailable:
QueryPerformanceCounter
QueryTrace for %s failed
QueryTraceW
QueueUserWorkItem
QVh ;
QVh _
QVh 2
QVh 7
QVh A
QVh$6
QVh$j
QVh$S
QVh$X
QVh(:
QVh(@
QVh(^
QVh(6
QVh(V
'QVh(V
QVh,-
QVh,9
QVh@!
QVh@)
QVh@2
QVh\2
QVh\h
QVh`$
QVh`*
QVh`\
QVh`0
QVh`4
QVh`8
QVh`i
QVh|>
QVh|Q
QVh<H
QVh0@
QVh0D
QVh0V
QVh8^
QVhd^
QVhd=
QVhd6
QVhDi
QVhdV
QVhh-
QVhH$
QVhh:
QVhHN
QVhL5
QVhLw
QVhp$
QVhp*
QVhP*
QVhp|
QVhP=
QVhP7
QVhpC
QVhpJ
QVhPL
QVhpN
QVhPO
QVhPR
QVhpT
QVhpt
QVhPU
QVhPV
QVht_
QVhT}
QVht3
QVhTl
QVhx,
QVhx@
QVhx<
QVhxU
QVhxV
QVhXW
QVhXY
QWh }
QWh h
QWh$a
QWh({
QWh(k
QWh@c
QWh@m
QWh@N
QWh\d
QWh`_
QWh`4
QWh`c
QWh`i
QWh`y
QWh|>
QWh|k
QWh|L
QWh|O
QWh<]
QWh<f
QWh<l
QWh<n
QWh<Y
QWh<z
QWh0 
QWh0S
QWh4\
QWh8N
QWhD[
QWhd^
QWhD`
QWhDk
QWhDW
QWhh|
QWhHj
QWhHk
QWhhl
QWhhm
QWhhn
QWhhU
QWhl&
QWhlf
QWhLi
QWhli
QWhp-
QWhPf
QWhPw
QWhTo
QWhtU
QWhxb
QWhXf
QWhXp
QWhxv
r(SP3
r~akow
RaiseException
RaiseFailFastException
ReadFile
realloc
Receipt
ReceiptBase64Encoded
ReceiptHelpers::CachePhoneReceiptForOffline
ReceiptHelpers::DeleteCachedPhoneReceipt
ReceiptHelpers::FetchDesktopReceipt
ReceiptHelpers::FetchPhoneReceipt
ReceiptHelpers::FetchReceipt
ReceiptHelpers::GetCachedPhoneReceipt
ReceiptHelpers::GetFormattedPrice
ReceiptHelpers::GetPackageLocalAppDataPath
ReceiptHelpers::GetPhoneReceiptFilepath
ReceiptHelpers::GetPublisherId
ReceiptHelpers::GetReceiptCacheFileName
ReceiptHelpers::GetReceiptCacheFolder
ReceiptHelpers::LicenseParseReceiptResponse
ReceiptResponse
RecurrencePolicy
RecurrencePrice
Redmond1
refreshConsumablesAsync
RefreshInternalState with refreshConsumables %d, license IsActive %d, IsTrial %d
RefreshLicenses
reg.exe process did not complete successfully. Exit Code: %d
RegCloseKey
RegDeleteKeyValueW
RegGetValueW
registry_DNSPolicy.txt
registry_SIH.txt
RegistryHelper::GetStringValue
RegistryHelper::SetQwordValue
RegistryHelper::SetStringValue
RegOpenCurrentUser
RegOpenKeyExW
RegSetKeyValueW
relatedProductId
RelatedProductId
RelatedProducts
relationshipType
RelationshipType
ReleaseLicense()
ReleaseMutex
ReleaseSemaphore
ReleaseSRWLockExclusive
ReleaseSRWLockShared
report.wer
ReportConsumableFulfillmentAsync(%s, %s) invoked.
ReportingEvents.log
ReportProductFulfillment(%s) invoked.
Request
Request 0x%08x failed, result %d
Request 0x%08x has machine %s and RID %s
Request Rate and Review Operation failed to get any status due to a purchase app not install error.
Request to [%s] failed with connection error. Retrying %d more times
RequestAppPurchaseAsync(%s) invoked.
requestKind
requestParams.authType == tickets[0].m_providerType
RequestProductPurchaseAsync(%s, %s) invoked.
RequestProductPurchaseByProductIdAndSkuIdAsync(%s, %s) invoked.
RequestProductPurchaseWithDisplayPropertiesAsync(%s, %s) invoked.
RequestProductPurchaseWithResultsAsync(%s) invoked.
RequestPurchase
RequireAuthToken
RequirePrivateStoreOnly
RequiresCapability
RequireValidLicense
ResetEvent
ResolveDelayLoadedAPI
resource
Response
Response buffer overflow
responseSizeBytes
result != nullptr
ResumeWithFlags called for productId = %s, setFlags = %d, resetFlags = %d
RETAIL
RetrieveJsonResponseFromResources
ReturnHr
RevertToSelf
RichPB
RoActivateInstance
RoGetActivationFactory
RoGetAgileReference
RoGetMatchingRestrictedErrorInfo
RoInitialize
RoOriginateError
RoOriginateErrorW
RoReportFailedDelegate
RoTransformError
RoUninitialize
RpcBindingFromStringBindingW
RpcBindingSetAuthInfoExW
RpcHelpers::GetRpcHandle
RPCRT4.dll
RpcServerInqCallAttributesW
RpcStringBindingComposeW
RpcStringFreeW
rQWhT
RSSSh
RSWVj
RtlDisownModuleHeapAllocation
RtlDllShutdownInProgress
RtlGetDeviceFamilyInfoEnum
RtlNotifyFeatureUsage
RtlNtStatusToDosError
RtlNtStatusToDosErrorNoTeb
RtlPublishWnfStateData
RtlQueryWnfStateData
RtlRegisterFeatureConfigurationChangeNotification
RtlSubscribeWnfStateChangeNotification
RtlUnregisterFeatureConfigurationChangeNotification
RtlUnsubscribeWnfNotificationWaitForCompletion
RtlUnsubscribeWnfStateChangeNotification
RtlUpcaseUnicodeChar
S _^[
S _^3
S$_^[
s)hPt
S-{:p}8Q
S0RVP
S-1-15-2-1609473798-1231923017-684268153-4268514328-882773646-2760585773-1760938157
S-1-15-2-778011547-1096124574-1799322564-3972718560-253206704-1472347756-15051174
S4Phhi
S8RWP
Sandbox
SCMID
SearchTitles
SearchTitleString
SearchTitleType
SellableBy
SendStoreRequest
SendStoreRequestWithUris( nullptr, UriHelperV7::InternalStoreEndpointExtensionUrls, UriHelperV7::InternalStoreEndpointExtensionUrlsIds::GetUserCollectionForParentProduct, cv.Get(), nullptr, nullptr, collectionsJsonString.GetAddressOf())
SendStoreRequestWithUris( nullptr, UriHelperV7::InternalStoreEndpointExtensionUrls, UriHelperV7::InternalStoreEndpointExtensionUrlsIds::GetUserCollectionForProducts, cv, jsonCollectionsParameters.Get(), nullptr, collectionsJsonString.GetAddressOf())
Server: %s, URL %s
ServerError
service::%s::%s
serviceTicket
SetEvent
SetFilePointer
SetForegroundWindow
SetLastError
SetRestrictedErrorInfo
SetThreadpoolTimer
SetUnhandledExceptionFilter
SHCreateMemStream
SHTaskPoolAllowThreadReuse
SHTaskPoolQueueTask
SignatureKind: %hs
SizeofResource
Sjfh(
Sjqh`5
SkipCapabilityCheckIfERA
skipCount
SkipForceAuthentication
SkuDescription
SkuDisplayRank
skuId
SkuId
skuId
SkuTitle
skuType
SkuType
Sleep
SleepConditionVariableSRW
SLS failed to initialize correctly, falling back to built in values, this may cause problems.
Software\Microsoft\Windows\CurrentVersion\Store
Software\Microsoft\Windows\CurrentVersion\Store\Configuration
Software\Microsoft\Windows\CurrentVersion\Store\ContentId
Software\Microsoft\Windows\CurrentVersion\Store\CurrentIdentity
Software\Microsoft\Windows\CurrentVersion\Store\MultiVariantConfig
Software\Microsoft\XboxLive
Software\Policies\Microsoft\WindowsStore
Source
spAppContentInfo->GetCatalogId(&productStoreId)
spLicenseInstance->GetContentInfo(IID_PPV_ARGS(&spAppContentInfo))
spLicenseInstance->GetContentInfo(IID_PPV_ARGS(spApplicationContentInfo.GetAddressOf()))
spLicenseManager->RefreshLicenses(RefreshPolicy_NetworkStatusOnline)
sprintf_s
SSSSPh\
SSSSSS
SSWh@
Start callback failed
StartDate
status
Status done, remaining installs: %d
Store
Store service returned an unexpected enum: %hs
store.etl
StoreAADAccountId
storeAppInstallation
storeConfiguration
StoreConfigurationServer::FilterUnsupportedSystemFeaturesAsync
StoreConfigurationServer::GetStoreLogDataAsync
StoreContentModifier
StoreContext.RequestDownloadAndInstallStorePackagesAsync
StoreContextServer::Initialize: packageFullName = %s, productStoreId = %s, isLicensed = %s, isAppContainer = %s
storeContextServer->ConsumeConsumable( _productId.Get(), _quantity, _trackingId, cv.GetHStringReference().Get(), jsonString.GetAddressOf())
storeContextServer->ReleaseStoreLicenseForOptionalPackage(optionalPfn.Get())
StoreEndpointExtensionUrls
StorefrontClient
StorefrontClientErrorTask
StorefrontClientExceptionTask
StorefrontClientInformationTask
StorefrontClientVerboseTask
StorefrontClientWarningTask
storeId
StoreId
storeIds
StoreInfoBuilders::BuildStoreAppInfo
storeLicenseManagement
StoreOperational.etl
storeOptionalPackageInstallManagement
StorePackageUpdateManagerUtils::StorePackageUpdateStatusEquals::operator ()
StorePreview.LoadAddOnProductInfosAsync
StorePreview.RequestProductPurchaseByProductIdAndSkuIdAsync
StorePurchaseApp
StorePurchaseAppMessage
strchr
string
StringFileInfo
StringFromGUID2
StringHelpers::DecodeBase64
StringHelpers::SplitString
StringHelpers::TrimEnds
StringifiedJsonValue::GetStringifiedValue
StringToFileTime(timeString.GetRawBuffer(nullptr), &ft, FALSE)
strncpy_s
strrchr
strtol
succeeded
Succeeded
success
SVWh$
SVWj"j#
SVWj@
SVWP3
sW/Zl
System
SYSTEM\CurrentControlSet\Control\SystemInformation
SystemManufacturer
SystemProductName
SystemTimeToFileTime
t"QSh
T$ ;E
T$ ;u
t$ Ph
T$ PPPPPPV
T$#RP
t$$9\$0u(
t$$QQ
T$$RQ
t$$Vj
T$(!|$
t$(hP
T$(j:Yf9
T$(PPPPPPS
T$(PPPPSh
T$(QQ
T$(QQQQPhl
T$(QQQQQQP
T$(QQQQSh
T$(QQQQShl
T$(QQQQWh
T$(RP
T$(RQ
t$,h\
t$,PVV
T$,RP
T$,RQ
T$;RP
T$@QQQQWh
T$@RP
T$_RP
T$`P3
T$`RQ
T$|RP
T$+RP
T$<9L$H
t$<Phhx
t$<PQQ
T$<RP
t$<WP
T$<Zf;
t$0hP
T$0PPPPPPW
T$0QQQQPh\
T$0QQQQPhl
T$0QQQQQQP
T$0QQQQWh
T$0QQV
T$0RP
T$3RP
T$4RP
t$4SV
t$4WV
T$8!D$
T$8PPPPPPV
T$8PPPPVhP,
t$8QP
T$8QQ
T$8QQPh
T$8QQQh
T$8QQQQQQP
T$8RP
T$8RQ
t$8SV
T$bRP
T$cRP
T$CRP
T$DRP
t$DSV
T$HRP
T$hRP
T$HRP
T$KRP
T$kRP
T$KRP
T$P@3
T$pRP
T$PRP
t$pVQ
t$PWS
T$TRP
T$VRP
T$WRP
T$XRP
T$xRP
t&f9;t!
t\j;V
t]9^,t
t+9O(t&
t3PhP\
t3SV3
targetUri
TelemetryAssert
TelemetryAssertDiagTrack
TEMPx
TerminateProcess
text/xml
tfjSXf;
Thales TSS ESN:60BC-E383-26351%0#
The license for the application is missing information needed to perform Store operations. If you side-loaded the application, uninstall the application and download it from the Store first to get the Store license associated with the application.
There is no connection profile
There were items in the collection, however iterator is pointing at the end of the collection...
This function is not supported, all calls should now use StoreContextServer::GetAppAndOptionalStorePackageUpdates
This function is not supported, all calls should now use StoreContextServer::RequestDownloadAndInstallStorePackageUpdatesAsync
This function is not supported, all calls should now use StoreContextServer::RequestDownloadStorePackageUpdates
This function must be called from a UI thread
This request kind (%d) is invalid or not supported on this release. Request Entry: %s
threadId
ti!AGd
Timer expired, triggering state refresh
timestamp
tjj?j@3
tM!|$
totalHits
TotalResultCount
toupper
t'QWh
trackingId
transactionId
Translation
TrialTimeRemaining
trialTimeRemaining
trialUniqueId
Trying to remove non-store package %s
Trying to remove package %s that isn't installed
Trying to remove package %s that isn't related to the calling app
tw9^,t
twinapi.appcore.dll
u"QPh|
u"QQh
u$QVh8
u$QWh
u$WSQ
u)QWh
u/9sHu*h0
u/SSS
u0QVh
Uby}T
Ufvbp
uhj.Xf9E
UMgrGetConstrainedUserToken
UMgrOpenProcessHandleForAccess
UMgrOpenProcessTokenForQuery
UMgrQueryUserContext
UMgrQueryUserToken
Unable to show consent dialog
Unfulfilled Consumables for %s (CV = %hs):
UnhandledExceptionFilter
Units
UnitType
UniversalStoreInApp
Unknown
UNKWN
UnmanagedConsumable
UnpackHStringIIterable
uNPPV
Uo~9@D
uOhhw
updated
UpdateDownloadLimit
u'QSh
u'QVh
u'QVhx
u'QWh
URIBufferMaxSize
UriHelper::GetUri
UriHelper::GetUriWithPath
UriHelper::GetUriWithPathAndParameters
UriHelperInternal::GetUriEx
UriHelperInternal::GetUriString
UriHelperInternal::GetUriWithPathAndParametersEx
UriHelperInternal::InitOnceCallback
UriHelperV7::_FindUriWithIndex
UriHelperV7::_GetRawStringFromOS
UriHelperV7::_GetRawStringFromSLS
UriHelperV7::GetIndexedEntry
UriHelperV7::GetRawString
UrlEscapeW
UseAuthIfAvailable
UseBackgroundTask
UsePromptSettings
User consent required, cancel = %s
User content required, cancel = %s
User content required, cancel = %s, canSilentlyDownload = %s, install = %s
user.auth.xboxlive.com
UserId
UserTokenTypes
UuidCreate
UuidFromStringW
uW97t*h0
UY7i*
uZSW3
V&6@}
V:)NM
V4Phx
v6.0/beneficiaries/me/keys
v6.0/collections/consume
v6.0/collections/query
v6.0/users/me/keys
v6/products/{productId}?market={marketCode}&languages={languages}&fieldsTemplate=Full
v6/products?rank=PackageFamilyName&alternateId={productId}&market={marketCode}&languages={languages}&fieldsTemplate=Full
v6/products?rank=ProductSearchApps&market={market}&languages={languages}&addOnParent={productId}&fieldsTemplate=Full{platformDependencyNameParam}
v6/skus?rank=ContentId&alternateId={productId}&market={marketCode}&languages={languages}&fieldsTemplate=Full
Valid
VALID
validityType
Value
VarFileInfo
variant
variantKind
Vector<HSTRING>::Make(vector.GetAddressOf())
Vector<T*>::Make(vector.GetAddressOf())
vector->Append(image.Get())
vector->Append(text.Get())
Verbose
VerifyCapability
version
Version
VideoPurpose
Videos
VPh\\
VPhLl
VPj@Z
vpPh0
VQPWV
VRPh u
VS_VERSION_INFO
VVVVVV
vwf;U
VWj j!
VWj43
VWPhHj
VWPhT(
VWu$Q
VWu5j
w\_^[
WaitForCompletion
WaitForMultipleObjects returned %u
WaitForMultipleObjectsEx
WaitForSingleObject
WaitForSingleObjectEx
WaitForThreadpoolTimerCallbacks
Waiting for installs to complete
WakeAllConditionVariable
Warning
Washington1
wcschr
wcscpy_s
wcscspn
wcsrchr
wcsstr
wcstod
wcstombs
wcstombs_s
wcstoul
webservices.dll
WEVT_TEMPLATE
wevtapi.dll
Width
WilError_03
wilResult
WilStaging_02
win:Error
win:Info
win:Informational
win:Verbose
win:Warning
win32
win8xappx
Windows
Windows Store/1.0
Windows.ApplicationModel.AppService.AppServiceConnection
Windows.ApplicationModel.Core.CoreApplication
Windows.ApplicationModel.Store.CurrentApp
Windows.ApplicationModel.Store.CurrentApp.GetAppPurchaseCampaignIdAsync
Windows.ApplicationModel.Store.CurrentApp.GetAppReceiptAsync
Windows.ApplicationModel.Store.CurrentApp.GetCustomerCollectionsIdAsync
Windows.ApplicationModel.Store.CurrentApp.GetCustomerPurchaseIdAsync
Windows.ApplicationModel.Store.CurrentApp.GetProductReceiptAsync
Windows.ApplicationModel.Store.CurrentApp.GetUnfulfilledConsumablesAsync
Windows.ApplicationModel.Store.CurrentApp.LoadListingInformationAsync
Windows.ApplicationModel.Store.CurrentApp.ReportConsumableFulfillmentAsync
Windows.ApplicationModel.Store.CurrentApp.RequestAppPurchaseAsync
Windows.ApplicationModel.Store.CurrentApp.RequestProductPurchaseAsync
Windows.ApplicationModel.Store.CurrentApp.RequestProductPurchaseWithDisplayPropertiesAsync
Windows.ApplicationModel.Store.CurrentApp.RequestProductPurchaseWithResultsAsync
Windows.ApplicationModel.Store.CurrentAppSimulator.GetAppPurchaseCampaignIdAsync
Windows.ApplicationModel.Store.CurrentAppSimulator.GetAppReceiptAsync
Windows.ApplicationModel.Store.CurrentAppSimulator.GetProductReceiptAsync
Windows.ApplicationModel.Store.CurrentAppSimulator.GetUnfulfilledConsumablesAsync
Windows.ApplicationModel.Store.CurrentAppSimulator.LoadListingInformationAsync
Windows.ApplicationModel.Store.CurrentAppSimulator.ReloadSimulatorAsync
Windows.ApplicationModel.Store.CurrentAppSimulator.ReportConsumableFulfillmentAsync
Windows.ApplicationModel.Store.CurrentAppSimulator.RequestAppPurchaseAsync
Windows.ApplicationModel.Store.CurrentAppSimulator.RequestProductPurchaseAsync
Windows.ApplicationModel.Store.CurrentAppSimulator.RequestProductPurchaseWithDisplayPropertiesAsync
Windows.ApplicationModel.Store.CurrentAppSimulator.RequestProductPurchaseWithResultsAsync
Windows.ApplicationModel.Store.dll
Windows.ApplicationModel.Store.Internal.AuthenticationExtension
Windows.ApplicationModel.Store.Internal.AuthenticationExtension.ShowChallengeForUserAsync
Windows.ApplicationModel.Store.Internal.IMessageDialogHelper2.ShowDialogWithResultsAsync
Windows.ApplicationModel.Store.Internal.IStoreCommerce.GetAppPurchaseCampaignIdAsync
Windows.ApplicationModel.Store.Internal.IStoreCommerce.GetAppReceiptAsync
Windows.ApplicationModel.Store.Internal.IStoreCommerce.GetProductReceiptAsync
Windows.ApplicationModel.Store.Internal.IStoreCommerce.LoadListingInformationAsync
Windows.ApplicationModel.Store.Internal.IStoreCommerce.RequestAppPurchaseAsync
Windows.ApplicationModel.Store.Internal.IStoreCommerce.RequestProductPurchaseAsync
Windows.ApplicationModel.Store.Internal.IStoreCommerce2.GetCustomerCollectionsIdAsync
Windows.ApplicationModel.Store.Internal.IStoreCommerce2.GetCustomerPurchaseIdAsync
Windows.ApplicationModel.Store.Internal.IStoreCommercePreview.LoadAddOnProductInfosAsync
Windows.ApplicationModel.Store.Internal.IStoreCommercePreview.RequestProductPurchaseByProductIdAndSkuIdAsync
Windows.ApplicationModel.Store.Internal.IStoreCommerceSimulator.LoadListingInformationAsync
Windows.ApplicationModel.Store.Internal.IStoreCommerceSimulator.RequestAppPurchaseAsync
Windows.ApplicationModel.Store.Internal.IStoreCommerceSimulator.RequestProductPurchaseAsync
Windows.ApplicationModel.Store.Internal.IStoreCommerceSimulatorWithConsumables.GetUnfulfilledConsumablesAsync
Windows.ApplicationModel.Store.Internal.IStoreCommerceSimulatorWithConsumables.ReportConsumableFulfillmentAsync
Windows.ApplicationModel.Store.Internal.IStoreCommerceSimulatorWithConsumables.RequestProductPurchaseWithDisplayPropertiesAsync
Windows.ApplicationModel.Store.Internal.IStoreCommerceSimulatorWithConsumables.RequestProductPurchaseWithResultsAsync
Windows.ApplicationModel.Store.Internal.IStoreCommerceWithConsumables.GetUnfulfilledConsumablesAsync
Windows.ApplicationModel.Store.Internal.IStoreCommerceWithConsumables.ReportConsumableFulfillmentAsync
Windows.ApplicationModel.Store.Internal.IStoreCommerceWithConsumables.RequestProductPurchaseWithDisplayPropertiesAsync
Windows.ApplicationModel.Store.Internal.IStoreCommerceWithConsumables.RequestProductPurchaseWithResultsAsync
Windows.ApplicationModel.Store.Internal.StoreCommerce
Windows.ApplicationModel.Store.LicenseInformation
Windows.ApplicationModel.Store.LicenseManagement.AddLicenseAsync
Windows.ApplicationModel.Store.LicenseManagement.LicenseManager
Windows.ApplicationModel.Store.LicenseManagement.LicenseManager.AddLicenseAsync
Windows.ApplicationModel.Store.LicenseManagement.LicenseManager.GetSatisfactionInfosAsync
Windows.ApplicationModel.Store.LicenseManagement.LicenseManager.RefreshLicensesAsync
Windows.ApplicationModel.Store.LicenseManagement.LicenseSatisfactionInfo
Windows.ApplicationModel.Store.LicenseManagement.LicenseSatisfactionResult
Windows.ApplicationModel.Store.LicenseManagement.RefreshLicensesAsync
Windows.ApplicationModel.Store.ListingInformation
Windows.ApplicationModel.Store.pdb
Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallManager
Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallOptions
Windows.ApplicationModel.Store.Preview.StoreConfiguration
Windows.ApplicationModel.Store.Preview.StoreConfiguration.FilterUnsupportedSystemFeaturesAsync
Windows.ApplicationModel.Store.Preview.StoreConfiguration.GetStoreLogDataAsync
Windows.ApplicationModel.Store.Preview.StoreHardwareManufacturerInfo
Windows.ApplicationModel.Store.Preview.StorePreview
Windows.ApplicationModel.Store.Preview.StorePreview.LoadAddOnProductInfosAsync
Windows.ApplicationModel.Store.Preview.StorePreview.RequestProductPurchaseByProductIdAndSkuIdAsync
Windows.ApplicationModel.Store.Preview.StorePreviewProductInfo
Windows.ApplicationModel.Store.Preview.StorePreviewPurchaseResults
Windows.ApplicationModel.Store.Preview.StorePreviewSkuInfo
Windows.ApplicationModel.Store.Preview.WebAuthenticationCoreManagerHelper
Windows.ApplicationModel.Store.Preview.WebAuthenticationCoreManagerHelper.RequestTokenWithUIElementHostingAndWebAccountAsync
Windows.ApplicationModel.Store.Preview.WebAuthenticationCoreManagerHelper.RequestTokenWithUIElementHostingAsync
Windows.ApplicationModel.Store.ProductLicense
Windows.ApplicationModel.Store.ProductListing
Windows.ApplicationModel.Store.ProductPurchaseDisplayProperties
Windows.ApplicationModel.Store.PurchaseResults
Windows.ApplicationModel.Store.UnfulfilledConsumable
Windows.AppointmentDataProvider
Windows.AppointmentsProvider.AddAppointment
Windows.AppointmentsProvider.RemoveAppointment
Windows.AppointmentsProvider.ReplaceAppointment
Windows.AppointmentsProvider.ShowAppointmentDetails
Windows.AppointmentsProvider.ShowTimeFrame
Windows.AppService
Windows.AppUriHandler
Windows.BackgroundTasks
Windows.BarcodeScannerPreviewProvider
Windows.BarcodeScannerProvider
Windows.CachedFileUpdater
Windows.CameraSettings
Windows.CommandLineLaunch
Windows.ComponentUI
Windows.Contact.Call
Windows.Contact.Map
Windows.Contact.Message
Windows.Contact.Post
Windows.Contact.VideoCall
Windows.ContactDataProvider
Windows.ContactPanel
Windows.ContactPicker
Windows.ContactsProvider.AddContact
Windows.ContactsProvider.ShowContact
Windows.Data.Json.JsonArray
Windows.Data.Json.JsonObject
Windows.Data.Json.JsonValue
Windows.Data.Xml.Dom.XmlDocument
Windows.Device
Windows.DialProtocol
Windows.EmailDataProvider
Windows.File
Windows.FileOpenPicker
Windows.FileSavePicker
Windows.Foundation.AsyncOperationCompletedHandler`1<Boolean>
Windows.Foundation.AsyncOperationCompletedHandler`1<String>
Windows.Foundation.AsyncOperationCompletedHandler`1<Windows.ApplicationModel.Store.FulfillmentResult>
Windows.Foundation.AsyncOperationCompletedHandler`1<Windows.ApplicationModel.Store.LicenseManagement.LicenseSatisfactionResult>
Windows.Foundation.AsyncOperationCompletedHandler`1<Windows.ApplicationModel.Store.ListingInformation>
Windows.Foundation.AsyncOperationCompletedHandler`1<Windows.ApplicationModel.Store.Preview.StorePreviewPurchaseResults>
Windows.Foundation.AsyncOperationCompletedHandler`1<Windows.ApplicationModel.Store.PurchaseResults>
Windows.Foundation.AsyncOperationCompletedHandler`1<Windows.Foundation.Collections.IVectorView`1<Windows.ApplicationModel.Store.Preview.StorePreviewProductInfo>>
Windows.Foundation.AsyncOperationCompletedHandler`1<Windows.Foundation.Collections.IVectorView`1<Windows.ApplicationModel.Store.Preview.StoreSystemFeature>>
Windows.Foundation.AsyncOperationCompletedHandler`1<Windows.Foundation.Collections.IVectorView`1<Windows.ApplicationModel.Store.UnfulfilledConsumable>>
Windows.Foundation.AsyncOperationCompletedHandler`1<Windows.Foundation.Collections.IVectorView`1<Windows.Services.Store.StorePackageUpdate>>
Windows.Foundation.AsyncOperationCompletedHandler`1<Windows.Foundation.Collections.IVectorView`1<Windows.Services.Store.StoreQueueItem>>
Windows.Foundation.AsyncOperationCompletedHandler`1<Windows.Services.Store.StoreAcquireLicenseResult>
Windows.Foundation.AsyncOperationCompletedHandler`1<Windows.Services.Store.StoreAppLicense>
Windows.Foundation.AsyncOperationCompletedHandler`1<Windows.Services.Store.StoreCanAcquireLicenseResult>
Windows.Foundation.AsyncOperationCompletedHandler`1<Windows.Services.Store.StoreConsumableResult>
Windows.Foundation.AsyncOperationCompletedHandler`1<Windows.Services.Store.StoreProductPagedQueryResult>
Windows.Foundation.AsyncOperationCompletedHandler`1<Windows.Services.Store.StoreProductQueryResult>
Windows.Foundation.AsyncOperationCompletedHandler`1<Windows.Services.Store.StoreProductResult>
Windows.Foundation.AsyncOperationCompletedHandler`1<Windows.Services.Store.StorePurchaseResult>
Windows.Foundation.AsyncOperationCompletedHandler`1<Windows.Services.Store.StoreRateAndReviewResult>
Windows.Foundation.AsyncOperationCompletedHandler`1<Windows.Services.Store.StoreSendRequestResult>
Windows.Foundation.AsyncOperationCompletedHandler`1<Windows.Services.Store.StoreUninstallStorePackageResult>
Windows.Foundation.AsyncOperationCompletedHandler`1<Windows.Storage.Streams.IRandomAccessStreamReference>
Windows.Foundation.AsyncOperationWithProgressCompletedHandler`2<Windows.Services.Store.StorePackageUpdateResult, Windows.Services.Store.StorePackageUpdateStatus>
Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<String, String>>
Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<String, UInt8>>
Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<String, Windows.ApplicationModel.Store.LicenseManagement.LicenseSatisfactionInfo>>
Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<String, Windows.ApplicationModel.Store.ProductLicense>>
Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<String, Windows.ApplicationModel.Store.ProductListing>>
Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<String, Windows.Foundation.EventRegistrationToken>>
Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<String, Windows.Services.Store.Internal.IStorePackageLicenseLostCallback>>
Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<String, Windows.Services.Store.StoreLicense>>
Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<String, Windows.Services.Store.StorePackageUpdateStatus>>
Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<String, Windows.Services.Store.StoreProduct>>
Windows.Foundation.Collections.IIterator`1<Object>
Windows.Foundation.Collections.IIterator`1<String>
Windows.Foundation.Collections.IIterator`1<Windows.ApplicationModel.Package>
Windows.Foundation.Collections.IIterator`1<Windows.ApplicationModel.Store.Preview.StorePreviewProductInfo>
Windows.Foundation.Collections.IIterator`1<Windows.ApplicationModel.Store.Preview.StorePreviewSkuInfo>
Windows.Foundation.Collections.IIterator`1<Windows.ApplicationModel.Store.Preview.StoreSystemFeature>
Windows.Foundation.Collections.IIterator`1<Windows.ApplicationModel.Store.UnfulfilledConsumable>
Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<String, String>>
Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<String, UInt8>>
Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<String, Windows.ApplicationModel.Store.LicenseManagement.LicenseSatisfactionInfo>>
Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<String, Windows.ApplicationModel.Store.ProductLicense>>
Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<String, Windows.ApplicationModel.Store.ProductListing>>
Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<String, Windows.Foundation.EventRegistrationToken>>
Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<String, Windows.Services.Store.Internal.IStorePackageLicenseLostCallback>>
Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<String, Windows.Services.Store.StoreLicense>>
Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<String, Windows.Services.Store.StorePackageUpdateStatus>>
Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<String, Windows.Services.Store.StoreProduct>>
Windows.Foundation.Collections.IIterator`1<Windows.Services.Store.Internal.StoreContentIdKeyIdItem>
Windows.Foundation.Collections.IIterator`1<Windows.Services.Store.StoreAvailability>
Windows.Foundation.Collections.IIterator`1<Windows.Services.Store.StoreCollectionData>
Windows.Foundation.Collections.IIterator`1<Windows.Services.Store.StoreImage>
Windows.Foundation.Collections.IIterator`1<Windows.Services.Store.StoreLicense>
Windows.Foundation.Collections.IIterator`1<Windows.Services.Store.StorePackageUpdate>
Windows.Foundation.Collections.IIterator`1<Windows.Services.Store.StorePackageUpdateStatus>
Windows.Foundation.Collections.IIterator`1<Windows.Services.Store.StoreProduct>
Windows.Foundation.Collections.IIterator`1<Windows.Services.Store.StoreQueueItem>
Windows.Foundation.Collections.IIterator`1<Windows.Services.Store.StoreSku>
Windows.Foundation.Collections.IIterator`1<Windows.Services.Store.StoreVideo>
Windows.Foundation.Collections.IKeyValuePair`2<String, String>
Windows.Foundation.Collections.IKeyValuePair`2<String, UInt8>
Windows.Foundation.Collections.IKeyValuePair`2<String, Windows.ApplicationModel.Store.LicenseManagement.LicenseSatisfactionInfo>
Windows.Foundation.Collections.IKeyValuePair`2<String, Windows.ApplicationModel.Store.ProductLicense>
Windows.Foundation.Collections.IKeyValuePair`2<String, Windows.ApplicationModel.Store.ProductListing>
Windows.Foundation.Collections.IKeyValuePair`2<String, Windows.Foundation.EventRegistrationToken>
Windows.Foundation.Collections.IKeyValuePair`2<String, Windows.Services.Store.Internal.IStorePackageLicenseLostCallback>
Windows.Foundation.Collections.IKeyValuePair`2<String, Windows.Services.Store.StoreLicense>
Windows.Foundation.Collections.IKeyValuePair`2<String, Windows.Services.Store.StorePackageUpdateStatus>
Windows.Foundation.Collections.IKeyValuePair`2<String, Windows.Services.Store.StoreProduct>
Windows.Foundation.Collections.IMap`2<String, String>
Windows.Foundation.Collections.IMap`2<String, UInt8>
Windows.Foundation.Collections.IMap`2<String, Windows.ApplicationModel.Store.LicenseManagement.LicenseSatisfactionInfo>
Windows.Foundation.Collections.IMap`2<String, Windows.ApplicationModel.Store.ProductLicense>
Windows.Foundation.Collections.IMap`2<String, Windows.ApplicationModel.Store.ProductListing>
Windows.Foundation.Collections.IMap`2<String, Windows.Foundation.EventRegistrationToken>
Windows.Foundation.Collections.IMap`2<String, Windows.Services.Store.Internal.IStorePackageLicenseLostCallback>
Windows.Foundation.Collections.IMap`2<String, Windows.Services.Store.StoreLicense>
Windows.Foundation.Collections.IMap`2<String, Windows.Services.Store.StorePackageUpdateStatus>
Windows.Foundation.Collections.IMap`2<String, Windows.Services.Store.StoreProduct>
Windows.Foundation.Collections.IMapView`2<String, String>
Windows.Foundation.Collections.IMapView`2<String, UInt8>
Windows.Foundation.Collections.IMapView`2<String, Windows.ApplicationModel.Store.LicenseManagement.LicenseSatisfactionInfo>
Windows.Foundation.Collections.IMapView`2<String, Windows.ApplicationModel.Store.ProductLicense>
Windows.Foundation.Collections.IMapView`2<String, Windows.ApplicationModel.Store.ProductListing>
Windows.Foundation.Collections.IMapView`2<String, Windows.Foundation.EventRegistrationToken>
Windows.Foundation.Collections.IMapView`2<String, Windows.Services.Store.Internal.IStorePackageLicenseLostCallback>
Windows.Foundation.Collections.IMapView`2<String, Windows.Services.Store.StoreLicense>
Windows.Foundation.Collections.IMapView`2<String, Windows.Services.Store.StorePackageUpdateStatus>
Windows.Foundation.Collections.IMapView`2<String, Windows.Services.Store.StoreProduct>
Windows.Foundation.Collections.IVector`1<Object>
Windows.Foundation.Collections.IVector`1<String>
Windows.Foundation.Collections.IVector`1<Windows.ApplicationModel.Package>
Windows.Foundation.Collections.IVector`1<Windows.ApplicationModel.Store.Preview.StorePreviewProductInfo>
Windows.Foundation.Collections.IVector`1<Windows.ApplicationModel.Store.Preview.StorePreviewSkuInfo>
Windows.Foundation.Collections.IVector`1<Windows.ApplicationModel.Store.Preview.StoreSystemFeature>
Windows.Foundation.Collections.IVector`1<Windows.ApplicationModel.Store.UnfulfilledConsumable>
Windows.Foundation.Collections.IVector`1<Windows.Services.Store.Internal.StoreContentIdKeyIdItem>
Windows.Foundation.Collections.IVector`1<Windows.Services.Store.StoreAvailability>
Windows.Foundation.Collections.IVector`1<Windows.Services.Store.StoreCollectionData>
Windows.Foundation.Collections.IVector`1<Windows.Services.Store.StoreImage>
Windows.Foundation.Collections.IVector`1<Windows.Services.Store.StoreLicense>
Windows.Foundation.Collections.IVector`1<Windows.Services.Store.StorePackageUpdate>
Windows.Foundation.Collections.IVector`1<Windows.Services.Store.StorePackageUpdateStatus>
Windows.Foundation.Collections.IVector`1<Windows.Services.Store.StoreProduct>
Windows.Foundation.Collections.IVector`1<Windows.Services.Store.StoreQueueItem>
Windows.Foundation.Collections.IVector`1<Windows.Services.Store.StoreSku>
Windows.Foundation.Collections.IVector`1<Windows.Services.Store.StoreVideo>
Windows.Foundation.Collections.IVectorView`1<Object>
Windows.Foundation.Collections.IVectorView`1<String>
Windows.Foundation.Collections.IVectorView`1<Windows.ApplicationModel.Package>
Windows.Foundation.Collections.IVectorView`1<Windows.ApplicationModel.Store.Preview.StorePreviewProductInfo>
Windows.Foundation.Collections.IVectorView`1<Windows.ApplicationModel.Store.Preview.StorePreviewSkuInfo>
Windows.Foundation.Collections.IVectorView`1<Windows.ApplicationModel.Store.Preview.StoreSystemFeature>
Windows.Foundation.Collections.IVectorView`1<Windows.ApplicationModel.Store.UnfulfilledConsumable>
Windows.Foundation.Collections.IVectorView`1<Windows.Services.Store.Internal.StoreContentIdKeyIdItem>
Windows.Foundation.Collections.IVectorView`1<Windows.Services.Store.StoreAvailability>
Windows.Foundation.Collections.IVectorView`1<Windows.Services.Store.StoreCollectionData>
Windows.Foundation.Collections.IVectorView`1<Windows.Services.Store.StoreImage>
Windows.Foundation.Collections.IVectorView`1<Windows.Services.Store.StoreLicense>
Windows.Foundation.Collections.IVectorView`1<Windows.Services.Store.StorePackageUpdate>
Windows.Foundation.Collections.IVectorView`1<Windows.Services.Store.StorePackageUpdateStatus>
Windows.Foundation.Collections.IVectorView`1<Windows.Services.Store.StoreProduct>
Windows.Foundation.Collections.IVectorView`1<Windows.Services.Store.StoreQueueItem>
Windows.Foundation.Collections.IVectorView`1<Windows.Services.Store.StoreSku>
Windows.Foundation.Collections.IVectorView`1<Windows.Services.Store.StoreVideo>
Windows.Foundation.Collections.ValueSet
Windows.Foundation.Diagnostics.AsyncCausalityTracer
Windows.Foundation.IAsyncAction
Windows.Foundation.IAsyncOperation`1<Boolean>
Windows.Foundation.IAsyncOperation`1<String>
Windows.Foundation.IAsyncOperation`1<Windows.ApplicationModel.Store.FulfillmentResult>
Windows.Foundation.IAsyncOperation`1<Windows.ApplicationModel.Store.LicenseManagement.LicenseSatisfactionResult>
Windows.Foundation.IAsyncOperation`1<Windows.ApplicationModel.Store.ListingInformation>
Windows.Foundation.IAsyncOperation`1<Windows.ApplicationModel.Store.Preview.StorePreviewPurchaseResults>
Windows.Foundation.IAsyncOperation`1<Windows.ApplicationModel.Store.PurchaseResults>
Windows.Foundation.IAsyncOperation`1<Windows.Foundation.Collections.IVectorView`1<Windows.ApplicationModel.Store.Preview.StorePreviewProductInfo>>
Windows.Foundation.IAsyncOperation`1<Windows.Foundation.Collections.IVectorView`1<Windows.ApplicationModel.Store.Preview.StoreSystemFeature>>
Windows.Foundation.IAsyncOperation`1<Windows.Foundation.Collections.IVectorView`1<Windows.ApplicationModel.Store.UnfulfilledConsumable>>
Windows.Foundation.IAsyncOperation`1<Windows.Foundation.Collections.IVectorView`1<Windows.Services.Store.StorePackageUpdate>>
Windows.Foundation.IAsyncOperation`1<Windows.Foundation.Collections.IVectorView`1<Windows.Services.Store.StoreQueueItem>>
Windows.Foundation.IAsyncOperation`1<Windows.Services.Store.StoreAcquireLicenseResult>
Windows.Foundation.IAsyncOperation`1<Windows.Services.Store.StoreAppLicense>
Windows.Foundation.IAsyncOperation`1<Windows.Services.Store.StoreCanAcquireLicenseResult>
Windows.Foundation.IAsyncOperation`1<Windows.Services.Store.StoreConsumableResult>
Windows.Foundation.IAsyncOperation`1<Windows.Services.Store.StoreProductPagedQueryResult>
Windows.Foundation.IAsyncOperation`1<Windows.Services.Store.StoreProductQueryResult>
Windows.Foundation.IAsyncOperation`1<Windows.Services.Store.StoreProductResult>
Windows.Foundation.IAsyncOperation`1<Windows.Services.Store.StorePurchaseResult>
Windows.Foundation.IAsyncOperation`1<Windows.Services.Store.StoreRateAndReviewResult>
Windows.Foundation.IAsyncOperation`1<Windows.Services.Store.StoreSendRequestResult>
Windows.Foundation.IAsyncOperation`1<Windows.Services.Store.StoreUninstallStorePackageResult>
Windows.Foundation.IAsyncOperation`1<Windows.Storage.Streams.IRandomAccessStreamReference>
Windows.Foundation.IAsyncOperationWithProgress`2<Windows.Services.Store.StorePackageUpdateResult, Windows.Services.Store.StorePackageUpdateStatus>
Windows.Foundation.IReference`1<UInt32>
Windows.Foundation.PropertyValue
Windows.Foundation.Uri
Windows.Globalization.NumberFormatting.CurrencyFormatter
Windows.Internal.FilePickerExperience
Windows.Internal.Security.Authentication.Web.TokenBrokerInternal
Windows.Internal.Security.WebAuthentication.AuthenticationManager
Windows.Internal.Shell.ModalExperience.ModalExperienceManager
Windows.Internal.Shell.ModalExperience.ModalExperienceOptions
Windows.Internal.StateRepository.Package
Windows.Internal.StateRepository.PackageResourceResolver
Windows.Internal.StateRepository.TargetDeviceFamily
Windows.Internal.StateRepository.User
Windows.Launch
windows.lockScreen
windows.LockScreenCall
Windows.LockScreenComponent
Windows.Management.Deployment.PackageManager
Windows.Networking.Connectivity.NetworkInformation
Windows.OopWebView
Windows.PeoplePane
Windows.PersonalAssistant.Launch
Windows.PosPaymentConnector
Windows.PreInstalledConfigTask
Windows.Print3DWorkflow
Windows.PrintTaskSettings
Windows.PrintWorkflowBackgroundTask
Windows.PrintWorkflowForegroundTask
Windows.Protocol
Windows.RestrictedLaunch
Windows.Search
Windows.Security.Authentication.OnlineId.OnlineIdServiceTicketRequest
Windows.Security.Authentication.Web.Core.WebAuthenticationCoreManager
Windows.Security.Authentication.Web.Core.WebTokenRequest
Windows.Security.Cryptography.CryptographicBuffer
Windows.Services.Store.Internal.GetNextStoreProductOperation
Windows.Services.Store.Internal.IStoreContextServer.GetAppAndOptionalStorePackageUpdatesAsync
Windows.Services.Store.Internal.IStoreContextServer.RequestDownloadAndInstallStorePackagesAsync
Windows.Services.Store.Internal.IStoreContextServer.RequestDownloadAndInstallStorePackageUpdatesAsync
Windows.Services.Store.Internal.IStoreContextServer.RequestDownloadStorePackageUpdatesAsync
Windows.Services.Store.Internal.StoreContentIdKeyIdItem
Windows.Services.Store.Internal.StoreContentIdKeyIdResponse
Windows.Services.Store.Internal.StoreContextCallerData
Windows.Services.Store.Internal.StoreContextServer
Windows.Services.Store.StoreAcquireLicenseResult
Windows.Services.Store.StoreAppLicense
Windows.Services.Store.StoreAvailability
Windows.Services.Store.StoreAvailability.RequestPurchaseAsync
Windows.Services.Store.StoreAvailability.RequestPurchaseWithPurchasePropertiesAsync
Windows.Services.Store.StoreCanAcquireLicenseResult
Windows.Services.Store.StoreCollectionData
Windows.Services.Store.StoreConsumableResult
Windows.Services.Store.StoreContext
Windows.Services.Store.StoreContext.AcquireStoreLicenseForOptionalPackageAsync
Windows.Services.Store.StoreContext.CanAcquireStoreLicenseAsync
Windows.Services.Store.StoreContext.CanAcquireStoreLicenseForOptionalPackageAsync
Windows.Services.Store.StoreContext.DownloadAndInstallStorePackagesAsync
Windows.Services.Store.StoreContext.FindStoreProductForPackageAsync
Windows.Services.Store.StoreContext.GetAppAndOptionalStorePackageUpdatesAsync
Windows.Services.Store.StoreContext.GetAppLicenseAsync
Windows.Services.Store.StoreContext.GetAssociatedStoreProductsAsync
Windows.Services.Store.StoreContext.GetAssociatedStoreProductsWithPagingAsync
Windows.Services.Store.StoreContext.GetAssociatedStoreQueueItemsAsync
Windows.Services.Store.StoreContext.GetConsumableBalanceRemainingAsync
Windows.Services.Store.StoreContext.GetCustomerCollectionsIdAsync
Windows.Services.Store.StoreContext.GetCustomerPurchaseIdAsync
Windows.Services.Store.StoreContext.GetStoreProductForCurrentAppAsync
Windows.Services.Store.StoreContext.GetStoreProductsAsync
Windows.Services.Store.StoreContext.GetStoreProductsWithOptionsAsync
Windows.Services.Store.StoreContext.GetStoreQueueItemsAsync
Windows.Services.Store.StoreContext.GetUserCollectionAsync
Windows.Services.Store.StoreContext.GetUserCollectionWithPagingAsync
Windows.Services.Store.StoreContext.ReportConsumableFulfillmentAsync
Windows.Services.Store.StoreContext.RequestDownloadAndInstallStorePackagesAsync
Windows.Services.Store.StoreContext.RequestDownloadAndInstallStorePackagesWithInstallOptionsAsync
Windows.Services.Store.StoreContext.RequestDownloadAndInstallStorePackageUpdatesAsync
Windows.Services.Store.StoreContext.RequestDownloadStorePackageUpdatesAsync
Windows.Services.Store.StoreContext.RequestPurchaseAsync
Windows.Services.Store.StoreContext.RequestPurchaseWithPurchasePropertiesAsync
Windows.Services.Store.StoreContext.RequestRateAndReviewAppAsync
Windows.Services.Store.StoreContext.RequestUninstallStorePackageAsync
Windows.Services.Store.StoreContext.RequestUninstallStorePackageByStoreIdAsync
Windows.Services.Store.StoreContext.SetInstallOrderForAssociatedStoreQueueItemsAsync
Windows.Services.Store.StoreContext.TrySilentDownloadAndInstallStorePackageUpdatesAsync
Windows.Services.Store.StoreContext.TrySilentDownloadStorePackageUpdatesAsync
Windows.Services.Store.StoreContext.UninstallStorePackageAsync
Windows.Services.Store.StoreContext.UninstallStorePackageByStoreIdAsync
Windows.Services.Store.StoreImage
Windows.Services.Store.StoreLicense
Windows.Services.Store.StorePackageInstallOptions
Windows.Services.Store.StorePackageLicense
Windows.Services.Store.StorePackageUpdate
Windows.Services.Store.StorePackageUpdateResult
Windows.Services.Store.StorePrice
Windows.Services.Store.StoreProduct
Windows.Services.Store.StoreProduct.GetIsAnySkuInstalledAsync
Windows.Services.Store.StoreProduct.RequestPurchaseAsync
Windows.Services.Store.StoreProduct.RequestPurchaseWithPurchasePropertiesAsync
Windows.Services.Store.StoreProductOptions
Windows.Services.Store.StoreProductPagedQueryResult
Windows.Services.Store.StoreProductPagedQueryResult.GetNextAsync
Windows.Services.Store.StoreProductQueryResult
Windows.Services.Store.StoreProductResult
Windows.Services.Store.StorePurchaseProperties
Windows.Services.Store.StorePurchaseResult
Windows.Services.Store.StoreQueueItem
Windows.Services.Store.StoreQueueItem.CancelInstallAsync
Windows.Services.Store.StoreQueueItem.PauseInstallAsync
Windows.Services.Store.StoreQueueItem.ResumeInstallAsync
Windows.Services.Store.StoreQueueItemCompletedEventArgs
Windows.Services.Store.StoreQueueItemStatus
Windows.Services.Store.StoreRateAndReviewResult
Windows.Services.Store.StoreRequestHelper
Windows.Services.Store.StoreRequestHelper.SendRequestAsync
Windows.Services.Store.StoreSendRequestResult
Windows.Services.Store.StoreSku
Windows.Services.Store.StoreSku.GetIsInstalledAsync
Windows.Services.Store.StoreSku.RequestPurchaseAsync
Windows.Services.Store.StoreSku.RequestPurchaseWithPurchasePropertiesAsync
Windows.Services.Store.StoreSubscriptionInfo
Windows.Services.Store.StoreUninstallStorePackageResult
Windows.Services.Store.StoreVideo
Windows.ShareTarget
Windows.StartupTask
Windows.Storage.Streams.DataReader
Windows.Storage.Streams.RandomAccessStreamReference
Windows.System.Internal.UserManager
Windows.System.Launcher
Windows.System.Profile.AnalyticsInfo
Windows.System.UserProfile.GlobalizationPreferences
Windows.UI.Core.CoreWindow
Windows.UI.Popups.MessageDialog
Windows.UI.Popups.UICommand
Windows.UpdateTask
Windows.UserDataAccountsProvider
Windows.UserDataTaskDataProvider
Windows.VoiceCommand
Windows.Web.Http.Filters.HttpBaseProtocolFilter
Windows.Web.Http.HttpClient
Windows.Web.Http.HttpMethod
Windows.Web.Http.HttpRequestMessage
Windows.Web.Http.HttpStringContent
Windows.WebAccountProvider
Windows.Xbox.ApplicationModel.State.Internal.StateHelperCache
Windows.Xbox.System.Internal.Deployment.AvailablePackageProvider
Windows::ApplicationModel::Store::AsyncOperationBase<struct Windows::Foundation::IAsyncOperation<bool>,struct Windows::Foundation::IAsyncOperationCompletedHandler<bool>,0>::DoWorkStub
Windows::ApplicationModel::Store::AsyncOperationBase<struct Windows::Foundation::IAsyncOperation<class Windows::ApplicationModel::Store::ListingInformation *>,struct Windows::Foundation::IAsyncOperationCompletedHandler<class Windows::ApplicationModel::Store::ListingInformation *>,0>::DoWorkStub
Windows::ApplicationModel::Store::AsyncOperationBase<struct Windows::Foundation::IAsyncOperation<class Windows::ApplicationModel::Store::Preview::StorePreviewPurchaseResults *>,struct Windows::Foundation::IAsyncOperationCompletedHandler<class Windows::ApplicationModel::Store::Preview::StorePreviewPurchaseResults *>,0>::DoWorkStub
Windows::ApplicationModel::Store::AsyncOperationBase<struct Windows::Foundation::IAsyncOperation<class Windows::ApplicationModel::Store::PurchaseResults *>,struct Windows::Foundation::IAsyncOperationCompletedHandler<class Windows::ApplicationModel::Store::PurchaseResults *>,0>::DoWorkStub
Windows::ApplicationModel::Store::AsyncOperationBase<struct Windows::Foundation::IAsyncOperation<class Windows::Services::Store::StoreAcquireLicenseResult *>,struct Windows::Foundation::IAsyncOperationCompletedHandler<class Windows::Services::Store::StoreAcquireLicenseResult *>,0>::DoWorkStub
Windows::ApplicationModel::Store::AsyncOperationBase<struct Windows::Foundation::IAsyncOperation<class Windows::Services::Store::StoreAppLicense *>,struct Windows::Foundation::IAsyncOperationCompletedHandler<class Windows::Services::Store::StoreAppLicense *>,0>::DoWorkStub
Windows::ApplicationModel::Store::AsyncOperationBase<struct Windows::Foundation::IAsyncOperation<class Windows::Services::Store::StoreCanAcquireLicenseResult *>,struct Windows::Foundation::IAsyncOperationCompletedHandler<class Windows::Services::Store::StoreCanAcquireLicenseResult *>,0>::DoWorkStub
Windows::ApplicationModel::Store::AsyncOperationBase<struct Windows::Foundation::IAsyncOperation<class Windows::Services::Store::StoreConsumableResult *>,struct Windows::Foundation::IAsyncOperationCompletedHandler<class Windows::Services::Store::StoreConsumableResult *>,0>::DoWorkStub
Windows::ApplicationModel::Store::AsyncOperationBase<struct Windows::Foundation::IAsyncOperation<class Windows::Services::Store::StoreProductPagedQueryResult *>,struct Windows::Foundation::IAsyncOperationCompletedHandler<class Windows::Services::Store::StoreProductPagedQueryResult *>,0>::DoWorkStub
Windows::ApplicationModel::Store::AsyncOperationBase<struct Windows::Foundation::IAsyncOperation<class Windows::Services::Store::StoreProductQueryResult *>,struct Windows::Foundation::IAsyncOperationCompletedHandler<class Windows::Services::Store::StoreProductQueryResult *>,0>::DoWorkStub
Windows::ApplicationModel::Store::AsyncOperationBase<struct Windows::Foundation::IAsyncOperation<class Windows::Services::Store::StorePurchaseResult *>,struct Windows::Foundation::IAsyncOperationCompletedHandler<class Windows::Services::Store::StorePurchaseResult *>,0>::DoWorkStub
Windows::ApplicationModel::Store::AsyncOperationBase<struct Windows::Foundation::IAsyncOperation<class Windows::Services::Store::StoreRateAndReviewResult *>,struct Windows::Foundation::IAsyncOperationCompletedHandler<class Windows::Services::Store::StoreRateAndReviewResult *>,0>::DoWorkStub
Windows::ApplicationModel::Store::AsyncOperationBase<struct Windows::Foundation::IAsyncOperation<class Windows::Services::Store::StoreSendRequestResult *>,struct Windows::Foundation::IAsyncOperationCompletedHandler<class Windows::Services::Store::StoreSendRequestResult *>,0>::DoWorkStub
Windows::ApplicationModel::Store::AsyncOperationBase<struct Windows::Foundation::IAsyncOperation<enum Windows::ApplicationModel::Store::FulfillmentResult>,struct Windows::Foundation::IAsyncOperationCompletedHandler<enum Windows::ApplicationModel::Store::FulfillmentResult>,0>::DoWorkStub
Windows::ApplicationModel::Store::AsyncOperationBase<struct Windows::Foundation::IAsyncOperation<struct Windows::Foundation::Collections::IVectorView<class Windows::ApplicationModel::Store::UnfulfilledConsumable *> *>,struct Windows::Foundation::IAsyncOperationCompletedHandler<struct Windows::Foundation::Collections::IVectorView<class Windows::ApplicationModel::Store::UnfulfilledConsumable *> *>,0>::DoWorkStub
Windows::ApplicationModel::Store::AsyncOperationBase<struct Windows::Foundation::IAsyncOperation<struct Windows::Foundation::Collections::IVectorView<class Windows::Services::Store::StorePackageUpdate *> *>,struct Windows::Foundation::IAsyncOperationCompletedHandler<struct Windows::Foundation::Collections::IVectorView<class Windows::Services::Store::StorePackageUpdate *> *>,0>::DoWorkStub
Windows::ApplicationModel::Store::AsyncOperationBase<struct Windows::Foundation::IAsyncOperation<struct Windows::Foundation::Collections::IVectorView<class Windows::Services::Store::StoreQueueItem *> *>,struct Windows::Foundation::IAsyncOperationCompletedHandler<struct Windows::Foundation::Collections::IVectorView<class Windows::Services::Store::StoreQueueItem *> *>,0>::DoWorkStub
Windows::ApplicationModel::Store::CProductLicenseMap::First
Windows::ApplicationModel::Store::CProductLicenseMap::get_Size
Windows::ApplicationModel::Store::CProductLicenseMap::GetView
Windows::ApplicationModel::Store::CProductLicenseMap::HasKey
Windows::ApplicationModel::Store::CProductLicenseMap::Initialize
Windows::ApplicationModel::Store::CProductLicenseMap::Lookup
Windows::ApplicationModel::Store::CProductLicenseMap::Split
Windows::ApplicationModel::Store::CurrentAppFactory::get_AppId
Windows::ApplicationModel::Store::CurrentAppFactory::get_LicenseInformation
Windows::ApplicationModel::Store::CurrentAppFactory::get_LinkUri
Windows::ApplicationModel::Store::CurrentAppFactory::GetAppPurchaseCampaignIdAsync
Windows::ApplicationModel::Store::CurrentAppFactory::GetAppReceiptAsync
Windows::ApplicationModel::Store::CurrentAppFactory::GetAppWindowHandle
Windows::ApplicationModel::Store::CurrentAppFactory::GetCustomerCollectionsIdAsync
Windows::ApplicationModel::Store::CurrentAppFactory::GetCustomerPurchaseIdAsync
Windows::ApplicationModel::Store::CurrentAppFactory::GetProductReceiptAsync
Windows::ApplicationModel::Store::CurrentAppFactory::GetRuntimeClassName
Windows::ApplicationModel::Store::CurrentAppFactory::GetStoreCommerce
Windows::ApplicationModel::Store::CurrentAppFactory::GetUnfulfilledConsumablesAsync
Windows::ApplicationModel::Store::CurrentAppFactory::Initialize
Windows::ApplicationModel::Store::CurrentAppFactory::LoadListingInformationAsync
Windows::ApplicationModel::Store::CurrentAppFactory::LoadListingInformationByKeywordsAsync
Windows::ApplicationModel::Store::CurrentAppFactory::LoadListingInformationByProductIdsAsync
Windows::ApplicationModel::Store::CurrentAppFactory::ReportConsumableFulfillmentAsync
Windows::ApplicationModel::Store::CurrentAppFactory::ReportProductFulfillment
Windows::ApplicationModel::Store::CurrentAppFactory::RequestAppPurchaseAsync
Windows::ApplicationModel::Store::CurrentAppFactory::RequestProductPurchaseAsync
Windows::ApplicationModel::Store::CurrentAppFactory::RequestProductPurchaseWithDisplayPropertiesAsync
Windows::ApplicationModel::Store::CurrentAppFactory::RequestProductPurchaseWithResultsAsync
Windows::ApplicationModel::Store::GetUnfulfilledConsumablesOperationServer::_CreateUnfulfilledConsumable
Windows::ApplicationModel::Store::GetUnfulfilledConsumablesOperationServer::DoWork
Windows::ApplicationModel::Store::GetUnfulfilledConsumablesOperationServer::GetResults
Windows::ApplicationModel::Store::GetUnfulfilledConsumablesOperationServer::GetUnfulfilledConsumablesSync
Windows::ApplicationModel::Store::GetUnfulfilledConsumablesOperationServer::RuntimeClassInitialize
Windows::ApplicationModel::Store::Internal::MessageDialogHelper::AddCommands
Windows::ApplicationModel::Store::Internal::MessageDialogHelper::AddCommands::<lambda_4d6848c418aef141d41ace1c3f3dfac6>::operator ()
Windows::ApplicationModel::Store::Internal::MessageDialogHelper::CheckDialogResults
Windows::ApplicationModel::Store::Internal::MessageDialogHelper::CreateCommand
Windows::ApplicationModel::Store::Internal::MessageDialogHelper::CreateCommandWithInt32Id
Windows::ApplicationModel::Store::Internal::MessageDialogHelper::get_ContextString
Windows::ApplicationModel::Store::Internal::MessageDialogHelper::GetAppName
Windows::ApplicationModel::Store::Internal::MessageDialogHelper::GetText
Windows::ApplicationModel::Store::Internal::MessageDialogHelper::LoadFormattedString
Windows::ApplicationModel::Store::Internal::MessageDialogHelper::RuntimeClassInitialize
Windows::ApplicationModel::Store::Internal::MessageDialogHelper::ShowDialog
Windows::ApplicationModel::Store::Internal::MessageDialogHelper::ShowDialogWithResultsAsync
Windows::ApplicationModel::Store::Internal::StoreCommerceServer::GetAppCatalogId
Windows::ApplicationModel::Store::Internal::StoreCommerceServer::GetAppId
Windows::ApplicationModel::Store::Internal::StoreCommerceServer::GetAppPurchaseCampaignIdAsync
Windows::ApplicationModel::Store::Internal::StoreCommerceServer::GetAppReceiptAsync
Windows::ApplicationModel::Store::Internal::StoreCommerceServer::GetCustomerCollectionsIdAsync
Windows::ApplicationModel::Store::Internal::StoreCommerceServer::GetCustomerPurchaseIdAsync
Windows::ApplicationModel::Store::Internal::StoreCommerceServer::GetExclusiveLockForProduct
Windows::ApplicationModel::Store::Internal::StoreCommerceServer::GetLicenseInformation
Windows::ApplicationModel::Store::Internal::StoreCommerceServer::GetLinkUri
Windows::ApplicationModel::Store::Internal::StoreCommerceServer::GetProductReceiptAsync
Windows::ApplicationModel::Store::Internal::StoreCommerceServer::GetUnfulfilledConsumablesAsync
Windows::ApplicationModel::Store::Internal::StoreCommerceServer::Initialize
Windows::ApplicationModel::Store::Internal::StoreCommerceServer::InitializeIdsFromLicense
Windows::ApplicationModel::Store::Internal::StoreCommerceServer::LoadAddOnProductInfos
Windows::ApplicationModel::Store::Internal::StoreCommerceServer::LoadAddOnProductInfosAsync
Windows::ApplicationModel::Store::Internal::StoreCommerceServer::LoadListingInformationAsync
Windows::ApplicationModel::Store::Internal::StoreCommerceServer::ReportConsumableFulfillmentAsync
Windows::ApplicationModel::Store::Internal::StoreCommerceServer::ReportConsumableFulfillmentSync
Windows::ApplicationModel::Store::Internal::StoreCommerceServer::RequestAppPurchaseAsync
Windows::ApplicationModel::Store::Internal::StoreCommerceServer::RequestProductPurchaseAsync
Windows::ApplicationModel::Store::Internal::StoreCommerceServer::RequestProductPurchaseByProductIdAndSkuIdAsync
Windows::ApplicationModel::Store::Internal::StoreCommerceServer::RequestProductPurchaseWithDisplayPropertiesAsync
Windows::ApplicationModel::Store::Internal::StoreCommerceServer::RequestProductPurchaseWithResultsAsync
Windows::ApplicationModel::Store::LicenseInformationServer::_TimerCallback
Windows::ApplicationModel::Store::LicenseInformationServer::add_LicenseChanged
Windows::ApplicationModel::Store::LicenseInformationServer::CheckForChanges
Windows::ApplicationModel::Store::LicenseInformationServer::CreateInstance
Windows::ApplicationModel::Store::LicenseInformationServer::DumpLicensesToDebugger
Windows::ApplicationModel::Store::LicenseInformationServer::get_ExpirationDate
Windows::ApplicationModel::Store::LicenseInformationServer::get_IsActive
Windows::ApplicationModel::Store::LicenseInformationServer::get_IsTrial
Windows::ApplicationModel::Store::LicenseInformationServer::get_ProductLicenses
Windows::ApplicationModel::Store::LicenseInformationServer::GetProductId
Windows::ApplicationModel::Store::LicenseInformationServer::Initialize
Windows::ApplicationModel::Store::LicenseInformationServer::RefreshConsumables
Windows::ApplicationModel::Store::LicenseInformationServer::RefreshInternalState
Windows::ApplicationModel::Store::LicenseInformationServer::remove_LicenseChanged
Windows::ApplicationModel::Store::LicenseManagement::LicenseSatisfactionInfo::get_IsSatisfied
Windows::ApplicationModel::Store::LicenseManagement::LicenseSatisfactionInfo::get_SatisfiedByDevice
Windows::ApplicationModel::Store::LicenseManagement::LicenseSatisfactionInfo::get_SatisfiedByInstallMedia
Windows::ApplicationModel::Store::LicenseManagement::LicenseSatisfactionInfo::get_SatisfiedByOpenLicense
Windows::ApplicationModel::Store::LicenseManagement::LicenseSatisfactionInfo::get_SatisfiedByPass
Windows::ApplicationModel::Store::LicenseManagement::LicenseSatisfactionInfo::get_SatisfiedBySignedInUser
Windows::ApplicationModel::Store::LicenseManagement::LicenseSatisfactionInfo::get_SatisfiedByTrial
Windows::ApplicationModel::Store::LicenseManagement::LicenseSatisfactionInfo::RuntimeClassInitialize
Windows::ApplicationModel::Store::LicenseManagement::LicenseSatisfactionResult::get_ExtendedError
Windows::ApplicationModel::Store::LicenseManagement::LicenseSatisfactionResult::get_LicenseSatisfactionInfos
Windows::ApplicationModel::Store::LicenseManagement::LicenseSatisfactionResult::get_SkuId
Windows::ApplicationModel::Store::LicenseManagement::LicenseSatisfactionResult::RuntimeClassInitialize
Windows::ApplicationModel::Store::LicenseManagement::WinRtLicenseManager::AddLicenseAsync
Windows::ApplicationModel::Store::LicenseManagement::WinRtLicenseManager::AddLicenseAsync::<lambda_44342999051b9ac76274da7b1abbe319>::operator ()
Windows::ApplicationModel::Store::LicenseManagement::WinRtLicenseManager::GetALM
Windows::ApplicationModel::Store::LicenseManagement::WinRtLicenseManager::GetSatisfactionInfos
Windows::ApplicationModel::Store::LicenseManagement::WinRtLicenseManager::GetSatisfactionInfosAsync
Windows::ApplicationModel::Store::LicenseManagement::WinRtLicenseManager::GetSatisfactionInfosAsync::<lambda_d3a7404197dfbd7a3c6bd86897146888>::operator ()
Windows::ApplicationModel::Store::LicenseManagement::WinRtLicenseManager::RefreshLicensesAsync
Windows::ApplicationModel::Store::LicenseManagement::WinRtLicenseManager::RefreshLicensesAsync::<lambda_1a201aed0af0ca998e9b63a90a01ae15>::operator ()
Windows::ApplicationModel::Store::ListingInformationServer::get_AgeRating
Windows::ApplicationModel::Store::ListingInformationServer::get_CurrencyCode
Windows::ApplicationModel::Store::ListingInformationServer::get_CurrentMarket
Windows::ApplicationModel::Store::ListingInformationServer::get_Description
Windows::ApplicationModel::Store::ListingInformationServer::get_FormattedBasePrice
Windows::ApplicationModel::Store::ListingInformationServer::get_FormattedPrice
Windows::ApplicationModel::Store::ListingInformationServer::get_IsOnSale
Windows::ApplicationModel::Store::ListingInformationServer::get_Name
Windows::ApplicationModel::Store::ListingInformationServer::get_ProductListings
Windows::ApplicationModel::Store::ListingInformationServer::get_SaleEndDate
Windows::ApplicationModel::Store::ListingInformationServer::Initialize
Windows::ApplicationModel::Store::LoadListingOperationServer::DoWork
Windows::ApplicationModel::Store::LoadListingOperationServer::GetResults
Windows::ApplicationModel::Store::LoadListingOperationServer::RuntimeClassInitialize
Windows::ApplicationModel::Store::Preview::RequestProductPurchaseBySkuIdOperationServer::_CreatePurchaseResultsInformation
Windows::ApplicationModel::Store::Preview::RequestProductPurchaseBySkuIdOperationServer::DoWork
Windows::ApplicationModel::Store::Preview::RequestProductPurchaseBySkuIdOperationServer::GetResults
Windows::ApplicationModel::Store::Preview::RequestProductPurchaseBySkuIdOperationServer::RuntimeClassInitialize
Windows::ApplicationModel::Store::Preview::StoreConfigurationServer::AskWuWhichHardwareIsAvailable
Windows::ApplicationModel::Store::Preview::StoreConfigurationServer::BuildKnownFeatureAndGuidArrays
Windows::ApplicationModel::Store::Preview::StoreConfigurationServer::FilterUnsupportedFeaturesInternal
Windows::ApplicationModel::Store::Preview::StoreConfigurationServer::FilterUnsupportedSystemFeaturesAsync
Windows::ApplicationModel::Store::Preview::StoreConfigurationServer::FilterUnsupportedSystemFeaturesAsync::<lambda_0e1eb6e8a023329ec1e56327cb973434>::operator ()
Windows::ApplicationModel::Store::Preview::StoreConfigurationServer::get_HardwareManufacturerInfo
Windows::ApplicationModel::Store::Preview::StoreConfigurationServer::get_PurchasePromptingPolicy
Windows::ApplicationModel::Store::Preview::StoreConfigurationServer::GetEnterpriseStoreWebAccountId
Windows::ApplicationModel::Store::Preview::StoreConfigurationServer::GetEnterpriseStoreWebAccountIdForUser
Windows::ApplicationModel::Store::Preview::StoreConfigurationServer::GetEnterpriseStoreWebAccountIdInternal
Windows::ApplicationModel::Store::Preview::StoreConfigurationServer::GetHardwareManufacturerInfoInternal
Windows::ApplicationModel::Store::Preview::StoreConfigurationServer::GetPurchasePromptingPolicyForUser
Windows::ApplicationModel::Store::Preview::StoreConfigurationServer::GetStoreLogDataAsync
Windows::ApplicationModel::Store::Preview::StoreConfigurationServer::GetStoreLogDataAsync::<lambda_7eec4b465b6401040cbcb9c2e9bfc558>::operator ()
Windows::ApplicationModel::Store::Preview::StoreConfigurationServer::GetStoreWebAccountId
Windows::ApplicationModel::Store::Preview::StoreConfigurationServer::GetStoreWebAccountIdForUser
Windows::ApplicationModel::Store::Preview::StoreConfigurationServer::GetStoreWebAccountIdInternal
Windows::ApplicationModel::Store::Preview::StoreConfigurationServer::HasStoreWebAccount
Windows::ApplicationModel::Store::Preview::StoreConfigurationServer::HasStoreWebAccountForUser
Windows::ApplicationModel::Store::Preview::StoreConfigurationServer::IsPinToDesktopSupported
Windows::ApplicationModel::Store::Preview::StoreConfigurationServer::IsPinToStartSupported
Windows::ApplicationModel::Store::Preview::StoreConfigurationServer::IsPinToTaskbarSupported
Windows::ApplicationModel::Store::Preview::StoreConfigurationServer::IsStoreWebAccountId
Windows::ApplicationModel::Store::Preview::StoreConfigurationServer::IsStoreWebAccountIdForUser
Windows::ApplicationModel::Store::Preview::StoreConfigurationServer::IsStoreWebAccountIdInternal
Windows::ApplicationModel::Store::Preview::StoreConfigurationServer::PinToDesktop
Windows::ApplicationModel::Store::Preview::StoreConfigurationServer::PinToDesktopForUser
Windows::ApplicationModel::Store::Preview::StoreConfigurationServer::put_PurchasePromptingPolicy
Windows::ApplicationModel::Store::Preview::StoreConfigurationServer::PutPurchasePromptingPolicyInternal
Windows::ApplicationModel::Store::Preview::StoreConfigurationServer::SetEnterpriseStoreWebAccountId
Windows::ApplicationModel::Store::Preview::StoreConfigurationServer::SetEnterpriseStoreWebAccountIdForUser
Windows::ApplicationModel::Store::Preview::StoreConfigurationServer::SetEnterpriseStoreWebAccountIdInternal
Windows::ApplicationModel::Store::Preview::StoreConfigurationServer::SetMobileOperatorConfiguration
Windows::ApplicationModel::Store::Preview::StoreConfigurationServer::SetMobileOperatorConfigurationInternal
Windows::ApplicationModel::Store::Preview::StoreConfigurationServer::SetPurchasePromptingPolicyForUser
Windows::ApplicationModel::Store::Preview::StoreConfigurationServer::SetStoreWebAccountId
Windows::ApplicationModel::Store::Preview::StoreConfigurationServer::SetStoreWebAccountIdForUser
Windows::ApplicationModel::Store::Preview::StoreConfigurationServer::SetStoreWebAccountIdInternal
Windows::ApplicationModel::Store::Preview::StoreConfigurationServer::SetSystemConfiguration
Windows::ApplicationModel::Store::Preview::StoreConfigurationServer::SetSystemConfigurationInternal
Windows::ApplicationModel::Store::Preview::StoreConfigurationServer::ShouldRestrictToEnterpriseStoreOnly
Windows::ApplicationModel::Store::Preview::StoreConfigurationServer::ShouldRestrictToEnterpriseStoreOnlyForUser
Windows::ApplicationModel::Store::Preview::StoreConfigurationServer::StoreConfigurationServer
Windows::ApplicationModel::Store::Preview::StoreHardwareManufacturerInfoServer::get_HardwareManufacturerId
Windows::ApplicationModel::Store::Preview::StoreHardwareManufacturerInfoServer::get_ManufacturerName
Windows::ApplicationModel::Store::Preview::StoreHardwareManufacturerInfoServer::get_ModelName
Windows::ApplicationModel::Store::Preview::StoreHardwareManufacturerInfoServer::get_StoreContentModifierId
Windows::ApplicationModel::Store::Preview::StoreHardwareManufacturerInfoServer::put_HardwareManufacturerId
Windows::ApplicationModel::Store::Preview::StoreHardwareManufacturerInfoServer::put_ManufacturerName
Windows::ApplicationModel::Store::Preview::StoreHardwareManufacturerInfoServer::put_ModelName
Windows::ApplicationModel::Store::Preview::StoreHardwareManufacturerInfoServer::put_StoreContentModifierId
Windows::ApplicationModel::Store::Preview::StorePreviewFactory::GetStoreCommerce
Windows::ApplicationModel::Store::Preview::StorePreviewFactory::Initialize
Windows::ApplicationModel::Store::Preview::StorePreviewFactory::LoadAddOnProductInfosAsync
Windows::ApplicationModel::Store::Preview::StorePreviewFactory::RequestProductPurchaseByProductIdAndSkuIdAsync
Windows::ApplicationModel::Store::Preview::StorePreviewProductInfoServer::get_Description
Windows::ApplicationModel::Store::Preview::StorePreviewProductInfoServer::get_ProductId
Windows::ApplicationModel::Store::Preview::StorePreviewProductInfoServer::get_ProductType
Windows::ApplicationModel::Store::Preview::StorePreviewProductInfoServer::get_SkuInfoList
Windows::ApplicationModel::Store::Preview::StorePreviewProductInfoServer::get_Title
Windows::ApplicationModel::Store::Preview::StorePreviewProductInfoServer::Initialize
Windows::ApplicationModel::Store::Preview::StorePreviewPurchaseResultsServer::get_ProductPurchaseStatus
Windows::ApplicationModel::Store::Preview::StorePreviewSkuInfoServer::get_CurrencyCode
Windows::ApplicationModel::Store::Preview::StorePreviewSkuInfoServer::get_CustomDeveloperData
Windows::ApplicationModel::Store::Preview::StorePreviewSkuInfoServer::get_Description
Windows::ApplicationModel::Store::Preview::StorePreviewSkuInfoServer::get_ExtendedData
Windows::ApplicationModel::Store::Preview::StorePreviewSkuInfoServer::get_FormattedListPrice
Windows::ApplicationModel::Store::Preview::StorePreviewSkuInfoServer::get_ProductId
Windows::ApplicationModel::Store::Preview::StorePreviewSkuInfoServer::get_SkuId
Windows::ApplicationModel::Store::Preview::StorePreviewSkuInfoServer::get_SkuType
Windows::ApplicationModel::Store::Preview::StorePreviewSkuInfoServer::get_Title
Windows::ApplicationModel::Store::Preview::StorePreviewSkuInfoServer::Initialize
Windows::ApplicationModel::Store::Preview::WebAuthenticationCoreManagerHelper::RequestTokenWithUIElementHostingAndWebAccountAsync
Windows::ApplicationModel::Store::Preview::WebAuthenticationCoreManagerHelper::RequestTokenWithUIElementHostingAsync
Windows::ApplicationModel::Store::ProductLicenseServer::get_ExpirationDate
Windows::ApplicationModel::Store::ProductLicenseServer::get_IsActive
Windows::ApplicationModel::Store::ProductLicenseServer::get_IsConsumable
Windows::ApplicationModel::Store::ProductLicenseServer::get_ProductId
Windows::ApplicationModel::Store::ProductLicenseServer::Initialize
Windows::ApplicationModel::Store::ProductLicenseServer::InitializeInvalid
Windows::ApplicationModel::Store::ProductListingServer::get_CurrencyCode
Windows::ApplicationModel::Store::ProductListingServer::get_Description
Windows::ApplicationModel::Store::ProductListingServer::get_FormattedBasePrice
Windows::ApplicationModel::Store::ProductListingServer::get_FormattedPrice
Windows::ApplicationModel::Store::ProductListingServer::get_ImageUri
Windows::ApplicationModel::Store::ProductListingServer::get_IsOnSale
Windows::ApplicationModel::Store::ProductListingServer::get_Keywords
Windows::ApplicationModel::Store::ProductListingServer::get_Name
Windows::ApplicationModel::Store::ProductListingServer::get_ProductId
Windows::ApplicationModel::Store::ProductListingServer::get_ProductType
Windows::ApplicationModel::Store::ProductListingServer::get_SaleEndDate
Windows::ApplicationModel::Store::ProductListingServer::get_Tag
Windows::ApplicationModel::Store::ProductListingServer::Initialize
Windows::ApplicationModel::Store::ProductPurchaseDisplayPropertiesFactory::ActivateInstance
Windows::ApplicationModel::Store::ProductPurchaseDisplayPropertiesFactory::CreateProductPurchaseDisplayProperties
Windows::ApplicationModel::Store::ProductPurchaseDisplayPropertiesServer::get_Description
Windows::ApplicationModel::Store::ProductPurchaseDisplayPropertiesServer::get_Image
Windows::ApplicationModel::Store::ProductPurchaseDisplayPropertiesServer::get_Name
Windows::ApplicationModel::Store::ProductPurchaseDisplayPropertiesServer::Initialize
Windows::ApplicationModel::Store::ProductPurchaseDisplayPropertiesServer::put_Description
Windows::ApplicationModel::Store::ProductPurchaseDisplayPropertiesServer::put_Image
Windows::ApplicationModel::Store::ProductPurchaseDisplayPropertiesServer::put_Name
Windows::ApplicationModel::Store::ProductReceiptRetrievalOperationServer::DoWork
Windows::ApplicationModel::Store::ProductReceiptRetrievalOperationServer::GetResults
Windows::ApplicationModel::Store::ProductReceiptRetrievalOperationServer::RuntimeClassInitialize
Windows::ApplicationModel::Store::PurchaseResultsServer::get_OfferId
Windows::ApplicationModel::Store::PurchaseResultsServer::get_ReceiptXml
Windows::ApplicationModel::Store::PurchaseResultsServer::get_Status
Windows::ApplicationModel::Store::PurchaseResultsServer::get_TransactionId
Windows::ApplicationModel::Store::PurchaseResultsServer::Initialize
Windows::ApplicationModel::Store::ReceiptRetrievalOperationServer::DoWork
Windows::ApplicationModel::Store::ReceiptRetrievalOperationServer::GetResults
Windows::ApplicationModel::Store::ReceiptRetrievalOperationServer::RuntimeClassInitialize
Windows::ApplicationModel::Store::ReportConsumableFulfillmentOperationServer::DoWork
Windows::ApplicationModel::Store::ReportConsumableFulfillmentOperationServer::GetResults
Windows::ApplicationModel::Store::ReportConsumableFulfillmentOperationServer::RuntimeClassInitialize
Windows::ApplicationModel::Store::RequestAppPurchaseOperationServer::GetResults
Windows::ApplicationModel::Store::RequestAppPurchaseOperationServer::RuntimeClassInitialize
Windows::ApplicationModel::Store::RequestProductPurchaseOperationServer::DoWork
Windows::ApplicationModel::Store::RequestProductPurchaseOperationServer::GetResults
Windows::ApplicationModel::Store::RequestProductPurchaseOperationServer::RuntimeClassInitialize
Windows::ApplicationModel::Store::RequestProductPurchaseWithDisplayPropertiesOperationServer::_CreatePurchaseResultsInformation
Windows::ApplicationModel::Store::RequestProductPurchaseWithDisplayPropertiesOperationServer::DoWork
Windows::ApplicationModel::Store::RequestProductPurchaseWithDisplayPropertiesOperationServer::GetResults
Windows::ApplicationModel::Store::RequestProductPurchaseWithDisplayPropertiesOperationServer::RuntimeClassInitialize
Windows::ApplicationModel::Store::RequestProductPurchaseWithResultsOperationServer::_CreatePurchaseResultsInformation
Windows::ApplicationModel::Store::RequestProductPurchaseWithResultsOperationServer::DoWork
Windows::ApplicationModel::Store::RequestProductPurchaseWithResultsOperationServer::GetResults
Windows::ApplicationModel::Store::RequestProductPurchaseWithResultsOperationServer::RuntimeClassInitialize
Windows::ApplicationModel::Store::UnfulfilledConsumableServer::get_OfferId
Windows::ApplicationModel::Store::UnfulfilledConsumableServer::get_ProductId
Windows::ApplicationModel::Store::UnfulfilledConsumableServer::get_TransactionId
Windows::ApplicationModel::Store::UnfulfilledConsumableServer::Initialize
Windows::Internal::NativeString<class Windows::Internal::CoTaskMemPolicy<unsigned short> >::_EnsureCapacity
Windows::Internal::NativeString<class Windows::Internal::CoTaskMemPolicy<unsigned short> >::_EnsureCount
Windows::Internal::NativeString<class Windows::Internal::CoTaskMemPolicy<unsigned short> >::_Initialize
Windows::Services::Store::AcquireStoreLicenseForOptionalPackageOperation::DoWork
Windows::Services::Store::AcquireStoreLicenseForOptionalPackageOperation::GetResults
Windows::Services::Store::AcquireStoreLicenseForOptionalPackageOperation::RuntimeClassInitialize
Windows::Services::Store::AsyncOperationWithProgressBase<struct Windows::Foundation::IAsyncOperationWithProgress<class Windows::Services::Store::StorePackageUpdateResult *,struct Windows::Services::Store::StorePackageUpdateStatus>,struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler<class Windows::Services::Store::StorePackageUpdateResult *,struct Windows::Services::Store::StorePackageUpdateStatus>,struct Windows::Foundation::IAsyncOperationProgressHandler<class Windows::Services::Store::StorePackageUpdateResult *,struct Windows::Services::Store::StorePackageUpdateStatus>,0>::DoWorkStub
Windows::Services::Store::BackgroundTaskOperation::ConvertJsonObjectToPropertySet
Windows::Services::Store::BackgroundTaskOperation::ConvertPropertySetToJsonObject
Windows::Services::Store::BackgroundTaskOperation::DoWork
Windows::Services::Store::BackgroundTaskOperation::GetResults
Windows::Services::Store::BackgroundTaskOperation::RuntimeClassInitialize
Windows::Services::Store::BulkHydrateOperation::DoWork
Windows::Services::Store::BulkHydrateOperation::GetResults
Windows::Services::Store::BulkHydrateOperation::RuntimeClassInitialize
Windows::Services::Store::CanAcquireStoreLicenseForOptionalPackageOperation::DoWork
Windows::Services::Store::CanAcquireStoreLicenseForOptionalPackageOperation::GetResults
Windows::Services::Store::CanAcquireStoreLicenseForOptionalPackageOperation::RuntimeClassInitialize
Windows::Services::Store::CanAcquireStoreLicenseOperation::DoWork
Windows::Services::Store::CanAcquireStoreLicenseOperation::GetResults
Windows::Services::Store::CanAcquireStoreLicenseOperation::RuntimeClassInitialize
Windows::Services::Store::DownloadAndInstallStorePackagesOperation::_AttachAllEventHandlers
Windows::Services::Store::DownloadAndInstallStorePackagesOperation::_ClearAllEventHandlers
Windows::Services::Store::DownloadAndInstallStorePackagesOperation::_ClearEventHandler
Windows::Services::Store::DownloadAndInstallStorePackagesOperation::_Initialize
Windows::Services::Store::DownloadAndInstallStorePackagesOperation::_OnStoreQueueItemStatusChanged
Windows::Services::Store::DownloadAndInstallStorePackagesOperation::_RefreshAllStatusesAndOverallState
Windows::Services::Store::DownloadAndInstallStorePackagesOperation::_RefreshStatus
Windows::Services::Store::DownloadAndInstallStorePackagesOperation::DoWork
Windows::Services::Store::DownloadAndInstallStorePackagesOperation::GetResults
Windows::Services::Store::DownloadAndInstallStorePackagesOperation::RuntimeClassInitialize
Windows::Services::Store::FindStoreProductForPackageOperation::DoWork
Windows::Services::Store::FindStoreProductForPackageOperation::GetResults
Windows::Services::Store::FindStoreProductForPackageOperation::RuntimeClassInitialize
Windows::Services::Store::GetAppAndSupplementalStorePackageUpdatesOperation::DoWork
Windows::Services::Store::GetAppAndSupplementalStorePackageUpdatesOperation::GetResults
Windows::Services::Store::GetAppAndSupplementalStorePackageUpdatesOperation::RuntimeClassInitialize
Windows::Services::Store::GetAssociatedStoreProductsOperation::DoWork
Windows::Services::Store::GetAssociatedStoreProductsOperation::GetResults
Windows::Services::Store::GetAssociatedStoreProductsOperation::RuntimeClassInitialize
Windows::Services::Store::GetAssociatedStoreProductsPagedOperation::BeginWork
Windows::Services::Store::GetAssociatedStoreProductsPagedOperation::DoWork
Windows::Services::Store::GetAssociatedStoreProductsPagedOperation::GetResults
Windows::Services::Store::GetAssociatedStoreProductsPagedOperation::RuntimeClassInitialize
Windows::Services::Store::GetAssociatedStoreQueueItemsOperation::DoWork
Windows::Services::Store::GetAssociatedStoreQueueItemsOperation::GetResults
Windows::Services::Store::GetAssociatedStoreQueueItemsOperation::RuntimeClassInitialize
Windows::Services::Store::GetConsumableBalanceRemainingOperation::DoWork
Windows::Services::Store::GetConsumableBalanceRemainingOperation::GetResults
Windows::Services::Store::GetConsumableBalanceRemainingOperation::RuntimeClassInitialize
Windows::Services::Store::GetCustomerCollectionsIdOperation::DoWork
Windows::Services::Store::GetCustomerCollectionsIdOperation::GetResults
Windows::Services::Store::GetCustomerCollectionsIdOperation::RuntimeClassInitialize
Windows::Services::Store::GetCustomerPurchaseIdOperation::DoWork
Windows::Services::Store::GetCustomerPurchaseIdOperation::GetResults
Windows::Services::Store::GetCustomerPurchaseIdOperation::RuntimeClassInitialize
Windows::Services::Store::GetIsAnySkuInstalledOperation::DoWork
Windows::Services::Store::GetIsAnySkuInstalledOperation::GetResults
Windows::Services::Store::GetIsAnySkuInstalledOperation::RuntimeClassInitialize
Windows::Services::Store::GetOfflineLicensesOperation::DoWork
Windows::Services::Store::GetOfflineLicensesOperation::GetResults
Windows::Services::Store::GetOfflineLicensesOperation::RuntimeClassInitialize
Windows::Services::Store::GetStoreProductOperation::DoWork
Windows::Services::Store::GetStoreProductOperation::GetResults
Windows::Services::Store::GetStoreProductOperation::RuntimeClassInitialize
Windows::Services::Store::GetStoreQueueItemsOperation::DoWork
Windows::Services::Store::GetStoreQueueItemsOperation::GetResults
Windows::Services::Store::GetStoreQueueItemsOperation::RuntimeClassInitialize
Windows::Services::Store::GetUserCollectionOperation::DoWork
Windows::Services::Store::GetUserCollectionOperation::GetResults
Windows::Services::Store::GetUserCollectionOperation::RuntimeClassInitialize
Windows::Services::Store::GetUserCollectionPagedOperation::DoWork
Windows::Services::Store::GetUserCollectionPagedOperation::GetResults
Windows::Services::Store::GetUserCollectionPagedOperation::RuntimeClassInitialize
Windows::Services::Store::Internal::ConvertPUIDFromDecToHex
Windows::Services::Store::Internal::GetNextAssociatedStoreProducts::GetNextAsync
Windows::Services::Store::Internal::GetNextAssociatedStoreProducts::RuntimeClassInitialize
Windows::Services::Store::Internal::GetNextUserCollection::GetNextAsync
Windows::Services::Store::Internal::GetNextUserCollection::RuntimeClassInitialize
Windows::Services::Store::Internal::StoreContentIdKeyIdItem::get_ContentIds
Windows::Services::Store::Internal::StoreContentIdKeyIdItem::get_KeyIds
Windows::Services::Store::Internal::StoreContentIdKeyIdItem::get_ProductId
Windows::Services::Store::Internal::StoreContentIdKeyIdItem::RuntimeClassInitialize
Windows::Services::Store::Internal::StoreContentIdKeyIdResponse::get_Items
Windows::Services::Store::Internal::StoreContentIdKeyIdResponse::RuntimeClassInitialize
Windows::Services::Store::Internal::StoreContextServer::_ForceRefreshLicensesProc
Windows::Services::Store::Internal::StoreContextServer::_GetAppInstallManager
Windows::Services::Store::Internal::StoreContextServer::_GetStoreQueueItems
Windows::Services::Store::Internal::StoreContextServer::_LicenseChanged
Windows::Services::Store::Internal::StoreContextServer::_LoadLicenseJson
Windows::Services::Store::Internal::StoreContextServer::_MakeDefaultLicenseResponse
Windows::Services::Store::Internal::StoreContextServer::_ParseLicenseInstance
Windows::Services::Store::Internal::StoreContextServer::_RequestPurchase
Windows::Services::Store::Internal::StoreContextServer::_RetrieveHWNDFromCallerData
Windows::Services::Store::Internal::StoreContextServer::AcquireStoreLicenseForOptionalPackage
Windows::Services::Store::Internal::StoreContextServer::BackgroundPurchaseDialogTask
Windows::Services::Store::Internal::StoreContextServer::CanSilentlyDownloadStorePackageUpdates
Windows::Services::Store::Internal::StoreContextServer::CaptureStoreContextCallerData
Windows::Services::Store::Internal::StoreContextServer::ConsumeConsumable
Windows::Services::Store::Internal::StoreContextServer::DownloadStorePackages
Windows::Services::Store::Internal::StoreContextServer::DownloadStorePackageUpdates
Windows::Services::Store::Internal::StoreContextServer::FocusOnWindow
Windows::Services::Store::Internal::StoreContextServer::GetAppAndOptionalStorePackageUpdates
Windows::Services::Store::Internal::StoreContextServer::GetAppAndOptionalStorePackageUpdatesAsync
Windows::Services::Store::Internal::StoreContextServer::GetAssociatedStoreProducts
Windows::Services::Store::Internal::StoreContextServer::GetConsumableBalanceRemaining
Windows::Services::Store::Internal::StoreContextServer::GetContentIdKeyIdsForProductIds
Windows::Services::Store::Internal::StoreContextServer::GetCustomerCollectionsId
Windows::Services::Store::Internal::StoreContextServer::GetCustomerPurchaseId
Windows::Services::Store::Internal::StoreContextServer::GetLinkUri
Windows::Services::Store::Internal::StoreContextServer::GetOfflineLicenses
Windows::Services::Store::Internal::StoreContextServer::GetPreviewLicenseResultForPackage
Windows::Services::Store::Internal::StoreContextServer::GetPreviewLicenseResultForStoreId
Windows::Services::Store::Internal::StoreContextServer::GetProduct
Windows::Services::Store::Internal::StoreContextServer::GetProductForPackage
Windows::Services::Store::Internal::StoreContextServer::GetProducts
Windows::Services::Store::Internal::StoreContextServer::GetProductsByKinds
Windows::Services::Store::Internal::StoreContextServer::GetProductsWithOptions
Windows::Services::Store::Internal::StoreContextServer::GetUserCollection
Windows::Services::Store::Internal::StoreContextServer::Initialize
Windows::Services::Store::Internal::StoreContextServer::IsStoreProductInstalled
Windows::Services::Store::Internal::StoreContextServer::ReleaseStoreLicenseForOptionalPackage
Windows::Services::Store::Internal::StoreContextServer::RequestDownloadAndInstallStorePackagesAsync
Windows::Services::Store::Internal::StoreContextServer::RequestDownloadAndInstallStorePackageUpdatesAsync
Windows::Services::Store::Internal::StoreContextServer::RequestDownloadStorePackageUpdatesAsync
Windows::Services::Store::Internal::StoreContextServer::SendStoreRequest
Windows::Services::Store::Internal::StoreContextServer::SendStoreRequestWithUris
Windows::Services::Store::Internal::StoreContextServer::SetInstallOrderForAssociatedStoreQueueItems
Windows::Services::Store::Internal::StoreContextServer::UninstallStorePackage
Windows::Services::Store::Internal::StoreContextServer::UserConsentedToUninstall
Windows::Services::Store::Internal::StorePackageLicenseWnfWatcher::AddOptionalPackageToWatch
Windows::Services::Store::Internal::StorePackageLicenseWnfWatcher::Initialize
Windows::Services::Store::Internal::StorePackageLicenseWnfWatcher::OnEventCallback
Windows::Services::Store::Internal::StorePackageLicenseWnfWatcher::RemoveOptionalPackageToWatch
Windows::Services::Store::JsonParser::ParseArrayOfOne
Windows::Services::Store::JsonParser::ParseArrayToVector
Windows::Services::Store::JsonParser::ParseArrayToVectorOfHSTRING
Windows::Services::Store::JsonParser::ParseBoolean
Windows::Services::Store::JsonParser::ParseComPtr
Windows::Services::Store::JsonParser::ParseDate
Windows::Services::Store::JsonParser::ParseDouble
Windows::Services::Store::JsonParser::ParseInteger
Windows::Services::Store::JsonParser::ParseJSONStringToObject
Windows::Services::Store::JsonParser::ParseJSONToObject
Windows::Services::Store::JsonParser::ParseString
Windows::Services::Store::JsonParser::ParseTimeSpan
Windows::Services::Store::PurchaseEventArgsRedstone::get_JsonRequest
Windows::Services::Store::PurchaseEventArgsRedstone::get_JsonResponse
Windows::Services::Store::PurchaseEventArgsRedstone::put_JsonResponse
Windows::Services::Store::PurchaseEventArgsRedstone::RuntimeClassInitialize
Windows::Services::Store::PurchaseEventArgsRedstone::SetSize
Windows::Services::Store::PurchaseOperation::_BuildModalExperienceOptions
Windows::Services::Store::PurchaseOperation::_FillTheRequestWithRequiredParameters
Windows::Services::Store::PurchaseOperation::_FirePurchaseTelemetry
Windows::Services::Store::PurchaseOperation::_OnModalExperienceEvent
Windows::Services::Store::PurchaseOperation::_Purchase
Windows::Services::Store::PurchaseOperation::DoWork
Windows::Services::Store::PurchaseOperation::GetResults
Windows::Services::Store::PurchaseOperation::RuntimeClassInitialize
Windows::Services::Store::ReportConsumableOperation::DoWork
Windows::Services::Store::ReportConsumableOperation::GetResults
Windows::Services::Store::ReportConsumableOperation::RuntimeClassInitialize
Windows::Services::Store::RequestPurchaseOperation::DoWork
Windows::Services::Store::RequestPurchaseOperation::GetResults
Windows::Services::Store::RequestPurchaseOperation::RuntimeClassInitialize
Windows::Services::Store::RequestStoreRateAndReviewOperation::DoWork
Windows::Services::Store::RequestStoreRateAndReviewOperation::GetResults
Windows::Services::Store::RequestStoreRateAndReviewOperation::RuntimeClassInitialize
Windows::Services::Store::StoreAcquireLicenseResult::get_ExtendedError
Windows::Services::Store::StoreAcquireLicenseResult::get_StorePackageLicense
Windows::Services::Store::StoreAppLicense::get_AddOnLicenses
Windows::Services::Store::StoreAppLicense::get_ExpirationDate
Windows::Services::Store::StoreAppLicense::get_IsActive
Windows::Services::Store::StoreAppLicense::get_IsDiscLicense
Windows::Services::Store::StoreAppLicense::get_IsTrial
Windows::Services::Store::StoreAppLicense::get_IsTrialOwnedByThisUser
Windows::Services::Store::StoreAppLicense::get_SkuStoreId
Windows::Services::Store::StoreAppLicense::get_TrialTimeRemaining
Windows::Services::Store::StoreAppLicense::get_TrialUniqueId
Windows::Services::Store::StoreAppLicense::RuntimeClassInitialize
Windows::Services::Store::StoreAvailability::get_AvailabilityId
Windows::Services::Store::StoreAvailability::get_EndDate
Windows::Services::Store::StoreAvailability::get_Price
Windows::Services::Store::StoreAvailability::get_StoreId
Windows::Services::Store::StoreAvailability::RequestPurchaseAsync
Windows::Services::Store::StoreAvailability::RequestPurchaseWithPurchasePropertiesAsync
Windows::Services::Store::StoreAvailability::RuntimeClassInitialize
Windows::Services::Store::StoreAvailability::set_ProductIdSkuId
Windows::Services::Store::StoreCanAcquireLicenseResult::get_ExtendedError
Windows::Services::Store::StoreCanAcquireLicenseResult::get_LicensableSku
Windows::Services::Store::StoreCanAcquireLicenseResult::get_Status
Windows::Services::Store::StoreCanAcquireLicenseResult::RuntimeClassInitialize
Windows::Services::Store::StoreCollectionData::get_AcquiredDate
Windows::Services::Store::StoreCollectionData::get_CampaignId
Windows::Services::Store::StoreCollectionData::get_DeveloperOfferId
Windows::Services::Store::StoreCollectionData::get_EndDate
Windows::Services::Store::StoreCollectionData::get_IsTrial
Windows::Services::Store::StoreCollectionData::get_ProductId
Windows::Services::Store::StoreCollectionData::get_SkuId
Windows::Services::Store::StoreCollectionData::get_StartDate
Windows::Services::Store::StoreCollectionData::get_TrialTimeRemaining
Windows::Services::Store::StoreCollectionData::RuntimeClassInitialize
Windows::Services::Store::StoreConsumableResult::get_BalanceRemaining
Windows::Services::Store::StoreConsumableResult::get_ExtendedError
Windows::Services::Store::StoreConsumableResult::get_Status
Windows::Services::Store::StoreConsumableResult::get_TrackingId
Windows::Services::Store::StoreContext::_RequestDownloadAndInstallStorePackagesWithInstallOptionsAsync
Windows::Services::Store::StoreContext::AcquireStoreLicenseForOptionalPackageAsync
Windows::Services::Store::StoreContext::AcquireStoreLicenseForOptionalPackageAsync invoked. (CV:%hs)
Windows::Services::Store::StoreContext::add_OfflineLicensesChanged
Windows::Services::Store::StoreContext::add_OfflineLicensesChanged() invoked. (CV:%hs)
Windows::Services::Store::StoreContext::AssociateWithStoreContext
Windows::Services::Store::StoreContext::CanAcquireStoreLicenseAsync
Windows::Services::Store::StoreContext::CanAcquireStoreLicenseAsync(%s) invoked. (CV:%hs)
Windows::Services::Store::StoreContext::CanAcquireStoreLicenseForOptionalPackageAsync
Windows::Services::Store::StoreContext::CanAcquireStoreLicenseForOptionalPackageAsync invoked. (CV:%hs)
Windows::Services::Store::StoreContext::CreateStoreContextServer
Windows::Services::Store::StoreContext::DownloadAndInstallStorePackagesAsync
Windows::Services::Store::StoreContext::DownloadAndInstallStorePackagesAsync([%s]) invoked. (CV:%hs)
Windows::Services::Store::StoreContext::FindStoreProductForPackageAsync
Windows::Services::Store::StoreContext::FindStoreProductForPackageAsync(%s) invoked. (CV:%hs)
Windows::Services::Store::StoreContext::get_CanSilentlyDownloadStorePackageUpdates
Windows::Services::Store::StoreContext::get_CanSilentlyDownloadStorePackageUpdates() invoked. (CV:%hs)
Windows::Services::Store::StoreContext::get_User
Windows::Services::Store::StoreContext::get_User() invoked. (CV:%hs)
Windows::Services::Store::StoreContext::GetAppAndOptionalStorePackageUpdatesAsync
Windows::Services::Store::StoreContext::GetAppAndOptionalStorePackageUpdatesAsync invoked. (CV:%hs)
Windows::Services::Store::StoreContext::GetAppLicenseAsync
Windows::Services::Store::StoreContext::GetAppLicenseAsync() invoked. (CV:%hs)
Windows::Services::Store::StoreContext::GetAppWindowHandle
Windows::Services::Store::StoreContext::GetAssociatedStoreProductsAsync
Windows::Services::Store::StoreContext::GetAssociatedStoreProductsAsync([%s]) invoked. (CV:%hs)
Windows::Services::Store::StoreContext::GetAssociatedStoreProductsWithPagingAsync
Windows::Services::Store::StoreContext::GetAssociatedStoreProductsWithPagingAsync([%s], %u) invoked. (CV:%hs)
Windows::Services::Store::StoreContext::GetAssociatedStoreQueueItemsAsync
Windows::Services::Store::StoreContext::GetAssociatedStoreQueueItemsAsync invoked. (CV:%hs)
Windows::Services::Store::StoreContext::GetConsumableBalanceRemainingAsync
Windows::Services::Store::StoreContext::GetConsumableBalanceRemainingAsync(%s) invoked. (CV:%hs)
Windows::Services::Store::StoreContext::GetCustomerCollectionsIdAsync
Windows::Services::Store::StoreContext::GetCustomerCollectionsIdAsync(%s, %s) invoked. (CV:%hs)
Windows::Services::Store::StoreContext::GetCustomerPurchaseIdAsync
Windows::Services::Store::StoreContext::GetCustomerPurchaseIdAsync(%s, %s) invoked. (CV:%hs)
Windows::Services::Store::StoreContext::GetIsAnySkuInstalledAsync
Windows::Services::Store::StoreContext::GetIsAnySkuInstalledAsync(%s) invoked. (CV:%hs)
Windows::Services::Store::StoreContext::GetPackageFamilyNameFromPackage
Windows::Services::Store::StoreContext::GetStoreContextServer
Windows::Services::Store::StoreContext::GetStoreProductForCurrentAppAsync
Windows::Services::Store::StoreContext::GetStoreProductForCurrentAppAsync() invoked. (CV:%hs)
Windows::Services::Store::StoreContext::GetStoreProductsAsync
Windows::Services::Store::StoreContext::GetStoreProductsAsync([%s, %s]) invoked. (CV:%hs)
Windows::Services::Store::StoreContext::GetStoreProductsWithOptionsAsync
Windows::Services::Store::StoreContext::GetStoreProductsWithOptionsAsync([%s, %s, %s]) invoked. (CV:%hs)
Windows::Services::Store::StoreContext::GetStoreQueueItemsAsync
Windows::Services::Store::StoreContext::GetStoreQueueItemsAsync([%s]) invoked. (CV:%hs)
Windows::Services::Store::StoreContext::GetUserCollectionAsync
Windows::Services::Store::StoreContext::GetUserCollectionAsync([%s]) invoked. (CV:%hs)
Windows::Services::Store::StoreContext::GetUserCollectionWithPagingAsync
Windows::Services::Store::StoreContext::GetUserCollectionWithPagingAsync([%s], %u) invoked. (CV:%hs)
Windows::Services::Store::StoreContext::remove_OfflineLicensesChanged
Windows::Services::Store::StoreContext::remove_OfflineLicensesChanged(%llu) invoked. (CV:%hs)
Windows::Services::Store::StoreContext::ReportConsumableFulfillmentAsync
Windows::Services::Store::StoreContext::ReportConsumableFulfillmentAsync(%s, %u, %s) invoked. (CV:%hs)
Windows::Services::Store::StoreContext::RequestDownloadAndInstallStorePackagesAsync
Windows::Services::Store::StoreContext::RequestDownloadAndInstallStorePackagesAsync([%s]) invoked. (CV:%hs)
Windows::Services::Store::StoreContext::RequestDownloadAndInstallStorePackagesWithInstallOptionsAsync
Windows::Services::Store::StoreContext::RequestDownloadAndInstallStorePackagesWithInstallOptionsAsync([%s, %s]) invoked. (CV:%hs)
Windows::Services::Store::StoreContext::RequestDownloadAndInstallStorePackageUpdatesAsync
Windows::Services::Store::StoreContext::RequestDownloadAndInstallStorePackageUpdatesAsync invoked. (CV:%hs)
Windows::Services::Store::StoreContext::RequestDownloadStorePackageUpdatesAsync
Windows::Services::Store::StoreContext::RequestDownloadStorePackageUpdatesAsync invoked. (CV:%hs)
Windows::Services::Store::StoreContext::RequestPurchaseAsync
Windows::Services::Store::StoreContext::RequestPurchaseAsync(%s) invoked. (CV:%hs)
Windows::Services::Store::StoreContext::RequestPurchaseWithPurchasePropertiesAsync
Windows::Services::Store::StoreContext::RequestPurchaseWithPurchasePropertiesAsync(%s) invoked. (CV:%hs)
Windows::Services::Store::StoreContext::RequestRateAndReviewAppAsync
Windows::Services::Store::StoreContext::RequestRateAndReviewAppAsync invoked. (CV:%hs)
Windows::Services::Store::StoreContext::RequestUninstallStorePackageAsync
Windows::Services::Store::StoreContext::RequestUninstallStorePackageAsync invoked by %s for %s. (CV:%hs)
Windows::Services::Store::StoreContext::RequestUninstallStorePackageByStoreIdAsync
Windows::Services::Store::StoreContext::RequestUninstallStorePackageByStoreIdAsync invoked by %s for %s. (CV:%hs)
Windows::Services::Store::StoreContext::RuntimeClassInitialize
Windows::Services::Store::StoreContext::SendStoreRequestAsync
Windows::Services::Store::StoreContext::SendStoreRequestAsync(%u, %s) invoked. (CV:%hs)
Windows::Services::Store::StoreContext::SetInstallOrderForAssociatedStoreQueueItemsAsync
Windows::Services::Store::StoreContext::SetInstallOrderForAssociatedStoreQueueItemsAsync invoked. (CV:%hs)
Windows::Services::Store::StoreContext::TrySilentDownloadAndInstallStorePackageUpdatesAsync
Windows::Services::Store::StoreContext::TrySilentDownloadAndInstallStorePackageUpdatesAsync invoked. (CV:%hs)
Windows::Services::Store::StoreContext::TrySilentDownloadStorePackageUpdatesAsync
Windows::Services::Store::StoreContext::TrySilentDownloadStorePackageUpdatesAsync invoked. (CV:%hs)
Windows::Services::Store::StoreContext::UninstallStorePackageAsync
Windows::Services::Store::StoreContext::UninstallStorePackageAsync invoked by %s for %s. (CV:%hs)
Windows::Services::Store::StoreContext::UninstallStorePackageAsyncHelper
Windows::Services::Store::StoreContext::UninstallStorePackageByStoreIdAsync
Windows::Services::Store::StoreContext::UninstallStorePackageByStoreIdAsync invoked by %s for %s. (CV:%hs)
Windows::Services::Store::StoreContextFactory::GetDefault
Windows::Services::Store::StoreContextFactory::GetDefault() invoked. (CV:%hs)
Windows::Services::Store::StoreContextFactory::GetForUser
Windows::Services::Store::StoreContextFactory::GetForUser() invoked. (CV:%hs)
Windows::Services::Store::StoreContextLicenseChangedCallback::RuntimeClassInitialize
Windows::Services::Store::StoreImage::get_Caption
Windows::Services::Store::StoreImage::get_Height
Windows::Services::Store::StoreImage::get_ImagePurposeTag
Windows::Services::Store::StoreImage::get_Uri
Windows::Services::Store::StoreImage::get_Width
Windows::Services::Store::StoreImage::RuntimeClassInitialize
Windows::Services::Store::StoreLicense::get_ExpirationDate
Windows::Services::Store::StoreLicense::get_InAppOfferToken
Windows::Services::Store::StoreLicense::get_IsActive
Windows::Services::Store::StoreLicense::get_SkuStoreId
Windows::Services::Store::StoreLicense::RuntimeClassInitialize
Windows::Services::Store::StorePackageInstallOptions::get_AllowForcedAppRestart
Windows::Services::Store::StorePackageLicense::~StorePackageLicense
Windows::Services::Store::StorePackageLicense::add_LicenseLost
Windows::Services::Store::StorePackageLicense::Close
Windows::Services::Store::StorePackageLicense::get_IsValid
Windows::Services::Store::StorePackageLicense::get_Package
Windows::Services::Store::StorePackageLicense::ReleaseLicense
Windows::Services::Store::StorePackageLicense::remove_LicenseLost
Windows::Services::Store::StorePackageLicense::RuntimeClassInitialize
Windows::Services::Store::StorePackageLicenseLostCallback::RuntimeClassInitialize
Windows::Services::Store::StorePackageUpdate::get_Mandatory
Windows::Services::Store::StorePackageUpdate::get_Package
Windows::Services::Store::StorePackageUpdate::RuntimeClassInitialize
Windows::Services::Store::StorePackageUpdateResult::get_OverallState
Windows::Services::Store::StorePackageUpdateResult::get_StorePackageUpdateStatuses
Windows::Services::Store::StorePackageUpdateResult::get_StoreQueueItems
Windows::Services::Store::StorePackageUpdateResult::RuntimeClassInitialize
Windows::Services::Store::StorePrice::get_CurrencyCode
Windows::Services::Store::StorePrice::get_FormattedBasePrice
Windows::Services::Store::StorePrice::get_FormattedPrice
Windows::Services::Store::StorePrice::get_FormattedRecurrencePrice
Windows::Services::Store::StorePrice::get_IsOnSale
Windows::Services::Store::StorePrice::get_SaleEndDate
Windows::Services::Store::StorePrice::RuntimeClassInitialize
Windows::Services::Store::StoreProduct::_SortSkus
Windows::Services::Store::StoreProduct::get_Description
Windows::Services::Store::StoreProduct::get_HasDigitalDownload
Windows::Services::Store::StoreProduct::get_Images
Windows::Services::Store::StoreProduct::get_InAppOfferToken
Windows::Services::Store::StoreProduct::get_IsInUserCollection
Windows::Services::Store::StoreProduct::get_Keywords
Windows::Services::Store::StoreProduct::get_Language
Windows::Services::Store::StoreProduct::get_LinkUri
Windows::Services::Store::StoreProduct::get_PackageFamilyName
Windows::Services::Store::StoreProduct::get_Price
Windows::Services::Store::StoreProduct::get_ProductKind
Windows::Services::Store::StoreProduct::get_Skus
Windows::Services::Store::StoreProduct::get_StoreId
Windows::Services::Store::StoreProduct::get_Title
Windows::Services::Store::StoreProduct::get_Videos
Windows::Services::Store::StoreProduct::GetIsAnySkuInstalledAsync
Windows::Services::Store::StoreProduct::RequestPurchaseAsync
Windows::Services::Store::StoreProduct::RequestPurchaseWithPurchasePropertiesAsync
Windows::Services::Store::StoreProduct::RuntimeClassInitialize
Windows::Services::Store::StoreProduct::SetStoreContext
Windows::Services::Store::StoreProductOptions::RuntimeClassInitialize
Windows::Services::Store::StoreProductPagedQueryResult::BuildMap
Windows::Services::Store::StoreProductPagedQueryResult::get_ExtendedError
Windows::Services::Store::StoreProductPagedQueryResult::get_HasMoreResults
Windows::Services::Store::StoreProductPagedQueryResult::get_Products
Windows::Services::Store::StoreProductPagedQueryResult::GetNextAsync
Windows::Services::Store::StoreProductPagedQueryResult::RuntimeClassInitialize
Windows::Services::Store::StoreProductQueryResult::get_ExtendedError
Windows::Services::Store::StoreProductQueryResult::get_Products
Windows::Services::Store::StoreProductQueryResult::RuntimeClassInitialize
Windows::Services::Store::StoreProductResult::get_ExtendedError
Windows::Services::Store::StoreProductResult::get_Product
Windows::Services::Store::StoreProductResult::RuntimeClassInitialize
Windows::Services::Store::StorePurchaseProperties::get_ExtendedJsonData
Windows::Services::Store::StorePurchaseProperties::get_Name
Windows::Services::Store::StorePurchaseProperties::put_ExtendedJsonData
Windows::Services::Store::StorePurchaseProperties::put_Name
Windows::Services::Store::StorePurchaseProperties::RuntimeClassInitialize
Windows::Services::Store::StorePurchasePropertiesFactory::ActivateInstance
Windows::Services::Store::StorePurchasePropertiesFactory::Create
Windows::Services::Store::StorePurchaseResult::get_ExtendedError
Windows::Services::Store::StorePurchaseResult::get_Status
Windows::Services::Store::StoreQueueItem::_OnAppInstallItemCompleted
Windows::Services::Store::StoreQueueItem::_OnAppInstallItemStatusChanged
Windows::Services::Store::StoreQueueItem::add_Completed
Windows::Services::Store::StoreQueueItem::add_StatusChanged
Windows::Services::Store::StoreQueueItem::CancelInstallAsync
Windows::Services::Store::StoreQueueItem::CancelInstallAsync::<lambda_f9089d14568daab6275428f8629fb4c7>::operator ()
Windows::Services::Store::StoreQueueItem::get_InstallKind
Windows::Services::Store::StoreQueueItem::get_IsDownloaded
Windows::Services::Store::StoreQueueItem::get_IsMandatory
Windows::Services::Store::StoreQueueItem::get_PackageFamilyName
Windows::Services::Store::StoreQueueItem::get_ProductId
Windows::Services::Store::StoreQueueItem::GetCurrentStatus
Windows::Services::Store::StoreQueueItem::PauseInstallAsync
Windows::Services::Store::StoreQueueItem::PauseInstallAsync::<lambda_7224a1540002655c1556aa4bdc197fe4>::operator ()
Windows::Services::Store::StoreQueueItem::remove_Completed
Windows::Services::Store::StoreQueueItem::remove_StatusChanged
Windows::Services::Store::StoreQueueItem::ResumeInstallAsync
Windows::Services::Store::StoreQueueItem::ResumeInstallAsync::<lambda_3f9aa3a4239f7e22e93f02d9104a803d>::operator ()
Windows::Services::Store::StoreQueueItem::RuntimeClassInitialize
Windows::Services::Store::StoreQueueItemCompletedEventArgs::get_Status
Windows::Services::Store::StoreQueueItemStatus::get_ExtendedError
Windows::Services::Store::StoreQueueItemStatus::get_PackageInstallExtendedState
Windows::Services::Store::StoreQueueItemStatus::get_PackageInstallState
Windows::Services::Store::StoreQueueItemStatus::get_UpdateStatus
Windows::Services::Store::StoreRateAndReviewResult::get_ExtendedError
Windows::Services::Store::StoreRateAndReviewResult::get_ExtendedJsonData
Windows::Services::Store::StoreRateAndReviewResult::get_Status
Windows::Services::Store::StoreRateAndReviewResult::get_WasUpdated
Windows::Services::Store::StoreRateAndReviewResult::RuntimeClassInitialize
Windows::Services::Store::StoreRequestHelperFactory::SendRequestAsync
Windows::Services::Store::StoreRequestOperation::DoWork
Windows::Services::Store::StoreRequestOperation::GetResults
Windows::Services::Store::StoreRequestOperation::RuntimeClassInitialize
Windows::Services::Store::StoreSendRequestResult::get_ExtendedError
Windows::Services::Store::StoreSendRequestResult::get_HttpStatusCode
Windows::Services::Store::StoreSendRequestResult::get_Response
Windows::Services::Store::StoreSendRequestResult::RuntimeClassInitialize
Windows::Services::Store::StoreSku::_SortAvailabilities
Windows::Services::Store::StoreSku::get_Availabilities
Windows::Services::Store::StoreSku::get_BundledSkus
Windows::Services::Store::StoreSku::get_CollectionData
Windows::Services::Store::StoreSku::get_CustomDeveloperData
Windows::Services::Store::StoreSku::get_Description
Windows::Services::Store::StoreSku::get_FulfillmentType
Windows::Services::Store::StoreSku::get_Images
Windows::Services::Store::StoreSku::get_IsInUserCollection
Windows::Services::Store::StoreSku::get_IsSubscription
Windows::Services::Store::StoreSku::get_IsTrial
Windows::Services::Store::StoreSku::get_Language
Windows::Services::Store::StoreSku::get_Price
Windows::Services::Store::StoreSku::get_SkuId
Windows::Services::Store::StoreSku::get_StoreId
Windows::Services::Store::StoreSku::get_SubscriptionInfo
Windows::Services::Store::StoreSku::get_Title
Windows::Services::Store::StoreSku::get_Videos
Windows::Services::Store::StoreSku::GetIsInstalledAsync
Windows::Services::Store::StoreSku::RequestPurchaseAsync
Windows::Services::Store::StoreSku::RequestPurchaseWithPurchasePropertiesAsync
Windows::Services::Store::StoreSku::RuntimeClassInitialize
Windows::Services::Store::StoreSku::set_ProductId
Windows::Services::Store::StoreSku::SetStoreContext
Windows::Services::Store::StoreSubscriptionInfo::_ConvertDuration
Windows::Services::Store::StoreSubscriptionInfo::get_BillingPeriod
Windows::Services::Store::StoreSubscriptionInfo::get_BillingPeriodUnit
Windows::Services::Store::StoreSubscriptionInfo::get_HasTrialPeriod
Windows::Services::Store::StoreSubscriptionInfo::get_TrialPeriod
Windows::Services::Store::StoreSubscriptionInfo::get_TrialPeriodUnit
Windows::Services::Store::StoreSubscriptionInfo::RuntimeClassInitialize
Windows::Services::Store::StoreUninstallStorePackageResult::get_ExtendedError
Windows::Services::Store::StoreUninstallStorePackageResult::get_Status
Windows::Services::Store::StoreVideo::get_Caption
Windows::Services::Store::StoreVideo::get_Height
Windows::Services::Store::StoreVideo::get_PreviewImage
Windows::Services::Store::StoreVideo::get_Uri
Windows::Services::Store::StoreVideo::get_VideoPurposeTag
Windows::Services::Store::StoreVideo::get_Width
Windows::Services::Store::StoreVideo::RuntimeClassInitialize
Windows::Services::Store::UninstallStorePackageOperation::DoWork
Windows::Services::Store::UninstallStorePackageOperation::GetResults
Windows::Services::Store::UninstallStorePackageOperation::RuntimeClassInitialize
Windows-ApplicationModel-Store-SDK
WindowsCompareStringOrdinal
WindowsConcatString
WindowsCreateString
WindowsCreateStringReference
WindowsDeleteString
WindowsDeleteStringBuffer
WindowsDuplicateString
WindowsGetStringLen
WindowsGetStringRawBuffer
WindowsIsStringEmpty
WindowsPreallocateStringBuffer
WindowsPromoteStringBuffer
WindowsStoreSDK
WindowsStringHasEmbeddedNull
WindowsSubstring
WindowsSubstringWithSpecifiedLength
WindowsTrimStringEnd
WindowsTrimStringStart
WindowsUpdate
windowTitle
WINHTTP.dll
WinHttpAddRequestHeaders
WinHttpAddRequestHeaders(%s) failed
WinHttpCloseHandle
WinHttpConnect
WinHttpConnect failed for %s:%d
WinHttpCrackUrl
WinHttpCrackUrl failed
WinHttpGetDefaultProxyConfiguration
WinHttpGetIEProxyConfigForCurrentUser
WinHttpGetProxyForUrl
WinHttpOpen
WinHttpOpen failed
WinHttpOpenRequest
WinHttpOpenRequest failed
WinHttpQueryHeaders
WinHttpQueryHeaders failed, status code = %i
WinHttpReadData
WinHttpReadData completion failed
WinHttpReadData failed
WinHttpReceiveResponse
WinHttpReceiveResponse failed
WinHttpSendRequest
WinHttpSetOption
WinHttpSetOption CONTEXT_VALUE failed
WinHttpSetOption failed
WinHttpSetOption WINHTTP_OPTION_REDIRECT_POLICY failed
WinHttpSetOption(WINHTTP_ENABLE_SSL_REVOCATION failed
WinHttpSetOption(WINHTTP_OPTION_AUTOLOGON_POLICY) failed
WinHttpSetStatusCallback
WinHttpSetStatusCallback failed
WinHttpSetTimeouts
WinHttpSetTimeouts failed
WinStore
winstore
WinStoreAuth::_SendTokenRequestAndGetTickets
WinStoreAuth::AuthenticationInternal::CaptureGoldenAccountTicket
WinStoreAuth::AuthenticationInternal::CaptureStorePrimaryAccountId
WinStoreAuth::AuthenticationInternal::CaptureStorePrimaryAccountTicket
WinStoreAuth::AuthenticationInternal::ConvertWebAccountIdFromAppToRealIdInternal
WinStoreAuth::AuthenticationInternal::ConvertWebAccountIdFromRealIdToAppInternal
WinStoreAuth::AuthenticationInternal::CreateAuthenticationManager
WinStoreAuth::AuthenticationInternal::CreateGoldenAccountTokenRequest
WinStoreAuth::AuthenticationInternal::CreateLegacyTicketRequest
WinStoreAuth::AuthenticationInternal::CreateTokenBroker
WinStoreAuth::AuthenticationInternal::CreateTokenBrokerInternal
WinStoreAuth::AuthenticationInternal::CreateTokenRequestHelper
WinStoreAuth::AuthenticationInternal::ExtractAccountId
WinStoreAuth::AuthenticationInternal::ExtractProviderType
WinStoreAuth::AuthenticationInternal::ExtractTicket
WinStoreAuth::AuthenticationInternal::ExtractTicketFromTokenResponse
WinStoreAuth::AuthenticationInternal::ExtractTicketsFromTokenResult
WinStoreAuth::AuthenticationInternal::FetchStoreAccountIdFromRegistry
WinStoreAuth::AuthenticationInternal::FetchXboxLiveAccountId
WinStoreAuth::AuthenticationInternal::FindAccount
WinStoreAuth::AuthenticationInternal::FindCachedStorePrimaryAccount
WinStoreAuth::AuthenticationInternal::GetAccountProvider
WinStoreAuth::AuthenticationInternal::GetAllAccountTickets
WinStoreAuth::AuthenticationInternal::GetAllTokenBrokerAccounts
WinStoreAuth::AuthenticationInternal::GetAllXTokens
WinStoreAuth::AuthenticationInternal::GetCurrentIUser
WinStoreAuth::AuthenticationInternal::GetDeviceTicketWithBroker
WinStoreAuth::AuthenticationInternal::GetStorePrimaryAccountId
WinStoreAuth::AuthenticationInternal::GetStorePrimaryAccountTicketForUri
WinStoreAuth::AuthenticationInternal::GetTicketForAccount
WinStoreAuth::AuthenticationInternal::GetXToken
WinStoreAuth::AuthenticationInternal::ManagePropertiesFromTokenResponse
WinStoreAuth::AuthenticationInternal::PrefixTicketForMDollar
WinStoreAuth::ConvertWebAccountIdFromAppToRealIdForUser
WinStoreAuth::ConvertWebAccountIdFromRealIdToAppForUser
WinStoreAuth::GetStorePrimaryAccountIdForUser
WinStoreAuth::SetProxyBlanket
WinstoreAuth_SendTokenRequestAndGetTickets_Failure
WinstoreAuth_SLSFailure
WinstoreAuth_UserAuthRequired
Wj)Sj
Wj[Sj
Wj`Sj
Wj{Sj
Wj9Sj
WjASj
WjDSj
WjESj
WjeSj
WjfSj
WjhSj
WjkSj
WjOSj
WjPSj
WjpSj
WjtSj
WjUSj
WjvSj
wjxin
WjxSj
WjZSj
WLID1.0=
wp8xappx
Wqc}qKj
wQWh(
WriteFile
WSCollector::CollectStoreLog
WsCreateError
WsCreateHeap
WsCreateReader
WSErrorUtils::ConvertInternalErrorCodeToExternal
WsFindAttribute
WsFreeError
WsFreeHeap
WsFreeReader
WsGetReaderPosition
WsMoveReader
WsReadBytes
WsReadChars
WsReadEndAttribute
WsReadStartAttribute
WsReadStartElement
WsReadToStartElement
WsReadXmlBufferFromBytes
WsSetInputToBuffer
www.microsoft.com
WWWWWW
x!9|$
x,SSh
X|<X]M
X|VN?
X~{TR
X0_0d0l0
xAj@j
XboxLiveAuthenticationDomain
XboxUserId
xcWWW
Xtoken
X-Windows-Store-Debugging-Id
X-Windows-Store-Debugging-Id:%s
X-WP-ANID
x-xbl-contract-version:2
y QSh
y QVh
y QVh(I
y QVh,8
y QVh\
y QVh`J
y QVh|
y QVh|/
y QVh0
y QVh0B
y QVh0F
y QVh4
y QVh8
y QVh8{
y QVh8A
y QVh8c
y QVhdS
y QVhh
y QVhH
y QVhh$
y QVhH.
y QVhH+
y QVhha
y QVhhI
y QVhhn
y QVhL
y QVhl
y QVhp
y QVhP
y QVhp
y QVhP
y QVhp(
y QVhp>
y QVhpE
y QVhT
y QVhX
y QVhxC
y QVhxl
y QVhXQ
y QVhXT
y QWh
y QWh`
y QWh|
y QWh<
y QWh4I
y QWhD
y QWhd
y QWhH
y QWhXQ
y!hlm
y"QSh
y"QSh(2
y"QSh,w
y"QSh`
y"QSh|
y"QSh4
y"QShHS
y"QShL3
y"QShx
y"QVh
y"QVh 
y"QVh$
y"QVh(
y"QVh@
y"QVh@7
y"QVh\
y"QVh`
y"QVh||
y"QVh<
y"QVh0
y"QVh0_
y"QVh8
y"QVhd
y"QVhd(
y"QVhH
y"QVhh
y"QVhH
y"QVhh
y"QVhH
y"QVhH)
y"QVhH.
y"QVhh_
y"QVhHk
y"QVhp
y"QVhp}
y"QVhpd
y"QVhpE
y"QVhX
y"QVhx
y"QVhX
y"QVhX4
y"QVhX6
y"QWh
y"QWh 
y"QWh$
y"QWh(=
y"QWh`
y"QWh`L
y"QWh|z
y"QWh<
y"QWh0G
y"QWhH
y"QWhH*
y"QWhh}
y"QWhhE
y"QWhhH
y"QWhL
y"QWhPd
y"QWhTP
y"QWhX
y"QWhXJ
y#QWh
y$QQS
y$QSh
y$QVh
y$QVh r
y$QVh@
y$QVh`i
y$QVh0Z
y$QVh8
y$QVhd
y$QVhp
y$QVhpW
y$QVhX
y$QWh
y$QWh$
y$QWh@{
y$QWh`
y$QWh|
y$Vh(P
y%QSh
y%QShH
y%QShtt
y%QVh
y%QVh(
y%QVh@
y%QVh4f
y%QVh8.
y%QVhh
y%QVhH$
y%QVhX
y%QWh
y%QWh(
y%QWh<b
y%QWh0
y%QWh8^
y%QWhd
y%QWhl
y%QWhT
y%QWhx
y&QWh8
y&Shpn
y(QVh
y(QWh
y(QWh`
y(QWh0
y)QPh,c
y)QWh
y)QWh`i
y*QSh
y*QSh8
y*QShH
y*QVh
y*QWh
y*QWh<
y*QWh8^
y*QWhdb
y*QWhL
y*QWhT
y*Wh4,
y,QVh
y,QVh@
y,QWh
y.QVh
y.QVhX<
y.QWh
y.QWh`
y.QWh8
y/QSh
y/QSh4
y/QShl
y/QShPe
y/QVh
y/QVh@
y/QVh8
y/QWh
y/QWh@
y/QWhd
y/QWhx
y/Sh0z
y/ShXt
y:QSh
y:QSh@
y:QVh
y:QVhX
Y;Fgsj
y;QShPO
y;QVh
y;QVh(#
y;QVhx
y;QWh
y;QWhh
y;QWhTh
y?hxx
y?QSh
y?QVhXa
y?QWh
y?QWhh`
y@QWh
y[QSh
y[QVh
y[QVh0
y[QWh
y[QWhx
y]QSh`0
y]QWh 
y^QWh
Y_^[]
Y__^[
y_QVh
y_QVhh
y_QVhP
y`QWh
y{QWh Y
Y|)7g;
y|QWh8
y}QWh
y+QSh
y+QVh
y+QVh0
y+QWh
y+QWh$
y+VhX
y<QSh
y<QVh(#
y<QWh
y<QWhhW
y=QSh
y=QVh 
y=QVhD~
y=QWh
y>QWh
y>QWh@
y>QWh8'
y0QSh
y0QShd
y0QShxR
y0QVh
y0QVh(
y0QVh8
y0QVhH
y0QVhX
y0QWh
y0QWh(g
y0QWh0A
y0QWh8.
y0QWhH
y0QWhP\
y0QWhp]
y0QWhpe
y1QSh
y1QSh0
y1QSh8m
y1QVh
y1QVhp
y1QWh
y1QWh _
y2QSh
y2QShpe
y2QVh
y2QVh`h
y2QVhL
y2QWh
y2QWh0(
y3QSh
y3QVh
y3QVhh
y3QVhT
y3QWh
y3QWh(C
y3QWhp
y4QQj
y4QSh
y4QSh<}
y4QVh
y4QWh
y4QWh g
y4QWh`
y5QSh
y5QShHQ
y5QVh
y5QVh0
y5QVhPV
y5QWh ?
y5QWh4
y5QWh8i
y5QWhh
y5QWhhN
y5QWhp
y5QWhpX
y6QSh
y6QSh|o
y6QVh
y6QVhx.
y6QWh
y6QWhPO
y7QSh
y7QVh
y7QWh
y7QWh`D
y8QSh
y8QShh
y8QVh
y8QVh4b
y8QWh
y8QWh 
y9QSh {
y9QSht*
y9QVh
y9QVh(
y9QWh
y9QWh|A
y9QWh0
y9QWh8
y9QWhxY
yaQSh
yAQSh
yAQSh8j
yAQShhr
yAQShxm
yAQWh
yaQWh
ybQVh
ybQVhP
yBQWh
ybQWhh
yBQWhH
ybQWhx
yBWh4,
yCQPh4
yCQSh
yCQVh(t
yCQWh
yCQWh@
yDQSh<
yDQWh
yDQWhh
yDQWhL
yEQVhP}
yEQWh
yEQWhP
yfQSh
yfQVh
yFQVh
yfQVh
yFQWh
yGQSh 
ygQVh
yGQVh 
yGQWh
yGQWh8^
yHQSh
yHQShD
yHQVh
yHQWh
yhQWh
yHQWh
yHQWh8^
yHQWhHv
yIQWh
yJQSh
yJQShH
yjQVh
yJQVh
yjQVh
yjQVhp
yjQWh
yJQWh
-yK$.
ykQSh
yKQSh\
yKQVh
ykQVh 
yKQVhX
yKQWh
ykQWh8
Ylp)d_
ylQSh
yLQSh
yLQSh`
yLQSh|
yLQShH
yLQWh
yLQWh8{
yMQSh
yMQSh({
ymQSh4
yMQVh
ymQWh
yMQWh
ymQWh(
yMQWh(
yMQWhHF
yNQSh
yNQWh`
yOQVh
yOQWh
YPh`\
yPh0g
YPh8"
YPhhs
YPhxr
yPQSh
yPQVh
yPQWh|A
yQQWh
y'QSh
y-QSh
y'QSh 
y'QSh(
y'QSh(n
y'QSh(o
y'QSh(z
y'QSh@&
y-QSh\{
y-QSh`
y'QSh0
y-QSh0
yQSh8"
y'QShd
y-QShd
y'QShh
y'QShH$
y'QShHa
y'QShHk
y'QShP
y'QShpa
y'QShT&
y'QShx~
y'QShxY
y'QVh
y-QVh
y'QVh 
y'QVh  
y'QVh(
y'QVh(;
y'QVh@
y'QVh\
y'QVh`
y-QVh`
y'QVh`1
y-QVh`5
y'QVh`i
y-QVh|A
y'QVh0
y'QVh0(
y'QVh09
y'QVh8
y'QVh8.
y'QVh8^
y'QVh8V
y'QVhh
y'QVhH
y'QVhh
y-QVhh
y'QVhHg
y'QVhL
y'QVhp
y'QVhP
y'QVhp2
y'QVhX
y'QVhx
y'QWh
y-QWh
y'QWh 
y'QWh ?
y'QWh T
y'QWh(
y'QWh,
y'QWh@
y-QWh@
y'QWh@&
y'QWh@g
y'QWh@h
y'QWh@s
y'QWh\
y'QWh`
y'QWh``
y'QWh8^
y'QWhHa
y'QWhLb
y'QWhp
y'QWhP)
y'QWhP\
y'QWhp]
y'QWhpa
y-QWhPe
y'QWhX
y'QWhx
y'QWhxb
y'QWhxi
y'QWhXZ
ySQWh
yTQVh
yTQWh
yTQWh\w
yUQSh0
yUQVhH
yuQWh
yUQWh
yVQSh
yvQWh
yVQWhhK
yVQWhhZ
ywQSh
yWQWhH
yxQWh
yXQWh
yxQWh
yyQWh
yYQWh
yzQVh
z.9Wv
Z9X,tV3
zChkHr(AsWeak(pStoreContext, &_wrStoreContext))
ZuIf9tY
