 !"""#$ &&&%%%%%%%
 Microsoft Corporation. All rights reserved.
 Operating System
 PWQQh
 SVWj
 Windows
!fExisted
!This program cannot be run in DOS mode.
#comment
#document
#text
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%I64u
%s\system32\%s
%wLtC
%wNtE
%wOtF
%wPtG
%w't%
&amp;
&apos;
&quot;
(*m_State.ParseState.pfnCompareSpecialString)(&m_State.ParseState, Extent, &ss, pResult, 0)
(Count == 0) || (Data != 0)
(Data != 0) || (Count == 0)
(DestinationMaximumLength == 0) || (DestinationBuffer != 0)
(DynamicBuffer == 0) || (DynamicBuffer->Length == 0)
(FixedSizeBuffer != 0) || (DynamicBuffer != 0)
(Flags & ((0x00000002) | (0x00000004))) != ((0x00000002) | (0x00000004))
(Length == 0) || (Buffer != 0)
(LocationHeader->ulFlags & ~((0x00000001) | (0x00000002) | (0x00000003))) == 0
(NamespaceURI == 0) || RtlIsLUtf8StringValid(NamespaceURI)
(Params->InputType == Windows::Microdom::Rtl::CreateMicrodomSource::Binary) || (Params->InputType == Windows::Microdom::Rtl::CreateMicrodomSource::Xml)
(Params->SourceType == Windows::Microdom::Rtl::CreateMicrodomSource::Stream) || (Params->SourceType == Windows::Microdom::Rtl::CreateMicrodomSource::BlobProvider) || (Params->SourceType == Windows::Microdom::Rtl::CreateMicrodomSource::Blob)
(Properties.Elements != 0) && (Results.Elements != 0)
(SourceCount == 0) || (Sources != 0)
(ulElementType == (0x2)) || (ulElementType == (0x3)) || (ulElementType == (0x5)) || (ulElementType == (0x1)) || (ulElementType == (0x6)) || (ulElementType == (0x7)) || (ulElementType == (0x4))
***   Source File: %s, line %ld
*** Assertion failed: %s
*ppvAlloc = RtlAllocateHeap((((PPEB)__readfsdword(((LONG)(LONG_PTR)&(((TEB *)0)->ProcessEnvironmentBlock))))->ProcessHeap), 0, cb)
.?AVbad_alloc@std@@
.?AVexception@@
.00cfg
.CRT$XCA
.CRT$XCZ
.CRT$XIA
.CRT$XIAA
.CRT$XIZ
.data
.data$r$brc
.edata
.gfids
.idata
.idata$2
.idata$3
.idata$4
.idata$5
.idata$6
.rdata
.rdata$brc
.rdata$sxdata
.rdata$zzzdbg
.rsrc$01
.rsrc$02
.text
.text$mn
.text$x
.w.t,
.xdata$x
:$:0:;:X:
:(:/:e:p:~:
::BUCL::Rtl::Add<SIZE_T>( *pcElements, 10, NewCapacity)
::BUCL::Rtl::Add<SIZE_T>( cElements, 10, NewCapacity)
::RtlIsLBlobValid(Blob)
::RtlIsLBlobValid(Data)
::RtlIsLBlobValid(Destination)
::RtlIsLBlobValid(Source)
::RtlIsLUnicodeStringValid(Source)
::RtlIsLUtf8StringValid(&Sources[i])
::RtlIsLUtf8StringValid(Candidates[i])
::RtlIsLUtf8StringValid(Destination)
::RtlIsLUtf8StringValid(Source)
::RtlIsLUtf8StringValid(String)
::RtlIsLUtf8StringValid(StringIn)
::RtlXmlExtentToUtf8String( 0, &m_State.ParseState.RawTokenState, &Src, TempString.GetMutablePointer(), &cRequired)
:0:=:J:
:0;7;@;G;q;{;
:1:8:V:c:p:w:
:7;Q;];h;
:8:X:y:
:9;T;`;k;
:B;M;];
:E;R;b;
:H;O;
:MdLct
:MdSpt
:P:W:i:{:
:Q;g;
;!;A;i;
;.>5>C>
;@<i<v<
;<;l;
;5=@=N=
?&?+?0?6?@?J?Z?c?p?v?
?:?E?S?l?
???Q?f?x?
??0exception@@QAE@ABV0@@Z
??0exception@@QAE@XZ
??1exception@@UAE@XZ
??1type_info@@UAE@XZ
??3@YAXPAX@Z
?-?Y?t?
?+?8?
?0?H?T?
?MdDlt
?terminate@@YAXXZ
?w$tQ
?w<t6
?what@exception@@UBEPBDXZ
@.reloc
@.rsrc
\\.\PhysicalDrive%lu
\\?\GLOBALROOT\device\harddisk%u\partition%u
_^[+P
_^[Y]
__CxxFrameHandler3
__rv.NewCursorValue != 0
__rv.UcsCharacter != (0xffffffff)
_amsg_exit
_atoi64
_callnewh
_CxxThrowException
_except_handler4_common
_initterm
_purecall
_vsnprintf
_vsnwprintf
_wcsicmp
_XcptFilter
`.data
`anonymous-namespace'::CStringBuilder::DecodeAndWrite
`anonymous-namespace'::CStringBuilder::DecodeUtf16LEAndWrite
`anonymous-namespace'::CStringBuilder::DecodeUtf8AndWrite
`anonymous-namespace'::CStringBuilder::Write
`anonymous-namespace'::CUtf8StringBuilder::CreateInterface
{%08lx-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x}
<![CDATA[
<!<&<-<2<7<><C<H<f<k<p<w<|<
<!</<J<X<a<
<#<-<3<@<
<#<l<
<$=@=^=s=
<&<^<
<.=7=^=g=|=
<?xml version='1.0' encoding='utf-16'?>
<?xml version='1.0' encoding='utf-8'?>
<+<6<T>
<4<A<O<y<
<5<U<}<
<A<K<Y<
<D<M<o<.=9=G=
=*=7=
=,=@=R=b=r=x=
=:=D=a=g=">6>I>
=0=C=J=Y=`=o=
=4=D=V=s=
=4=D=X=
=4>R>z>
=B=M=[=
=C>P>`>
=L>{>
>"?U?c?
>$?/?=?W?u?
>%>.>3>9>C>M>]>m>s>~>
>.>^?h?|?
>@>L>W>r>
>0>F>Z>n>
>4>B>a>h>{>
>8>j>o>
>g>s>~>
>MdDtt
>MdSpt
>p>{>
0 0$0(0,0004080<0@0D0H0L0P0T0X0\0`0d0h0l0p0t0x0|0
0!0'0
0&1A1P1w1
0*0@0M0Z0
0/0O0
03080c0h0
040904B0
080w0'1h1
0A0W0
0B0R0k0
0L1[1
1 1$1(1,1014181<1@1D1H1L1P1T1X1\1`1d1h1l1p1t1x1|1
1$2w2&3n3
1%131M1k1
1*1?1N1V1_1e1
1/1:1H1
1=1i1
10.0.19041.1
10.0.19041.1 (WinBuild.160101.0800)
10151`1e1
111>1E1R1Y1
1'2,2W2\2
121F1i1
1A2Q2a2j2s2}2
1C2N2\2r2
1E1L1`1k1y1
1I1n1{1
2 20282@2P2X2`2p2x2
2 2A2J2~2
2!202B2g2{2
2)2x2
2,2F2
2:2F2Q2
202J2g2
213Y5h5o5}5
2'3J3b3
243D3T3d3k3
252I2m2
263C3P3o3
2z2~2
3"3@3A4K4U4_4i4
3$303<3H3T3`3l3x3
3(3T3a3l3r3
3(414
3*313z3Z4p4{4U5`5n5
344?4M4
363A3O3a3
374C4
393e3L6{6
393O3r3
3L7P7T7X7\7`7d7h7l7p7t7x7|7
4 4,484D4P4\4h4t4
4#4]4w4
4#494T4
4&5A5K5n5
4(5O5
4,444=4
4,4T4
4?4y4
405;5I5
414@4G4Y4`4r4y4
485]5
4h4t4
4s5~5
5$505<5H5T5`5l5x5
5%6J6R6b6
5.6?6P6
5/5H5
5/5I5
5;5N5
5\5i5v5
5-5R5w5
595G5N5q5x5
595R5
5n5r5v5z5~5
5S5]5q5x5
6 6,686D6P6\6h6t6
6 6,6L6T6\6h6
6"7-7
6#6*6z6
6&6A6S6\6n6
6(7 8
6/6c6p6}6
6]7h7v7
6`6z6
62797G7
6B6x6
6G6N6\6
6O6V6j6u6
6Y6a6
7 7(747<7D7L7P7X7`7l7t7|7
7!7%7)7-7175797=7A7E7
7$7J7Z7a7
7&7J7~7
738:8H8
7'7;7I7a7o7v7
778t8
787@7H7P7\7|7
7E7L7S7Z7a7
7F7O7o7u7~7
7W7`7i7
8!8%8)8-8185898=8l8w8
8#9.9<9t9
8#9A9^9|9
8$8(80848<8@8H8L8T8X8t8x8
8$8+878
8$9:9G9T9
8(848@8L8X8d8p8|8
8(8g8
8*8j809V9
8:8R8g8|8
808?8^8e8j8t8
828@8
8'8,818X8h8m8
9!9)90969<9j9
9"9A9T9p9
9*:n:y:
9[9q;
9<9\9|9
97u"3
9-9#:.:<:
9A0vq
9MdHdt
9N:Y:g:
9S0vmR
9U9s9
9X`v^j
9Y:f:
A,;F8u
A4;F<t6
api-ms-win-core-com-l1-1-0.dll
api-ms-win-core-errorhandling-l1-1-0.dll
api-ms-win-core-file-l1-1-0.dll
api-ms-win-core-file-l1-2-0.dll
api-ms-win-core-handle-l1-1-0.dll
api-ms-win-core-heap-l1-1-0.dll
api-ms-win-core-io-l1-1-0.dll
api-ms-win-core-processthreads-l1-1-0.dll
api-ms-win-core-profile-l1-1-0.dll
api-ms-win-core-registry-l1-1-0.dll
api-ms-win-core-string-l1-1-0.dll
api-ms-win-core-synch-l1-2-0.dll
api-ms-win-core-sysinfo-l1-1-0.dll
ATTLIST
bad allocation
Blob->Buffer = (PUCHAR)((*RtlAllocateStringRoutine)(Bytes))
BootKey
BUCL::Rtl::Add(cbReturnSize, cbThisSize, cbReturnSize)
BUCL::Rtl::Add(pCachedInfo->m_ulChildCount, pCachedInfo->m_ulAttributeCount, cNecessary)
BUCL::Rtl::Add<SIZE_T>( cbNecessary, Iter.Key.Length, sizeof(UCHAR), cbNecessary)
BUCL::Rtl::Add<SIZE_T>( sizeof(MICRODOM_HEADER), cbStringPoolSize, cbDomLayoutSize, cbPositionDataSize, cbDoctypeDataSize, cbRequiredSize)
BUCL::Rtl::Add<SIZE_T>(DataLength, OldLength, TempSize)
BUCL::Rtl::AddInPlaceWithOverflowCheck(&cbRequired, (*EncodingSizer)(ucsch))
BUCL::Rtl::AddInPlaceWithOverflowCheck(&MaximumLength, Sources[i].Length)
BUCL::Rtl::ConvertInteger(pObject->m_cChildren, pDocument->usChildNodes)
BUCL::Rtl::Increment(m_NextStringId)
BUCL::Rtl::Multiply(WorkingBufferSize, MultiplicativeGrowthFactor, WorkingBufferSize)
BUCL::Rtl::QuickSort(Pairs, CompareStringSlot)
C$txWWW
C$WWW
C;X`s
C<+C(
cch <= (((((SIZE_T)~((SIZE_T)0)) - (((SIZE_T)~((SIZE_T)0)) % sizeof(WCHAR))) / sizeof(WCHAR)) - 1)
CDATA
Cf9Y*
CloseHandle
CloserElement = this->AllocateStreamObject()
CMicrodom
CMicrodom_Blob
CMicrodomBuilder::AddString
CMicrodomBuilder::CElementNameToAttributeListTable::Find
CMicrodomBuilder::CElementNameToAttributeListTable::MaybeInsert
CMicrodomBuilder::CFourStringIdTable<struct _MICRODOM_XML_ATTDEF const *>::Initialize
CMicrodomBuilder::CFourStringIdTable<unsigned short>::Initialize
CMicrodomBuilder::CNamespaceNameExistenceCheck::AddAndCheckExistence
CMicrodomBuilder::CNamespaceNamePrefixToAttDef::Find
CMicrodomBuilder::CNamespaceNamePrefixToAttDef::Insert
CMicrodomBuilder::ConstructAndWriteMicrodom
CMicrodomBuilder::ConsumeAttdef
CMicrodomBuilder::ConsumeCData
CMicrodomBuilder::ConsumeComment
CMicrodomBuilder::ConsumeEntityDecl
CMicrodomBuilder::ConsumePCData
CMicrodomBuilder::ConsumeProcessingInstruction
CMicrodomBuilder::DetermineStringTableSize
CMicrodomBuilder::EndAttlist
CMicrodomBuilder::EndElement
CMicrodomBuilder::GetXmlDomSize
CMicrodomBuilder::Initialize
CMicrodomBuilder::InsertDefaultAttributes
CMicrodomBuilder::ProduceStringTable
CMicrodomBuilder::StartAttlist
CMicrodomBuilder::StartDocument
CMicrodomBuilder::StartElement
CMicrodomBuilder::WriteXmlDom
CMicrodomXmlWalker::XmlError
CompanyName
Context->EncodingFunction == 0
Context->MultiEncodingFunction == 0
CoTaskMemFree
CP9C<t
CreateFileW
CRtlGrowingList<struct _XMLDOC_ATTRIBUTE,50,6>::Initialize
CRtlSmartUcsEncoderTraitsBase<class CRtlSmartUcsEncoderTraits<struct _LUNICODE_STRING> >::Encode
CRtlSmartUcsEncoderTraitsBase<class CRtlSmartUcsEncoderTraits<struct _LUTF8_STRING> >::Encode
CustomImageAvailable
CustomImageLocation
CXmlCursor::CompareExtents
CXmlCursor::CompareStrings
CXmlCursor::DecodeExtent
CXmlCursor::Next
CXmlCursor::XmlAlloc
CXmlLogicalState::{dtor}::<lambda_0fd40d3b956627884e315ff69db4f18c>::operator ()
CXmlLogicalState::Initialize
CXmlNamespaceManager::Initialize
D$ SVW
D$$<.
D$$X.
D$(<$
D$(j@[
D$(PQ
D$,8h
D$,H/
D$,X.
D$<CPh
D$0SV
D$0t$
D$4PQ
D$PPQ
D$pSVW
DbgPrintEx
Decoder != 0
DefaultAttribute.Allocate()
DestinationMaximumLength >= SourceLength
DeviceIoControl
DOCTYPE
DownlevelWinreLocation
ELEMENT
Encoder != 0
encoding
EncodingSizer != 0
ENTITIES
ENTITY
Entity.Length != 0
F0C;X
f98t%P
f99t9f9
f9FHu
f9XBt
FBf;E
fFound
FH;A8
FileDescription
FileVersion
FindFirstVolumeW
FindNextVolumeW
FindVolumeClose
FIXED
FlushFileBuffers
GetCurrentProcess
GetCurrentProcessId
GetCurrentThreadId
GetDiskFreeSpaceExW
GetDriveTypeW
GetFileAttributesExW
GetFileSize
GetLastError
GetProcessHeap
GetSystemDirectoryW
GetSystemTimeAsFileTime
GetTickCount
GetVolumeNameForVolumeMountPointW
HeapAlloc
HeapFree
http://www.w3.org/2000/09/xmldsig#
http://www.w3.org/2000/xmlns/
http://www.w3.org/XML/1998/namespace
IDREF
IDREFS
ImageLocation
IMPLIED
index
InstallState
InternalName
IsAutoRepairOn
IsServer
IsWimBoot
j < ValidProperties.Length
J0V;A
jWX^]
jWX_^
L$,_^[3
L$|_^[3
L$<_^[3
L$4_^[3
L$l_^[3
L$T_^[3
L0S0a0
LegalCopyright
Locals.Allocate()
LocationHeader != 0
LocationHeader->Signature == ('cLdM')
m.Reserved < m_NamedNodeMaps.Size()
m_AttdefListTable.FindOrInsertIfNotPresent( ulElementName, NewAttdefList, &pAttdefList)
m_AttdefListTable.Initialize()
m_CurrentStreamObject != 0
m_Entries.Allocate(PoolHeader->TotalCount)
m_MicrodomDataBlob.Length >= sizeof(MICRODOM_HEADER)
m_PropertyCache.Allocate(m_LayoutCache.TotalObjectCount())
m_pTargetObject->IsNamedNodeMapValid(NodeMap)
m_StoredTable.Find(Pair, ppAttDef)
m_StoredTable.Find(Pair, ppusAttrListNumber)
m_StoredTable.FindOrInsertIfNotPresent(p, (USHORT)0, 0, &fExisted)
m_StoredTable.FindOrInsertIfNotPresent(Pair, pAttDef)
m_StoredTable.FindOrInsertIfNotPresent(Pair, Value, 0, pfExisted)
m_StoredTable.Initialize()
malloc
memcmp
memcpy
memcpy_s
memset
MicrodomImplementation::CDomLayoutCache::AdvanceCachedPointer
MicrodomImplementation::CDomLayoutCache::DecodeElementCounts
MicrodomImplementation::CDomLayoutCache::FindObject
MicrodomImplementation::CDomLayoutCache::GetNodeChildren
MicrodomImplementation::CDomPositionCache::AttachToPositionList
MicrodomImplementation::CDomPositionCache::GetLocation
MicrodomImplementation::CMicrodom::CreateInterface
MicrodomImplementation::CMicrodom::DecodeXmlString
MicrodomImplementation::CMicrodom::FindObject
MicrodomImplementation::CMicrodom::GetDocumentNodeSet
MicrodomImplementation::CMicrodom::GetElementById
MicrodomImplementation::CMicrodom::GetElementNodeSet
MicrodomImplementation::CMicrodom::GetElementsByTagName
MicrodomImplementation::CMicrodom::GetElementsByTagNameCommon
MicrodomImplementation::CMicrodom::GetNamedNodeMapItem
MicrodomImplementation::CMicrodom::GetNamedNodeMapLength
MicrodomImplementation::CMicrodom::GetNodeMapNamedItem
MicrodomImplementation::CMicrodom::Initialize
MicrodomImplementation::CMicrodom::IRtlMicrodom_Cast
MicrodomImplementation::CMicrodom_IRtlMicrodomTearoff::CTempOutputStream::CreateInterface
MicrodomImplementation::CMicrodom_IRtlMicrodomTearoff::GetAttribute
MicrodomImplementation::CMicrodom_IRtlMicrodomTearoff::GetAttributeNode
MicrodomImplementation::CMicrodom_IRtlMicrodomTearoff::GetAttributeNS
MicrodomImplementation::CMicrodom_IRtlMicrodomTearoff::GetAttributeNSNode
MicrodomImplementation::CMicrodom_IRtlMicrodomTearoff::GetDocument
MicrodomImplementation::CMicrodom_IRtlMicrodomTearoff::GetDocumentElement
MicrodomImplementation::CMicrodom_IRtlMicrodomTearoff::GetDocumentNodeSet
MicrodomImplementation::CMicrodom_IRtlMicrodomTearoff::GetElementById
MicrodomImplementation::CMicrodom_IRtlMicrodomTearoff::GetElementNodeSet
MicrodomImplementation::CMicrodom_IRtlMicrodomTearoff::GetElementsByTagName
MicrodomImplementation::CMicrodom_IRtlMicrodomTearoff::GetElementsByTagNameNS
MicrodomImplementation::CMicrodom_IRtlMicrodomTearoff::GetItem
MicrodomImplementation::CMicrodom_IRtlMicrodomTearoff::GetMicrodomBinaryRepresentation
MicrodomImplementation::CMicrodom_IRtlMicrodomTearoff::GetNamedItem
MicrodomImplementation::CMicrodom_IRtlMicrodomTearoff::GetNamedItemNs
MicrodomImplementation::CMicrodom_IRtlMicrodomTearoff::GetPropertiesSetup
MicrodomImplementation::CMicrodom_IRtlMicrodomTearoff::GetXml
MicrodomImplementation::CMicrodom_IRtlMicrodomTearoff::HasAttribute
MicrodomImplementation::CMicrodom_IRtlMicrodomTearoff::HasAttributeNs
MicrodomImplementation::CMicrodom_IRtlMicrodomTearoff::HasAttributes
MicrodomImplementation::CMicrodom_IRtlMicrodomTearoff::HasChildNodes
MicrodomImplementation::CMicrodom_IRtlMicrodomTearoff::Length
MicrodomImplementation::CreateBinaryMicrodomFromXml
MicrodomImplementation::CStringpoolCache::AttachToStringPool
MicrodomImplementation::CStringpoolCache::FindString
MicrodomImplementation::DecodeXmlCharacterToUcsChar
MicrodomWriterImplementation::CMicrodomWriter::CreateInterface
MicrodomWriterImplementation::CMicrodomWriter_IRtlMicrodomXmlWriter::BeginOpenElement
MicrodomWriterImplementation::CMicrodomWriter_IRtlMicrodomXmlWriter::CloseElement
MicrodomWriterImplementation::CMicrodomWriter_IRtlMicrodomXmlWriter::EmitAttribute
MicrodomWriterImplementation::CMicrodomWriter_IRtlMicrodomXmlWriter::EndOpenElement
MicrodomWriterImplementation::CMicrodomWriter_IRtlMicrodomXmlWriter::WriteCData
MicrodomWriterImplementation::CMicrodomWriter_IRtlMicrodomXmlWriter::WriteComment
MicrodomWriterImplementation::CMicrodomWriter_IRtlMicrodomXmlWriter::WriteEscapedString
MicrodomWriterImplementation::CMicrodomWriter_IRtlMicrodomXmlWriter::WriteProcessingInstruction
MicrodomWriterImplementation::CMicrodomWriter_IRtlMicrodomXmlWriter::WriteRawString
MicrodomWriterImplementation::CMicrodomWriter_IRtlMicrodomXmlWriter::WriteText
Microsoft
Microsoft Corporation
Microsoft Windows Recovery Info DLL
msvcrt.dll
MultiByteToWideChar
NarratorScheduled
NDATA
NewAttdef = this->AllocateStreamObject()
NewAttlist = this->AllocateStreamObject()
NewAttlistClose = this->AllocateStreamObject()
NewAttribute = this->AllocateStreamObject()
NewCData = this->AllocateStreamObject()
NewComment = this->AllocateStreamObject()
NewDocument = this->AllocateStreamObject()
NewElement = this->AllocateStreamObject()
NewEntityDecl = this->AllocateStreamObject()
NewInstance.Allocate()
NewPcData = this->AllocateStreamObject()
NewProcessingInstruction = this->AllocateStreamObject()
NewTearoff.Allocate()
NMTOKEN
NMTOKENS
No more than one flag set check failed: __e
NodeIndex < m_pTargetObject->m_LayoutCache.TotalObjectCount()
NodeMap != Windows::Microdom::Rtl::NamedNodeMap::InvalidValue()
NOTATION
Not-null check failed: Blob
Not-null check failed: ComparisonResult
Not-null check failed: Context
Not-null check failed: Data
Not-null check failed: DataBlock
Not-null check failed: Decoder
Not-null check failed: Destination
Not-null check failed: Document
Not-null check failed: DocumentNode
Not-null check failed: fHasAttribute
Not-null check failed: fHasAttributes
Not-null check failed: fHasChildNodes
Not-null check failed: Interface
Not-null check failed: Length
Not-null check failed: Matches
Not-null check failed: MatchIndex
Not-null check failed: NodeList
Not-null check failed: NodeSet
Not-null check failed: Out
Not-null check failed: Params
Not-null check failed: Params->Source.pBlob
Not-null check failed: Params->Source.pIStream
Not-null check failed: pDocument
Not-null check failed: pOutputStream
Not-null check failed: PseudoKeyOut
Not-null check failed: pStream
Not-null check failed: pStreamToWriteTo
Not-null check failed: pWriter
Not-null check failed: Result
Not-null check failed: Root
Not-null check failed: Source
Not-null check failed: String
Not-null check failed: String1
Not-null check failed: String2
Not-null check failed: StringBuilder
Not-null check failed: StringIn
Not-null check failed: Target
Not-null check failed: Value
Not-null check failed: Writer
Not-null check failed: WritingContext
Not-null check failed: WritingInterface
NtClose
ntdll.dll
NtYieldExecution
ObjectHeader->uElementType == ucObjectType
OemTool
offset
onecore\base\lstring\lblob.cpp
onecore\base\lstring\lblob_encoders.cpp
onecore\base\lstring\lunicode_string.cpp
onecore\base\lstring\lutf8_string.cpp
onecore\base\lstring\stringbuilder.cpp
onecore\base\lstring\ucsdecoders.cpp
onecore\base\xml\udom_builder.cpp
onecore\base\xml\udom_microdom.cpp
onecore\base\xml\udom_writer.cpp
onecore\base\xml\udom_xmlcursor.cpp
onecore\base\xml\udom_xmlwalker.h
onecore\base\xml\xml_writer.cpp
onecore\internal\base\inc\rtl_object_library.h
OperationParam
OperationPermanent
OriginalFilename
OsBuildVersion
OsInstallAvailable
OsInstallLocation
Pairs.Allocate(m_StringTable.GetEntryCount())
Params->fRequireUtf8
PBRCustomImageLocation
PBRImageLocation
pDoctype->ulSignature == ('tDdM')
pDomLayout->ulSignature == ('lDdM')
pHeader->ulOffsetToDomLayout < pHeader->ulTotalSize
pHeader->ulOffsetToPositionData < pHeader->ulTotalSize
pHeader->ulOffsetToStringPool < pHeader->ulTotalSize
pHeader->ulSignature == ('dHdM')
pHeader->ulTotalSize == m_MicrodomDataBlob.Length
Pj2jl
PoolHeader != 0
PoolHeader->Signature == ('pSdM')
PPPQhT
PQQhH
PQQhx
PQQQh
PQQQhl
ProductName
ProductVersion
Properties.Length == Results.Length
PRQhH
PRRQh
pStringPool->Signature == ('pSdM')
PUBLIC
PVQhH
PVVhd
PVVQh
PVVQh`
PVVQhl
PVVQhT
PVVQWh
PVVQWh@
PVVQWh4
PVVQWhL
PVVQWhp
PVVQWhX
PWWQh`
QPj WQQh
QPSVQQhP
QQQhx
QQSVW
QSVW3
QueryPerformanceCounter
ReadFile
ReAgent.xml
Recovery
RegCloseKey
RegOpenKeyExW
RegQueryValueExW
ReInfo.dll
reinfo.dll
ReInfo.pdb
REQUIRED
Root != Root.InvalidValue()
RtlAllocateHeap
RtlAllocateLBlob
RtlAppendLBlobToLBlob
RtlAppendLUtf8StringToLUtf8String
RtlAppendUcsCharacterToLUtf8String
RtlCompareEncodedLBlobs
RtlConcatenateLUtf8Strings
RtlCopyLBlob
RtlCreateDefaultMicrodomXmlWriter
RtlCreateMicrodom
RtlCreateUtf8UCSStringBuilder
RtlDuplicateLBlob
RtlDuplicateLUnicodeStringToLUtf8String
RtlDuplicateLUtf8String
RtlDuplicateLUtf8StringToLUnicodeString
RtlFreeHeap
RtlGetCharacterSetDecoder
RtlGUIDFromString
RtlHashEncodedLBlob
RtlInitializeGrowingList( this, sizeof(TStoredObject), m_ulElementsPerChunk, (PVOID)m_InternalBuffer, sizeof(m_InternalBuffer), Allocator )
RtlInitializeSmartLBlobWritingContext
RtlInitializeSmartLUnicodeStringWritingContext
RtlInitLUnicodeStringFromNullTerminatedString
RtlIsLBlobValid(BinaryData)
RtlIsLBlobValid(Source)
RtlIsLUtf8StringValid(ElementId)
RtlIsLUtf8StringValid(LocalName)
RtlIsLUtf8StringValid(LocalName) || (LocalName == 0)
RtlIsLUtf8StringValid(Name)
RtlIsLUtf8StringValid(NamespaceURI)
RtlIsLUtf8StringValid(NamespaceURI) || (NamespaceURI == 0)
RtlIsLUtf8StringValid(Source)
RtlIsLUtf8StringValid(TagName) || (TagName == 0)
RtlMatchLUtf8StringAgainstPointerList
RtlNsInitialize(this, Comparison, pvCompareContext, Alloc)
RtlNtStatusToDosError
RtlpSmartLBlobWritingContextResizePolicy
RtlRaiseStatus
RtlReAllocateHeap
RtlReallocateLBlob
RtlReallocateLUtf8String
RtlTranscodeLBlobs
RtlWriteDataIntoSmartLBlobWritingContext
RtlWriteDecodedUcsDataIntoSmartLBlobUcsWritingContext
RtlWriteMicrodomXml
RtlWriteUcsDataIntoSmartLBlobUcsWritingContext_NOCFG
RtlXmlDefaultCompareStrings(&m_State.ParseState, Left, Right, pResult)
RtlXmlDestroyNextLogicalThing(this)
RtlXmlDetermineStreamEncoding(&TokenizerState, &EncodingLength)
RtlXmlInitializeNextLogicalThing(this, &Init)
RtlXmlInitializeTokenization(&TokenizerState, &TokenizerInit)
RtlXmlNextLogicalThing( &m_State, &m_Namespaces, &m_CurrentThing, &m_AttributeList )
RVPh,d
s$VQh
s$WQh
ScheduledOperation
SetEndOfFile
SetLastError
SetUnhandledExceptionFilter
Sleep
SOFTWARE\Microsoft\RecoveryEnvironment
SOFTWARE\Microsoft\Windows\CurrentVersion\Reliability\WinRE
Source.Length >= 2
Source.Length >= 3
SourceWimPath
standalone
state
StringFileInfo
StringId < m_Entries.Length
SVWh\
SYSTEM
SYSTEM\CurrentControlSet\Control\MiniNT
system32\
t$(j@
t&f;E
t&WPWWQh`
t(hp!
t=Wj,j
t1VPQ
TargetOS
tD;|$$
Temp = (*RtlReallocateStringRoutine)(Bytes, Blob->Buffer)
Temp = (PUCHAR)((*RtlAllocateStringRoutine)(Bytes))
TempBuilderObject.Allocate()
TempDecoder != 0
TempElements.Allocate(NewCapacity)
TempNodes.Allocate(this->m_LayoutCache.TotalObjectCount())
TempNodes.Allocate(UpperIndex - TheElement.Reserved)
TempTempElements.Allocate(NewCapacity)
TerminateProcess
tH;\$$t
TheDocument.Reserved == m_pTargetObject->m_LayoutCache.DocumentId()
TheElement != TheElement.InvalidValue()
TheEndElement = this->AllocateStreamObject()
TheNode != TheNode.InvalidValue()
this->m_PositionList.Allocate(LocationHeader->ulItemCount)
tIWPd
TlsAlloc
TlsFree
TlsGetValue
TlsSetValue
TmpNodes.Resize(cNecessary)
Translation
trPWQ
u&WPWWQh`
u1VVj
UCS-2
UCS-4
ulIndex < m_Header->ulTotalNodeCount
ulLocation < m_PositionList.Length
ulValue < MultFactor
ulWhich < TheMap->Length
UnhandledExceptionFilter
UTF-16
UTF-8
Valid flags check failed: Flags
VarFileInfo
version
VQWt(Q
VS_VERSION_INFO
W93uH3
wcschr
whichDoc.Reserved == m_pTargetObject->m_LayoutCache.DocumentId()
whichElement != Windows::Microdom::Rtl::Element::InvalidValue()
WimHash
WimValidated
Windows::Rtl::CRtlObjectTypeDescription<class MicrodomImplementation::CMicrodom>::CreateInstance
Windows::Rtl::CRtlObjectTypeDescription<class MicrodomImplementation::CMicrodom>::CreateTearoff
Windows::Rtl::CRtlObjectTypeDescription<class MicrodomWriterImplementation::CMicrodomWriter>::CreateInstance
Windows::Rtl::CRtlObjectTypeDescription<class MicrodomWriterImplementation::CMicrodomWriter>::CreateTearoff
Windows::Rtl::CRtlObjectTypeDescription<class XmlWriterImplementation::CXmlWriter>::CreateInstance
Windows::Rtl::CRtlObjectTypeDescription<class XmlWriterImplementation::CXmlWriter>::CreateTearoff
WindowsRE
Winre.wim
WinreBCD
WinReGetConfig
WinreLocation
WinREStaged
WriteFile
Xf9ABt
xmlns
XmlWriterImplementation::CXmlWriter::CreateInterface
XmlWriterImplementation::CXmlWriter::IRtlXmlWriter_EndOpenElement
XmlWriterImplementation::CXmlWriter::WriteEscapedString
XmlWriterImplementation::RtlCreateDefaultXmlWriter
Y__^[
Z1^1b1f1j1n1r1v1z1
