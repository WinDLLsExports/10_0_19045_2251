     
           Extranet Url: "%ws".
           Intranet Url: "%ws",
           User: "%ws",
          CLC Extranet Licensing Url: "%ws".
          CLC Intranet Licensing Url: "%ws",
          CLC Issuer Id: "%ws",
          CLC Issuer name: "%ws",
          CLC user: "%ws",
          Content Valid until: "%hs".
          ContentId: "%ws",
          Default SD: %ws,
          Description: "%ws",
          Extranet Certification Url: "%ws",
          Extranet Licensing Url: "%ws",
          Extranet Licensing Url: "%ws".
          Extranet Url: "%ws", 
          Extranet Url: %ws.
          FaultCode = %ws,
          FaultCorrelationId = %ws,
          FaultString = %ws ++++++++ 
          Id: "%ws",
          Intranet Certification Url: "%ws",
          Intranet Licensing Url: "%ws",
          Intranet Url: "%ws",
          Intranet Url: %ws,
          Issuer Id: "%ws",
          Issuer name: "%ws",
          IssuerId: "%ws"
          IssuerName: "%ws"
          IssuerName: "%ws".
          Name: "%ws",
          Owner: "%ws",
          RAC Extranet Certification Url: "%ws".
          RAC Intranet Certification Url: "%ws",
          RAC Issuer Id: "%ws",
          RAC Issuer name: "%ws",
          RAC user type: "%ws",
          RAC user: "%ws",
          Require New Identity: %ws
          service type: %ws
          User type: "%ws",
          User: "%ws",
          User: %ws,
          Valid Until: "%hs".
         FaultCorrelationId = %ws
         FaultString = %ws ++++++++
        Email: %ws
        ExtranetUrl: %ws
        FaultCode = %ws,
        FaultCorrelationId = %ws,
        FaultString = %ws ,
        FaultString = %ws ++++++++
        hierarchy: %d
        IntranetUrl: %ws
        path: %ws
        Revokedby = %ws ,
        RevokedTime =%ws , 
       Alternate Url: %ws
       AuthType: %ws
       BrowserEnabled: %ws
       CertificationExtranetUrl: %ws
       CertificationIntranetUrl: %ws
       Email from CLC: %ws
       Email: %ws
       EmailId: %ws
       Extranet URL: %ws
       Extranet Url: %ws
       ExtranetUrl: %ws
       FederationHomeRealm value: %ws
       hr: 0x%x
       hr=0x%x
       Intranet Url: %ws
       Intranet URL: %ws
       IntranetUrl: %ws
       IsFederated: %ws
       LicensingExtranetUrl: %ws
       LicensingIntranetUrl: %ws
       ObjectPath: %ws
       Office should retry with a token if an appropriate Identity is signed-in into Office
       Original Url: %ws
       Overwrite defaults for server: %ws
       Overwrite global default: %ws
       path: %ws
       PublishingOnly: %ws
       RequerBrowser: %ws
       RequerRedirect: %ws
       response=%ws
       Server Url from CLC: %ws
       Server Url: %ws
       Server: %ws
       Token type: %ws
       UPN: %ws
       Url: %ws
       UserID: %ws
      FaultCode: %ws
      FaultString: %ws 
 !"#$%&'()*+,-./0123
 [msdrm]:AcquisitionProc: BatchLicensing User = %ws hr = 0x%x
 [msdrm]:AcquisitionProc: Server returned a valid EUL for one of the RACs
 101@1^1f1
--------- ADFS flow non-silent done hr=0x%x, status=%d --------
--------- ADFS flow silent done hr=0x%x, status=%d --------
------- Cred prompt returned: status = %d -------
 DocTrackingUrl info URL: %ws
--------- Done downloading templates hr = 0x%x ----------
------- Done getting all templates -------
---------- Done getting new RAC and CLC ---------
-------- Done getting templates -------
--------- Done getting user Identity hr = 0x%x ---------
--------- Done storing RAC & CLC ---------
----------- Dummy GET call done hr=0x%x. ---------
------------- Ensuring the templates are up-to-date done hr=0x%x: ----------
 exited with return code 
---------------- Got a new CLC from server %ws: -----------------
------------------ Got a new RAC from server %ws: ----------------
 href="
 Microsoft Corporation. All rights reserved.
 Operating System
 Public API 
 Public API called: 
--------- Refreshing ServerInfo done ---------
------ Sending Request done. HTTP Status code = %d ------
--------- Service discovery done --------
------- Service discovery for Certification and Licensing done: ---------
------- Service discovery for Certification done: ---------
------- Service discovery for Licensing done: ---------
---------- Soap call done hr = 0x%x ----------
 soapenc:arrayType="
 t=hW
 t3hp+
 type="%s"
--------- Unable to find the user identity information in the registry ----------
 Windows
 xmlns="
 xsi:nil="1"/>
!(bTimeRange && bTimeInterval)
!(cbData % sizeof(WCHAR))
!(dwFlags & (~ GetValidIppGetUserFlags()))
!(dwFlags & ~(IPC_DCIL_SKIP_RIGHTS_CHECK | DRM_ISSUANCELICENSE_V2))
!(dwFlags & ~(IPC_GTIL_FLAG_DEFAULT_SERVER_ONLY | IPC_GTIL_FLAG_USE_PROVIDED_LICENSING_URL))
!(dwFlags & ~(IPC_GTL_FLAGS))
!(ipp::IIpcContext::IsOfflineMode(pIpcContext) && bForceDownload)
!(nFlags & ~( IPC_SL_FLAG_REUSE_KEY | IPC_SL_FLAG_KEY_NO_PERSIST | IPC_SL_FLAG_KEY_NO_PERSIST_DISK | IPC_SL_FLAG_DEPRECATED_UNSIGNED_LICENSE_TEMPLATE | IPC_SL_FLAG_KEY_NO_PERSIST_LICENSE | IPC_SL_FLAG_ISSUANCE_LICENSE_V2 | IPCP_SL_FLAG_CHANGE_DISTRIBUTIONPOINT))
!(nFlags & ~(IPC_GK_FLAG_KEY_NO_PERSIST_DISK))
!(NULL != pContext && (pContext->dwFlags & IPC_PROMPT_FLAG_OFFLINE))
!(pContext->dwFlags & (~dwValidFlags))
!0'040:0N0w0
!bCheckActServerKey || eRequiredHierarchy != ANY_ROOT
!bExponent
!bModulus
!bRequireV1Crypto || leafVersion.dwRSAKeySize <= gc_DRMCryptoV1.dwRSAKeySize
!D$<!D$@
!data.empty()
!domain->GetDomainStringForDnsLookup().empty()
!fDelete
!fDelete && NULL != pvLicenseInfo
!g_pfnWinHttpQueryHeaders( hRequest, dwWINHTTP_QUERY_WWW_AUTHENTICATE, g_wszWINHTTP_HEADER_NAME_BY_INDEX, pvWINHTTP_NO_OUTPUT_BUFFER, &cbQueryBufferLength, lpdwWINHTTP_NO_HEADER_INDEX)
!GetContentId().empty()
!GetEmailId().empty()
!GetIssuedPrincipal().IsNull()
!GetIssuer().IsNull()
!IsTemplate()
!license.GetIssuedPrincipalsPublicKeys().empty()
!m_bVerifyCertificateChain || NULL != m_pCryptoVersionToVerify
!m_issuer.IsNull()
!m_pvpUserCerts->empty()
!m_vAppSpecificData.empty()
!m_wstrLAURL.empty()
!m_wstrOrgPayload.empty()
!pConnectionInfo
!This program cannot be run in DOS mode.
!vCertChain.empty()
!wcscmp(wszAlgorithm, IPC_ALGORITHM_AES)
!wstring(wszContentName).empty()
!wstrValue.empty()
"0Y0b0
#090C0S0z0
$j;Xjg
$Phpe
%02d/%02d/%02d %02d:%02d:%02d.%03d
%04d-%02d-%02dT%02d:%02d
%d.%d.%d
%d.%d.%d.%d
%hs - %hs
-%hs hr=0x%x
%hs!%p: 
%hs(%d) tid(%x) %08X %ws
%hs(%u)\%hs!%p: 
%I64u
%s#/summary/%s/%s
%s%sException at %s(%lu)%s%s
%ws %ws
%ws: %ws
%ws\LogFile_%d%ws
&amp;
&PWSV
( pcCredential->dwType == IPC_CREDENTIAL_TYPE_X509 || pcCredential->dwType == IPC_CREDENTIAL_TYPE_SYMMETRIC_KEY || pcCredential->dwType == IPC_CREDENTIAL_TYPE_OAUTH2)
( xe::wszSHA256Algorithm == signature.GetDigestAlgorithm() && UDCRYPTO_SIZE_HASH_SHA256 == signature.GetDigestSize() )
( xe::wszSHA256Algorithm == signature.GetDigestAlgorithm() && UDCRYPTO_SIZE_HASH_SHA256 == signature.GetDigestSize() ) || ( xe::wszSHA1Algorithm == signature.GetDigestAlgorithm() && UDCRYPTO_SIZE_HASH_SHA1 == signature.GetDigestSize() )
(!(E_SOAP_FAULT_RESPONSE == hr))
(!(IPC_GTL_FLAG_SKIP_USER & dwFlags)) || pcLocalIppUser
(&(objectCategory=serviceConnectionPoint)(keywords=MSRMRootCluster)(keywords=1.0))
((dwFlags & IPC_SL_FLAG_REUSE_KEY) != 0) == (hBoundLicense != 0)
()$^.*+?[]|\-{},:=!
([msdrm]:Referral Info Name=%ls, Referral Info URL=%ls, Rights Template=%ls)
(0 != uiGUIDLength)
(0 != vClcs.size()) == (0 != vRacs.size())
(0 < cchStoreName && cchStoreName <= s_cchMaxStoreName)
(0 == _itow_s(lcid, wsz, ARRAYSIZE(wsz), 10))
(0 == _wcslwr_s(wszObjectPath, cchObjectPath + 1))
(0 == dwFlags)
(0 == dwFlags) || (IPC_CL_FLAG_QUERY_ONLY == dwFlags)
(090@0H0^0z0
(0C0^0
(1 <= drmSoap.GetRequestParamsCount())
(caller: %p) 
(cEULs == m_pvpUserCerts->size())
(g_pFactory.get() == 0) || (!pFactory->ProductionCodeOnly())
(IIpcContext::URL_STATE::eInitial != m_eLastUsedState)
(IPC_USER_TYPE_EMAIL == pOwner->dwType) && (0 == wcsicmp(wszEmailFromCLC, pOwner->wszID))
(IPCP_TOKEN_TYPE_IDCRL == pcToken->dwType)
(IPCP_TOKEN_TYPE_OAUTH2 == pcToken->dwType)
(IPCP_TOKEN_TYPE_SYMMETRIC_KEY == pcToken->dwType)
(IPCP_TOKEN_TYPE_WINDOWS == pcToken->dwType)
(IPCP_TOKEN_TYPE_X509 == pcToken->dwType)
(NULL != spwstrResource) && !spwstrResource->empty()
(NULL == wszLicenseId)
(objectClass=*)
(pcConnInfo->wszIntranetUrl || pcConnInfo->wszExtranetUrl)
(pfnGetUserNameExWAdd)(eFormat, spwszCurrentName.get(), &ulNameSize)
(SafeInt<size_t>(pvBuffer->cbBuffer) % sizeof(WCHAR) == 0)
(sizeof(IPC_OAUTH2_CALLBACK_INFO) <= pcToken->cbTokenData)
(sizeof(IPC_OAUTH2_CALLBACK_INFO_WITH_TOKEN) == pcCallbackInfo->cbSize) || (sizeof(IPC_OAUTH2_CALLBACK_INFO) == pcCallbackInfo->cbSize)
(v)+N
(wstring::npos != iAsmxPos)
(wstring::npos != iWstrPos)
(wszIntUrl || wszExtUrl)
(wszIntURL || wszExtURL)
(wszServerExtURL || wszServerIntURL)
) [hr = 0x
* AppName: %ws
* AppVersion: %ws
* Architecture: x86
* Client Hierarchy: %d
* Could not get System/App Info
* DateTime (UTC): %hs
* Flavor: Retail
* Official Build
* OS Architecture: %ws
* OS Version: %ws
* OS: Windows
* PID: %u
* WinMSIPC Version: SameAsOsVersion 
*(reinterpret_cast<const wchar_t*>(pvBuffer)) < 0x80
*** Error tracing API entry
*** Error tracing API exit
************* Build Info *****************
************* System/App Info *************
*************** System/App Info **************
******************************************
*pdwIntervalTime <= USHRT_MAX
*ppbCapiBlob = new (std::nothrow) BYTE[*pcbCapiBlob]
*ppdwLcid == nullptr
*ppwszErrorText == nullptr
*pwszLicenseChain = new (std::nothrow) WCHAR[cChain]
,         FaultString = %ws ++++++++
./text()
.?AUctype_base@std@@
.?AUIFailureCallback@details@wil@@
.?AUIUnknown@@
.?AV?$_Func_base@_NV?$shared_ptr@VHttpActivity@?A0xf13b1a0a@@@std@@U_Nil@2@U32@U32@U32@U32@U32@@std@@
.?AV?$_Func_base@V?$shared_ptr@VICLCLicense@InformationProtection@Microsoft@@@std@@PBGABV?$shared_ptr@VIIpcContext@InformationProtection@Microsoft@@@2@U_Nil@2@U42@U42@U42@U42@@std@@
.?AV?$_Func_base@V?$shared_ptr@VIPLLicense@InformationProtection@Microsoft@@@std@@PBGABV?$shared_ptr@VIIpcContext@InformationProtection@Microsoft@@@2@U_Nil@2@U42@U42@U42@U42@@std@@
.?AV?$_Func_base@XAAVMsipcActivity@IpcTelemetryTraceLoggingImpl@InformationProtection@Microsoft@@U_Nil@std@@U56@U56@U56@U56@U56@@std@@
.?AV?$_Func_base@XAAVTimedActivity@InformationProtection@Microsoft@@U_Nil@std@@U45@U45@U45@U45@U45@@std@@
.?AV?$_Func_base@XV?$shared_ptr@$$CBV?$vector@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@AAV?$vector@V?$shared_ptr@VIEULLicense@InformationProtection@Microsoft@@@std@@V?$allocator@V?$shared_ptr@VIEULLicense@InformationProtection@Microsoft@@@std@@@2@@2@AAV?$vector@JV?$allocator@J@std@@@2@U_Nil@2@U52@U52@U52@@std@@
.?AV?$_Func_impl@U?$_Callable_obj@V<lambda_3adc666873d1a6095c9c6e9a8e3bb22b>@@$0A@@std@@V?$allocator@V?$_Func_class@_NV?$shared_ptr@VHttpActivity@?A0xf13b1a0a@@@std@@U_Nil@2@U32@U32@U32@U32@U32@@std@@@2@_NV?$shared_ptr@VHttpActivity@?A0xf13b1a0a@@@2@U_Nil@2@U52@U52@U52@U52@U52@@std@@
.?AV?$_Func_impl@U?$_Callable_obj@V<lambda_4062061318405ab7eeb27b534784375d>@@$0A@@std@@V?$allocator@V?$_Func_class@XV?$shared_ptr@$$CBV?$vector@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@AAV?$vector@V?$shared_ptr@VIEULLicense@InformationProtection@Microsoft@@@std@@V?$allocator@V?$shared_ptr@VIEULLicense@InformationProtection@Microsoft@@@std@@@2@@2@AAV?$vector@JV?$allocator@J@std@@@2@U_Nil@2@U52@U52@U52@@std@@@2@XV?$shared_ptr@$$CBV?$vector@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@AAV?$vector@V?$shared_ptr@VIEULLicense@InformationProtection@Microsoft@@@std@@V?$allocator@V?$shared_ptr@VIEULLicense@InformationProtection@Microsoft@@@std@@@2@@2@AAV?$vector@JV?$allocator@J@std@@@2@U_Nil@2@U72@U72@U72@@std@@
.?AV?$_Func_impl@U?$_Callable_obj@V<lambda_42636f98581dd4988772d30ff9623ac9>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAVMsipcActivity@IpcTelemetryTraceLoggingImpl@InformationProtection@Microsoft@@U_Nil@std@@U56@U56@U56@U56@U56@@std@@@2@XAAVMsipcActivity@IpcTelemetryTraceLoggingImpl@InformationProtection@Microsoft@@U_Nil@2@U82@U82@U82@U82@U82@@std@@
.?AV?$_Func_impl@U?$_Callable_obj@V<lambda_7c908d602da9ae1eadbc57a955ecd0d4>@@$0A@@std@@V?$allocator@V?$_Func_class@V?$shared_ptr@VIPLLicense@InformationProtection@Microsoft@@@std@@PBGABV?$shared_ptr@VIIpcContext@InformationProtection@Microsoft@@@2@U_Nil@2@U42@U42@U42@U42@@std@@@2@V?$shared_ptr@VIPLLicense@InformationProtection@Microsoft@@@2@PBGABV?$shared_ptr@VIIpcContext@InformationProtection@Microsoft@@@2@U_Nil@2@U62@U62@U62@U62@@std@@
.?AV?$_Func_impl@U?$_Callable_obj@V<lambda_89ae7c55f310c536b714b20c52a8d5ed>@@$0A@@std@@V?$allocator@V?$_Func_class@V?$shared_ptr@VICLCLicense@InformationProtection@Microsoft@@@std@@PBGABV?$shared_ptr@VIIpcContext@InformationProtection@Microsoft@@@2@U_Nil@2@U42@U42@U42@U42@@std@@@2@V?$shared_ptr@VICLCLicense@InformationProtection@Microsoft@@@2@PBGABV?$shared_ptr@VIIpcContext@InformationProtection@Microsoft@@@2@U_Nil@2@U62@U62@U62@U62@@std@@
.?AV?$_Func_impl@U?$_Callable_obj@V<lambda_a40edab062d46c23ed7a7fdc46764dd4>@@$0A@@std@@V?$allocator@V?$_Func_class@_NV?$shared_ptr@VHttpActivity@?A0xf13b1a0a@@@std@@U_Nil@2@U32@U32@U32@U32@U32@@std@@@2@_NV?$shared_ptr@VHttpActivity@?A0xf13b1a0a@@@2@U_Nil@2@U52@U52@U52@U52@U52@@std@@
.?AV?$_Func_impl@U?$_Callable_obj@V<lambda_b2402f422e89926f091f437199932c66>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAVTimedActivity@InformationProtection@Microsoft@@U_Nil@std@@U45@U45@U45@U45@U45@@std@@@2@XAAVTimedActivity@InformationProtection@Microsoft@@U_Nil@2@U72@U72@U72@U72@U72@@std@@
.?AV?$_Func_impl@U?$_Callable_obj@V<lambda_ff3c65a45facc5697629f5947de45634>@@$0A@@std@@V?$allocator@V?$_Func_class@XV?$shared_ptr@$$CBV?$vector@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@AAV?$vector@V?$shared_ptr@VIEULLicense@InformationProtection@Microsoft@@@std@@V?$allocator@V?$shared_ptr@VIEULLicense@InformationProtection@Microsoft@@@std@@@2@@2@AAV?$vector@JV?$allocator@J@std@@@2@U_Nil@2@U52@U52@U52@@std@@@2@XV?$shared_ptr@$$CBV?$vector@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@AAV?$vector@V?$shared_ptr@VIEULLicense@InformationProtection@Microsoft@@@std@@V?$allocator@V?$shared_ptr@VIEULLicense@InformationProtection@Microsoft@@@std@@@2@@2@AAV?$vector@JV?$allocator@J@std@@@2@U_Nil@2@U72@U72@U72@@std@@
.?AV?$_Iosb@H@std@@
.?AV?$_Node_class@GV?$regex_traits@G@std@@@std@@
.?AV?$_Node_str@G@std@@
.?AV?$_Ref_count@$$CBV?$vector@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@
.?AV?$_Ref_count@$$CBVIIppLicense@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@G@std@@
.?AV?$_Ref_count@U_IPC_CONNECTION_INFO@@@std@@
.?AV?$_Ref_count@U_IPC_NAME_VALUE_LIST@@@std@@
.?AV?$_Ref_count@U_IPC_PROMPT_CTX@@@std@@
.?AV?$_Ref_count@U_IPCP_TOKEN@@@std@@
.?AV?$_Ref_count@U_IPP_USER_FROM_CONNECTION_INFO@@@std@@
.?AV?$_Ref_count@UIpcUserPrincipal@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@UIPP_ID_REGVALUES@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@V?$autosrwlock@VReaderWriterLock@Common@FoundationServices@Microsoft@@@Common@FoundationServices@Microsoft@@@std@@
.?AV?$_Ref_count@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@
.?AV?$_Ref_count@V?$IndexedTree@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V12@@@@std@@
.?AV?$_Ref_count@V?$ScopedActionImpl@V?$_Bind@$00XU?$_Pmf_wrap@P8XmlReader@Serialization@@AEXABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@ZXV12@ABV34@U_Nil@4@U54@U54@U54@U54@U54@@std@@PAVXmlReader@Serialization@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@U_Nil@2@U62@U62@U62@U62@@std@@V?$_Bind@$00XU?$_Pmf_wrap@P8XmlReader@Serialization@@AEXXZXV12@U_Nil@std@@U34@U34@U34@U34@U34@U34@@std@@PAVXmlReader@Serialization@@U_Nil@2@U52@U52@U52@U52@U52@@2@@@@std@@
.?AV?$_Ref_count@V?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@V?$NamedElement@G@2@@Serialization@@@std@@
.?AV?$_Ref_count@V?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@V?$NamedElement@I@2@@Serialization@@@std@@
.?AV?$_Ref_count@V?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@V?$NamedElement@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@Serialization@@@std@@
.?AV?$_Ref_count@V?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@V?$NamedElement@VCAppSpecificData@InformationProtection@Microsoft@@@2@@Serialization@@@std@@
.?AV?$_Ref_count@V?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@V?$NamedElement@VCPolicyList@InformationProtection@Microsoft@@@2@@Serialization@@@std@@
.?AV?$_Ref_count@V?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@V?$NamedElement@VCPrincipal@InformationProtection@Microsoft@@@2@@Serialization@@@std@@
.?AV?$_Ref_count@V?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@V?$NamedElement@VCPublicKey@InformationProtection@Microsoft@@@2@@Serialization@@@std@@
.?AV?$_Ref_count@V?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@V?$NamedElement@VCRight@InformationProtection@Microsoft@@@2@@Serialization@@@std@@
.?AV?$_Ref_count@V?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@V?$NamedElement@VCRightListHelper@InformationProtection@Microsoft@@@2@@Serialization@@@std@@
.?AV?$_Ref_count@V?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@V?$NamedElement@VCRightNameSetHelper@InformationProtection@Microsoft@@@2@@Serialization@@@std@@
.?AV?$_Ref_count@V?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@V?$NamedElement@VCSignature@InformationProtection@Microsoft@@@2@@Serialization@@@std@@
.?AV?$_Ref_count@V?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@V?$NamedElement@VCTimeConditionHelper@InformationProtection@Microsoft@@@2@@Serialization@@@std@@
.?AV?$_Ref_count@V?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@V?$NamedElement@VCTimeRange@InformationProtection@Microsoft@@@2@@Serialization@@@std@@
.?AV?$_Ref_count@V?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@V?$NamedElement@VCUsagePolicy@InformationProtection@Microsoft@@@2@@Serialization@@@std@@
.?AV?$_Ref_count@V?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@V?$NamedElement@VCVersionSpan@InformationProtection@Microsoft@@@2@@Serialization@@@std@@
.?AV?$_Ref_count@V?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@VCAppSpecificData@InformationProtection@Microsoft@@@Serialization@@@std@@
.?AV?$_Ref_count@V?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@VCBaseLicense@InformationProtection@Microsoft@@@Serialization@@@std@@
.?AV?$_Ref_count@V?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@VCLicenseVerificationData@InformationProtection@Microsoft@@@Serialization@@@std@@
.?AV?$_Ref_count@V?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@VCPolicyList@InformationProtection@Microsoft@@@Serialization@@@std@@
.?AV?$_Ref_count@V?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@VCPrincipal@InformationProtection@Microsoft@@@Serialization@@@std@@
.?AV?$_Ref_count@V?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@VCPublicKey@InformationProtection@Microsoft@@@Serialization@@@std@@
.?AV?$_Ref_count@V?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@VCPublicKeyParameter@Implementation@InformationProtection@Microsoft@@@Serialization@@@std@@
.?AV?$_Ref_count@V?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@VCRight@InformationProtection@Microsoft@@@Serialization@@@std@@
.?AV?$_Ref_count@V?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@VCRightListHelper@InformationProtection@Microsoft@@@Serialization@@@std@@
.?AV?$_Ref_count@V?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@VCRightNameSetHelper@InformationProtection@Microsoft@@@Serialization@@@std@@
.?AV?$_Ref_count@V?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@VCSignature@InformationProtection@Microsoft@@@Serialization@@@std@@
.?AV?$_Ref_count@V?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@VCTimeConditionHelper@InformationProtection@Microsoft@@@Serialization@@@std@@
.?AV?$_Ref_count@V?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@VCTimeInterval@InformationProtection@Microsoft@@@Serialization@@@std@@
.?AV?$_Ref_count@V?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@VCTimeRange@InformationProtection@Microsoft@@@Serialization@@@std@@
.?AV?$_Ref_count@V?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@VCUsagePolicy@InformationProtection@Microsoft@@@Serialization@@@std@@
.?AV?$_Ref_count@V?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@VCVersionSpan@InformationProtection@Microsoft@@@Serialization@@@std@@
.?AV?$_Ref_count@V?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@VDeserializeTreeNode@Implementation@2@@Serialization@@@std@@
.?AV?$_Ref_count@V?$vector@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@
.?AV?$_Ref_count@V?$vector@V?$shared_ptr@VIIpcToken@InformationProtection@Microsoft@@@std@@V?$allocator@V?$shared_ptr@VIIpcToken@InformationProtection@Microsoft@@@std@@@2@@std@@@std@@
.?AV?$_Ref_count@V_SharedData@WindowsUsernameAndPasswordToken@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VAcquireDelegationLicenseContext@DelegationLicenseAcq@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VAcquireLicenseContext@CLicenseAcq@@@std@@
.?AV?$_Ref_count@VAcquirePreLicenseContext@CPreLicenseAcq@@@std@@
.?AV?$_Ref_count@VCBaseLicense@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VCCLCLicense@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VCDRMStore@@@std@@
.?AV?$_Ref_count@VCEULLicense@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VCJsonCLCLicense@JsonLicenses@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VCJsonPLLicense@JsonLicenses@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VCKeyBlob@@@std@@
.?AV?$_Ref_count@VCLicense@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VCLicenseAcq@@@std@@
.?AV?$_Ref_count@VCLicenseVerificationData@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VConnectionInfo@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VConnectionInfoCacheKey@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VContentKey@JsonLicenses@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VCPLLicense@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VCPreLicenseAcq@@@std@@
.?AV?$_Ref_count@VCRACLicense@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VCRMTemplateAPI@@@std@@
.?AV?$_Ref_count@VCSignature@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VCUserIdentityCacheKey@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VCustomPolicy@JsonLicenses@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VDelegationLicenseAcq@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VDeserializeTreeNode@Implementation@Serialization@@@std@@
.?AV?$_Ref_count@VDnsResponse@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VDomain@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VFileStoreObject@store@@@std@@
.?AV?$_Ref_count@VGlobalServiceLocator@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VHeader@JsonLicenses@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VHttpActivity@?A0xf13b1a0a@@@std@@
.?AV?$_Ref_count@VIEULLicense@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VIIpcContext@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VIIpcToken@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VIIppKey@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VIIppLicense@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VIIppLicenseWithMetadata@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VIIppUser@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VIpcAuthToken@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VIpcContext@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VIpcTokenCache@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VIPLLicense@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VIPPUserIdentity@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VIssuedTo@JsonLicenses@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VIssuer@JsonLicenses@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VLicense@JsonLicenses@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VLicenseMetadata@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VLoggedOnUserToken@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VMsipcActivity@IpcTelemetryTraceLoggingImpl@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VMSXmlDomDocument@@@std@@
.?AV?$_Ref_count@VMSXmlDomElement@@@std@@
.?AV?$_Ref_count@VNameValueList@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VNtlmUrlCache@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VOAuth2Token@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VOfflinePL@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VOrgIdIdcrlToken@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VPolicy@JsonLicenses@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VProvidedUrlBasedLocator@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VProxyResolver@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VProxyResolverWrapper@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VPublishingLicense@JsonLicenses@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VRegistry@Common@FoundationServices@Microsoft@@@std@@
.?AV?$_Ref_count@VRegistryBasedLocator@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VRevocationDetails@@@std@@
.?AV?$_Ref_count@VRevokeObject@JsonLicenses@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VRSAKey@JsonLicenses@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VServerInfoCache@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VServerInfoImpl@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VServerInfoMapData@ServerInfoCache@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VSessionKey@JsonLicenses@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VSignature@JsonLicenses@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VStringArray@@@std@@
.?AV?$_Ref_count@VSymmetricKeyToken@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VTemplateInfo@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VTemplateIssuer@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VTimer@util@@@std@@
.?AV?$_Ref_count@VUnknownIdentityTypeLocator@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VUnknownServerInfo@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VUrlIterator@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VUserCert@JsonLicenses@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VUserCertPrivateData@JsonLicenses@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VUserCertPublicData@JsonLicenses@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VUserConsent@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VUserIdentities@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VUserRights@JsonLicenses@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VWin7IppKey@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VWin7IppUser@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VWindowsScpLocator@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VWindowsUsernameAndPasswordToken@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VX509Token@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count_del@GV?$FreeArrayObject@PAG@@@std@@
.?AV?$_Ref_count_del@XVCloseWinHttpHandleFunctor@@@std@@
.?AV?$_Ref_count_del@XVFreeIpcBufferFunctor@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count_obj@V?$AutoActivity@VMsipcActivity@IpcTelemetryTraceLoggingImpl@InformationProtection@Microsoft@@@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count_obj@V?$AutoActivity@VTimedActivity@InformationProtection@Microsoft@@@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count_obj@VMsipcActivity@IpcTelemetryTraceLoggingImpl@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count_obj@VStorePath@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count_obj@VTimedActivity@InformationProtection@Microsoft@@@std@@
.?AV?$ActivityBase@VMSIPCTraceLoggingProvider@InformationProtection@Microsoft@@$00$0CAAAAAAAAAAA@$04$0A@U_TlgReflectorTag_Param0IsProviderType@@@wil@@
.?AV?$basic_ios@DU?$char_traits@D@std@@@std@@
.?AV?$basic_ios@GU?$char_traits@G@std@@@std@@
.?AV?$basic_iostream@DU?$char_traits@D@std@@@std@@
.?AV?$basic_iostream@GU?$char_traits@G@std@@@std@@
.?AV?$basic_istream@DU?$char_traits@D@std@@@std@@
.?AV?$basic_istream@GU?$char_traits@G@std@@@std@@
.?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@
.?AV?$basic_ostream@GU?$char_traits@G@std@@@std@@
.?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@
.?AV?$basic_streambuf@GU?$char_traits@G@std@@@std@@
.?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@
.?AV?$basic_stringbuf@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@
.?AV?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@
.?AV?$basic_stringstream@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@
.?AV?$collate@G@std@@
.?AV?$CSerializer@VXmlReader@Serialization@@@Serialization@@
.?AV?$ctype@D@std@@
.?AV?$ctype@G@std@@
.?AV?$DeserializeTreeLeaf@I@Implementation@Serialization@@
.?AV?$DeserializeTreeLeaf@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Implementation@Serialization@@
.?AV?$DeserializeTreeLeaf@V?$shared_ptr@VCSignature@InformationProtection@Microsoft@@@std@@@Implementation@Serialization@@
.?AV?$DeserializeTreeLeaf@V?$vector@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@Implementation@Serialization@@
.?AV?$DeserializeTreeLeaf@V?$vector@VCAppSpecificData@InformationProtection@Microsoft@@V?$allocator@VCAppSpecificData@InformationProtection@Microsoft@@@std@@@std@@@Implementation@Serialization@@
.?AV?$DeserializeTreeLeaf@V?$vector@VCPolicyList@InformationProtection@Microsoft@@V?$allocator@VCPolicyList@InformationProtection@Microsoft@@@std@@@std@@@Implementation@Serialization@@
.?AV?$DeserializeTreeLeaf@V?$vector@VCRight@InformationProtection@Microsoft@@V?$allocator@VCRight@InformationProtection@Microsoft@@@std@@@std@@@Implementation@Serialization@@
.?AV?$DeserializeTreeLeaf@V?$vector@VCUsagePolicy@InformationProtection@Microsoft@@V?$allocator@VCUsagePolicy@InformationProtection@Microsoft@@@std@@@std@@@Implementation@Serialization@@
.?AV?$DeserializeTreeLeaf@V?$vector@VCVersionSpan@InformationProtection@Microsoft@@V?$allocator@VCVersionSpan@InformationProtection@Microsoft@@@std@@@std@@@Implementation@Serialization@@
.?AV?$DeserializeTreeLeaf@VCPrincipal@InformationProtection@Microsoft@@@Implementation@Serialization@@
.?AV?$DeserializeTreeLeaf@VCPublicKey@InformationProtection@Microsoft@@@Implementation@Serialization@@
.?AV?$DeserializeTreeLeaf@VCRightListHelper@InformationProtection@Microsoft@@@Implementation@Serialization@@
.?AV?$DeserializeTreeLeaf@VCRightNameSetHelper@InformationProtection@Microsoft@@@Implementation@Serialization@@
.?AV?$DeserializeTreeLeaf@VCSignature@InformationProtection@Microsoft@@@Implementation@Serialization@@
.?AV?$DeserializeTreeLeaf@VCTimeConditionHelper@InformationProtection@Microsoft@@@Implementation@Serialization@@
.?AV?$DeserializeTreeLeaf@VCTimeRange@InformationProtection@Microsoft@@@Implementation@Serialization@@
.?AV?$DeserializeTreeLeaf@VCVersionSpan@InformationProtection@Microsoft@@@Implementation@Serialization@@
.?AV?$DeserializeTreeVectorNodeLeaf@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Implementation@Serialization@@
.?AV?$DeserializeTreeVectorNodeLeaf@VCPublicKey@InformationProtection@Microsoft@@@Implementation@Serialization@@
.?AV?$DomElementBase@VDomDocument@@@@
.?AV?$DomElementBase@VMSXmlDomElement@@@@
.?AV?$enable_shared_from_this@VDomDocument@@@std@@
.?AV?$enable_shared_from_this@VMSXmlDomElement@@@std@@
.?AV?$FreeArrayObject@PAG@@
.?AV?$IndexedTree@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V12@@@
.?AV?$NamedElement@G@Serialization@@
.?AV?$NamedElement@I@Serialization@@
.?AV?$NamedElement@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Serialization@@
.?AV?$NamedElement@VCAppSpecificData@InformationProtection@Microsoft@@@Serialization@@
.?AV?$NamedElement@VCPolicyList@InformationProtection@Microsoft@@@Serialization@@
.?AV?$NamedElement@VCPrincipal@InformationProtection@Microsoft@@@Serialization@@
.?AV?$NamedElement@VCPublicKey@InformationProtection@Microsoft@@@Serialization@@
.?AV?$NamedElement@VCRight@InformationProtection@Microsoft@@@Serialization@@
.?AV?$NamedElement@VCRightListHelper@InformationProtection@Microsoft@@@Serialization@@
.?AV?$NamedElement@VCRightNameSetHelper@InformationProtection@Microsoft@@@Serialization@@
.?AV?$NamedElement@VCSignature@InformationProtection@Microsoft@@@Serialization@@
.?AV?$NamedElement@VCTimeConditionHelper@InformationProtection@Microsoft@@@Serialization@@
.?AV?$NamedElement@VCTimeRange@InformationProtection@Microsoft@@@Serialization@@
.?AV?$NamedElement@VCUsagePolicy@InformationProtection@Microsoft@@@Serialization@@
.?AV?$NamedElement@VCVersionSpan@InformationProtection@Microsoft@@@Serialization@@
.?AV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@
.?AV?$num_put@GV?$ostreambuf_iterator@GU?$char_traits@G@std@@@std@@@std@@
.?AV?$numpunct@D@std@@
.?AV?$numpunct@G@std@@
.?AV?$ProtocolConfiguration@VXmlReader@Serialization@@@Serialization@@
.?AV?$ScopedActionImpl@V?$_Bind@$00XU?$_Pmf_wrap@P8XmlReader@Serialization@@AEXABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@ZXV12@ABV34@U_Nil@4@U54@U54@U54@U54@U54@@std@@PAVXmlReader@Serialization@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@U_Nil@2@U62@U62@U62@U62@@std@@V?$_Bind@$00XU?$_Pmf_wrap@P8XmlReader@Serialization@@AEXXZXV12@U_Nil@std@@U34@U34@U34@U34@U34@U34@@std@@PAVXmlReader@Serialization@@U_Nil@2@U52@U52@U52@U52@U52@@2@@@
.?AV?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@V?$NamedElement@G@2@@Serialization@@
.?AV?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@V?$NamedElement@I@2@@Serialization@@
.?AV?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@V?$NamedElement@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@Serialization@@
.?AV?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@V?$NamedElement@VCAppSpecificData@InformationProtection@Microsoft@@@2@@Serialization@@
.?AV?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@V?$NamedElement@VCPolicyList@InformationProtection@Microsoft@@@2@@Serialization@@
.?AV?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@V?$NamedElement@VCPrincipal@InformationProtection@Microsoft@@@2@@Serialization@@
.?AV?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@V?$NamedElement@VCPublicKey@InformationProtection@Microsoft@@@2@@Serialization@@
.?AV?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@V?$NamedElement@VCRight@InformationProtection@Microsoft@@@2@@Serialization@@
.?AV?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@V?$NamedElement@VCRightListHelper@InformationProtection@Microsoft@@@2@@Serialization@@
.?AV?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@V?$NamedElement@VCRightNameSetHelper@InformationProtection@Microsoft@@@2@@Serialization@@
.?AV?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@V?$NamedElement@VCSignature@InformationProtection@Microsoft@@@2@@Serialization@@
.?AV?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@V?$NamedElement@VCTimeConditionHelper@InformationProtection@Microsoft@@@2@@Serialization@@
.?AV?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@V?$NamedElement@VCTimeRange@InformationProtection@Microsoft@@@2@@Serialization@@
.?AV?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@V?$NamedElement@VCUsagePolicy@InformationProtection@Microsoft@@@2@@Serialization@@
.?AV?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@V?$NamedElement@VCVersionSpan@InformationProtection@Microsoft@@@2@@Serialization@@
.?AV?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@VCAppSpecificData@InformationProtection@Microsoft@@@Serialization@@
.?AV?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@VCBaseLicense@InformationProtection@Microsoft@@@Serialization@@
.?AV?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@VCLicenseVerificationData@InformationProtection@Microsoft@@@Serialization@@
.?AV?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@VCPolicyList@InformationProtection@Microsoft@@@Serialization@@
.?AV?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@VCPrincipal@InformationProtection@Microsoft@@@Serialization@@
.?AV?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@VCPublicKey@InformationProtection@Microsoft@@@Serialization@@
.?AV?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@VCPublicKeyParameter@Implementation@InformationProtection@Microsoft@@@Serialization@@
.?AV?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@VCRight@InformationProtection@Microsoft@@@Serialization@@
.?AV?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@VCRightListHelper@InformationProtection@Microsoft@@@Serialization@@
.?AV?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@VCRightNameSetHelper@InformationProtection@Microsoft@@@Serialization@@
.?AV?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@VCSignature@InformationProtection@Microsoft@@@Serialization@@
.?AV?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@VCTimeConditionHelper@InformationProtection@Microsoft@@@Serialization@@
.?AV?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@VCTimeInterval@InformationProtection@Microsoft@@@Serialization@@
.?AV?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@VCTimeRange@InformationProtection@Microsoft@@@Serialization@@
.?AV?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@VCUsagePolicy@InformationProtection@Microsoft@@@Serialization@@
.?AV?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@VCVersionSpan@InformationProtection@Microsoft@@@Serialization@@
.?AV?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@VDeserializeTreeNode@Implementation@2@@Serialization@@
.?AV?$SharedPointerHandle@$$CBVIIppKey@InformationProtection@Microsoft@@@@
.?AV?$SharedPointerHandle@VIIpcAuthToken@InformationProtection@Microsoft@@@@
.?AV?$SharedPointerHandle@VIIppKey@InformationProtection@Microsoft@@@@
.?AV?$SharedPointerHandle@VIIppLicense@InformationProtection@Microsoft@@@@
.?AV?$SharedPointerHandle@VIIppLicenseWithMetadata@InformationProtection@Microsoft@@@@
.?AV?$SharedPointerHandle@VIIppUser@InformationProtection@Microsoft@@@@
.?AV_com_error@@
.?AV_Facet_base@std@@
.?AV_Generic_error_category@std@@
.?AV_Iostream_error_category@std@@
.?AV_Node_assert@std@@
.?AV_Node_back@std@@
.?AV_Node_base@std@@
.?AV_Node_capture@std@@
.?AV_Node_end_group@std@@
.?AV_Node_end_rep@std@@
.?AV_Node_endif@std@@
.?AV_Node_if@std@@
.?AV_Node_rep@std@@
.?AV_Ref_count_base@std@@
.?AV_Root_node@std@@
.?AV_SharedData@WindowsUsernameAndPasswordToken@InformationProtection@Microsoft@@
.?AV_System_error_category@std@@
.?AV<lambda_3adc666873d1a6095c9c6e9a8e3bb22b>@@
.?AV<lambda_4062061318405ab7eeb27b534784375d>@@
.?AV<lambda_42636f98581dd4988772d30ff9623ac9>@@
.?AV<lambda_7c908d602da9ae1eadbc57a955ecd0d4>@@
.?AV<lambda_89ae7c55f310c536b714b20c52a8d5ed>@@
.?AV<lambda_a40edab062d46c23ed7a7fdc46764dd4>@@
.?AV<lambda_b2402f422e89926f091f437199932c66>@@
.?AV<lambda_ff3c65a45facc5697629f5947de45634>@@
.?AVAcquireContext@CLicenseAcq@@
.?AVAcquireDelegationLicenseContext@DelegationLicenseAcq@InformationProtection@Microsoft@@
.?AVAcquireLicenseContext@CLicenseAcq@@
.?AVAcquirePreLicenseContext@CPreLicenseAcq@@
.?AVArgumentException@DomExceptions@@
.?AVArgumentException@Serialization@@
.?AVAttributeException@MSXmlDomExceptions@@
.?AVAttributeReadException@MSXmlDomExceptions@@
.?AVAttributeWriteException@MSXmlDomExceptions@@
.?AVbad_alloc@std@@
.?AVbad_cast@@
.?AVbad_function_call@std@@
.?AVbad_weak_ptr@std@@
.?AVCAtlException@ATL@@
.?AVCBaseLicense@InformationProtection@Microsoft@@
.?AVCCacheMRUQueue@Common@FoundationServices@Microsoft@@
.?AVCCLCLicense@InformationProtection@Microsoft@@
.?AVCCLCPubData@@
.?AVCDRMCBase@@
.?AVCDRMSoapRequest@@
.?AVCEULLicense@InformationProtection@Microsoft@@
.?AVChangeRootException@MSXmlDomExceptions@@
.?AVChildren@DomQuery@@
.?AVCHttpBase@@
.?AVCIpcDebugOutputLogChannel@InformationProtection@Microsoft@@
.?AVCIpcEtwLogChannel@InformationProtection@Microsoft@@
.?AVCIpcFileLogChannel@InformationProtection@Microsoft@@
.?AVCIpcLogger@InformationProtection@Microsoft@@
.?AVCIpcMemoryLogChannel@InformationProtection@Microsoft@@
.?AVCIpcOsPath@OperatingSystem@InformationProtection@Microsoft@@
.?AVCipherInfo@InformationProtection@Microsoft@@
.?AVCIppUserEnv@InformationProtection@Microsoft@@
.?AVCIssuanceLicense@@
.?AVCJsonCLCLicense@JsonLicenses@InformationProtection@Microsoft@@
.?AVCJsonPLLicense@JsonLicenses@InformationProtection@Microsoft@@
.?AVCLicense@InformationProtection@Microsoft@@
.?AVCLicenseAcq@@
.?AVCloseWinHttpHandleFunctor@@
.?AVCMetaData@@
.?AVCNameValue@@
.?AVConnectionInfo@InformationProtection@Microsoft@@
.?AVConnectionInfoCacheKey@InformationProtection@Microsoft@@
.?AVContentKey@JsonLicenses@InformationProtection@Microsoft@@
.?AVCPLLicense@InformationProtection@Microsoft@@
.?AVCPreLicenseAcq@@
.?AVCRACLicense@InformationProtection@Microsoft@@
.?AVCRACPubData@@
.?AVCRight@@
.?AVCRight@InformationProtection@Microsoft@@
.?AVCRMTemplateAPI@@
.?AVCUsagePolicy@@
.?AVCUser@@
.?AVCUserIdentityCacheKey@InformationProtection@Microsoft@@
.?AVCustomPolicy@JsonLicenses@InformationProtection@Microsoft@@
.?AVCVersionSpan@InformationProtection@Microsoft@@
.?AVDelegationLicenseAcq@InformationProtection@Microsoft@@
.?AVDeserializeTreeGetSourceNode@Implementation@Serialization@@
.?AVDeserializeTreeNode@Implementation@Serialization@@
.?AVDeserializeTreeVectorNode@Implementation@Serialization@@
.?AVDocumentCreationException@MSXmlDomExceptions@@
.?AVDocumentReadException@MSXmlDomExceptions@@
.?AVDocumentReadHrException@MSXmlDomExceptions@@
.?AVDocumentWriteException@MSXmlDomExceptions@@
.?AVDomDocument@@
.?AVDomElement@@
.?AVDomException@@
.?AVDomMultiSelect@DomQuery@@
.?AVElementException@MSXmlDomExceptions@@
.?AVElementReadException@MSXmlDomExceptions@@
.?AVElementWriteException@MSXmlDomExceptions@@
.?AVEntry@@
.?AVerror_category@std@@
.?AVErrorHandlingHelpers@wil@@
.?AVException@@
.?AVexception@@
.?AVfacet@locale@std@@
.?AVfailure@ios_base@std@@
.?AVFileStoreObject@store@@
.?AVFreeIpcBufferFunctor@InformationProtection@Microsoft@@
.?AVFsException@Common@FoundationServices@Microsoft@@
.?AVGlobalServiceLocator@InformationProtection@Microsoft@@
.?AVHandleException@@
.?AVHeader@JsonLicenses@InformationProtection@Microsoft@@
.?AVHresultException@@
.?AVICache@Common@FoundationServices@Microsoft@@
.?AVICacheElement@Common@FoundationServices@Microsoft@@
.?AVICacheKey@Common@FoundationServices@Microsoft@@
.?AVICLCLicense@InformationProtection@Microsoft@@
.?AVIEULLicense@InformationProtection@Microsoft@@
.?AVIIpcAuthToken@InformationProtection@Microsoft@@
.?AVIIpcContext@InformationProtection@Microsoft@@
.?AVIIpcLogChannel@InformationProtection@Microsoft@@
.?AVIIpcLogger@@
.?AVIIpcOsPath@OperatingSystem@InformationProtection@Microsoft@@
.?AVIIpcToken@InformationProtection@Microsoft@@
.?AVIIpcTokenCache@InformationProtection@Microsoft@@
.?AVIIpcTokenException@InformationProtection@Microsoft@@
.?AVIIppFactory@InformationProtection@Microsoft@@
.?AVIIppIdentityManager@InformationProtection@Microsoft@@
.?AVIIppKey@InformationProtection@Microsoft@@
.?AVIIppLicense@InformationProtection@Microsoft@@
.?AVIIppLicenseWithMetadata@InformationProtection@Microsoft@@
.?AVIIppObject@InformationProtection@Microsoft@@
.?AVIIppTemplate@InformationProtection@Microsoft@@
.?AVIIppUser@InformationProtection@Microsoft@@
.?AVIIssuanceLicense@@
.?AVIJsonObject@JsonLicenses@InformationProtection@Microsoft@@
.?AVILicense@InformationProtection@Microsoft@@
.?AVILicenseMetadata@InformationProtection@Microsoft@@
.?AVIncorrectBufferSizeException@@
.?AVIndexNotFoundException@@
.?AVINtlmUrlCache@InformationProtection@Microsoft@@
.?AVinvalid_argument@std@@
.?AVInvalidChildNodeException@@
.?AVInvalidHandleTypeException@@
.?AVInvalidItemNameException@XmlProtocolExceptions@Serialization@@
.?AVInvalidRootException@XmlProtocolExceptions@Serialization@@
.?AVInvalidScopeException@XmlProtocolExceptions@Serialization@@
.?AVInvalidValueException@SafeEnumExceptions@@
.?AVios_base@std@@
.?AVIpcAuthToken@InformationProtection@Microsoft@@
.?AVIpcContext@InformationProtection@Microsoft@@
.?AVIpcHandle@@
.?AVIpcTokenCache@InformationProtection@Microsoft@@
.?AVIPLLicense@InformationProtection@Microsoft@@
.?AVIppAcl@InformationProtection@Microsoft@@
.?AVIppIdentityManager@InformationProtection@Microsoft@@
.?AVIPPLicenseStore@InformationProtection@Microsoft@@
.?AVIppObject@InformationProtection@Microsoft@@
.?AVIppRefBase@@
.?AVIppSettings@InformationProtection@Microsoft@@
.?AVIppTerm@InformationProtection@Microsoft@@
.?AVIppUser@InformationProtection@Microsoft@@
.?AVIPPUserIdentity@InformationProtection@Microsoft@@
.?AVIRACLicense@InformationProtection@Microsoft@@
.?AVIServerInfo@InformationProtection@Microsoft@@
.?AVIServerInfoCache@InformationProtection@Microsoft@@
.?AVIServerInfoException@InformationProtection@Microsoft@@
.?AVIServerInfoNotSupportedException@InformationProtection@Microsoft@@
.?AVIServiceLocator@InformationProtection@Microsoft@@
.?AVIssuedTo@JsonLicenses@InformationProtection@Microsoft@@
.?AVIssuer@JsonLicenses@InformationProtection@Microsoft@@
.?AVIStoreObject@store@@
.?AVITimer@util@@
.?AVIUrlIterator@InformationProtection@Microsoft@@
.?AVIUrlIteratorInvalidArgException@InformationProtection@Microsoft@@
.?AVIUserConsent@InformationProtection@Microsoft@@
.?AVIUserIdentities@InformationProtection@Microsoft@@
.?AVIUserIdentitiesException@InformationProtection@Microsoft@@
.?AVIUserIdentitiesIncorrectBufferSizeException@InformationProtection@Microsoft@@
.?AVIUserIdentitiesNotEnoughMemoryException@InformationProtection@Microsoft@@
.?AVIWindowsToken@InformationProtection@Microsoft@@
.?AVJsonIssuanceLicense@@
.?AVlength_error@std@@
.?AVLicense@JsonLicenses@InformationProtection@Microsoft@@
.?AVLicenseMetadata@InformationProtection@Microsoft@@
.?AVLicenseNameValue@InformationProtection@Microsoft@@
.?AVLicenseState@InformationProtection@Microsoft@@
.?AVLoggedOnUserToken@InformationProtection@Microsoft@@
.?AVLoggedOnUserTokenException@InformationProtection@Microsoft@@
.?AVlogic_error@std@@
.?AVMsipcActivity@IpcTelemetryTraceLoggingImpl@InformationProtection@Microsoft@@
.?AVMSIPCTraceLoggingProvider@InformationProtection@Microsoft@@
.?AVMSXmlDomDocument@@
.?AVMSXmlDomElement@@
.?AVMSXmlDomException@@
.?AVNoChildrenException@XmlProtocolExceptions@Serialization@@
.?AVNodeCastException@MSXmlDomExceptions@@
.?AVNodeInformationException@MSXmlDomExceptions@@
.?AVNodeTypeException@MSXmlDomExceptions@@
.?AVNoTypeNameFoundException@XmlProtocolExceptions@Serialization@@
.?AVNtlmUrlCache@InformationProtection@Microsoft@@
.?AVNullHandleException@@
.?AVOAuth2Token@InformationProtection@Microsoft@@
.?AVOAuth2TokenException@InformationProtection@Microsoft@@
.?AVOrgIdIdcrlToken@InformationProtection@Microsoft@@
.?AVOrgIdIdcrlTokenException@InformationProtection@Microsoft@@
.?AVout_of_range@std@@
.?AVPolicy@JsonLicenses@InformationProtection@Microsoft@@
.?AVProtocolBase@Serialization@@
.?AVProvidedUrlBasedLocator@InformationProtection@Microsoft@@
.?AVPublishingLicense@JsonLicenses@InformationProtection@Microsoft@@
.?AVQueryException@MSXmlDomExceptions@@
.?AVregex_error@std@@
.?AVRegistryBasedLocator@InformationProtection@Microsoft@@
.?AVResultException@wil@@
.?AVRevocationDetails@@
.?AVRevokeObject@JsonLicenses@InformationProtection@Microsoft@@
.?AVRSAKey@JsonLicenses@InformationProtection@Microsoft@@
.?AVruntime_error@std@@
.?AVSafeEnumException@@
.?AVSafeIntException@@
.?AVScopedActionInterface@@
.?AVSerializationException@Serialization@@
.?AVSerializationTreeElementNameException@Serialization@@
.?AVSerializationTreeException@Serialization@@
.?AVSerializationTreeNameConflictException@Serialization@@
.?AVServerInfo@InformationProtection@Microsoft@@
.?AVServerInfoCache@InformationProtection@Microsoft@@
.?AVServerInfoImpl@InformationProtection@Microsoft@@
.?AVServerInfoInvalidUrlException@InformationProtection@Microsoft@@
.?AVServerInfoUnSupportedAuthTypeException@InformationProtection@Microsoft@@
.?AVSessionKey@JsonLicenses@InformationProtection@Microsoft@@
.?AVSignature@JsonLicenses@InformationProtection@Microsoft@@
.?AVStringArray@@
.?AVSymmetricKeyToken@InformationProtection@Microsoft@@
.?AVSymmetricKeyTokenIncorrectSizeException@InformationProtection@Microsoft@@
.?AVSymmetricKeyTokenNotUsingWinHttpException@InformationProtection@Microsoft@@
.?AVsystem_error@std@@
.?AVTemplateInfo@InformationProtection@Microsoft@@
.?AVTemplateInfoNotEnoughMemoryException@InformationProtection@Microsoft@@
.?AVTemplateIssuer@InformationProtection@Microsoft@@
.?AVTemplateIssuerIncorrectBufferSizeException@InformationProtection@Microsoft@@
.?AVTemplateIssuerNotEnoughMemoryException@InformationProtection@Microsoft@@
.?AVTemplateManager@InformationProtection@Microsoft@@
.?AVTestWin7IppFactory@InformationProtection@Microsoft@@
.?AVTestWin7IppLicense@InformationProtection@Microsoft@@
.?AVTextException@MSXmlDomExceptions@@
.?AVTextReadException@MSXmlDomExceptions@@
.?AVTextWriteException@MSXmlDomExceptions@@
.?AVTimedActivity@InformationProtection@Microsoft@@
.?AVTimer@util@@
.?AVTraceLoggingProvider@wil@@
.?AVTreeException@@
.?AVTypeConversionsException@@
.?AVUnknownIdentityTypeLocator@InformationProtection@Microsoft@@
.?AVUnknownServerInfo@InformationProtection@Microsoft@@
.?AVUrlIterator@InformationProtection@Microsoft@@
.?AVUserApplicationException@Common@FoundationServices@Microsoft@@
.?AVUserCert@JsonLicenses@InformationProtection@Microsoft@@
.?AVUserCertPrivateData@JsonLicenses@InformationProtection@Microsoft@@
.?AVUserCertPublicData@JsonLicenses@InformationProtection@Microsoft@@
.?AVUserConsent@InformationProtection@Microsoft@@
.?AVUserIdentities@InformationProtection@Microsoft@@
.?AVUserIdentityNotFoundForTemplateIssuerException@InformationProtection@Microsoft@@
.?AVUserRights@JsonLicenses@InformationProtection@Microsoft@@
.?AVWin7IppFactory@InformationProtection@Microsoft@@
.?AVWin7IppKey@InformationProtection@Microsoft@@
.?AVWin7IppLicense@InformationProtection@Microsoft@@
.?AVWin7IppLicenseWithMetadata@InformationProtection@Microsoft@@
.?AVWin7IppUser@InformationProtection@Microsoft@@
.?AVWindowsScpLocator@InformationProtection@Microsoft@@
.?AVWindowsUsernameAndPasswordToken@InformationProtection@Microsoft@@
.?AVWindowsUsernameAndPasswordTokenException@InformationProtection@Microsoft@@
.?AVX509Token@InformationProtection@Microsoft@@
.?AVX509TokenIncorrectSizeException@InformationProtection@Microsoft@@
.?AVX509TokenNotUsingWinHttpException@InformationProtection@Microsoft@@
.?AVXmlConfiguration@Serialization@@
.?AVXmlProtocol@Serialization@@
.?AVXmlProtocolException@XmlProtocolExceptions@Serialization@@
.?AVXmlReader@Serialization@@
.00cfg
.030=0B0W0\0f0m0}0
.aadrm.com
.aadrm.de
.asmx
.CRT$XCA
.CRT$XCC
.CRT$XCL
.CRT$XCU
.CRT$XCZ
.CRT$XIA
.CRT$XIAA
.CRT$XIZ
.CRT$XLA
.CRT$XLZ
.data
.data$brc
.data$r$brc
.didat
.didat$2
.didat$3
.didat$4
.didat$5
.didat$6
.didat$7
.edata
.gfids
.giats
.hostedrms.com
.idata$2
.idata$3
.idata$4
.idata$5
.idata$6
.ipclog
.lock
.rdata
.rdata$brc
.rdata$r$brc
.rdata$sxdata
.rdata$T$brc
.rdata$zETW0
.rdata$zETW1
.rdata$zETW2
.rdata$zETW9
.rdata$zzzdbg
.rms-bvt.testv1.com
.rsrc
.rsrc$01
.rsrc$02
.text
.text$di
.text$mn
.text$mn$00
.text$x
.text$yd
.tls$
.tls$ZZZ
.xdata$x
/-----------------------------------------------------------------------
/_wmcs
/0D0h0
/Certification.asmx
/certification/
/License.asmx
/licensing
/licensing/
/PreLicense.asmx
/publish.asmx
/server.asmx
/ServerCertification.asmx
/ServiceDiscovery.asmx
/servicediscovery/
/ServiceLocator.asmx
/templatedistribution.asmx
: :$:(:,:0:4:8:<:@:D:H:L:P:T:X:\:`:d:h:l:p:t:x:|:
: :$:(:,:0:4:H:L:P:T:h:l:p:t:
: :(:,:@:D:T:X:h:l:|:
: :(:0:@:d:l:t:|:
: :(:4:<:\:x:
: :*:::L:p:
: :,:4:h:x:
: :,:L:T:`:
: :':2:p:z:
: :;:s:
: :@:H:P:X:d:
: :@:H:T:t:|:
: :@:H:X:`:
: :+:Y:
: :0:4:8:L:P:T:\:t:x:|:
: :0:4:8:P:T:l:|:
: :0:M:m:
: :4:<:L:T:l:
: :8:<:T:d:h:l:p:x:
: :G:]:u:
: ;0;<;\;h;p;
: ;0;<;D;x;
:!:\:
:!:3:=:M:f:}:
:!:5:A:U:a:g:q:
:!:Q:1;_;d;
:!;l;:<
:!;V;{;
:":.:v:
:":':^:
:":2:F:j:
:":2:G:Q:f:m:}:
:":2:i:
:":K:U:e:|:
:";S;
:#:(:3:9:A:G:M:S:Y:_:e:k:q:w:}:
:#:@:
:#:<:H:
:#:3:E:J:`:j:z:
:#:3:G:b:x:
:#;(;2;7;|;
:#;a;g;l;v;};
:#;p;~;
:$:):n:
:$:,:`:t:
:$:,:4:<:D:L:T:\:d:l:t:|:
:$:,:4:<:H:h:p:|:
:$:,:8:X:d:
:$:+:;:O:l:s:
:$:<:L:P:T:l:p:x:|:
:$:0:P:X:d:
:$:4:z:
:$:D:L:X:x:
:$:H:R:b:
:$:X:`:h:t:|:
:$;+;;;*<J<
:$;1;;;I;
:$;b;o;
:$;t;
:%:/:C:W:
:%:::@:w:
:&:]:c:p:}:
:&:2:M:X:_:y:
:&:6:
:&:M:W:g:
:&:S:g:l:v:{:
:&;.;R;_;z;
:&;I;g;
:&;u;z;
:(:/:U:Z:d:i:
:(:;:E:U:e:x:
:(:0:8:@:T:\:d:l:
:(:0:d:t:
:(:0:T:h:|:
:(:2:B:W:u:
:(:3:=:M:x:
:(:4:<:p:
:(:4:T:\:h:
:(:8:H:L:P:h:x:
:(:D:T:`:
:(:X:j:
:(;l;
:):.:X:c:h:
:):~:
:):L:j:t:
:):P:`:g:
:);5;E;l;
:*:/:9:@:P:Z:j:
:*:>:
:,:0:@:D:H:L:T:h:x:|:
:,:0:H:L:P:T:X:\:`:d:h:l:
:,:2:;:G:f:u:
:,:4:D:L:T:\:d:l:t:
:,:6:S:]:}:
:,:8:@:`:|:
:,:8:@:d:x:
:,:8:@:X:|:
:,;L;d;
:.:3;9;>;E;J;e;v;
:.:7:<:M:e:k:
:.;4;
:.;f;/<5<T<Z<
:/:9:I:`:
:/:9:I:q:
:/:U:
:/;e;
:::V:r:
::;U;`;
:':>:t:
:':c:
:':c:x:
::CreateDirectory(path.c_str(), pSecurityAttributes)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCat(wszFileName, uFileNameBufferLength, FindFileData.cFileName)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCat(wszFilePath, uLen, g_wszLS_FileNameKeyDelimitter)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCat(wszFilePath, uLen, L".drm")
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCat(wszFilePath, uLen, L".xml")
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCat(wszFilePath, uLen, wszPrimaryKeyIn)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCat(wszFilePath, uLen, wszSecKeyIn)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCat(wszIssuerXMLFull, uIssuerXMLBufferLength, wszActualIssuedPrincipalXML)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCat(wszLockName, uLockNameBufferLength, wszFileName)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCat(wszPrimaryKey, uPrimaryKeyBufferLength, g_wszCloseBraceChar)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCat(wszPrimaryKey, uPrimaryKeyBufferLength, g_wszDefaultForUser)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCat(wszPrimaryKey, uPrimaryKeyBufferLength, g_wszOpenBraceChar)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCat(wszPrimaryKey, uPrimaryKeyBufferLength, g_wszWildCardAsteriskChar)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCat(wszPrimaryKey, uPrimaryKeyBufferLength, pwszSearchDataMasked[i])
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCat(wszPrimaryKey, uPrimaryKeyBufferLength, wszLicenseIdMasked)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCat(wszPrimaryKey, uTotalLength, g_wszCloseBraceChar)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCat(wszPrimaryKey, uTotalLength, g_wszDefaultForUser)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCat(wszPrimaryKey, uTotalLength, g_wszLS_FileNameKeyDelimitter)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCat(wszPrimaryKey, uTotalLength, g_wszLS_GIC_Prefix)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCat(wszPrimaryKey, uTotalLength, g_wszOpenBraceChar)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCat(wszPrimaryKey, uTotalLength, wszCIDMasked)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCat(wszPrimaryKey, uTotalLength, wszHostNameMasked)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCat(wszPrimaryKey, uTotalLength, wszIssuerIDMasked)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCat(wszPrimaryKey, uTotalLength, wszLicenseIDMasked)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCat(wszPrimaryKey, uTotalLength, wszRACHostNameMasked)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCat(wszPrimaryKey, uTotalLength, wszRACIssuerIDMasked)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCat(wszPrimaryKey, uTotalLength, wszRACUserNameMasked)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCat(wszPrimaryKey, uTotalLength, wszServerPubKeyDigestMaskedHash)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCat(wszPrimaryKey, uTotalLength, wszTemplateGuidMasked)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCat(wszPrimaryKey, uTotalLength, wszTemplateHashMasked)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCat(wszPrimaryKey, uTotalLength, wszUserIdMaskedHash)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCat(wszPrimaryKey, uTotalLength, wszUserNameMasked)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCat(wszServerUrl, cchServerUrl, g_wszPUB_DiscoverServicePadding)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCat(wszServerURL, uServerUrlBufferLength, g_wszAILT_GetAcquireTemplatesPadding)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCat(wszServerUrl, uServerUrlBufferLength, g_wszPUB_ServiceLocatorPadding)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(pwszSearchDataMasked[i], strLen + 1, pwszSearchData[i])
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszCIDSKUIDXML, strLen + 1, wszCIDXMLEmpty)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszContentId, *puContentIdLength, wszContentIdOut)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszDescription, *puDescriptionLength, wszDescriptionOut)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszDomain, strLen + 1, pwszLDAPString[0])
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszFileName, uFileNameBufferLength, m_storePath->GetPath().c_str())
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszFilePath, uLen, wszDirectory)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszForest, strLen + 1, ptempDomainInfo->DnsForestName)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszILXml, static_cast<UINT>(uTotalLength), wszIssuanceLicenseDataTemp)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszIssuanceLicenseDataTemp + static_cast<UINT>(ulength), uTotalLength - ulength, L"</XrML>")
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszIssuanceLicenseDataTemp + static_cast<UINT>(ulSignatureOffset), uTotalLength - ulSignatureOffset, wszSignature)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszIssuanceLicenseDataTemp, uTotalLength, wszIL)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszIssuanceLicenseTemplate, *puIssuanceLicenseTemplateLength, m_wszSignedIssuanceLicenseTemplate)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszIssuanceLicenseTemplate, *puIssuanceLicenseTemplateLength, wszRightsTemplateXMLLocal)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszIssuerData + (UINT)cIssuerData, uIssuerDataBufferLength - cIssuerData, L"</ISSUER>")
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszIssuerData + (UINT)cIssuerData, uIssuerDataBufferLength - cIssuerData, wszIssuerObjectTagStart)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszIssuerData, uIssuerDataBufferLength, L"<ISSUER>")
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszIssuerXML + static_cast<size_t>(uIssuerCurrentLen), uIssuerLen - uIssuerCurrentLen, L"</ISSUER>")
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszIssuerXML + static_cast<size_t>(uIssuerCurrentLen), uIssuerLen - uIssuerCurrentLen, wszExtLicAcqDistPointXML)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszIssuerXML + static_cast<size_t>(uIssuerCurrentLen), uIssuerLen - uIssuerCurrentLen, wszLicAcqDistPointXML)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszIssuerXML + static_cast<size_t>(uIssuerCurrentLen), uIssuerLen - uIssuerCurrentLen, wszVersionXML)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszIssuerXML, strLen + 1, m_pCCLCPubData->m_wstrIssuedPrincipalXML.c_str())
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszIssuerXML, uIssuerLen, L"<ISSUER>")
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszIssuerXMLFull, uIssuerXMLBufferLength, wszIssuerXML)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszLicenseTemp + static_cast<size_t>(uLicenselength), ulength - uLicenseTempLength, pCCLCPubData->m_wstrCLC.c_str())
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszLicenseTemp, ulength, wszLicense)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszLicExtUrl, strLen + 1, g_wszCloudLicenseServerUrl)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszLocal, strLen + 1, wszToDup)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszLocalValue, strLen + 1, g_wszRMSOnlineCertificationUrl)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszLockName, uLockNameBufferLength, m_storePath->GetPath().c_str())
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszName, *puNameLength, pCNameValue->GetName())
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszName, *puNameLength, wszNameOut)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszOSExclusionConditionsXML + static_cast<UINT>(uCurrentBufferOffset), uOSExclusionXMLLength - uCurrentBufferOffset, wszOSExclusionXML)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszPrimaryKey, uPrimaryKeyBufferLength, g_wszWildCardAsteriskChar)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszPrimaryKey, uPrimaryKeyBufferLength, wszPrefixToUse)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszPrimaryKey, uTotalLength, g_wszLS_TEMPLATE_Prefix)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszPrimaryKey, uTotalLength, wszPrefixToUse)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszReferralInfoName, *puReferralInfoNameLength, wszTempName)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszReferralInfoURL, *puReferralInfoURLLength, wszTempURL)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszRightsXML + static_cast<UINT>(uCurrentBufferOffset), uRightXMLLength - uCurrentBufferOffset, wszRight)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszServerUrl, cchServerUrl, wszDiscoverUrl.c_str())
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszServerUrl, uServerUrlBufferLength, wszLicenseUrl)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszServerURL, uServerUrlBufferLength, wszURL)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszTemp, strLen + 1, pwszToDup[cCount])
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszUsagePolicyExclusionXML + static_cast<UINT>(uCurrentBufferOffset), uUsagePolicyExclusionXMLLength - uCurrentBufferOffset, wszXMLData)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszUsagePolicyInclusionXML + static_cast<UINT>(uCurrentBufferOffset), uUsagePolicyInclusionXMLLength - uCurrentBufferOffset, wszXMLData)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszUserId, *puUserIdLength, m_wszUserId)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszUserIdType, *puUserIdTypeLength, m_wszUserIdType)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszUserName, *puUserNameLength, m_wszUserName)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszUsersXML + static_cast<UINT>(uCurrentBufferOffset), uUserXMLLength - uCurrentBufferOffset, wszUserXMLLocal)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszValue, *puValueLength, pCNameValue->GetValue())
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszValue, strLen + 1, pwszLDAPString[0])
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopyN(pCurPosition, uiDomainBufferLength - (pCurPosition - wszDomain), pStart, pEnd - pStart)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopyN(wszIssuanceLicenseDataTemp + static_cast<UINT>(ulength), uTotalLength - ulength, m_pCCLCPubData->m_wszLicensorCertLeafNodeStart, m_pCCLCPubData->m_wszLicensorCertLeafNodeEnd-m_pCCLCPubData->m_wszLicensorCertLeafNodeStart+wcslen(L"</XrML>"))
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopyN(wszIssuerXML + static_cast<size_t>(uIssuerCurrentLen), uIssuerLen - uIssuerCurrentLen, wszObjTagLocation, wszPrincipalEndTagLocation - wszObjTagLocation)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopyN(wszRACHostName, uRACIdSize, wszRACIdStart, (uRACIdSize-1))
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopyN(wszRACIssuerID, uRACIdSize, wszRACIdStart, (uRACIdSize-1))
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopyN(wszRACUserName, uRACIdSize, wszRACIdStart, (uRACIdSize-1))
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchLength(g_wszCloudLicenseServerUrl, IPC_OS_MAX_CCH, &strLen)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchLength(g_wszRMSOnlineCertificationUrl, IPC_OS_MAX_CCH, &strLen)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchLength(m_pCCLCPubData->m_wstrIssuedPrincipalXML.c_str(), IPC_OS_MAX_CCH, &strLen)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchLength(ptempDomainInfo->DnsForestName, IPC_OS_MAX_CCH, &strLen)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchLength(pwszLDAPString[0], IPC_OS_MAX_CCH, &strLen)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchLength(pwszSearchData[i], IPC_OS_MAX_CCH, &strLen)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchLength(pwszToDup[cCount], IPC_OS_MAX_CCH, &strLen)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchLength(wszCIDXMLEmpty, IPC_OS_MAX_CCH, &strLen)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchLength(wszToDup, IPC_OS_MAX_CCH, &strLen)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchPrintf(static_cast< WCHAR *>(wszRightsGroupXML), static_cast<UINT>(uRightsGroupXMLLength), wszRightsGroupXMLTemplate, static_cast<const WCHAR *>(wszRightsXML))
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchPrintf(static_cast< WCHAR *>(wszXML), uXMLLength, wszUserXMLTemplate1, static_cast<const WCHAR *>(wszEscapedUserIdType) ? static_cast<const WCHAR *>(wszEscapedUserIdType) : static_cast<const WCHAR *>(wszUserIdTypeUnSpecified), static_cast<const WCHAR *>(wszEscapedUserId), static_cast<const WCHAR *>(wszEscapedUserName), wstrUserPropXml.c_str())
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchPrintf(static_cast< WCHAR *>(wszXML), uXMLLength, wszUserXMLTemplate2, static_cast<const WCHAR *>(wszEscapedUserIdType) ? static_cast<const WCHAR *>(wszEscapedUserIdType) : static_cast<const WCHAR *>(wszUserIdTypeUnSpecified), static_cast<const WCHAR *>(wszEscapedUserName), wstrUserPropXml.c_str())
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchPrintf(static_cast< WCHAR *>(wszXML), uXMLLength, wszUserXMLTemplate3, static_cast<const WCHAR *>(wszEscapedUserIdType) ? static_cast<const WCHAR *>(wszEscapedUserIdType) : static_cast<const WCHAR *>(wszUserIdTypeUnSpecified), static_cast<const WCHAR *>(wszEscapedUserId), wstrUserPropXml.c_str())
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchPrintf(static_cast<WCHAR *>(wszConditionListXML), uConditionListXMLTemplateLength, wszConditionListXMLTemplate, static_cast<WCHAR *>(wszUsersXML), static_cast<WCHAR *>(wszTimeXML) ? static_cast<WCHAR *>(wszTimeXML) : L"", static_cast<WCHAR *>(wszIntervalTimeXML) ? static_cast<WCHAR *>(wszIntervalTimeXML) : L"")
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchPrintf(static_cast<WCHAR *>(wszDescriptor), uDescriptorXMLLength, wszDescriptorXMLTemplate, static_cast<WCHAR *>(wszLID))
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchPrintf(static_cast<WCHAR *>(wszEnablingBitsXML), uEnablingBitsXMLLength, wszEnablingBitsXMLTemplate, pdrmCryptoVersion->wszSealedKeyType, (m_uFlags & 0x02) ? (static_cast<UINT>(cbEnablingBits)*8) : cBits, static_cast<WCHAR *>(wszEnablingBitsBase64data))
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchPrintf(static_cast<WCHAR *>(wszLicense), static_cast<UINT>(uLicenseLength), wszLicenseTemplate, m_wszIssuedTimeXML ? m_wszIssuedTimeXML : L"", L"", static_cast<WCHAR *>(wszDescriptor), wszIssuerObjectTagStart, wszGICIssuedPrincipal, m_wszReferralInfoXML ? m_wszReferralInfoXML : L"", m_wszMetaDataXML, static_cast<WCHAR *>(wszEnablingBitsXML), m_wszAppSpecificDataXML ? m_wszAppSpecificDataXML : L"")
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchPrintf(static_cast<WCHAR *>(wszSignature), uSignatureXMLLength, wszSignatureTemplate, pdrmCryptoVersion->wszHashAlg, cHashed*8, static_cast<WCHAR *>(wszEULDigest), cNumOfSigBytes*8, static_cast<WCHAR *>(wszEULSigValue))
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchPrintf(static_cast<WCHAR *>(wszUsagePolicyXML), static_cast<UINT>(uUsagePolicyXMLLength), wszUsagePolicyExclusionXMLTemplate, static_cast<WCHAR *>(wszUsagePolicyExclusionXML))
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchPrintf(static_cast<WCHAR *>(wszVersionXML), uXMLLength, wszVersionXMLTemplate, static_cast<WCHAR *>(wszVersion))
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchPrintf(wszApplicationSpecificDataXML + static_cast<size_t> (uXMLLength), SafeInt<size_t>(uApplicationSpecificDataXMLTemplateLen) - uXMLLength, wszApplicationSpecificDataXMLTemplate, wszId, wstrName.c_str(), wstrValue.c_str())
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchPrintf(wszCancelEventName, uCancelEventNameBufferLength, g_wszPUB_SignCancelEventName, GetCurrentProcessId(), hIssuanceLicense)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchPrintf(wszCIDSKUIDXML + static_cast<size_t>(uLength), SafeInt<size_t>(uXMLLength) - uLength, wszMetaDataXML, m_wszOwnerXML ? m_wszOwnerXML : L"", wszSKUIDXMLData ? wszSKUIDXMLData : L"")
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchPrintf(wszCIDSKUIDXML, uXMLLength, wszCIDXML, m_wszContentType ? wszObjTypeXMLData : L"", m_wszContentIdType ? m_wszContentIdType : L"MS-GUID", m_wszContentId, wszContentNameXMLData ? wszContentNameXMLData : L"")
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchPrintf(wszContentNameXMLData, uLength, wszContentNameXML, m_wszContentName)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchPrintf(wszCurrTime, 260, L"%04d-%02d-%02dT%02d:%02d", currTime.wYear, currTime.wMonth, currTime.wDay, currTime.wHour, currTime.wMinute)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchPrintf(wszDescriptorXML, static_cast<UINT>(uDescriptorXMLLen), wszDescriptorXMLTemplate, m_wszDescriptorId ? m_wszDescriptorId : static_cast<WCHAR *>(wszGUID), static_cast<WCHAR *>(wszNameAndDescriptionXML))
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchPrintf(wszEncryptedRightsXML, uEncryptedRightsXMLLength, wszEncryptedRightsXMLTemplate, wszRightsData)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchPrintf(wszExtendedInfoXML + static_cast<size_t>(uExtendedInfoXMLLength), uExtendedInfoDataLength - uExtendedInfoXMLLength, wszExtendedInfoXMLTemplate, m_pwszExtendedInfoName[i], m_pwszExtendedInfoValue[i])
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchPrintf(wszIntervalTimeXML, uIntervalTimeXMLTemplateLength, wszIntervalTimeXMLTemplate, m_cIntervalTime)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchPrintf(wszIssuedPrincipalXML, uIssuedPrincipalXMLLength, wszIssuedPrincipalXMLTemplate, wszPrincipalStart, wszEnablingBits)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchPrintf(wszIssuedTimeXML, uIssuedTimeXMLLength, wszIssuedTimeXMLTemplate, systime.wYear, systime.wMonth, systime.wDay, systime.wHour, systime.wMinute)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchPrintf(wszLicenseTemp + static_cast<size_t>(uLicenselength), ulength - uLicenselength, L"%s%s", static_cast<WCHAR *>(wszEULSignature), L"</XrML>")
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchPrintf(wszMaxUINT, strLen, L"%d", uValue)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchPrintf(wszNameAndDescriptionXML + static_cast<UINT>(uXMLLength), uNameAndDescriptionXMLTemplateLen - uXMLLength, wszNameAndDescriptionXMLTemplate, pCNameValue->GetData(), pCNameValue->GetName(), pCNameValue->GetValue())
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchPrintf(wszObjTypeXMLData, uLength, wszObjTypeXML, m_wszContentType)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchPrintf(wszOwner, uOwnerLength, wszOwnerTemplate, wszObjectNodeStart)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchPrintf(wszReferralInfoXML, uReferralInfoXMLLength, wszDistPointXMLTemplate1, wszDistPointType, wszGUID, m_wszReferralInfoName, m_wszReferralInfoURL)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchPrintf(wszReferralInfoXML, uReferralInfoXMLLength, wszDistPointXMLTemplate2, wszDistPointType, wszGUID, m_wszReferralInfoURL)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchPrintf(wszReferralInfoXML, uReferralInfoXMLLength, wszDistPointXMLTemplate3, wszDistPointType, wszGUID, m_wszReferralInfoName)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchPrintf(wszRefreshConditionXML, uRefreshConditionXMLLength, wszRefreshConditionXMLTemplate, L"", wszOSExclusionConditionsXML ? wszOSExclusionConditionsXML : L"")
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchPrintf(wszRightsTemplateXMLLocal, uRLTemplateLength, wszRLTemplate, m_wszIssuedTimeXML ? m_wszIssuedTimeXML : L"", m_wszValidityTimeXML ? m_wszValidityTimeXML : L"", m_wszNameAndDescriptionXML ? m_wszNameAndDescriptionXML : L"", wszIssuerXRML ? wszIssuerXRML : L"", m_wszReferralInfoXML ? m_wszReferralInfoXML : L"", m_wszMetaDataXML ? m_wszMetaDataXML : L"", m_wszRefreshConditionXML ? m_wszRefreshConditionXML : L"", ((uFlag == 0x01) && m_wszRightsDataXML) ? m_wszRightsDataXML : L"", wszEncryptedRightsXML ? wszEncryptedRightsXML : L"", m_wszUsagePolicyXML ? m_wszUsagePolicyXML : L"", wszAppSpecificData ? wszAppSpecificData : L"", wszLicenseMetadata ? wszLicenseMetadata : L"")
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchPrintf(wszSecurityDescriptor, lenSD, pwszSDTemplate, wszUserID)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchPrintf(wszSKUIDXMLData, uLength, wszSKUIDXML, m_wszSKUIdType, m_wszSKUId)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchPrintf(wszUsagePolicyXML + static_cast<UINT>(uUsagePolicyExclusionXMLLength), static_cast<UINT>(uUsagePolicyXMLLength - uUsagePolicyExclusionXMLLength), wszUsagePolicyInclusionXMLTemplate, static_cast<WCHAR *>(wszUsagePolicyInclusionXML))
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchPrintf(wszValidityTimeXML, uValidityTimeXMLLength, wszValidityTimeXMLTemplate, m_stTimeFrom.wYear, m_stTimeFrom.wMonth, m_stTimeFrom.wDay, m_stTimeFrom.wHour, m_stTimeFrom.wMinute, m_stTimeUntil.wYear, m_stTimeUntil.wMonth, m_stTimeUntil.wDay, m_stTimeUntil.wHour, m_stTimeUntil.wMinute)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchPrintf(wszValidityTimeXML, uValidityTimeXMLTemplateLength, wszValidityTimeXMLTemplate, m_stFrom.wYear, m_stFrom.wMonth, m_stFrom.wDay, m_stFrom.wHour, m_stFrom.wMinute, m_stUntil.wYear, m_stUntil.wMonth, m_stUntil.wDay, m_stUntil.wHour, m_stUntil.wMinute)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchPrintf(wszXML, uRightXMLTemplateLength, wszRightXMLTemplate, m_wszRightName, wszExtendedInfoXML ? wszExtendedInfoXML : L"", wszConditionListXML ? wszConditionListXML : L"")
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchPrintf(wszXML, uRightXMLTemplateLength, wszRightXMLTemplate, m_wszRightName, wszExtendedInfoXML ? wszExtendedInfoXML : L"", wszConditionListXML ? wszConditionListXML : L"", m_wszRightName)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchPrintf(wszXML, uXMLLength, wszOSExclusionXMLTemplate, m_VersionInfo.m_wszMinVersion, m_VersionInfo.m_wszMaxVersion ? m_VersionInfo.m_wszMaxVersion : m_VersionInfo.m_wszMinVersion)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchPrintf(wszXML, uXMLLength, wszPolicyByDigestXMLTemplate, m_DigestInfo.m_wszDigestAlgorithm, m_DigestInfo.m_cbDigest, static_cast<WCHAR *>(wszDigest))
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchPrintf(wszXML, uXMLLength, wszPolicyByNameXMLTemplate, m_VersionInfo.m_wszName, m_VersionInfo.m_wszMinVersion, m_VersionInfo.m_wszMaxVersion)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchPrintf(wszXML, uXMLLength, wszPubKeyXMLTemplate, uDecodedDataLen, m_wszPublicKey)
::UrlGetPartW(domain.c_str(), wszStrippedDomain, &dwSize , URL_PART_HOSTNAME, 0)
:';3;C;j;
:';M;Z;d;t;
:-;o;{;
:?:F:
:?:L:
:?;<<
:?;I;Y;
:@:[:
:@:~:
:@:E:O:V:
:@:J:Z:
:^:o:
:^;u;
:+:B:
:+:F:]:&;R;l;
:+:M:\:d:{:
:+;{;
:+;3;H;N;
:+;A;F;P;U;|;
:<:{:
:<:p:
:<:P:d:l:t:|:
:<:Q:p:
:<:T:d:t:
:<;_;w;
:=;Y;u;
:>;L;r;
:0:<:\:
:0:4:D:H:`:p:
:1:@:P:]:g:w:
:1:6:@:Q:[:q:{:
:1:A:F:d:
:2:[:`:j:o:
:2:M:h:
:2;8;];s;
:3:9:?:I:N:a:q:
:3:c:
:3;v;
:4:E:f:
:4:h:
:4:i:
:4:p:
:4;p;
:5:k:/;
:5;=;H;P;[;c;n;v;
:5;z;
:7:`:
:7:>:H:w:~:
:8:H:T:\:|:
:8;m;
:9:O:b:}:
:9:S:
:A:H:]:d:z:
:B:L:V:u:
:B;a;
:C;k;
:C;M;];q;
:DESCRIPTION 
:E:U:a:
:F:{:
:F:v:
:f;>u
:H:\:l:|:
:H:h:
:h:w:
:I:]:c:
:J:e:
:J:r:
:J:y:
:J;w;
:K:^:v:
:M:b:
:m:v:
:m;s;z;
:N;j;
:N;T;
:NAME 
:O:V:[:b:g:
:O;k;
:o;u;
:Q;c;m;};
:R;l;r;
:S:v:
:S;];
:U;];s;
:U;^;n;
:V!2m
:W:z:
:X:^:p:z:
:X:s:
; ;$;(;,;0;4;8;<;@;D;H;L;P;T;X;\;`;d;h;l;p;t;x;|;
; ;$;4;D;H;L;P;d;h;l;
; ;$;8;<;@;X;h;x;
; ;(;8;@;d;l;t;|;
; ;(;L;`;t;|;
; ;,;L;T;`;
; ;,;L;X;x;
; ;-;7;G;`;w;
; ;B;L;Y;
; ;T;d;p;
; <A<{<
; <G<
;!;(;-;A;H;X;l;
;!;(;G;N;^;u;
;!;);a;i;
;!;+;A;F;P;a;k;
;!;1;X;b;r;
;!;4;f;
;!;8;Z;w;
;!;L;Z;h;o;v;
;";4;I;S;c;s;
;"<,<<<W<a<q<
;"<e<~<
;"<k<}<
;#;3;n;x;
;#;7;E;
;#;V;b;
;#<(<-<A<[<`<e<y<
;#<\<
;$;(;,;0;8;P;T;X;l;p;t;
;$;,;`;h;p;|;
;$;,;`;p;|;
;$;,;4;<;D;L;T;\;d;l;t;|;
;$;,;4;<;D;L;X;x;
;$;,;8;@;X;|;
;$;.;5;E;O;_;
;$;-;V;a;l;u;
;$;@;P;\;d;
;$;[;b;r;
;$;0;8;T;\;d;l;t;
;$;0;P;\;|;
;$;0;P;X;`;l;
;$;0;P;X;d;
;$;4;<;D;P;p;|;
;$;4;D;H;L;d;t;x;
;$;7;A;Q;q;
;$;A;
;$;D;L;T;d;x;
;$;F;a;
;$<`<
;$<1<H<S<h<
;$<5<A<
;$<O<
;%;*;4;9;
;%;1;E;Q;e;q;
;%<\<
;%<E<g<
;&;O;o;
;&<4<F<c<n<
;(;,;0;4;<;@;H;L;T;h;l;p;t;x;|;
;(;,;D;H;L;T;l;p;t;|;
;(;<;
;(;0;<;D;x;
;(;0;d;t;
;(;4;<;p;
;(;8;H;L;\;`;x;|;
;(;H;P;X;d;
;(<|<
;(<><W<\<f<k<
;(<2<
;(<8<z<
;);;;};
;);3;C;U;Z;p;z;
;);c;u;
;);D;
;)<#=
;)<3<l<}<
;)<6<y<
;*;=;H;
;*;1;C;M;];w;
;*;9;C;S;g;x;
;*<f<
;*<m<
;,;<;@;P;T;X;\;d;h;l;t;
;,;<;H;P;l;t;|;
;,;0;4;8;@;D;X;h;l;p;t;
;,;1;;;@;_;d;n;s;
;,;4;D;T;\;t;
;.;5;G;
;.;E;`;
;.;I;
;.;k;
;.<[<
;.<{<
;.<H<Q<
;/;C;[;f;y;
;/;m;s;
;';.;9;@;J;Z;v;
;-;:;G;T;a;n;
;;;e;
;';?;Z;u;
;;<E<S<
;';1;8;N;W;_;
;';7;H;X;d;s;|;
;-;e;
;-;L;
;-;S;
;;t*93t
;?;};
;?;g;
;?;I;Y;
;?<N<w<
;@;K;t;};
;@;R;\;l;
;+;R;a;f;p;u;
;+<^<y<
;+<p<
;'</<f<n<
;<;_<
;<;F;V;u;
;<;i;
;<;r;
;<<\<t<
;=;`;
;=;a;
;=;C;I;R;X;
;=;R;u;D<N<^<r<~<
;0;:;D;];t;
;0;:;J;Z;f;k;u;z;
;0;5;?;D;U;Z;d;k;~;
;0;8;L;T;h;p;x;
;0;Y;_;e;
;0<]<
;0<p<
;0<p<z<
;0<x<
;0u>9E
;0v6f
;1;^;h;x;
;1;6;@;Q;[;q;v;
;1;7;E;};
;1<J<k<
;2;<;L;g;~;
;2;>;\;
;2;9;I;e;
;2;b;
;2<e<
;3;j;
;3;Q;h;
;3<~<
;4;<;D;P;p;x;
;4;8;P;T;l;p;
;4;D;T;`;h;
;4;n;
;4<`<
;5<?<O<
;6;6<h<
;6;G;];
;6;Y;
;6<H<O<\<c<u<
;7;@;\;
;7<><H<\<
;7>t>
;8;{;
;8;D;d;l;x;
;8;H;l;t;|;
;8;H;T;t;
;8;O;
;8<L<`<h<p<x<
;9;`;j;z;
;9;H;W;f;w;
;9<,>
;A;q;
;A;w;
;A<w<
;B;L;\;s;
;b<(>8>.?d?t?
;d<|<
;E;R;c;m;};
;F;`;s;y;
;F</=
;G(tI
;G(tL
;G(tt
;G(tz
;H;l;
;h;p;
;I;~;
;j;Xja
;k;u;
;M<g<o<u<
;N;];b;l;q;
;N;z;
;P;`;l;t;
;p<w<
;p4t#
;Q<q<
;T;i;
;T;Y;^;e;j;~;
;t04u
;Y;c;h;o;t;
;Y<h<s<x<
;Y4s)
? ?$?(?,?0?4?8?<?@?D?H?L?P?T?X?\?`?d?h?l?p?|?
? ?$?(?,?0?4?8?<?@?D?H?L?P?T?X?\?`?d?h?l?p?t?x?|?
? ?$?(?@?D?\?`?x?|?
? ?$?(?@?D?H?L?P?T?X?l?p?t?|?
? ?$?4?8?<?@?H?`?p?
? ?(?0?8?L?T?h?p?
? ?(?4?T?\?h?p?
? ?,?4?h?x?
? ?,?L?T?\?h?p?
? ?,?L?T?`?
? ?'?7?N?g?
? ?@?H?P?`?h?
? ?@?H?T?t?|?
? ?@?L?l?t?
? ?+?@?^?
? ?0?<?\?h?p?
? ?1?A?K?a?q?{?
? ?4?<?D?L?T?\?d?l?t?
?!?&?-?2?F?
?!?(?-?A?]?
?!?@?J?Z?
?!?<?
?!?5?A?U?a?u?
?!?6?D?L?Z?d?t?
?!?I?U?a?z?
?#?;?Q?l?
?#?-?=?X?b?r?
?#?4?A?R?W?^?c?r?y?
?$?(?,?4?8?<?D?H?\?`?p?t?x?
?$?(?8?<?L?P?T?X?\?`?h?
?$?/?a?
?$?;?F?[?~?
?$???_?s?
?$???I?Y?p?
?$?0?8?l?|?
?$?4?
?$?4?@?H?`?
?$?B?O?`?j?z?
?$?H?^?
?$?X?h?t?|?
?%?*?9?N?U?
?%???c?{?
?%?9?B?
?&?0?@?W?j?o?
?(?,?<?@?X?h?l?|?
?(?,?0?4?<?T?d?h?
?(?0?8?H?P?l?t?|?
?(?0?d?t?
?(?0?T?\?l?|?
?(?0?T?h?|?
?(?2?B?T?^?n?
?(?4?T?`?h?
?(?5?N?k?w?
?(?7?
?(?8?<?@?X?h?l?|?
?(?H?P?X?d?
?)?.?
?)?/?
?*?:?M?W?g?}?
?*?6?P?Z?w?
?,?<?@?P?T?X?\?`?h?p?
?,?<?L?X?x?
?,?=?X?p?
?,?0?H?L?d?h?l?t?
?,?3?C?Z?
?,?4?@?H?l?t?|?
?,?5?:?K?
?/?9?C?h?
?/?E?[?q?
?:?E?Z?
?:?G?
??_V@YAXPAX@Z
??0bad_cast@@QAE@ABV0@@Z
??0bad_cast@@QAE@PBD@Z
??0exception@@QAE@ABQBD@Z
??0exception@@QAE@ABQBDH@Z
??0exception@@QAE@ABV0@@Z
??0exception@@QAE@XZ
??1bad_cast@@UAE@XZ
??1exception@@UAE@XZ
??1type_info@@UAE@XZ
??3@YAXPAX@Z
??8type_info@@QBEHABV0@@Z
?@?d?
?@?P?\?d?
?_?h?
?+?T?q?
?<?H?
?<?H?P?h?
?<?L?X?`?
?>?C?M?T?
?0?8?@?P?X?|?
?0?E?W?i?~?
?1?;?Q?V?`?r?w?}?
?1?C?
?1?U?
?2?@?d?
?2?7?=?C?Z?h?p?w?~?
?2?7?A?F?U?\?f?v?
?2?e?
?2?X?
?3?=?M?
?3?I?a?
?4?<?H?h?p?|?
?4?B?
?4?N?g?}?
?456789:;<=
?5?R?h?
?6?l?
?6?N?W?`?e?j?q?v?
?6?O?p?
?6?Q?
?8?B?G?L?U?[?q?z?
?8?F?P?`?
?8?H?T?\?
?9?C?S?g?~?
?A?I?^?d?
?a?r?
?A?U?_?o?
?C?M?]?
?D?T?`?h?
?E?h?
?f?~?
?G?j?
?H?X?d?l?
?jaPV
?jpPV
?K?_?
?L?{?
?M?W?g?
?name@type_info@@QBEPBDXZ
?Q?[?k?
?Q?d?
?R?t?
?S?d?q?{?
?T?^?k?
?terminate@@YAXXZ
?U?_?o?
?U?e?s?
?what@exception@@UBEPBDXZ
?whr=
?X?a?
?Y?y?
@.data
@.reloc
@days
@encoding
@hours
@jtXf9F
@minutes
@months
@name
@seconds
@size
@type
@xULa
@years
[%hs(%hs)]
[%hs]
[%u]%hc
[*QmU
[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?\.)+[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?
[msdrm]: AcquireBatchPreLicenses : wszLAURL = %S, uFlags = %d , uNoOfUserIdentities = %d  
[msdrm]: AtlEscapeUrl failed
[msdrm]: FAILED while storing the License with hr = %x
[msdrm]: GenerateCertificationRequest - ExtractConcatenatedChain function FAILED with hr = %x 
[msdrm]: GetActiveDirectoryService FAILED : %x 
[msdrm]: GetServiceLocationForCertification Global Online SD lookup : %x 
[msdrm]: GetUserNameExW/GetComputerObjectNameW FAILED with error code: %d 
[msdrm]: GlobalServiceLocator::GetGlobalCertificationUrl Registry entry is missing so using                                                                                     hardcoded url : 0x%x 
[msdrm]: Ignoring un-known parameter type: %ws
[msdrm]: Incorrect form Action
[msdrm]: Incorrect form method: %ws
[msdrm]: InCorrect No. of Forms found in the message: %d
[msdrm]: IsResponseFromStartingUrl: Found final page: startUrl %S
[msdrm]: IsResponseFromStartingUrl: responseUrl %S
[msdrm]: Param Name = %ws
[msdrm]: Param Value = %ws
[msdrm]: SendRequest hr = 0x%x, HTTPReturnCode=%d
[msdrm]: ServiceLocatorHelpers::GetServiceLocationForCertification Registry lookup : 0x%08x 
[msdrm]: UnknownIdentityTypeLocator::GetServiceLocationForCertification SCP lookup : %x 
[msdrm]: WindowsScpLocator::GetServiceLocationForCertification SCP lookup : %x 
[msdrm]:-_DRMDecryptECB HR=0x%x
[msdrm]:+_DRMDecryptECB
[msdrm]:+AcquireBatchPreLicenses
[msdrm]:+AcquisitionProc
[msdrm]:+CHttpBase::LetTokenHandleTheError
[msdrm]:+DRMCloseEnvironmentHandle
[msdrm]:+DRMCloseHandle
[msdrm]:+DRMConstructCertificateChain
[msdrm]:+DRMCreateBoundLicense 
[msdrm]:+DRMCreateEnablingBitsDecryptor
[msdrm]:+DRMCreateEnablingBitsEncryptor
[msdrm]:+DRMCreateEnablingBitsSigner
[msdrm]:+DRMCreateEnablingPrincipal
[msdrm]:+DRMCreateIssuanceLicense
[msdrm]:+DRMDeconstructCertificateChain iWhich = %d
[msdrm]:+DRMDecrypt
[msdrm]:+DRMDecryptWithRac
[msdrm]:+DRMDuplicateHandle
[msdrm]:+DRMEnableAndEncrypt
[msdrm]:+DRMEncrypt
[msdrm]:+DRMGetInfo attribute = %S
[msdrm]:+DRMGetSignedIssuanceLicense
[msdrm]:+DRMInitEnvironment 
[msdrm]:+DRMSetGlobalOptions eGlobalOptions = DRMGLOBALOPTIONS_USE_SERVERSECURITYPROCESSOR
[msdrm]:+DRMSetGlobalOptions eGlobalOptions = DRMGLOBALOPTIONS_USE_WINHTTP
[msdrm]:+DRMSignWB
[msdrm]:+RMGetBoundRightKey
[msdrm]:-AcquireBatchPreLicenses
[msdrm]:-AcquisitionProc
[msdrm]:ADFS Url for the Url = %S is %S
[msdrm]:ADFS Url is too large to be logged
[msdrm]:Caching Resolvable UrL is too large to be logged
[msdrm]:Caching Resolvable Url=%S
[msdrm]:Caching ServerNotResolvable Url is too large to be logged
[msdrm]:Caching ServerNotResolvable Url=%S
[msdrm]:-CDRMStore::GetLicense type=%d hr=%x
[msdrm]:CheckAndSetArguments FAILED : %x
[msdrm]:CHttpBase::DispatchRequest returned hr:%x,ErrorCode=%d when hitting Url=%S with Post size=%d
[msdrm]:CHttpBase::DoGetOpertaion. If non-silent, will try other options
-[msdrm]:CHttpBase::HandlePostRedirects 0x%x
[msdrm]:-CHttpBase::LetTokenHandleTheError hr = 0x%x
[msdrm]:CHttpBase::SendMsgToRMS %s returned hr:%x,ErrorCode=%d when hitting Url=%S
[msdrm]:CHttpBase::SendMsgToRMS. Entered function with %s
[msdrm]:CHttpBase::SendMsgToRMS. Exiting function with %s, hr : %x
[msdrm]:CHttpBase::SendMsgToRMS:  Got final message
[msdrm]:CHttpBase::SendMsgToRMS: Returned from HandlePostRedirects, hr: %x
[msdrm]:CHttpBase::SendMsgToRMS: Returned successfully from GetResponse
[msdrm]:CloseHttpHandle FAILED hr: %x
[msdrm]:CreateEvents FAILED : %x
[msdrm]:CreateHandle FAILED : %x
[msdrm]:-DRMCloseEnvironmentHandle HR=0x%x
[msdrm]:-DRMCloseHandle HR=0x%x
[msdrm]:-DRMConstructCertificateChain HR=%x
[msdrm]:-DRMCreateBoundLicense HR=0x%x
[msdrm]:DRMCreateEnablingBitsDecryptor for EXTRACT FAILED : %x
[msdrm]:DRMCreateEnablingBitsDecryptor for EXTRACT SUCCEEDED
[msdrm]:-DRMCreateEnablingBitsDecryptor HR=0x%x
[msdrm]:-DRMCreateEnablingBitsEncryptor HR=0x%x
[msdrm]:-DRMCreateEnablingBitsSigner HR=0x%x
[msdrm]:-DRMCreateEnablingPrincipal HR=0x%x
[msdrm]:-DRMDeconstructCertificateChain HR=%x
[msdrm]:-DRMDecrypt HR=0x%x
[msdrm]:-DRMDecryptWithRac HR=0x%x
[msdrm]:-DRMDuplicateHandle HR=0x%x
[msdrm]:-DRMEnableAndEncrypt HR=0x%x
[msdrm]:-DRMEncrypt HR=0x%x
[msdrm]:-DRMGetInfo HR=0x%x
[msdrm]:DRMGetSignedIssuanceLicense Args: SymKeyType=%S
[msdrm]:-DRMInitEnvironment HR=0x%x
[msdrm]:DRMSign FAILED  : %x 
[msdrm]:-DRMSignWB HR=0x%x
[msdrm]:Environment Handle Creation took %d milliseconds
[msdrm]:FAILED AddRequestHeaders: Not able to disable Basic over non-ssl channel 0x%x
[msdrm]:FAILED hr: %x
-[msdrm]:GetDataFromResponse 0x%x
-[msdrm]:GetDataFromResponse: All params of interest (%d) found
-[msdrm]:GetDataFromResponse: All params of interest NOT found
[msdrm]:GetIssuanceLicensePointer FAILED : %x
[msdrm]:GetSignatureXML FAILED : %x 
[msdrm]:HandlePostRedirects: m_wszLastRequestURI: %ws
[msdrm]:HandlePostRedirects: When loop ended, response was NOT from starting url.
[msdrm]:HandlePostRedirects: wszFirstURL: %ws
[msdrm]:IpcSPCreateSecurityProcessor failed with HR=0x%x
[msdrm]:IpcSPCreateSecurityProcessor took %d milliseconds
[msdrm]:MultiByte Error
[msdrm]:pIssuanceLicense->GetSignatureXML FAILED  : %x 
[msdrm]:Posting token to %ws
[msdrm]:Response Url=%S
[msdrm]:-RMGetBoundRightKey HR=0x%x
[msdrm]:signed issuance license size (%d) exceeds limit (%d) : %x 
[msdrm]:wszServer = %S,wszUserID = %S,wszUserType = %S 
[msipc] All the logging slots are taken.
[msipc] ParseChallengeHeader: 401 challenge didn't return a resouce, trying the realm instead
[msipc] ParseChallengeHeader: Parsed the challenge successfully:
[msipc] QueryWWWAuthenticateHeader: Got a %d from the server.
[msipc]: ++++++++ ERROR: PreLicensing failed with error = 0x%X ++++++++
[msipc]: ++++++++ ERROR: PreLicensing principal (%ws) doesn't match the request (%ws) ++++++++
[msipc]: ++++++++ INFORMATION: Adding template: ++++++++
[msipc]: ++++++++ INFORMATION: PreLicensing call using the url: "%ws" ++++++++
[msipc]: ++++++++ INFORMATION: PreLicensing succeeded. ++++++++
[msipc]: ++++++++ WARNING: PreLicensing failed with FaultCode = %ws ++++++++
[msipc]: ++++++++ WARNING: PreLicensing failed with hr=0x%x ++++++++
[msipc]: ++++++++ WARNING: Skipping a template because it doesn't have a name and a description of the requested language. ++++++++
[msipc]: ++++++++ WARNING: Template acquisition failed with FaultCode = %S , FaultCorrelationId = %S , FaultString = %S ++++++++ 
[msipc]: ++++++++ WARNING: Template acquisition failed with FaultCode = %S , FaultString = %S ++++++++ 
[msipc]: Create Encryptor Failed hr = 0x%x
[msipc]: Deleting unreadable file.
[msipc]: Error - cannot generate the EUL for user of type %u, ID='%ws' - only email users are currently supported.
[msipc]: Error - could not generate the EUL for user '%ws'. HRESULT = 0x%08X
[msipc]: FAILED to delete file on error hr = %x
[msipc]: FAILED to delete file on read error hr = %x
[msipc]: FAILED to write to file. Deleting incomplete file.
[msipc]: GetComputerNameEx FAILED with error code: %d 
[msipc]: IIpcToken::Create Unknown Token type
[msipc]: IIpcToken::ValidateToken Unknown Token type
[msipc]: Scenario-Id is not available
[msipc]:+AcquireEnrollmentCert_msipp
[msipc]:+IPPUserIdentity::GetIdentityFromRegistryOrStore Searching using IssuerId
[msipc]:+IPPUserIdentity::GetIdentityFromRegistryOrStore Searching using Urls
[msipc]:+LoggedOnUserToken Created
[msipc]:+UserIdentities::GetTemplateIssuers Skipping identity as its for consumption only.
[msipc]:+UserIdentities::init Initialize Identity for %ws from Issuer %ws
[msipc]:+Win7IppLicense::IsFromRmso ServerInfo IsRmso = %d
[msipc]:+Win7IppLicense::IsFromRmso ServerInfo Not found hr = 0x%x
[msipc]:+WindowsUsernameAndPasswordToken Created
[msipc]:+WindowsUsernameAndPasswordToken::HandleCredsError
[msipc]:+WindowsUsernameAndPasswordToken::HandleCredsError Server already supports Auth Scheme.                                                                                         Credentials might be wrong
[msipc]:+WindowsUsernameAndPasswordToken::HandleCredsError Server doesn't support either                                                           WINHTTP_AUTH_SCHEME_NEGOTIATE or WINHTTP_AUTH_SCHEME_NTLM
[msipc]:+WindowsUsernameAndPasswordToken::HandleCredsError Suppoerted Schemes = %d,                                                                                     First Scheme = %d, Target = %d
[msipc]:+WindowsUsernameAndPasswordToken::HandleCredsError updating Auth Target from %d to %d
[msipc]:+WindowsUsernameAndPasswordToken::HandleCredsError Using NEGOTIATE Scheme
[msipc]:+WindowsUsernameAndPasswordToken::HandleCredsError Using NTLM Scheme
[msipc]:+WindowsUsernameAndPasswordToken::SetHeader Found URL in NTLM Cache.                   Setting Auth Scheme to NTLM
[msipc]:-AcquireEnrollmentCert_msipp
[msipc]:CDRMRegisterPLRestRequest::CanRegisterPL returning false for OnPrem server URL: %ws
[msipc]:CDRMRegisterPLRestRequest::GetRegisterPLEndPointURL server URL: %ws
[msipc]:CDRMRegisterPLRestRequest::RegisterPL Going to hit REST endpoint: %ws
[msipc]:CDRMRegisterPLRestRequest::RegisterPL JSON object for HTTP request built
[msipc]:CDRMRegisterPLRestRequest::RegisterPL JSON object for HTTP request packed into byte stream
[msipc]:CDRMSoapRequest::DispatchRequest hr: 0x%x
[msipc]:CDRMSoapRequest::DispatchRequest Using Original URL. Ignoring ServerInfo.
[msipc]:CDRMSoapRequest::DispatchRequest Using ServerInfo
[msipc]:CDRMSoapRequest::DispatchRequestLocal hr: %x
[msipc]:CDRMStore::GetPersistedLicense File Prefix to search = %ws
[msipc]:CDRMStore::GetPersistedLicense Raw Search Data = %ws Masked Data = %ws
[msipc]:CHttpBase::AddDiagnosticIdsToHeader hr = 0x%x
[msipc]:CHttpBase::AddHttpHeader hr = 0x%x
[msipc]:-CHttpBase::SendRequest Entered unhandled case (m_dwStatusCode= %d)
[msipc]:CHttpBase::SendRequest InternetErrorDlg with status code 0x%x
[msipc]:CHttpBase::SendRequest The WinHttpSendRequest() failed with %d, but there is another proxy setting to try with.
[msipc]:-CHttpBase::SendRequest Token Couldn't handle Error Code 0x%x. hr = 0x%x
-[msipc]:CRMSOServerVerification::CheckCertEKU hr = 0x%x
-[msipc]:CRMSOServerVerification::CheckRMSOUrlIsHttps hr = 0x%x
-[msipc]:CRMSOServerVerification::CheckSSLCert hr = 0x%x
-[msipc]:CRMSOServerVerification::GetSSLCert hr = 0x%x
-[msipc]:CRMSOServerVerification::ValidateRMSOSSLRequest hr = 0x%x
[msipc]:CServiceLocation::FindServiceLocationBatchRequest drmSoap.GetArrayParameterValue failed hr = 0x%x
[msipc]:Disabled SSPI auth for RMSO
[msipc]:getLicensingRedirectionUrl Found Redirection Url %ws -> %ws
[msipc]:InitMsipcExt Failed hr = 0x%x
[msipc]:IpcContext::CheckCancelEvent Cancel Event is Set
[msipc]:IpcContext::init Silent flag is not specified for the token type: %d. Setting silent flags.
-[msipc]:IpcOsVerifyCertMicrosoftRooted hr=0x%x
[msipc]:IpcTokenCache::GetCachedToken Adding new token to cache
[msipc]:IpcTokenCache::GetCachedToken Creating a new IIpcToken
[msipc]:IpcTokenCache::GetCachedToken Using Cached Token
[msipc]:IppTerm::Check An invalid term is specified. The duration is less than 1 minute. 
[msipc]:IppTerm::Check An invalid term is specified. The term is NULL.
[msipc]:IsMOSSAInstalled hr = 0x%x
[msipc]:IsMOSSAInstalled MOSSA Check hr = 0x%x
-[msipc]:MsftRootBuiltinVerification hr=0x%x
-[msipc]:MsftRootCustomVerification hr=0x%x
[msipc]:ReadHostNameRedirectionUrlsFromFile %ws -> %ws
[msipc]:ReadHostNameRedirectionUrlsFromFile File not found.
[msipc]:ReadHostNameRedirectionUrlsFromFile Trying to load file %ws
[msipc]:ServerInfo::checkAndSetSecondUrlRegPath Also setting ServerInfo for %ws
[msipc]:ServerInfoImpl::getServerInfoFromServer  FaultCode = %S , FaultCorrelationId = %S , FaultString = %S 
[msipc]:ServerInfoImpl::getServerInfoFromServer  FaultCode = %S , FaultString = %S 
[msipc]:ServerInfoImpl::getServerInfoFromServer: Getting Server Info From server
[msipc]:ServerInfoImpl::GetUrlForAuthType Unknown VRoot type url: %ws
[msipc]:ServerInfoImpl::GetUrlForAuthType: %ws AuthType not supported by server
[msipc]:ServerInfoImpl::loadAuthTypesFromRegistry AuthInfo not available
[msipc]:ServerInfoImpl::processResponse: Missing AuthTypes
[msipc]:ServerInfoImpl::processResponse: Missing IssuanceLicenseV2
[msipc]:ServerInfoImpl::processResponse: Missing ServerType. Setting to Enterprise
[msipc]:ServerInfoImpl::processResponse: Online Server
[msipc]:ServerInfoImpl::processResponse: Processing AuthTypes
[msipc]:ServerInfoImpl::processResponse: Processing IssuanceLicenseV2
[msipc]:TemplateManager :: isTemplateStoreStale TemplateStore is Stale
[msipc]IsSmartcardAuthNeeded: Checking for Url: %S
[msipc]IsSmartcardAuthNeeded: From cache, Smart Card Auth is needed
[msipc]IsSmartcardAuthNeeded: From cache, Smart Card Auth is not needed
[msipc]IsSmartcardAuthNeeded: Making a Get call to check if Smartcard Auth is needed.
[msipc]IsSmartcardAuthNeeded: Smart Card Auth is needed
[msipc]IsSmartcardAuthNeeded: Smart Card Auth is not needed
[msipp]: Error occured while deleteing the CLC HR=0x%x
[msipp]: Error occured while deleteing the EUL HR=0x%x
[msipp]: Error occured while deleteing the RAC HR=0x%x
[msipp]: IPP API debug tracing is on.
[msipp]: Most Recently Used UserIdentity Cache is disabled.
[msipp]: Most Recently Used UserIdentity Cache with size %d is enabled.
[msipp]::Win7IppLicense::GetReferralInfoUrl no referral info URL found
[msipp]::Win7IppLicense::GetReferralInfoUrl referral info found in license: %s
[msipp]:+CCLCLicense::SetIssuerName Setting Issuer name based on the URL: %ws
[msipp]:+CServiceLocation::GetServiceLocationForCertification Server didn't support CertificationInternalService
[msipp]:+IPPLicenseStore::AddCLCWithRAC
[msipp]:+IPPLicenseStore::AddEULWithRAC
[msipp]:+IPPLicenseStore::AddRAC
[msipp]:+IPPLicenseStore::DeleteAllLicenses
[msipp]:+IPPLicenseStore::DeleteEUL
[msipp]:+IPPLicenseStore::DeleteRAC
[msipp]:+IPPLicenseStore::GetEULWithRAC
[msipp]:+IPPLicenseStore::GetFirstCLCWithRAC
[msipp]:+IPPLicenseStore::GetMachineCert
[msipp]:+IPPLicenseStore::GetTemplates
[msipp]:-CDRMStore::GetFileNamesAndData hr=%x
[msipp]:-CHttpBase::SendRequest hr = 0x%x
[msipp]:ERROR: Not able to delete CLCs hr = 0x%x
[msipp]:ERROR: Not able to delete EULs hr = 0x%x
[msipp]:ERROR: Not able to delete GICs hr = 0x%x
[msipp]:ERROR: Not able to delete JSON CLCs hr = 0x%x
[msipp]:ERROR: Not able to delete Machine Cert hr = 0x%x
[msipp]:Failed to delete the file hr = 0x%x
[msipp]:Failed to parse the %d license set. hr = 0x%x
[msipp]:IppAcl::WriteToLicense Adding full permissions to owner
[msipp]:IppAcl::WriteToLicense Some rights have already been specified for owner. So not adding full permissions to owner.
[msipp]:IPPLicenseStore::CreateLicenseWithRacFromArray: Failed to parse the license pair.                         Ignoring this pair and continuing. hr = 0x%x
[msipp]:IPPLicenseStore::DeleteLicense: Failed to parse the license, So deleting: %ws
[msipp]:IPPLicenseStore::GetEULWithRAC No license found
[msipp]:LicenseNameValue::WriteToLicense Adding NOLICCACHE because IntervalTime is set to 0
[msipp]:LicenseNameValue::WriteToLicense Skipping NOLICCACHE App data
[msipp]:LicenseState::GetIntervalTime NOLICCACHE is set. So returning Interval time as 0
[msipp]:No of Licenses found: %d
[msipp]:ServerInfoCache::GetServerInfo GetServerInfo Extranet Url hr=0x%x
[msipp]:ServerInfoCache::GetServerInfo GetServerInfo Intranet Url hr=0x%x
[msipp]:TemplateManager::GetConfiguredUpdateFrequencyInDays can't find the MSIPC reg key 0x%x
[msipp]:TemplateManager::GetConfiguredUpdateFrequencyInSeconds can't find the MSIPC reg key 0x%x
[msipp]:Win7IppLicense::DetermineIssuerName Cannot read IssuerName from either PL, Template or Identity
[msipp]:Win7IppLicense::DetermineIssuerName Reading IssuerName from PL %ws
[msipp]:Win7IppLicense::DetermineIssuerName Reading IssuerName from Template %ws
[msipp]:Win7IppLicense::DetermineIssuerName Reading IssuerName from UserIdentity %ws
[msipp]:Win7IppLicense::DetermineIssuerName Using PL connection info as issuer name
[msipp]:Win7IppLicense::DetermineIssuerName Using template connection info as issuer name
[msipp]:Win7IppLicense::DetermineIssuerName Using user connection info as issuer name
[msipp]:Win7IppLicense::GetReferralInfoUrl Using default value: %s
[msipp]:Win7IppLicense::init  Issuers of user and original PL are %ws
[msipp]:Win7IppLicense::init  RepublishOnly in CLC set to true
[msipp]:Win7IppLicense::SetContentKey republishing not permitted for this key 
[msipp]:Win7IppLicense::SetContentKey updating cipher info 
[msipp]:Win7IppLicense::Setting SetRepublishScenario
[msipp]:Win7IppLicense::updateLicenseFromIntervalTime IntervalTime is not set
[msipp]:wszServer = %S ,wszUserID = %S,wszUserType = %S 
\-----------------------------------------------------------------------
\$(jLPS
\$H[RSP
\$TPh
\\?\UNC\
\Identities
\Microsoft\WINMSIPC\
\Microsoft\WINMSIPC\Server\
\Template
\Wh|5
]0g0w0
^\WhD
^f98u
_,_^[
_^[rq
_^[Y]
___lc_codepage_func
___lc_collate_cp_func
___lc_handle_func
___mb_cur_max_func
__crtCompareStringW
__crtLCMapStringA
__crtLCMapStringW
__CxxFrameHandler3
__dllonexit
__NoSuchMailId__@dontexit.foo
__pctype_func
__ptr64
__RTDynamicCast
__uncaught_exception
_09_4
_amsg_exit
_callnewh
_CxxThrowException
_Element%i
_errno
_except_handler4_common
_ftol2_sse
_initterm
_ismbblead
_ismbcspace
_itow_s
_LCID_
_lock
_mbscspn
_mbsinc
_mbsrev
_mbsstr
_onexit
_purecall
_rmsredir._http._tcp.
_strlwr_s
_time64
_ultoa_s
_ultow_s
_ultow_s(dwLangId, wszLangId, MAX_ULONG_STR_LENGTH, 10)
_unlock
_vscwprintf
_vsnprintf
_vsnprintf_s
_vsnwprintf
_vsnwprintf_s
_wcsdup
_wcsicmp
_wcslwr_s
_wcsnicmp
_wfopen_s
_wmcs
_wsetlocale
_wtoi
_XcptFilter
`.rdata
{     "aud":"AADRM.COM",     "iss":"MSIPC",     "nbf":%I64d,     "exp":%I64d,     "api":"%ws",     "tid":"%ws",     "mcn":"%ws" } 
{ _^[]
{"SerializedPublishingLicense":"%ws","ContentName":"%ws","SendRegistrationMail":%ws}
{{[%I64u][%s]:[%s]:[%d]:[%04d-%02d-%02d %02d:%02d:%02d.%03d]: %s:%s:%d
{{========================================= ERROR LOGS BEGIN =========================================================}}
{{========================================= ERROR LOGS END ==========================================================}}
{81C42010-208A-458A-BAB6-C3C60F06DD5F}
{L?uT
{zel#|67
|$(QP
|$,PWWVW
|88hPJ
}(PhP^
~$_^[
~(WSQQ
~)p$w
~,9~$t
~0_^[
~h_^]
+[msdrm]:CHttpBase::HandlePostRedirects
+[msdrm]:GetDataFromResponse 
+[msipc]:CRMSOServerVerification::CheckCertEKU
+[msipc]:CRMSOServerVerification::CheckCertEKU: Dogfood EKU found
+[msipc]:CRMSOServerVerification::CheckCertEKU: Int EKU found
+[msipc]:CRMSOServerVerification::CheckCertEKU: Production EKU found
+[msipc]:CRMSOServerVerification::CheckRMSOUrlIsHttps
+[msipc]:CRMSOServerVerification::CheckRMSOUrlIsHttps Not using https
+[msipc]:CRMSOServerVerification::CheckSSLCert
+[msipc]:CRMSOServerVerification::GetSSLCert
+[msipc]:CRMSOServerVerification::ValidateRMSOSSLRequest
+[msipc]:CRMSOServerVerification::ValidateRMSOSSLRequest Microsoft root is required, but the server SSL cert validation failed.
+[msipc]:CRMSOServerVerification::ValidateRMSOSSLRequest server SSL cert validation failed, but we don't require Microsoft rooted cert since NoValidation regkey is set and it is not the Production RMSO.
+[msipc]:IpcOsVerifyCertMicrosoftRooted
+[msipc]:MsftRootBuiltinVerification
+[msipc]:MsftRootCustomVerification
++++++ INFORMATION Couldn't connect to the Active Directory. Most likely ++++++       the user is not connected to the corporate network. Error=%lu
++++++ INFORMATION the user is not a domain user. GetUserDomain() failed with 0x%x++++++
+++++++ Cred prompt +++++++
+++++++ Cred prompt for smart card scenario +++++++
+++++++ Getting all templates +++++++
+++++++ Getting templates for the user: %ws +++++++
+++++++ NEED UI. +++++++
+++++++ Sending Request post size=%d +++++++
+++++++ WARNING Can't authenticate with smart card. +++++++
+++++++ WARNING Can't get a valid token - tried %u times. +++++++
+++++++ WARNING can't prompt for creds with WinHTTP. NEED UI. +++++++
+++++++ WARNING Got a non-SOAP response from the server ++++++
+++++++ WARNING Got a non-XML response from the server ++++++
+++++++ WARNING NEED UI. +++++++
+++++++ Warning server fault CorrelationId=%ws: ++++++
+++++++ Warning server fault: ++++++
+++++++ WARNING: Licensing failed with
+++++++ WARNING: Licensing failed with FaultCode = %ws +++++++
+++++++ WARNING: Licensing failed with hr = 0x%x +++++++
++++++++ ERROR Failed to find secproc +++++++
++++++++ ERROR No proxy settings are available hr = 0x%x +++++++++
++++++++ ERROR: %ws ++++++++
++++++++ ERROR: %ws: %ws ++++++++
++++++++ ERROR: Acquire Delegation License failed with error = 0x%X ++++++++
++++++++ ERROR: Acquire Delegation License principal (%ws) doesn't match the request (%ws) ++++++++
++++++++ ERROR: caught C++ exception: %ws ++++++++
++++++++ ERROR: caught unnknown C++ error ++++++++
++++++++ ERROR: Com error: %ws ++++++++
++++++++ ERROR: could not connect to the server: +++++++++
++++++++ ERROR: could not disable redirects option on a request hr=0x%x ++++++++
++++++++ ERROR: could not open an internet handle hr=0x%x +++++++++
++++++++ ERROR: could not resolve the proxy: +++++++++
++++++++ ERROR: could not set the status callback +++++++++
++++++++ ERROR: could open a request: +++++++++
++++++++ ERROR: Error of unknown type ++++++++
++++++++ ERROR: Out of memory ++++++++
++++++++ ERROR: SafeIntException: arithmetic overflow. ++++++++
++++++++ INFORMATION: Acquire Delegation License succeeded. ++++++++
++++++++ INFORMATION: Certification call succeeded. ++++++++n
++++++++ INFORMATION: Certification call using the url: "%ws" ++++++++
++++++++ INFORMATION: CLC details: ++++++++
++++++++ INFORMATION: Downloading templates for the following UserIdentity: ++++++++
++++++++ INFORMATION: Enrollment call (getting CLC) succeeded. ++++++++
++++++++ INFORMATION: Enrollment call (getting CLC) using the url: "%ws" ++++++++
++++++++ INFORMATION: Getting templates for all UserIdentities ++++++++
++++++++ INFORMATION: Getting templates for the following UserIdentity: ++++++++
++++++++ INFORMATION: Getting templates succeeded. ++++++++
++++++++ INFORMATION: Getting UserIdentity (RAC & CLC) for ++++++++
++++++++ INFORMATION: Global Service Discovery... ++++++++
++++++++ INFORMATION: Identity is not allowed for publishing. ++++++++
++++++++ INFORMATION: Licensing succeeded. ++++++++
++++++++ INFORMATION: PL details: ++++++++
++++++++ INFORMATION: RAC details: ++++++++
++++++++ INFORMATION: Renewing the following UserIdentity : ++++++++
++++++++ INFORMATION: Renewing the UserIdentity succeeeded++++++++
++++++++ INFORMATION: Server didn't return any template hashes, so no need to download the templates ++++++++
++++++++ INFORMATION: Service discovery call succeeded with result: "%ws" ++++++++
++++++++ INFORMATION: Service discovery call using Url: "%ws" for service types: ++++++++
++++++++ INFORMATION: Successfully generated the EUL from the license ++++++++
++++++++ INFORMATION: Successfully retreived the EUL from the license store ++++++++
++++++++ INFORMATION: Successfully retreived the EUL from the server++++++++
++++++++ INFORMATION: Successfully retreived the Owner EUL from the PL ++++++++
++++++++ INFORMATION: Successfully retrieved a new UserIdentity(RAC & CLC) from the server. ++++++++
++++++++ INFORMATION: Successfully retrieved UserIdentity (RAC & CLC) from the license store. ++++++++
++++++++ INFORMATION: Template acquisition call using the url: "%ws" ++++++++
++++++++ INFORMATION: Template acquisition succeeded. %u templates were updated. ++++++++
++++++++ INFORMATION: Template hash acquisition call using the url: "%ws" ++++++++
++++++++ INFORMATION: The machine activation succeeded. ++++++++
++++++++ INFORMATION: The machine cert is not found.Trying to activate the machine... ++++++++
++++++++ INFORMATION: The machine cert is not valid. Trying to reactivate the machine... ++++++++
++++++++ INFORMATION: Trying TUD or Social IDP with %d UserIdentities (RACs) in the store valid for TUD ++++++++
++++++++ INFORMATION: UserIdentity is successfully initialized. ++++++++
++++++++ INFORMATION: We have unmanaged templates in the store. ++++++++
++++++++ Initializing the UserIdentity using RAC & CLC ++++++++++
++++++++ License redirection detected. We need to renew the identity with the new redirection. ++++++++
++++++++ Renewing the UserIdentity failed with hr = 0x%x ++++++++
++++++++ WARNING the ref count of logger instance is 0 +++++++++
++++++++ WARNING: %ws ++++++++
++++++++ WARNING: %ws: %ws ++++++++
++++++++ WARNING: Acquire Delegation License did not return a single valid EUL ++++++++
++++++++ WARNING: Acquire Delegation License failed with FaultCode = %ws ++++++++
++++++++ WARNING: Certification call failed FAILED with 0x%x ++++++++
++++++++ WARNING: Certification call failed with
++++++++ WARNING: Couldn't find name and description for the user and system preferred locales. Falling back to the first name and description. ++++++++
++++++++ WARNING: Enrollment (getting CLC) failed with
++++++++ WARNING: Enrollment call (getting CLC) failed with 0x%x ++++++++
++++++++ WARNING: Template acquisition failed with hr=0x%x ++++++++
++++++++ WARNING: Template hash acquisition FAILED with hr=0x%x ++++++++
+++++++++  Finding the user identity information in the registry cache ++++++++++
+++++++++ ADFS flow NEEDS UI ++++++++
+++++++++ ADFS flow non-silent with url %ws +++++++++
+++++++++ ADFS flow silent with url %ws +++++++++
+++++++++ AuthType "%ws" is not supported by server. Refreshing ServerInfo +++++++++
+++++++++ Ensuring the templates are up-to-date for the Idenitity: +++++++++
+++++++++ ERROR After refreshing ServerInfo AuthType: %ws is still not supported by server. This is an invalid token. ++++++++++
+++++++++ Getting new RAC and CLC +++++++++
+++++++++ Getting user identitiy before getting templates ++++++++
+++++++++ INFORMATION: Couldn't find the UserIdentity in the cache. Getting it from the server. ++++++++
+++++++++ Receive Request Failed with status=%d +++++++
+++++++++ Send Request Failed with status=%d +++++++
+++++++++ Service discovery for Certification ++++++++++
+++++++++ Service discovery for Certification and Licensing ++++++++++
+++++++++ Service discovery for Licensing ++++++++++
+++++++++ Storing new RAC & CLC +++++++++
+++++++++ WARNING Acquiring delegated licenses requires an Azure RMS server. ++++++++++
+++++++++ WARNING Can't use Azure RMS token with an on-prem Server. ++++++++++
+++++++++ WARNING Can't use this token with Azure RMS +++++++++
+++++++++ WARNING Parsing the server response failed with +++++++++
+++++++++ WARNING Sign-in Assistant is not installed +++++++++
+++++++++ WARNING This is Azure RMS and Office is calling us without a Token. +++++++++
+++++++++ WARNING: Max number of retries reached. +++++++
+++++++++ WARNING: Querying http status code failed. hr=0x%x +++++++
+++++++++ WARNING: Querying redirect location failed. hr=0x%x +++++++
++++++++++ Dummy http GET call to see if the %ws url is resolvable. ++++++++++
++++++++++ Enumerating user identities for: +++++++++++
++++++++++ INFORMATION NEEDS ONLINE +++++++++
++++++++++ Soap call using: +++++++++
++++++++++ WARNING Could not connect. ++++++++
++++++++++ WARNING Got status access denied (not an authentication failure). ++++++++
++++++++++ WARNING Got status forbidden, assuming couldn't authenticate with the client cert. ++++++++
++++++++++ WARNING Revocation check failed ++++++++
++++++++++ WARNING Setting next proxy settings failed with 0x%x. ++++++++
+++++++++++ Service discovery using ++++++++
+++++++++++++++++ Getting a new CLC +++++++++++++++++++
+++++++++++++++++ Getting a new RAC +++++++++++++++++++
++++++++INFORMATION: Licensing call using the url : "%ws" ++++++++
+1 != os::IpcOsCompareFileTime(&ftFrom, &ftNow)
+DRMAddRightWithUser
+DRMClearAllRights
+DRMCreateRight (right=%ls, # of ExtendedInfo =%d)
+DRMCreateUser (username=%ls, userID=%ls, userIdType=%ls)
+DRMGetApplicationSpecificData
+DRMGetApplicationSpecificDataNotEncrypted
+DRMGetIssuanceLicenseInfo
+DRMGetIssuanceLicenseTemplate
+DRMGetLicenseId
+DRMGetNameAndDescription
+DRMGetRightInfo
+DRMGetUserInfo
+DRMGetUserRights
+DRMGetUsers
+DRMResetValidityTime
+DRMSetApplicationSpecificData Args: Name=%S, Value=%S
+DRMSetApplicationSpecificDataNotEncrypted Args: Name=%S, Value=%S
+DRMSetIntervalTime
+DRMSetLicenseMetadatNotEncrypted Args: Name=%S, Value=%S
+DRMSetMetaData (Content ID=%ls, Content ID Type=%ls, SKU ID=%ls, SKU ID Type=%ls, Content Type=%ls, Content Name=%ls
+DRMSetNameAndDescription Args: Name=%S, Description=%S
+DRMSetUserProperties
+GL+OL
+IPPUserIdentity::InitializeIdentityForUserInfo entered
+ProxyResolver::GetProxyCallBack dwInternetStatus = %d
+ProxyResolver::GetProxyForAutoSettings
+ProxyResolver::GetProxyForUrlEx
+ProxyResolver::ProxyResolver
+ProxyResolver::SetNextProxySetting
+ProxyResolver::SetNextProxySettingEx
+SetServerIdentityRegKeysSetting HostName: %ws EMail: %ws ExtUrl %ws IntUrl %ws
+SetUpnRegKeys HostName: %ws EMail: %ws UPN %ws IsFederated %ws
< <$<(<,<0<4<8<<<@<D<H<L<P<T<X<\<`<d<h<l<p<t<x<|<
< <(<0<8<@<\<l<x<
< <(<4<T<\<h<
< <,<L<T<\<h<
< <,<L<T<`<h<
< <0<4<D<H<L<T<l<|<
< <0<4<L<P<h<x<|<
< <0<4<L<P<T<h<l<p<
< <7<E<T<^<{<
< =*=:=V=`=p=
<!<+<A<K<a<k<
<!<0<8<D<I<O<^<e<
<!<1<;<E<J<T<Y<`<e<y<
<!<5<A<U<a<u<
<!=.=T=^=n=
<!=>=I=n=<>X>
<!=1=7=I=P=\=b=g={=
<"<'<8<B<R<h<
<"<2<N<X<h<
<"=8=G=Y=
<"=g=
<#<,<2<<<J<O<_<i<v<}<
<#<?<I<Y<w<
<#<B<N<n<w<
<#=>=Y=t=
<$<,<4<<<D<\<d<l<
<$<,<4<<<H<h<p<
<$<,<4<<<H<P<
<$<,<4<<<T<h<x<
<$<,<8<@<\<d<l<t<|<
<$<,<8<@<t<
<$<<<
<$<<<@<X<h<l<|<
<$<0<P<X<d<
<$<4<@<H<l<
<$<4<8<<<T<X<\<d<h<p<t<x<
<$<4<D<H<L<d<t<x<|<
<$<5<y<~<
<$<8<@<H<P<X<`<t<|<
<$<D<P<p<x<
<%</<?<P<|<
<%<;<E<U<l<
<%<5<
<%<5<I<
<%=+=O=\=s=
<%s>%s%s</%s>
<&<+<E<O<Y<f<k<u<
<&<<<N<_<i<y<
<&<-<5<<<L<e<
<&<6<b<l<|<
<&<6<M<
<&<7<b<
<&=0=@=
<(</<
<(<4<<<\<
<(<4<<<T<\<d<
<(<8<L<
<(<A<F<P<U<
<(<e<u<
<(<H<T<\<t<
<(<H<T<t<
<(<L<\<h<
<(<w<
<(=C=\=
<(=c=p=}=
<)<@<J<Z<n<t<y<
<)<{<
<)<9<R<l<
<)<q<{<
<)<R<v<
<)<x<}<
<*<:<M<W<g<
<,<><H<T<[<l<
<,<0<4<8<@<X<\<t<x<
<,<6<F<Z<_<i<n<
<,<8<@<t<
<,<8<X<d<l<
<,<A<N<X<h<
<,<L<h<
<,<q<
<,=9=^=
<,=j=
<.<<<
<.<3<}<
<.<F<
<.<Y<c<s<
<.=C=l>
</<H<R<b<
</=i=
</=U={=
</=W=\=f=m=x=
</BODY>
</CERTIFICATE>
</CERTIFICATECHAIN>
</ISSUER>
</OBJECT>
</PRINCIPAL>
</Root>
</soap:Body>
</soap:Envelope>
</soap:Header>
</t{<\tw<.uw
</XrML>
<:<?<D<K<P<d<
<:<D<T<
<:<N<X<h<
<?=i=
<?xml
<?xml version="1.0"
<?xml version="1.0" encoding="utf-8"?>
<?xml version="1.0"?>
<?xml version="1.0"?><XrML version="1.2" xmlns=""><BODY type="Microsoft Rights Label" version="3.0">%s%s%s%s%s<WORK>%s%s%s</WORK>%s%s%s%s</BODY></XrML>
<[>v>
<+<;<
<+<_<
<+<5<E<c<p<z<
<+<B<
<'<,<S<F=
<<<|<
<<<F<V<s<
<'<-<J<T<Y<c<h<
<<<P<`<p<
<<<x<
<'<7<
<'<7<b<
<-=7=G=
<-=Q=
<'=X=i=
<>:"/\|?*-
<0<@<D<H<`<p<t<
<0<@<P<`<p<
<0<=<B<q<
<0<4<L<P<h<l<p<
<0<4<L<P<h<l<p<t<x<|<
<0<7<G<[<
<0<8<
<0=@=L=T=
<1<6<@<Q<V<`<q<v<{<
<2<]<|<
<2<<<F<T<[<k<
<2<><N<h<
<2<G<T<q<z<
<2<V<g<
<3<N<i<
<3=m=
<3>D>Y>}>
<4<?<G<Q<n<x<
<4<@<H<l<
<4<><N<f<
<4<H<\<d<t<|<
<4=U=p=
<5<^<w<
<5<e<
<5<Z<l<
<5=?=O=c=t=|=
<6<j<
<8<@<H<P<\<d<
<8<D<d<x<
<8<H<T<\<
<8<O<
<8=B=R=l=
<8=p=
<9<^<
<9<><H<`<t<
<9<F<P<`<y<
<9=U=
<A<K<[<t<
<AUTHENTICATEDDATA id="%s" name="%s">%s</AUTHENTICATEDDATA>
<AUTHENTICATEDDATA id="Encrypted-Rights-Data">%s</AUTHENTICATEDDATA>
<BODY
<C/u#j
<C/u&j
<C<a<
<C=k=
<CERTIFICATE>
<CERTIFICATECHAIN>
<CONDITION name="OS-Exclusion" type="versionspan">%s-%s</CONDITION>
<CONDITIONLIST>%s%s</CONDITIONLIST>
<CONDITIONLIST><ACCESS>%s</ACCESS>%s%s</CONDITIONLIST>
<DESCRIPTOR><OBJECT type="Content-License"><ID type="MS-GUID">%s</ID></OBJECT></DESCRIPTOR>
<DESCRIPTOR><OBJECT><ID type="MS-GUID">%s</ID><NAME>%s</NAME></OBJECT></DESCRIPTOR>
<DISTRIBUTIONPOINT><OBJECT type="%s"><ID type="MS-GUID">%s</ID><ADDRESS type="URL">%s</ADDRESS></OBJECT></DISTRIBUTIONPOINT>
<DISTRIBUTIONPOINT><OBJECT type="%s"><ID type="MS-GUID">%s</ID><NAME>%s</NAME></OBJECT></DISTRIBUTIONPOINT>
<DISTRIBUTIONPOINT><OBJECT type="%s"><ID type="MS-GUID">%s</ID><NAME>%s</NAME><ADDRESS type="URL">%s</ADDRESS></OBJECT></DISTRIBUTIONPOINT>
<E<h<n<t<z<
<E<J<O<Y<^<m<
<E=J=T=Y=
<E=O=_=
<ENABLINGBITS type="%s"><VALUE encoding="base64" size="%d">%s</VALUE></ENABLINGBITS>
<G/u!j
<G/u$j
<G<M<Z<+=
<H<X<d<l<
<ISSUEDPRINCIPALS><PRINCIPAL internal-id="1">%s%s</PRINCIPAL></ISSUEDPRINCIPALS>
<ISSUEDTIME>%04d-%02d-%02dT%02d:%02d</ISSUEDTIME>
<ISSUER>
<J=_=i=y=
<K<P<Z<_<q<
<K<s<
<k=|=
<M<b<
<M=W=g=
<METADATA>%s%s</METADATA>
<N=W=
<NAME>%s</NAME>
<OBJECT
<OBJECT%s><ID type="%s">%s</ID>%s</OBJECT>
<OBJECT>
<OBJECT><ID type="" /></OBJECT>
<OWNER>%s</OWNER>
<P<`<p<x<
<PARAMETER name="%s"><VALUE encoding="string">%s</VALUE></PARAMETER>
<POLICY><DIGEST><ALGORITHM>%s</ALGORITHM><VALUE encoding="base64" size="%d">%s</VALUE></DIGEST></POLICY>
<POLICY><OBJECT><ID type="filename">%s</ID><VERSIONSPAN min="%s" max="%s" /></OBJECT></POLICY>
<POLICY><PUBLICKEY><ALGORITHM>RSA</ALGORITHM><PARAMETER name="public-exponent"><VALUE encoding="integer32">65537</VALUE></PARAMETER><PARAMETER name="modulus"><VALUE encoding="base64" size="%d">%s</VALUE></PARAMETER></PUBLICKEY></POLICY>
<POLICYLIST type="exclusion">%s</POLICYLIST>
<POLICYLIST type="inclusion">%s</POLICYLIST>
<PRINCIPAL internal-id="1"><ENABLINGBITS type="%s"><VALUE encoding="base64" size="%d">%s</VALUE></ENABLINGBITS></PRINCIPAL>
<PRINCIPAL><OBJECT><ID type="%s" /><NAME>%s</NAME>%s</OBJECT></PRINCIPAL>
<PRINCIPAL><OBJECT><ID type="%s">%s</ID>%s</OBJECT></PRINCIPAL>
<PRINCIPAL><OBJECT><ID type="%s">%s</ID><NAME>%s</NAME>%s</OBJECT></PRINCIPAL>
<R<\<l<
<RIGHT name = "%s">%s%s</RIGHT>
<RIGHTSGROUP name="Main-Rights"><RIGHTSLIST>%s</RIGHTSLIST></RIGHTSGROUP>
<Root>
<S<m<
<SECURITYLEVEL name="SDK" value="%s" />
<SIGNATURE><ALGORITHM>RSA PKCS#1-V1.5</ALGORITHM><DIGEST><ALGORITHM>%s</ALGORITHM><PARAMETER name="codingtype"><VALUE encoding="string">surface-coding</VALUE></PARAMETER><VALUE encoding="base64" size="%d">%s</VALUE></DIGEST><VALUE encoding="base64" size="%d">%s</VALUE></SIGNATURE>
<SKU type="%s">%s</SKU>
<soap:Body>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">
<soap:Header>
<TIME><INTERVALTIME days="%d" /></TIME>
<TIME><RANGETIME><FROM>%04d-%02d-%02dT%02d:%02d</FROM><UNTIL>%04d-%02d-%02dT%02d:%02d</UNTIL></RANGETIME></TIME>
<U<l<
<V=c=q=~=
<VALIDITYTIME><FROM>%04d-%02d-%02dT%02d:%02d</FROM><UNTIL>%04d-%02d-%02dT%02d:%02d</UNTIL></VALIDITYTIME>
<wFt=
<XrML
<XrML 
<XrML version="1.2" xmlns="" purpose="Content-License"><BODY type="LICENSE" version="3.0">%s%s%s<ISSUER>%s</ISSUER><ISSUEDPRINCIPALS>%s</ISSUEDPRINCIPALS>%s<WORK>%s<RIGHTSGROUP name="Main-Rights"><RIGHTSLIST><RIGHT name = "OWNER"><ACCESS>%s</ACCESS></RIGHT></RIGHTSLIST></RIGHTSGROUP></WORK>%s</BODY>
<XrML version="1.2" xmlns=""><BODY type="Microsoft Rights Template" version="3.0">%s%s%s%s%s<WORK>%s%s%s</WORK>%s%s%s</BODY></XrML>
<XrML xmlns="" version="1.2">     <BODY type="LICENSE" version="3.0">         <ISSUEDTIME>2010-11-02T17:47</ISSUEDTIME>         <DESCRIPTOR>             <OBJECT type="Client-Licensor-Certificate">                 <ID type="MS-GUID">%ws</ID>             </OBJECT>         </DESCRIPTOR>         <ISSUER>             <OBJECT type="MSIPC-Client">                 <ID type="MS-GUID">%ws</ID>                 <NAME>%ws</NAME>                 <ADDRESS type="URL">https://someserver.com/_wmcs</ADDRESS>             </OBJECT>             <PUBLICKEY>                 <ALGORITHM>RSA</ALGORITHM>                 <PARAMETER name="public-exponent">                     <VALUE encoding="integer32">65537</VALUE>                 </PARAMETER>                 <PARAMETER name="modulus">                     <VALUE encoding="base64" size="%ws">%ws</VALUE>                 </PARAMETER>             </PUBLICKEY>             <SECURITYLEVEL name="Server-Version" value="6.1.0.0" />             <SECURITYLEVEL name="Server-SKU" value="RMS 2.0" />         </ISSUER>         <DISTRIBUTIONPOINT>             <OBJECT type="License-Acquisition-URL">                 <ID type="MS-GUID">{0F45FD50-383B-43EE-90A4-ED013CD0CFE5}</ID>                 <NAME>DRM Server Cluster</NAME>                 <ADDRESS type="URL">%ws</ADDRESS>             </OBJECT>         </DISTRIBUTIONPOINT>         <DISTRIBUTIONPOINT>             <OBJECT type="Extranet-License-Acquisition-URL">                 <ID type="MS-GUID">{94BF969A-CA04-44d6-AA96-51071281FEF2}</ID>                 <NAME>DRM Server Cluster</NAME>                 <ADDRESS type="URL">%ws</ADDRESS>             </OBJECT>         </DISTRIBUTIONPOINT>         <ISSUEDPRINCIPALS>             <PRINCIPAL internal-id="1">                 <OBJECT type="Group-Identity">                     <ID type="%ws">%ws</ID>                     <NAME>%ws</NAME>                 </OBJECT>                 <PUBLICKEY>                     <ALGORITHM>RSA</ALGORITHM>                     <PARAMETER name="public-exponent">                         <VALUE encoding="integer32">65537</VALUE>                     </PARAMETER>                     <PARAMETER name="modulus">                         <VALUE encoding="base64" size="%ws">%ws</VALUE>                     </PARAMETER>                 </PUBLICKEY>             </PRINCIPAL>         </ISSUEDPRINCIPALS>         <WORK>             <OBJECT type="Client-Licensor-Certificate">                 <ID type="MS-GUID">{8f54eeb7-378b-4e37-96f5-78f8f5ca3c0b}</ID>             </OBJECT>             <RIGHTSGROUP name="Main-Rights">                 <RIGHTSLIST>                     <RIGHT name="ISSUE">                         <CONDITIONLIST>                             <TIME>                                 <RANGETIME>                                     <FROM>2010-11-01T17:47</FROM>                                     <UNTIL>2011-11-02T17:47</UNTIL>                                 </RANGETIME>                             </TIME>                             <ACCESS>                                 <PRINCIPAL internal-id="1">                                     <ENABLINGBITS type="sealed-key">                                         <VALUE encoding="base64" size="6144">LbfbhLQGn391BNucH6QGmovJx3SNtbAxZqU+DVTiMZId+Myx+B2ij+ajxexEa78/9JCjMsT4NELl3wew0DRwr4KDb7fHUHuG2uwpanWNOy9+THf16sEVqzxKLsh+LLZzBycCxXX1PB3W46Kf4mY+/yHRGl4Fp9gLIc9bJfKlJZGjyLWiE1iaZ727NXo8z411v0AYgfWV15rx+f6e+ejKwfsQ8qWaDqHmquGLdZmr+7M3c3iZWUkQ4OflC/F+Jym4T37Tp+Gv+vWUtcxmNxrJVE9nCHnvOTwcdPKt1EQK+QtgzmeAN1VuRyj3fdwFEltiFOqLIMZn6WJtvjhKo9e31rtV+TNSmyimItG0UfEQBFwvz8D/Fw2iM/nkRNtsc0LLdgfm8Y5ZOo3U4r6dmbXqKndkMxvbeE0lms4HigPFU3BnnRHQ8/DRq/69OtFNyC4/bhJJ38IgFkix577ri4l40AAoErOq0F4zqO8KSXdBTU8RbQgFS3KMWO4na+otU0gMALGLAb+6ksTww1foOcui7NKJHTGg7J3P6nYvB6FUWmPZVKHVhObTK3wZEO4bnk87VJgPSiMiToBDdap1aDUhhxr78vE/UwGKOn4Xf/eJxUlprFSBV5zJl1X3i94qu9e1LpJAEc74FVBpYJHI4EUQ8VFr/ehd2WeOe15kFTC6nO9bDfk8kYVmEqNPk613FyAvXeqiHFLyNJJGEia+OOOpYucWRuMDctmQXTuY0+KvkThPIJL2hoHzbogIs4deOxsYD2tshNpm27DzeZiI8t78U5ukzmguTL2xpTcwUKggy8ZbxuOYvaNuj0Zxw18NFpRuFFsgbVL2DU9dY1mouvOurYz4KOc32p4R7NZ9x7jruiFwrYCWqow7XZ47bzwV4jv3ruAhcJCeoL/6l73z8csYrpeb0UXEnquMltvNKIZkdDh9zQy4b4FZsgGp/vw7uuDSZ15wjky2IThuPVn6m6dYhurBoIVeGya+qkldmHU+tSLbmqx3CaxJ0PyMIvN3cKna</VALUE>                                     </ENABLINGBITS>                                 </PRINCIPAL>                             </ACCESS>                         </CONDITIONLIST>                     </RIGHT>                 </RIGHTSLIST>             </RIGHTSGROUP>         </WORK>     </BODY>     <SIGNATURE>         <DIGEST>             <ALGORITHM>SHA1</ALGORITHM>             <PARAMETER name="codingtype">                 <VALUE encoding="string">surface-coding</VALUE>             </PARAMETER>             <VALUE encoding="base64" size="160">Y4Sbj54Pqt/GF+kdOVkmjzEXmbA=</VALUE>         </DIGEST>         <ALGORITHM>RSA PKCS#1-V1.5</ALGORITHM>         <VALUE encoding="base64" size="%ws">%ws</VALUE>     </SIGNATURE> </XrML>
= =$=(=,=0=4=8=@=X=h=x=
= =$=(=,=0=4=8=<=@=D=H=L=P=T=X=\=`=d=h=l=p=t=x=|=
= =$=<=@=D=X=h=l=p=
= =&=:=L=^=p=
= =(=\=l=x=
= =,=4=h=x=
= =,=L=X=`=
= =@=H=P=X=h=p=
= =<=D=L=T=\=d=
= ='=
= =0=4=8=<=P=T=X=\=p=t=
= =1=;=Q=V=`=q={=
= =2=A=
= =7=A=Q=w=
= =8=H=L=P=T=h=l=p=
= >)><>
=!=,=A=d=
=!=+=A=Q=[=q={=
=!=1=W=i=s=
=!=5=E=Q=e=q=
=!=b=
=!>;?M?[?
=!>+>
=!>4>
="=,=<=U=
="=,=6=@=J=T=^=h=r=|=
="=@=W=
="=\=y=
="=2=B=U=_=o=
=">(>C>e>o>z>
=">:>V>
=#=\=i=s=
=#>a>
=$=(=@=D=\=l=p=
=$=(=@=P=T=X=\=`=d=x=|=
=$=(=8=<=@=D=X=\=p=t=
=$=,=4=@=`=h=t=
=$=,=4=<=D=P=p=|=
=$=,=4=<=H=l=t=|=
=$=;=f=
=$=@=P=\=d=|=
=$=0=8=\=p=
=$=4=D=P=p=x=
=$=4=D=T=`=h=
=$=4=h=r=
=$=8=D=
=$=D=`=p=|=
=$=D=L=T=\=d=
=$=D=L=X=`=
=$=H=X=d=l=
=$=p=w=
=$>4>@>`>h>p>x>
=$>y>
=%=/=?=h=
=%=;=E=U=s=}=
=%===X=
=%>,><>Y>o>v>
=%>/>?>`>j>z>
=%>D>
=%>s>
=%>W>
=%>Y>a>k>s>
=&=0=@=\=
=&=6=K=k=u=
=&=W=z=
=&>/>R>|>
=(=}=
=(=0=P=l=|=
=(=0=T=\=d=l=t=
=(=5=E=L=\=
=(=6=d=z=
=(=8=<=L=\=`=d=h=l=p=
=(=A=X=
=(=V=`=p=
=)=3=C=W=
=)=9=k=u=
=)=i=
=)>3>C>
=*=/=9=@=i=n=x=
=,=<=H=P=h=p=x=
=,=2=J=z=
=,=D=T=d=p=x=
=,=H=X=d=
=,=T=_=
=,>6>F>
=,>O>j>
=.=3=9=M=R=^=o=w=
=.=d=
=.=D=N=^=u=
=.=k=u=
=.>e>
=/=J=e=
=;>H>R>b>y>
=?=V=t=~=
=^=g=l=v=}=
=`=i=r={=
=+=5=E=W={=
=+=L=
=+>S>w>
=<=D=L=X=x=
=<=D=P=p=x=
=<=H=h=p=x=
=<=r=
=<>W>
='=.=>=e=k=
='=:=P=f=|=
===G=W={=
===N=
===U=_=o=
='=P=]=g=w=
='>.>>>U>
=>>K>b>m>
=->2>]>g>w>
='>A>_>u>
=0=>=[=d=v=
=0=4=8=<=P=`=d=h=l=
=0=8=@=H=\=d=l=t=
=0=8=@=H=P=\=|=
=0=D=f=
=0=K=U=e=
=0>>>a>
=0>h>
=1=I=]=d=l=r=
=1=L=g=
=1=T=`=
=1=V=
=1>;>K>v>
=2=N=u=
=2=p=v={=
=2><>M>W>g>
=3=`=
=3=W=
=4=8=<=P=`=p=t=x=
=4=G=
=4=O=
=4=P=`=l=t=
=4=Z=
=4>j>
=5=?=O=
=5>J>_>l>
=6=@=P=e={=
=6=f=
=6>O>i>
=7=G=
=8=@=H=T=\=
=8=^=g={=
=8>?>O>
=9=C=T=
=a=t=
=A>K>[>v>
=B=f=
=B=f=p=
=B>d>k>{>
=C=M=]=
=C>g>
=D=g=
=d=i=s=x=
=D=l=
=D=S=X=b=i=y=
=F=e={=
=F=K=R=W=l=
=G=]=
=G=}=
=G>Q>a>
=H=Q=b=g=}=
=H=X=d=
=H>f>o>
=H>R>b>
=I=^=}=
=I=N=U=Z=|=
=i>n>x>
=J>6?
=L=l=
=L9o<
=m=w=
=N=f=p=
=N=g=q=
=N>X>h>
=o>6?
=P=`=l=t=
=P=X=b=j=
=P>Y>n>|>
=P>Z>j>
=R=y=
=s=~=
=U>[>i>
=V>j>t>
=X>f>
=X>j>
> ?|?
> ?p?
> >$>(>,>0>4>8><>@>D>H>L>P>T>X>\>`>d>h>l>p>t>x>|>
> >$><>L>P>`>d>t>x>|>
> >(>0>8>@>H>P>d>l>
> >*>/>7>g>
> >:>T>
> >@>H>P>X>`>l>
> ><>D>L>T>|>
> >'>0>7>D>K>X>_>l>s>
> >0>4>D>H>L>d>h>l>p>t>x>
> >0>4>D>H>X>\>`>x>|>
> >0>K>Q>n>
> >1>;>Q>[>q>{>
> >2>@>S>]>m>
> >4>8>P>`>d>t>x>|>
> >8><>T>d>h>l>t>
> >8>H>L>P>X>\>d>|>
> >U>
>!?M?\?
>!>->=>
>!>1>;>Q>V>`>q>{>
>!>1>o>v>
>">*>:>h>
>">B>O>g>q>
>">H>R>b>r>w>|>
>#>;>@>J>O>
>#>5>?>O>h>|>
>$?.?8?
>$?C?_?d?n?s?
>$>(>,>4>L>\>`>p>t>x>
>$>,>4><>D>L>X>`>|>
>$>,>8>X>`>l>
>$>,>T>\>d>x>
>$>.>>>]>g>w>
>$><>L>P>h>l>p>t>x>|>
>$>0>8>X>`>p>
>$>0>P>\>|>
>$>0>P>X>d>l>
>$>4>@>H>l>
>$>4><>h>|>
>$>4>D>P>X>|>
>$>5>B>L>\>
>$>D>L>T>`>
>$>X>h>x>
>%?2?x?}?
>%?X?
>%>,><>F>V>
>%>1>E>Q>e>q>
>%>2>7><>M>b>m>s>x>
>%>5>\>f>v>
>%>D>~>
>%>l>{>
>%>n>x>
>&>,>T>x>
>&>=>
>&>t>{>
>(?4?C?
>(?8?D?d?l?t?|?
>(>,>D>T>d>t>x>
>(>.>3>:>A>G>P>]>i>v>
>(>\>
>(>0>8>@>H>T>t>|>
>(>0>W>_>
>(>8>
>(>C>^>y>
>(>D>T>`>h>
>(>H>P>X>d>
>(>J>
>(>L>T>\>d>l>t>|>
>)?0?@?h?u?
>)>>>H>X>h>
>)>k>
>)>S>s>
>*?G?\?
>*>w>
>*>Z>u>
>,><>H>h>p>x>
>,>4><>D>L>T>\>d>l>t>
>,>6>F>[>q>{>
>,>B>X>n>
>,>D>c>
>,>D>T>d>p>x>
>,>g>
>,>Q>l>
>.?3?=?B?
>.>>>Q>[>k>
>.>8>H>
>/>4>>>E>
>/>D>d>i>p>u>
>;O u
>-?>?H?X?p?
>?>}>
>-?3?8?B?I?T?f?u?
>'?g?
>'?T?
>@?d?q?~?
>@?M?a?k?{?
>\?d?
>`>0?
>+?:?I?}?
>+?C?J?T?k?
>+>Q>Z>m>t>z>
><>j>
><>L>X>`>
>=>H>
>=>O>h>r>
>->*?K?
>'>;>v>
>>>H>X>l>
>->2><>C>S>]>m>
>->8>J>T>d>{>
>0>[>
>0>4>D>H>`>d>h>l>p>t>
>0>8>@>H>P>`>
>0>8>@>L>l>x>
>0>G>
>0>l>
>0K0^0
>1?<?e?n?~?
>1>_>
>1>>>H>X>o>
>1>l>
>2?<?L?w?
>2?W?
>2>@>O>Y>i>
>2>>>
>2>M>h>v>
>3???q?
>3?n?
>3>A>N>[>t>|>
>4?R?
>4>@>`>h>t>
>4>D>P>X>
>4>E>`>j>
>4>G>b>
>4>W?d?
>5?:?
>5?\?
>5?e?
>5>?>I>]>)?:?S?]?{?
>5>L>a>
>5>O>T>^>e>
>6?F?K?U?Z?
>6?I?
>6>}>
>6>n>
>6>U>b>i>y>
>7?L?p?
>8>@>H>P>\>d>
>8>@>L>T>
>8>=>G>N>Y>
>8>B>R>p>z>
>8>H>T>t>
>8>k>u>
>9>\>
>9>b>
>9>T>o>
>a>h>s>
>c>t>
-->connectionInfo:
>D?_?
>D>T>`>h>
>D>x>
>E?f?t?
>F?j?
>F>a>|>
>F>W>
>fuC3
>G?Q?a?
>g>n>x>
>G>Z>d>t>
>H?l?
>H>m>w>
>I?V?`?p?
>K>m>
>M?n?
>M?W?g?
>M>e>l>|>
>n>u>z>
>O>d>
>p?y?
-->pcCredential:
>Q?[?k?
>Q>[>k>
>R>h>
>S?p?{?
>T?Y?c?j?
>V>a>k>p>
>V>v>
>X?}?
>X>w>
>Z?q?
>Z>j>t>
0 != _cchLen
0 != cbContentKey
0 != cbProvidedContentKey
0 != cch
0 != cchUTF16
0 != cchUTF8
0 != cNeededLen
0 != dwAppFilePathLength
0 != dwBytesWritten
0 != g_pFactory
0 != hKey
0 != hLicense
0 != hLicenseMetadata
0 != hUser
0 != IIpcLogger::GetInstance()
0 != issuanceLicenseChain.size()
0 != MultiByteToWideChar(CP_ACP, 0, psz, -1, m_wsz, cch)
0 != pAutoTemplateBuffer.get()
0 != pbContentKey
0 != pbProvidedContentKey
0 != pcbContentKey
0 != phKey
0 != pLicense.get()
0 != pLicenseMetadata.get()
0 != pTemplateIssuer
0 != pvLicenseInfo
0 != vwstrILChain.size()
0 != wszTemplate
0 == ((~IPC_LOGGING_MASK) & pLoggingConfig->dwLogTypes)
0 == (cbSize % sizeof(WCHAR))
0 == _wcsnicmp(prefix.c_str(), wstr.c_str(), prefix.size())
0 == cbBuffer%sizeof(wchar_t)
0 == cbKey || IPC_AES128_KEY_SIZE == cbKey || IPC_AES256_KEY_SIZE == cbKey
0 == cbQueryBufferLength%sizeof(wchar_t)
0 == dwFlags
0 == pConnectionInfo || SUCCEEDED(ipp::ConnectionInfo::Check(pConnectionInfo))
0 == pConnectionInfo->pConnectionInfo || SUCCEEDED(ipp::ConnectionInfo::Check(pConnectionInfo->pConnectionInfo ))
0 == pcToken->cbTokenData
0 == psz || SUCCEEDED(StringCchLengthA(psz, cchMaxLength, 0))
0 == pszName || SUCCEEDED(cmn::FsStringCchLength(pszName, MAX_PATH, 0))
0 == pszValueName || SUCCEEDED(os::IpcOsStringCchLength(pszValueName, CCH_MAX_REG_VALUE_NAME, 0))
0 == pvReserved
0 == wcsncmp(uncPathCheck, L"\\\\", 2)
0 0$0(0,0004080<0@0D0H0L0P0T0X0\0`0d0h0l0p0t0x0|0
0 0$0(0,0004080<0@0D0L0P0T0X0\0`0d0h0l0p0t0x0|0
0 0$0(0,000D0T0X0h0l0|0
0 0$0(0,040L0P0T0\0`0t0x0
0 0$04080P0`0d0|0
0 0$080<0@0D0X0h0l0|0
0 0(0\0d0l0x0
0 0(0<0@0D0\0`0d0x0
0 0,0L0X0x0
0 0/0S0k0
0 0004080P0`0d0|0
0 00040L0P0h0l0p0t0x0|0
0 0-0C0I0|0
0 070P0
0 080<0@0H0`0d0h0p0
0 0D0L0T0\0d0l0t0|0
0 1/14191@1E1Y1o1
0 1\1
0 101<1D1x1
0 1V1`1p1
0!0&000A0K0a0k0
0!010;0Q0[0q0v0
0!010A0U0a0r0v0
0!080>0R0\0l0
0!1&10171d1n1{1
0!1+1;1R1
0!101?1R1r1
0!1d1n1~1x2
0"070]0
0"0G0[0e0u0
0"0z0
0"1B1b1v1
0"1S1^1
0#1J1O1Y1`1k1
0$0,0<0D0L0\0h0
0$0,040@0`0h0p0|0
0$0,040<0D0\0h0p0
0$0,040<0D0L0T0\0d0l0t0|0
0$0,040<0D0L0X0|0
0$0,040<0H0h0t0
0$0,0L0h0x0
0$0@0T0d0t0
0$00080l0|0
0$040@0`0h0p0|0
0$040D0T0d0p0x0
0$080v0
0$0D0L0X0`0
0$0D0P0p0x0
0$0D0P0X0p0
0$1>1n1s1}1
0%0*0<0S0X0b0g0w0
0%0@0j0
0%050L0n0x0
0%0F0U0i0
0%0H0z0
0%101
0%1K1q1
0&0=0v0
0&010K0d0n0
0&030A0p0w0
0&1c1
0(0,000H0X0\0t0x0
0(00080@0H0P0\0|0
0(000D0L0T0\0p0x0
0(0-02090>0R0
0(040<0p0
0(050?0O0m0r0|0
0(080T0
0(080X0b0r0
0(0C0y0
0(0D0N0^0r0
0(0H0T0\0
0(1d1
0(1k1|1
0(1p1
0(1X1
0)0A0\0d0q0
0)0C0[0s0
0)1.181?1O1
0)1F1[1
0*0<0
0*040C0l0
0*060F0[0e0r0
0*0H0M0
0*1;1I1]1s1
0*1T1Y1c1j1u1
0,0<0H0h0t0
0,0<0L0X0`0|0
0,040<0h0|0
0,0P0T0X0\0`0d0h0l0p0t0
0,1Q1v1
0,1Y1e1
0.0A0L0R0W0a0f0
0.0E0j0
0.0U0
0.1*2I2V2m2x2
0/040>0E0|0
0/090C0Z0
0/191I1`1y1
0/1c1j1z1
0;0i0
0;0y0
0;1U1|1
0?0Q0u0
0@0J0Y0
0\1c1
0]1>2
0]1g1w1
0^0h0x0
0^0r0w0|0
0_0f0v0
0_1g1|1
0+050E0\0
0+060_0
0+0E0X0f0u0
0+0I0g0
0+0S0j0
0+151E1z1
0<0D0P0t0|0
0<0F0V0m0
0<0g0
0<1x1
0=0o0
0=0U0j0
0=1G1L1S1X1l1
0>0E0U0
0>0O0a0
00:0J0
0'0;0x0
'0-0=0
000@0L0T0
000}0
00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899<
000T0
000U0
001;1D1N1[1
00191\1
0'070N0
0'0J0R0s0
0'0M0f0p0
00n0{0
0-0Q0
0-0v0
0'1.191@1K1Z1u1
0-1`1
010P0
010Q0
010S0]0m0
0123456789ABCDEF
020@0S0]0
020@0t0
02080M0W0g0~0
020K0
020K0k0
020x0
030^0t0
03181B1G1
031a1
031R1]1k1u1{1
040?0I0P0
040<0D0L0T0\0d0l0x0
040904B0
040D0H0L0d0t0
040D0P0p0|0
040F0U0s0
040O0
041`1j1z1
050m0
051N1U1e1
051u2
060=0M0r0
060B0X0n0
060H0Q0d0v0
060L0
061o1
080@0H0P0X0`0l0
080H0T0\0t0
080P0a0f0p0u0
081=1O1m1
081E1u1~1
081L1\1l1x1
091s1
0a1s1
0b0l0|0
0b1w1~1
0c0m0}0
0C1_1-2F3
0d0}0
0E0O0_0
0f;2u
0f;2u f
0f0}0
0F1`1
0F1Q1|1
0g0p0y0
0h0(1
0h1|1
0H1c1q1
0I1V1
0K0`0
0K0f0r0
0K1n1
0L0\0h0
0L0\0h0p0
0M0V0g0l0
0O0V0[0
0O0y0
0O0Y0i0
0Q0V0
-0R0v0
0R1\1
0S1Z1
0ukj0
0W1a1q1
0x%08X
0X0s0
0Z1n1x1
-1 != os::IpcOsCompareFileTime(&ftTo, &ftNow)
1 <= drmSoap.GetRequestParamsCount()
1 1$1(1,1014181<1@1D1H1L1P1T1X1\1`1d1h1l1p1t1x1|1
1 1$181<1L1\1l1p1t1x1|1
1 1(1/1:1B1I1a1p1
1 1(1\1l1x1
1 1(1L1`1t1|1
1 1,141h1x1
1 1,141L1T1\1d1
1 1,1L1T1`1
1 1:1W1
1 1@1H1P1\1d1
1 1@1H1T1t1|1
1 101@1d1l1t1|1
1 1014181<1@1D1H1P1h1x1|1
1 1014181<1P1`1p1t1
1 10141D1H1L1`1p1
1 14181P1T1l1|1
1 141j1
1 1N1{1
1 1T1d1p1x1
1 2d2
1 2M2z2
1 2p2
1!1(1
1!1(1.151<1
1!1)111X1b1r1
1!1+1;1p1z1
1!111U1\1l1
1"1,131>1I1S1c1
1"121N1
1"2e2
1"2O2T2^2e2u2
1"2P2\2
1#1]1r1
1#131f1
1#2`2
1#272T2n2x2
1$1,141<1D1L1d1l1t1|1
1$1,141<1D1L1T1\1d1l1t1
1$1,141<1D1L1T1\1d1l1t1|1
1$1,141<1D1L1T1`1
1$1,141<1T1d1p1x1
1$1,141H1P1d1l1t1|1
1$1,141L1d1t1
1$10181l1t1|1
1$101P1X1`1l1
1$101P1X1d1
1$101P1X1d1l1
1$141D1H1L1`1d1|1
1$1D1P1p1x1
1$1E1x1
1$1P1t1
1$2I2n2
1$2Q2~2
1%1>1}1
1%111A1Q1a1q1
1%1o1
1%2*242;2S2
1%2E2Z2k2
1&1>1
1&161
1&161@1`1f1p1u1
1&171A1Q1v1
1&2D2b2
1(1,1D1H1`1d1h1p1
1(1:1X1c1
1(1-171>1I1o1y1
1(1C1M1c1n1
1(1E1K1j1
1(1F1]1
1(1V1l1
1(2[2
1(212B2G2]2
1(2k2
1(2y2
1)1>1J1P1e1
1)171E1K1X1f1
1)1E1S1^1c1u1
1*141D1i1s1
1*151G1R1^1o1t1~1
1*1b1
1*2^2d2i2s2z2
1*2J2j2y2
1,1#2.2@2M2W2g2
1,1<1L1\1l1x1
1,181@1t1
1,1P1
1,262F2f2
1.0.0.0
1.1.0.0
1.13181?1D1X1_1o1
1.1C2S2g2t2~2
1.1f1
1.2J2a2k2
1.3.6.1.4.1.311.76.7.1
1.3.6.1.4.1.311.76.7.2
1.3.6.1.4.1.311.76.7.3
1/191I1v1
1/1H1R1\1l1
1/1V1
1/292I2Y2
1;1`1
1[2b2
1[2s2
1^1c1m1r1
1_2d2n2u2
1`2 3X3
1+1C1^1y1
1+2a2v2
1<1D1P1X1p1
1<1L1X1x1
1<2a2f2p2u2
1=1M1Z1f1s1
1>1H1X1
1>2E2U2
10.0.19041.1
10.0.19041.1 (WinBuild.160101.0800)
101:1J1_1|1
101@1P1X1|1
1014181<1@1D1H1P1T1X1\1`1h1
1-1|1
1'10191U1f1p1
111;1Q1a1k1
111]1b1l1s1
111A1e1
111C1Z1
111T1^1r1
1-14191@1E1
1'151
11eU%
1'1f1
1'1F1]1k1
1'1Q1a1m1
1-2[2l2
1'2<2Z2i2r2{2
121e1
121o1
122F2i2
1-282I2m2x2
141\1
141<1D1L1T1\1d1l1t1|1
14181<1P1T1X1p1t1
141c1
141D1T1X1\1`1t1
141J1`1v1
142|2
151>1M1{1
161e1
161g1
162@2P2
162l2
171A1Q1a1m1|1
171I1S1c1~1
171M1U1k1&2Q2j2y2
181H1T1\1
182B2R2r2
182C2T2x2
191u1
192N2X2^2
1A1j1
1B1N1
1b2g2q2x2
1C2T2l2
1Cj=_
1d2q2{2
1E1O1_1o1
1f;2u
1F1Z1
1F2a2h2
1f2z2
1G1~1
1H1c1~1
1H1Y1c1s1
1H1Y1t1~1
1h2o2
1H2W2
1K1|1
1L1\1h1p1
1L2W2d2|2
1O2~2
1O2x2
1P1X1`1l1
1Q1b1l1|1
1Q1w1
1r1y1
1R2I3m3
1S1X1b1g1
1s2x2
1t1{1
1W1^1n1
1w2~2
1x1}1
1X1z1
1X2u2z2
1Z2p2
2 2$2(2,2024282<2@2D2H2L2P2T2X2\2`2d2h2l2p2t2x2|2
2 2$2<2@2D2H2L2P2T2\2`2d2l2
2 2$2<2@2X2h2l2p2
2 2$282<2T2d2h2
2 2(2\2l2x2
2 202<2\2d2p2
2 2024282<2D2\2l2p2
2 20242D2H2X2\2`2x2|2
2 282=2Q2c2
2 2T2d2p2x2
2 3^3k3
2 3`3
2!2(2-2A2H2X2l2
2!2+2A2K2a2f2p2
2!292a2l2~2
2!3q3.4B4Q4N6p6
2"2)292P2
2"20272G2l2
2"222]2d2t2
2"2I2S2c2z2
2"3'31383H3g3
2#2<2B2H2U2^2c2
2#23282
2#232c2y2
2#232J2a2g2
2#292L2^2z2
2#373b3
2#3L3Q3\3a3
2$2,242@2H2l2
2$2,242<2D2L2`2h2|2
2$2,242<2D2L2T2\2d2l2|2
2$2,242<2D2L2T2\2d2l2t2
2$2,242<2D2L2T2\2d2l2t2|2
2$2,242<2D2L2X2|2
2$2,242<2H2P2
2$2,242<2L2T2\2d2l2t2|2
2$2,282X2`2h2p2x2
2$2,282X2d2
2$2.2>2,3
2$2?2r2
2$2<2X2
2$202P2\2|2
2$202P2\2d2
2$24282H2L2P2T2X2l2|2
2$282L2\2l2|2
2$2G2t2
2$2h2|2
2$3.3>3U3
2%262=2Y2y4
2%292G2T2d2j2
2%3.3C3P3l3
2%3/3?3a3k3{3
2&2<2R2f2z2
2&2K2j2
2&3I3
2&3T3v3
2&3V3
2(2,2<2@2D2\2`2x2
2(20282@2H2P2\2|2
2(202d2t2
2(202T2h2|2
2(262o2
2(282I2c2m2}2
2(2E2V2`2p2
2(2H2P2X2`2h2t2|2
2(2L2\2h2p2
2(3}3
2(3L3
2)2O2}2
2*2?2I2O2x2
2*242:2?2l2
2*343D3
2,202@2D2H2P2T2\2t2x2|2
2,242P2`2l2t2
2,2D2T2d2p2x2
2,2N2
2,3<3
2.2_2x2}2
2.393
2.3R3
2.3U3
2/262J2j2t2
2/3z3
2:2I2\2k2~2
2:3D3T3u3
2;3Y3l3
2?2h2
2?2k2
2?2O2U2[2`2w2
2?2T2g2
2?2Z2
2?3I3Y3
2@2c2
2@2J2Z2t2~2
2^3h3x3
2{3$4
2+2>2f2
2+2E2
2+2G2Z2
2+353E3
2<2S2r2
2<3K3X3z3
2<3W3z3
2=3F3
2>2H2X2r2|2
2>2R2
20<0L0l0
202:2J2[2e2u2
202:2J2c2z2.383H3f3p3
202@2P2\2|2
202@2P2`2p2
202F2
203F3|3
212_2
213?3I3Y3m3
2'2.2W2b2g2
2-272G2
2'272N2u2
2'282P2h2
2-2F2]2
2-2H2c2~2
2-2s2
2'3.383g3n3x3
2-3[3
2'3=3g3m3s3
232~2
2-3G3T3
2-3w3
242D2H2L2P2X2\2p2
242H2X2h2t2
242P2`2l2
243D3P4`4m4}4
252B2Q2
252E2l2w2~2
262@2P2d2s2(3
262E2x2
262M2
263f3u3
272Z2
273>3H3\3
282@2H2P2\2|2
282@2H2P2X2d2
282@2H2T2t2|2
282_2
282K2U2e2y2
283O3u3
283Z3y3
292\2c2s2
292w2
2a2o2|2
2A3a3
2B3G3X3f3w3
2B3P3`3q3
2C2X2|2
2C3d3
2C3R3\3i3w3
2D2k2u2
2D2w2
2E2O2_2v2
2E3J3T3[3f3
2G3f3
2H2x2
2I2p2u2
2I3_3u3
2J2^2
2J2O2V2[2o2|2
2J2Z2
2J3O3T3[3`3t3
2K2n2
2L2\2h2
2L2\2h2p2
2L2g2l2q2x2}2
2M3j3
2N2c2
2N3X3h3
2O2\2
2o2|2
2O2j2
2P2U2_2d2
2Q2]2c2x2
2Q3_3
2Q3V3[3b3g3{3
2R3Y3e3p3
2s2z2
2S4n4
2U2\2a2h2m2
2U2b2x2
2V3c3m3}3
2V3l3
2X3b3r3
2Y3d3u3
3 3$3(3,3034383<3@3D3H3L3P3T3X3\3`3d3h3l3p3t3x3|3
3 3(3\3l3x3
3 3(303<3\3h3
3 3(30383@3L3l3t3|3
3 3,343h3x3
3 3,3L3X3x3
3 3?3
3 3<3D3L3\3d3l3t3|3
3 383\3l3x3
3 383H3L3\3`3d3|3
3 3s3
3 4*4:4c4m4}4
3 4*4:4V4t4
3!3&303A3K3a3q3{3
3!3?3I3Y3w3
3!4&41464=4B4\4c4m4{4
3!4e4l4
3!5B5a5n5
3!6A6
3"3@3K3z3
3"3=3[3
3"3F3
3"3F305
3"3Y3}384M4[4u4
3#3-3=3V3
3#333?3H3j3t3
3#353T3g344:4L4p4
3#3B3P3f3w3
3#3C3M3]3v3
3$3)333:3i3
3$3,343`3t3
3$3,343<3D3L3T3\3d3l3t3|3
3$3,343<3D3L3X3x3
3$3,343<3D3P3p3|3
3$30383l3|3
3$343<3D3\3d3t3|3
3$34383H3L3P3T3h3l3
3$353?3O3f3x3}3
3$363K3
3$383@3H3P3X3`3h3p3
3$3D3L3T3\3h3
3$3I3S3c3w3=4
3$3L3l3|3
3$3s3x3
3$4>4K4
3$424E4
3$4a4
3$4t4}4
3%323<3L3e3
3%353E3J3k3p3z3
3%4@4
3%4^4
3%4_4
3&3>3I3h3
3&4@4e4
3&474J4O4
3&4V4
3(3,3<3@3D3H3L3P3d3t3
3(3,3<3@3X3\3d3h3|3
3(3;3K3S3Z3m3u3
3(303@3\3l3x3
3(30383@3L3T3t3
3(303d3t3
3(343T3\3d3p3x3
3(3G3[3j3
3(3W3d3
3(404O4f4x4
3(4B4L4R4
3(4C4H4R4W4
3)3{3
3)333C3d3
3)434C4\4f4v4
3)464M4X4m4
3*3^3
3,3<3@3D3H3L3P3T3\3t3x3
3,3<3@3P3T3d3h3l3t3
3,3034383L3\3`3d3h3|3
3,30343H3L3P3T3\3`3h3
3,313;3@3
3,343<3D3L3T3l3
3,343D3L3\3l3
3,383A3T3
3,3T3r3
3,3Y3
3,4;4@4E4L4Q4e4{4
3,4X4
3.3;3P3\3k3|3
3.3B3V3j3~3
3.3N3X3h3
3/343;3B3M3*474K4U4k4x4}4
3/353:3D3I3^3d3i3s3z3
3/3C3X3k3
3/3F3`3m3
3/4n4
3:4N4]4
3;3a3|3
3;3L3^3c3h3o3t3
3;3s3
3;4o4
3?3M3Z3`3g3m3t3{3
3?3P3
3?4x4
3[3x3
3[4M6Y6
3\3f3v3
3^3h3x3
3`3i3r3{3
3+3^3
3+323B3^354?4I4]4j4t4
3+3W3
3+4N4
3<3D3L3T3\3d3l3t3|3
3<3X3h3t3|3
3<4P4`4p4|4
3=3^3n3
3>4E4U4l4}4
3>4H4M4T4Y4m4
30343L3P3h3x3
30353?3D3
303L3Y3n3
303V3|3
304C4}4
30E0O0_0
313r3}3
323F3P3`3
333@3K3R3
333=3c3
333C3M3z3
333N3i3
3-343D3C4Z4q4
3-3g3t3
3'4.484
343;3K3
343>3N3\3i3s3
343>3N3v3
34383P3`3d3h3
343D3P3p3|3
343D3P3X3p3
343H3\3l3t3
343H3O3
343O3
343V3w3
3'4I4[4x4}4
353[3
353[3e3u3
354:4?4F4K4_4k4
354?4O4
354?4O4U4\4
374[4
374M4T4`4
383h3
383k3s3
383S3`3
393U3
394i4
3A3U3a3g3
3B3e3
3b3t3
3B4[4
3B4x4
3C3e3
3C3g3r3
3C3Z3d3C4
3C4f4
3D3L3T3`3h3
3D3t3
3D3T3`3h3
3E3j3
3e4r4
3F3x3
3F4V4`4p4
3H3X3d3l3
3H4U4
3H4y4
3I3X3]3g3
3j9Xf;
3jUQP
3M4W4g4
3N4U4e4
3O3T3^3c3r3
3O4\4s4~4
3P3`3l3t3
3P4_4i4y4
3P4h4
3P6i6
3Q3Z3o3|3
3V3d3
3V3l3x3
3V4o4
3W3{3
3W4d4{4
3W4r4
3W4R5~7
4 4$4(4,4044484<4@4D4H4L4P4T4X4\4`4d4h4l4p4t4x4|4
4 4$4(4<4@4D4H4L4T4l4p4t4
4 4$4(4<4@4P4`4d4h4p4
4 4$4,4044484@4D4H4L4T4X4`4d4l4p4t4x4|4
4 4$484<4L4P4`4d4h4l4p4t4|4
4 4(40484D4L4
4 4,444L4p4x4
4 4@4`4
4 4@4H4P4X4d4l4
4 414;4Q4[4q4v4
4 474j4
4 4D4T4`4h4
4 5@5o5
4 5<5P5`5l5t5|5
4 5L5
4!4(484s4
4!4,434E4K4Q4W4]4c4j4q4x4
4!4+424R4b4g4v4{4
4!4+454;4|4
4!414A4E4I4M4Q4U4Y4]4a4
4!424B4F4R4V4b4f4q4
4!5&5
4!5(5-52595>5R5Y5i5}5
4!5O5
4"4,4<4S4}4
4"424i4s4
4"4W4m4u4z4
4"5,5
4"5<5L5{5
4"555:5D5I5
4"5S5`5j5z5
4"5Y5w5~5
4#434
4#434P4Z4j4
4#4-444?4E4J4T4[4m4~4
4#4-444l4
4#474>4N4e4
4#474A4Q4f4v4
4#4q4
4#5-5=5m5
4$4(4,40484P4`4d4h4
4$4(4<4L4P4T4l4|4
4$4)4I6
4$4*414p4
4$4,444@4`4h4p4x4
4$4,444<4D4L4T4\4d4l4t4|4
4$4,444<4D4T4\4t4
4$4,444D4T4d4p4
4$4,4D4L4\4x4
4$4<4`4p4|4
4$404P4\4|4
4$404P4X4`4h4p4|4
4$404P4X4d4
4$4D4\4`4l4
4$4V4
4%454L4Z4z4
4&4.444h4
4&4i4
4&4z4
4&5K5f5
4&5S6
4(4,4<4@4D4\4l4|4
4(4,4D4H4L4`4d4t4
4(4<4D4L4
4(404d4t4
4(444<4p4
4(484H4X4\4`4x4|4
4(4F4Z4
4(4H4P4X4`4l4
4)494W4a4q4
4)4F4_4o4
4)5\5
4*4<4N4q4w4
4*434<4X4]4g4l4~4
4*494@4P4
4*4e4s4
4*4G4
4*4M4n4
4*6:6
4,4<4@4D4H4\4`4x4
4,40444<4T4d4h4
4,444<4D4L4T4l4x4
4,484X4`4l4t4
4,4L4d4t4
4,4O4f4l4r4
4,5:5Z5
4,5@5T5\5d5l5t5|5
4,535V5
4,5C5G6S6
4,5E5U5a5r5|5
4,5L5Q5[5`5{5
4,5x5
4.4j4
4.5G5[5
4/4Z4d4t4
4/5A5g5
4;4Q4
4@4f4s4
4@4G4q4
4@4J4Z4q4{4
4^4e4j4q4v4
4_4k4
4_4z4
4+4C4
4+5@5G5[5
4+5[5
4+5i5
4+5Q5^5e5l5r5
4+5S5
4<4j4
4<5w5
4=5U5f5
404a4
404d4
404S4a4
404W4~4
405:5J5
405=5T5_5t5
414A4G4a4|4
414F4Z4
415k5
415L5g5
424<4L4
424<4L4c4o4
424F4Z4n4X9s9}9
434E4O4_4}4
4-4?4T4^4n4~4
4'4>4o4}4
444<4D4L4T4\4d4l4t4|4
444<4H4h4p4x4
444D4`4p4|4
444M4R4\4a4p4
444P4_4
444w4
44585@5H5`5
445F5^5g5v5
4-4P4j4}4
4'515A5z5
454R4
454s4}4
455>5S5o5w5
464;4E4J4
464;4E4J4Y4c4u4
464E4Q4
465E5d5
474c4
475<5G5L5x5
484@4H4X4`4
484B4R4p4z4
485B5R5s5
485E5
494I4a4h4m4w4|4
4A5L5R5X5_5
4B4i4w4
4C4h4
4c5V7c7
4D4T4`4h4
4D4Z4}4
4E4!5"6h6y6
4E5Z5m5z5
4F4[4
4f4|4
4f5k5u5z5
4G5Y5^5h5o5
4H4\4l4|4
4H4X4d4l4
4I4X4]4b4i4n4
4J4p4
4J4T4d4
4J5j5q5
4K4P4Z4a4l4
4L5Q5[5`5
4L5x5
4P4`4l4t4
4P5Z5j5}5
4q4x4
4Q5c5l6~6
4T4l4v4
4U4s4
4u4z4
4VhT(
4W4a4q4
4W5^5h5
4Y4b4n4
4Z5w5
5 5$5(5,5054585<5@5D5H5L5P5T5X5\5`5d5h5l5p5t5x5|5
5 5$5(5,50585P5`5d5t5x5
5 5$5(5,545L5P5d5t5x5
5 5$5(5<5@5X5\5`5t5x5|5
5 5(545T5\5d5l5t5|5
5 5(5L5T5\5d5l5t5|5
5 5@5\5l5x5
5 5@5H5P5X5\5d5x5
5 5054585P5T5X5l5|5
5 50585T5d5l5
5 515;5Q5V5`5q5{5
5 545?5T5Y5^5e5j5~5
5 585<5T5X5`5d5x5|5
5 585H5L5\5`5d5h5p5x5
5 6*6:6d6
5 6l6
5!5+525=5D5I5S5Z5e5z5
5!5<5F5V5j5
5!5'51575A5G5Q5W5a5g5q5w5
5!6+6;6h6r6
5!646O6Y6i6
5!6E6
5!6T6
5"5/5O5i5
5"565
5"565h5
5#5(5
5#5+5b5j5t5|5
5#5<5G5P5Y5_5d5u5~5
5#535<5I5O5U5[5`5m5{5
5#5G5_5q5
5#5N5X5h5}5
5#6(696C6S6
5#6^7
5#616;6I6
5#6-6=6T6
5#6L6o6
5$5(5,5@5D5T5X5p5
5$5(5,5054585@5D5H5L5P5T5\5`5d5h5l5p5x5|5
5$5*5f5
5$5,545@5`5h5p5|5
5$5,545<5D5L5T5d5p5x5
5$5,545<5H5h5p5|5
5$5,545D5\5l5|5
5$5@5V5w5
5$50585\5d5l5|5
5$50585|5
5$50585l5|5
5$525C5g5
5$545@5H5|5
5$545<5X5`5h5t5|5
5$585
5$5O5c5
5$6P6c6p6
5%6,636e6l6s6
5%616=6D6Q6h6r6
5&5.5^5g5{5
5&515F5l5
5&515f5u5
5&565P5]5j5t5
5&585M5T5d5t5
5&606
5&606@6X6j6t6
5(5_5
5(505L5T5\5d5l5t5|5
5(525B5X5]5b5w5
5(585l5v5
5(585Q5[5k5
5(5P5r5
5(6K6
5(6p6
5)5;5N5m5
5)565Y5
5)5A5X5
5)6.636:6?6S6Z6j6
5*5;5q5o6
5*5d5z5
5*5t5
5*646D6
5,505<5D5x5
5,5054585<5D5\5l5p5
5,505H5L5P5d5h5
5,505H5X5\5l5|5
5,545<5D5L5T5\5d5l5
5,585@5d5x5
5,5A5O5d5s5
5,6P6
5.5:5D5X5b5
5.545:5H5P5|5
5.5g5y5
5/5<5F5V5u5
5/595I5h5
5/5E5`5
5:5U5
5:5X5v5
5:6o6
5;6B6
5?5e5
5?5j5
5@5P5\5|5
5[6l6q6{6
5]5p5
5+565=5M5
5+6G6u6
5<5c5
5<5D5P5t5|5
5<6I6`6k6
5<6S6
5<6T6c6
505<5\5d5l5x5
505P5v5
516;6K6c6
516@6J6Z6
525g5
526_6
52676B6M6X6_6d6i6p6u6
535:5D5O5^5
545@5d5l5t5|5
545<5D5P5X5p5
545>5N5
545O5j5
546W6
5-555Y5f5z5
556:6D6t6
5'595a5
5'5B5L5\5x5
5'5f5
5-5G5{5
5'5H5R5b5
565c5
5'6a6
5'6W6]6c6p6{6
576h6|6
585@5H5T5\5
585@5L5l5x5
585B5R5f5w5|5
585D5d5p5
585p5
586=6G6L6_6
595C5S5
5A5M5Z5d5t5
5a5q5~5
5A5X5
5A5Z5a5q5
5A6k6
5B5b5
5B6]6k6
5B6L6\6
5D5N5^5
5D5N5Y5f5
5E5]5d5t5
5E5~5
5F5P5`5{5
5G5j5
5G5k5|5
5G5t5~5
5H5i5
5h5m5r5y5~5
5H5x5
5H6r6y6
5L5\5h5
5L5V5f5}5
5M5c5
5M5X5|5
5M6]6u6
5n6{6
5P5`5l5
5P5`5l5t5
5Q5[5k5
5U6t6
5V5]5b5i5n5
5V5i5
6 6$6(6,6064686<6@6D6H6L6P6T6X6\6`6d6h6l6p6t6x6|6
6 6$6(6,60686<6D6H6P6h6x6|6
6 6$6(6,64686<6@6D6H6P6T6X6\6`6d6l6p6t6x6|6
6 6$6(6@6D6H6P6T6\6t6
6 6$6(606H6L6d6t6x6
6 6$6<6@6D6L6d6t6x6|6
6 6(606<6D6d6
6 6,646h6x6
6 6,686d6h6
6 6,6L6X6x6
6 6/6s6
6 616;6Q6V6`6q6{6
6 686\6l6x6
6 686<6T6d6h6x6
6 6D6X6l6
6 7-7=7D7e7o7
6 8@8
6!6+6W6a6k6
6!616
6!61676A6Q6a6g6q6w6
6!737=7M7d7
6"6)6k6
6"60676G6
6"6I6T6Y6c6h6
6"737r7
6"7'71787C7
6#6*6Z6d6t6
6#676]6w6
6#767;7
6#7B7t7
6#7z7
6$6(6,646H6P6X6`6d6l6
6$6(6,6D6T6X6\6`6d6h6l6t6x6|6
6$6,646<6D6L6T6\6d6l6t6|6
6$6,686@6X6`6
6$6,686X6`6h6t6|6
6$6.6>6U6v6
6$6;6
6$6`6
6$606P6\6|6
6$64686@6X6h6l6|6
6$6H6
6$6X6h6t6|6
6$7/747M7W7g7~7
6$7`7
6$747@7H7|7
6$787@7H7P7X7d7l7
6$7S7b7
6%636Z6q6
6%6E6N6f6k6
6%6R6
6%7/7?7
6%7`7
6&6?6V6
6&6+656:6I6\6
6&606@6^6
6&757T7
6&798f8y8
6&7V7
6(6/6@6^6l6s6
6(6:6B6K6W6g6l6v6{6
6(606T6\6d6l6t6|6
6(666C6_6w6
6(686<6L6P6`6p6t6
6(686D6L6
6(6A6b6
6(6A6P6\6f6s6}6
6(6G6
6(6H6P6X6`6p6
6(6H6X6|6
6(727B7
6(7V7
6)606O6q6
6)656U6
6)6E6P6p6
6)6I6
6)6k6
6)6l6
6)6N6
6)7W7
6*646D6`6j6z6
6*6H6f6
6*6l6
6*898B8Y8a8
6,6<6D6T6d6l6
6,6<6L6\6l6x6
6,6=6E6R6y6
6,606@6D6T6d6h6l6p6t6x6|6
6,646<6D6T6\6d6t6
6,646X6h6t6
6,666F6
6,686@6d6x6
6,686@6t6
6,6G6V6`6p6
6,797Q7^7/8
6,7d7
6,7H7
6.0.0.0
6.6F6P6h6
6.6I6
6/646>6C6R6W6a6f6s6x6
6/696I6h6r6
6/6J6e6
6/6P6Z6j6
6/b9[
6:6]6x6
6:7j7
6;6w6
6;s4u
6?6V6i6
6@6M6W6g6
6@6P6\6|6
6\7~7
6]7u7|7
6`7t7
6+626?6l6
6+6B6s6{6
6+6D6P6d6n6~6
6+6M6
6<6A6K6P6w6|6
6<6D6L6T6\6d6l6t6|6
6<6D6L6T6\6l6x6
6<6H6P6p6
6<6y6
6<7F7
6<7l7
6<7Z7t7
6=7S7k7
6>6`6j6w6
6>7P7?8I8Y8k8
606@6L6T6
606>6f6}6
60646L6\6`6d6|6
607@7L7l7t7|7
616B6]6g6
61777f7|7
626H6
636=6M6
636t6{6
637H7\7b7r7
637L7Y7m7
646@6`6l6
646D6P6p6|6
646K6Q6X6}6
646S6]6
647A7
647S7|7
656;6s6
656m6
657W7
6-6=6E6]6d6t6
666@6J6w6X7^7c7n7s7
6'6-626<6A6h6
666G6V6e6t6
666I6W6i6
667B7j7
667j7s7
6-686M6p6
6-6A6v6
6-6F6W6h6
6'7?7E7
6'707?7K7T7^7
676L6
6-777G7[7
677C7S7a7v7
686E6e6n6s6
686h6
686S6
687=7B7I7N7b7n7
696E6
698E8v8
6A6V6v6%777>7N7
6a7|7
6A7~7
6b6}6
6B7e7o7
6b7m7v7
6B7U7h7
6C6w6
6c7l7
6e6j6o6v6{6
6E6O6_6
6E6v6
6F7i7
6F7T7
6G6L6V6]6h6
6H6\6l6t6|6
6i6s6
6I6y6
6j@SS
6j7t7
6L7b7
6M7T8
6n7}7
6P7x7
6p7y7~7
6Q7[7k7
6q7{7
6T7k7v7
6T7v7
6u6{6
6U7x7
6Vhl6
6Y;0u
6Y6c6s6
6Y6g6v6
7 7#828Y8
7 7$7(7,7074787<7@7D7H7L7P7T7X7\7`7d7h7l7p7t7x7|7
7 7$7(7@7D7H7L7P7X7\7d7|7
7 7$7,7074787@7H7L7P7T7\7`7h7l7p7t7x7|7
7 7$7<7L7P7`7p7t7
7 7%797E7
7 7(7@7D7H7\7`7p7
7 7(7\7l7x7
7 7(707<7\7d7l7t7
7 7(707<7\7d7p7
7 7(747T7\7d7l7t7|7
7 7+7@7f7
7 7<7L7X7`7
7 7074787<7@7D7H7L7P7T7\7`7d7h7l7p7t7x7|7
7 8p8
7!7&70757K7
7!7&707A7K7a7f7p7
7!7(787B7R7j7
7!7[7
7!7^7g7
7!7+7g7q7{7
7!8'8L8V8
7!8C8a8
7"7)747n7x7
7"7/7A7F7P7h7p7
7"737=7B7L7Q7`7f7k7u7|7
7"7G7Q7a7
7"7i7|7
7"7I7S7c7
7"7I7v7
7"8K8c8q8
7"8V8
7#7(72777Y7f7p7
7#7+7I7a7
7#797A7Y7{7
7#797E7R7\7
7#8e8
7#8O8V8^8k8}8
7$7(787<7@7D7H7P7h7x7|7
7$7,7`7p7|7
7$7,747<7d7
7$7,747<7D7L7t7
7$7,747<7D7L7T7\7d7p7
7$7,747<7D7L7T7d7p7
7$7,747L7X7`7
7$7,787@7t7
7$7,787\7d7l7t7|7
7$7,7D7h7x7
7$7,7D7L7T7\7d7l7t7|7
7$7,7L7T7d7
7$7+7;7S7w7
7$70787l7|7
7$74787<7@7H7`7d7|7
7$74787P7T7h7l7p7
7$747V7y7
7$7A7K7[7s7
7$7D7P7p7|7
7$7J7O7Y7`7p7u7
7%7*74797V7`7p7
7%7.7A7H7N7S7z7
7%7/7?7T7Y7c7h7~7
7%7/7?7X7b7r7
7%7;7Q7[7k7
7%727F7T7s7
7%757A7Q7a7g7q7w7
7%7a7
7%7M7W7g768E8O8_8
7%7O7Y7i7
7%7Q7[7k7
7&757:7O7
7&7I7}7
7&8:8G8g8
7&8L8A9j9z9
7&8Q8u8
7(7/7Y7b7n7
7(7<7D7T7\7l7|7
7(787c7r7
7(7H7T7
7(7H7X7|7
7(8K8{8
7(8K8~8
7(8N8t8
7(8r8
7(989_9
7)7z7
7)8F8V8]8h8{8
7)8Y8w8
7*71787>7
7*7A7a7f7
7*7L7
7*7S7
7*848D8V8`8p8
7*8Q8V8`8g8r8
7*9i9
7,7<7@7P7T7X7p7
7,70747H7(<0<4<8<<<@<D<H<L<P<T<X<\<`<d<h<l<p<t<x<|<
7,747<7L7T7d7t7|7
7,767F7W7a7q7
7,787@7`7|7
7,7A7S7]7m7
7,7C7}7
7,7U7
7,8^8w8
7.7?7S7a7k7{7
7.737:7A7Y7m7r7y7~7#8U8Z8a8f8
7.7M7
7.888H8q8
7/7D7Z7d7t7
7/7V7h7
7/8U8j8
7:7\7l7
7;8@8w8}8
7?8I8Y8l8p8t8x8|8
7]8k8u8z8
7+7=7K7R7b7
7+757E7o7y7
7+8I8t8
7<7D7L7X7x7
7<8G8L8
7>7E7U7q7
7>7L8
7>8N8
7>8S8o8
707@7D7H7`7d7|7
708@8L8T8t8|8
70A0Q0
728<8
72898I8k8r8
737[7`7j7o7
737E7e7t7
737e7u7
747D7P7X7t7|7
747L7P7h7l7p7t7x7|7
747P7Z7g7
747T7
757g7y7
758:8a8g8}8
758n8,9P9
767i7
768;8@8L8^8
7'7.797j7
7'7;7B7[7
7'717A7g7q7
7'767n7w7
777d7i7n7u7z7
777i7
777I7V7
7'7O7
787D7d7p7
788F8S8
788y8
7'8J8i8
797F7Z7
798F8P8`8}8
798O8
7A7I7S7[7{7
7A7S7v7
7A8N8U8\8
7b7l7|7
7B7O7Y7g7
7B7v7
7D7W7`7k7}7
7e8q8
7E9Y9
7F8L8Q8\8a8r8
7G7w7
7I7]7b7l7s7
7I7d7i7n7u7z7
7I8{8
7I8S8
7J7Q7w7
7K7a7p7
7K8P8Z8a8
7L7~7
7L7d7s7
7L8V8
7M7u7
7O7[7h7
7O8T8[8b8r8y8
7P7v7
7Q8X8h8
7SSSV
7T9^9n9
7W7r7
7W8a8k8
7x7+8
7x8 9
7X8]8g8n8
8 8$8(8,80848<8@8D8H8L8P8X8\8`8d8h8p8t8x8|8
8 8$8(8,8084888<8@8D8H8L8P8T8X8\8`8d8h8l8p8t8x8|8
8 8$8(8@8D8X8h8l8|8
8 8&8*82868<8@8F8J8P8T8Z8^8|8
8 8(8\8l8x8
8 8(808<8\8d8p8
8 8(848<8\8x8
8 8(888\8d8l8t8|8
8 8(8L8\8h8p8
8 8,848h8x8
8 8,888P8\8h8
8 808G8
8 838=8M8]8t8~8
8 848<8T8t8
8 84888<8T8d8h8l8p8
8 8C8
8 8D8T8\8d8l8t8|8
8 8T8d8p8
8 9:9
8 909<9D9x9
8 959?9O9m9
8 9H9M9W9^9i9
8!8&808A8K8a8f8p8
8!8(8/85898=8A8E8I8M8Q8U8Y8]8a8e8i8m8
8!8(838r8
8!818H8\8
8!868;8H8T8n8w8
8!8a8
8!9+9;9i9u9
8"919i9
8"969N:n:
8#8(82878K8P8Z8a8x8
8#898]8
8#8K8
8#9>9s9
8#909D9R9v9
8#9-9
8#9S9k9
8#9X9
8$8(8,80848<8T8X8\8`8d8h8p8t8x8|8
8$8(8,848L8\8l8p8t8
8$8(80848<8@8T8X8p8
8$8,848<8D8L8T8\8d8l8t8|8
8$8,848<8H8P8
8$80888l8|8
8$808P8X8d8
8$888L8T8d8l8
8$8o8
8%8,8<8U8l8
8%808E8h8
8%818{8
8%818E8Q8a8g8r8
8%8V8w8
8%9{9
8%9F9
8&8+8?8U8n8s8z8
8&949V9e9?:
8&959n9
8&9B9O9[9
8&9l9
8(8,8D8T8X8\8`8t8x8
8(80888@8H8T8\8
8(808H8P8t8
8(828B8Y8
8(888
8(888<8@8D8X8\8`8x8|8
8(8A8N8}8
8(8L8
8(8X8o8
8(979
8)8>8a8
8)8A8Y8q8
8*8^8c8m8t8
8*818A8c8
8*878K8t8
8,8<8D8T8d8l8t8|8
8,80848H8L8\8`8x8
8,848<8D8L8T8\8d8l8t8|8
8,848H8P8X8`8t8|8
8,868@8J8T8^8h8u8
8,878<8F8K8[8}8
8,8D8`8t8
8,8R8
8,999M9f9
8.858E8\8
8.8i8
8.8I8W8z8
8:8P8d8n8~8
8:9^9o9
8;8e8
8;9F9
8;9H9Z9
8@9E9O9V9
8@uP9_
8[8b8r8
8_^[]
8_uAhP^
8{u.9]
8+8=8G8W8n8
8+848:8p8y8
8+979?9W9_9l9t9
8+9Y9
8<8D8P8p8|8
8<8I8u8z8
8<8v8
8<9B9
8<9q9
8>9E9J9W9k9q9
8084888L8P8T8X8l8p8
80888@8H8P8\8|8
80888T8d8p8x8
808V8
809I9g9q9
81868@8E8e8o8
819j9
828]8
829<9_9
848D8P8p8|8
848N8{8
848S8]8
848T8^8n8
849;9_9n9
849C9M9]9
85<[<
858;8B8g8
858d8k8{8
858J8W8y8~8
859:9?9F9K9_9J:O:T:[:`:t:
868@8J8Z8x8
868R8
869<9x9
869G9R9W9
878A8s8
878v8
8'8,8s8
8'8.8a8
8-8;8i8
8'8?8Z8
8'818A8n8
8-878G8
888~8
888B8R8~8
888D8L8d8t8
888H8X8`8
889F9P9`9w9
889L9T9\9d9l9x9
889m9
8-8C8
8'8F8
8-8m9t9
8'8N8
8'8O8u8
8'8v8
898D8I8}8
899@9E9
899]9
8A8K8[8}8
8A8P8U8Z8a8f8z8
8A8T8
8C9O9
8D8K8U8}8
8D8W8r8|8
8D8X8h8x8
8E8`8
8f;9u
8F8X8a8
8F9]9
8g9&:-:=:
8H8V8n8
8I8W8
8I9~9
8J9e9o9t9
8K9n9
8L8`8p8
8L8r8
8L9a9
8L9R9
8M8r8
8M8W8g8
8N8i8
8N9W9e9o9
8O8a8g8
8P8`8l8t8
8P8x8
8Q9X9]9b9i9n9
8r9,:
8V8m8
8Wpu+
8WqtR
8X8 9x9
8Z8&:::?:/;9;I;`;
8Z8k8p8z8
8Z9_9d9r9
9 :^:
9 :Y:y:
9 9$9(9,9094989<9@9D9H9L9P9T9X9\9`9d9h9l9p9t9x9|9
9 9$9(9@9D9L9d9h9l9t9x9
9 9$9<9@9D9L9P9d9h9l9
9 9$989<9T9X9p9
9 9(9@9d9t9
9 9,9L9T9\9h9
9 9<9
9 9<9L9X9x9
9 939M9
9 949<9L9T9d9t9|9
9 989<9@9T9X9\9t9x9
9!9&909A9K9a9f9p9
9!9,94999>9Q9\9d9i9n9
9!919W9w9
9":/:6:F:
9"9)9r9w9
9"929J9
9"9'9>9]9r9w9~9
9#:0:5:?:D:^:h:r:
9#:6:t:
9#9=9D9k9u9
9#919C9
9#929C9S9`9j9z9
9#93989I9U9k9u9
9#949K9V9[9p9
9#9L9i9
9$9(9,90989<9@9D9H9P9T9X9\9d9h9l9p9t9|9
9$9(9,94989<9@9D9H9\9`9x9|9
9$9(9<9@9D9X9\9`9x9
9$9(989<9T9d9h9x9
9$9,9@9H9\9d9x9
9$9,9<9D9`9t9
9$9,949<9D9L9T9\9d9l9t9|9
9$9,949<9D9L9T9\9l9t9|9
9$9,989@9X9`9
9$9+969F9T9\9f9v9
9$909P9X9`9h9p9|9
9$94989H9L9P9d9h9x9|9
9$949D9\9t9
9$949D9P9X9|9
9$9D9L9T9\9d9l9x9
9$9D9L9T9`9h9
9%:0:B:t:|:
9%9+909A9Q9[9q9{9
9%9<9
9%979>9O9e9
9&:<:T:
9&9:9f9
9&9+959:9o:
9&9<9T9
9&909K9
9&939A:V:]:g:r:
9&949?9E9J9Q9V9~9
9&949E9S9
9&9S9X9b9i9t9
9(:2:B:\:
9(:L:]:
9(9\9
9(909d9t9
9(929B9
9(949E9S9d9v9
9(9H9P9X9`9h9p9x9
9)9K9a9s9
9*9B9J9^9p9
9,:O:g:
9,:U:q:
9,9?9I9Y9i9|9
9,9<9D9L9X9`9x9
9,9<9L9P9T9l9|9
9,939
9,969
9,989@9X9`9
9.:v:
9.93989?9D9X9v9 :%:*:1:6:J:Q:a:u:
9/:U:p:
9/999C9\9m9
9':1:A:Q:V:`:g:
9':C:u:
9':J:
9-:K:
9-:Q:
9-:W;b;
9;9E9U9n9
9;t'h
9;w/hW
9@:d:
9@:j>!?9???
9@9E9O9V9a9
9@9P9\9|9
9]9g9
9^ v'
9_0tV9^0t(
9`9t9
9|:/;
9~(s+j
9+:h:
9+:P:s:
9+959E9^9h9x9
9+959E9i9
9+9A9M9S9y9
9+9c9
9+9Z9_9f9k9
9<:C:S:
9<9L9X9`9x9
9<9U9
9=9G9W9e9~9!:+:;:R:
90:@:L:T:
90:]:g:}:
90:5:?:D:
90;@;
909<9\9d9l9x9
90989@9H9P9\9|9
90989D9d9l9t9
909I9g9
909P9l9
90T0m0
90uP9p
919;9P9]9d9t9
919u9
929]9h9
93:[:`:g:l:
93:F:
939J9
939Z9
93vOk
949<9D9P9p9x9
94989P9`9d9t9x9|9
949D9P9X9
949p9
949T9p9
95:T:
96:T:s:
969=9g9
969a9
969f9u9
97:i:
979>9H9w9~9
989B9O9e9l9|9
989l9
9'9,9g9
9-9;9K9P9l9
9-979G9l9v9
9-9H9c9~9
9-9X9}9
9A9k9
9A9u9
9A9X9_9o9
9B]R.B
9b9l9
9C$u/hW
9C,vK
9C:r:|:";y<
9C<t{
9C9j9y9
9C9v9
9D9~9
9D9r9
9D9t9
9D9T9`9
9E:T:^:n:
9E:y:
9f:>;T;
9f;8u
9g9{9
9GD|.
9J:[:
9j]Zf;
9K(vP
9K9f9
9M:q:
9M9Z9g9
9N:s:
9N9k9
9P:W:d:k:v:}:
9p0_^[uzh
9PWh4
9S:e:o:
9s0v_
9S9r9
9sHuMh
9T9f9
9U9f9
9U9t9
9VPt2
9W v^
9W:a:q:
9w<tF
9wh~ZV
9wPv%SV
9x: ;
9X0vY
9xHuJh
9Y,v#
9Y>)F$
9Y9o9
9Z9{9
9Z9k9
A key handle is required for accessing this property
A;N r
A0H0X0_0l0z0
A0p0w0
AADRM
abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=
abort
Accept-Encoding: gzip, deflate
ACCESS
AccessCheck returned %s
AcquireBatchLicenses : url = %ws, flags = %d, number of certs = %d, number of identities = %d
AcquireBatchLicenses : wszLAURL = %ws, uFlags = %d, uNoOfUserCerts = %d
AcquireDelegationLicense
AcquireDelegationLicenseParams
AcquireDelegationLicenseResponse
AcquireLicense
AcquireLicenseForIssuanceLicenseV2
AcquireLicenseForIssuanceLicenseV2Params
AcquireLicenseForIssuanceLicenseV2Response
AcquireLicenseParams
AcquireLicenseResponse
AcquirePreLicense
AcquirePreLicenseParams
AcquirePreLicenseResponse
AcquireSRWLockExclusive
AcquireTemplateInformation
AcquireTemplates
Acquiring Delegation License for Xrml License.
Acquiring License for Json License.
Acquiring License for Xrml License.
AcquisitionProc: BatchLicensing User = %ws User's Issuer = %ws hr = 0x%x
Activation
ActivityError
ActivityIntermediateStop
ActivityStoppedAutomatically
AddCLCWithRAC
AddEULWithRAC
AddHttpHeader(wstrRequestIdHeader.c_str())
AddHttpHeader(wstrScenarioIdHeader.c_str())
AddRAC
ADDRESS
address family not supported
address in use
address not available
address_family_not_supported
address_in_use
address_not_available
ADFS flow: exiting. return hr:%x  HttpStatusErrorCode %d
Adhoc
ADPRR
AES_CBC4K
AES_CBC512NOPAD
ALGORITHM
AllowOnlyTrustedServers
alnum
alpha
already connected
already_connected
amd64
ANY_ROOT == eRequiredHierarchy || eRequiredHierarchy == eMatchedHierarchy
ANYONE
api-ms-win-core-com-l1-1-0.dll
api-ms-win-core-debug-l1-1-0.dll
api-ms-win-core-errorhandling-l1-1-0.dll
api-ms-win-core-file-l1-1-0.dll
api-ms-win-core-handle-l1-1-0.dll
api-ms-win-core-heap-l1-1-0.dll
api-ms-win-core-heap-l2-1-0.dll
api-ms-win-core-libraryloader-l1-2-0.dll
api-ms-win-core-localization-l1-2-0.dll
api-ms-win-core-localization-l1-2-2.dll
api-ms-win-core-memory-l1-1-0.dll
api-ms-win-core-processthreads-l1-1-0.dll
api-ms-win-core-profile-l1-1-0.dll
api-ms-win-core-registry-l1-1-0.dll
api-ms-win-core-registry-l2-1-0.dll
api-ms-win-core-string-l1-1-0.dll
api-ms-win-core-synch-l1-1-0.dll
api-ms-win-core-synch-l1-2-0.dll
api-ms-win-core-sysinfo-l1-1-0.dll
api-ms-win-core-sysinfo-l1-2-0.dll
api-ms-win-core-timezone-l1-1-0.dll
api-ms-win-core-url-l1-1-0.dll
api-ms-win-core-util-l1-1-0.dll
api-ms-win-core-version-l1-1-0.dll
api-ms-win-eventing-provider-l1-1-0.dll
api-ms-win-rtcore-ntuser-window-l1-1-0.dll
api-ms-win-security-base-l1-1-0.dll
api-ms-win-security-cryptoapi-l1-1-0.dll
api-ms-win-security-sddl-l1-1-0.dll
ApiOp
AppInfo.ClientHierarchy
AppInfo.Name
AppInfo.Version
APPSPECIFIC
AppSpecificData Name = %S, Value = %S
argument list too long
argument out of domain
ArgumentException
Assert
AttributeException
AttributeReadException
AttributeWriteException
AuthCallbackProvided
AUTHENTICATEDDATA
Authorization:
Authorization: Bearer 
Authorization: MSOID 
AuthType
AuthType not supported by server
AuthTypes
BACKUP
bad address
bad allocation
bad cast
bad file descriptor
bad function call
bad locale name
bad message
bad_address
bad_file_descriptor
bad_weak_ptr
base64
Base64 Decoding ...
bAuthCallbackProvided
bcrypt.dll
BCryptCloseAlgorithmProvider
BCryptCreateHash
BCryptCreateHash( hAlgHandle, &hHashHandle, NULL, 0, const_cast<BYTE *>(pbKey), cbKey, 0)
BCryptDestroyHash
BCryptFinishHash
BCryptFinishHash( hHashHandle, pbLocalHash, cbHash, 0)
BCryptGetProperty
BCryptGetProperty( hAlgHandle, BCRYPT_HASH_LENGTH, (PBYTE)&cbHash, sizeof(cbHash), &cbResult, 0)
BCryptHashData
BCryptHashData( hHashHandle, const_cast<BYTE *>(pbData), cbData, 0)
BCryptOpenAlgorithmProvider
BCryptOpenAlgorithmProvider( &hAlgHandle, BCRYPT_SHA256_ALGORITHM, NULL, BCRYPT_ALG_HANDLE_HMAC_FLAG)
bd664257d8ba4f5683d748011eb67a1b-7336a5d4-f348-4010-ac80-e0616834cf8e-7517
Bearer 
Bj _f9<P
Bj;Xjd
blank
block-size
bOnline
BootstrapIdentityFailure
Both Extranet URL and Intranet URLs can't be null in Issuer
Both Intranet and Extranet Urls can't be null
Both TemplateId and CustomPolicy cannot be specified
broken pipe
bTokenProvided
bUserProvided
BYTES_TO_BITS(uSize) == uBitsSize
C"f;E
C$f;E
C(+C$
C;\$8r
C;^(r
C<!s7
CActivation::CertifyGroupIdentity_msipp
CActivation::ProcessCertificationResponse_msipp
CallBackStatus
CallbackTime
callContext
CallContext:[%hs] 
calloc
Cannot get EUL with the specified RAC in the hUser.HR = %x
Cannot get ServerInfo, so skipping enterprise server check
Cannot Use Token for ILS Server
canRegisterPL
Can't find the required template. hr = 0x%x
Can't get User Handle hr = 0x%x
CBase64::UDBase64ToBinW( uDataSize, wszData, &uDecodedDataSize, &vecDecodedData[0])
CBase64::UDBase64ToBinW( uDataSize, wszData, &uDecodedDataSize, NULL)
CBase64::UDBase64ToBinW(cbInputData, wstrData.c_str(), &cbData, &vbDecodedData[0])
CBase64::UDBase64ToBinW(cbInputData, wstrData.c_str(), &cbData, NULL)
CBase64::UDBase64ToBinW(SafeInt<UINT>(wstrDigest.size()), wstrDigest.c_str(), &uDigestSize, &m_vbDigest[0])
CBase64::UDBase64ToBinW(SafeInt<UINT>(wstrDigest.size()), wstrDigest.c_str(), &uDigestSize, NULL)
CBase64::UDBase64ToBinW(SafeInt<UINT>(wstrValue.size()), wstrValue.c_str(), &uSize, &m_key.m_vbModulus[0])
CBase64::UDBase64ToBinW(SafeInt<UINT>(wstrValue.size()), wstrValue.c_str(), &uSize, &m_vbSignature[0])
CBase64::UDBase64ToBinW(SafeInt<UINT>(wstrValue.size()), wstrValue.c_str(), &uSize, NULL)
CBase64::UDBinToBase64W( uDataSize, pByte, &dwEncodedDigestSize, &wstrEncodedDigest[0])
CBase64::UDBinToBase64W( uDataSize, pByte, &dwEncodedDigestSize, NULL)
CBase64::UDBinToBase64W(cbSize, cbData, &cbOutput, &wstrOutput[0])
CBase64::UDBinToBase64W(cbSize, cbData, &cbOutput, NULL)
CBase64::UDBinToBase64W(SafeInt<UINT>(m_vbModulus.size()), &m_vbModulus[0], &uSize, &wstrModulus[0])
CBase64::UDBinToBase64W(SafeInt<UINT>(m_vbModulus.size()), &m_vbModulus[0], &uSize, NULL)
cbBuffer % sizeof (UINT) == 0
cbBuffer % sizeof (wchar_t) == 0
cbBuffer < STRSAFE_MAX_CCH
cbBuffer > sizeof(s_pbUTF8Preamble)
cbCiphertext
cbCiphertext > 0
cbContentKey
cbData
cbHash == 0
cbKeyBlob > sizeof(UDSymBlobHdr)
cbPlaintext
cbPlaintext > 0
cbSize >= (sizeof(WCHAR) * m_cchData)
cbSize:       
cbTokenData:  
CCertTypeUtils::CanIssue(vCertChain[i-1]->GetCertType(), vCertChain[i]->GetCertType())
CCertTypeUtils::SoftCompare(eExpectedLeafType, vCertChain.front()->GetCertType())
CCertTypeUtils::SoftCompare(GetExpectedCertType(), GetCertType())
cchString < STRSAFE_MAX_CCH
cchUTF16 < STRSAFE_MAX_CCH
cchUTF8 < STRSAFE_MAX_CCH
CDRMCChain::DRMDeconstructCertificateChain(certChain.c_str(), i, &ccNextCert, &chainItem[0])
CDRMCChain::DRMDeconstructCertificateChain(m_pPLLicense->GetCertificateChain().c_str(), SafeInt<UINT>(vwstrILChain.size()), &ccNextCert, &vwcNextCertInChain[0])
CDRMCChain::DRMDeconstructCertificateChain(wstrCertChain.c_str(), i, &ccNextCert, &vwcChainItem[0])
CDRMCPub::DRMGetLicenseId(m_hLicenseInitial, OUT m_wstrLicenseId)
CDRMCPub::DRMGetLicenseMetadataNotEncrypted
CDRMCPub::DRMGetUserRights(hLicense, hUser, i, &hRight)
CDRMCPub::DRMResetValidityTime(hLicense)
CDRMCPub::DRMSetIntervalTime(hLicense, m_State.GetIntervalTime())
CDRMCPub::DRMSetLicenseMetadataNotEncrypted
CDRMCPub::DRMSetNameAndDescription( hLicense, FALSE, lc, wszNm, wszDes)
CDRMCPub::DRMSetNameAndDescription( hLicense, TRUE, lc, NULL, NULL)
CDRMCPub::DRMSetNameAndDescription( m_hLicenseInitial, fDelete, pDescriptor->lcid, pDescriptor->wszName, pDescriptor->wszDescription)
CDRMRegisterPLRestRequest::BuildJsonObject
CDRMRegisterPLRestRequest::CanRegisterPL
CDRMRegisterPLRestRequest::DispatchRequest
CDRMRegisterPLRestRequest::GetRegisterPLEndPointURL
CDRMRegisterPLRestRequest::GetRegisterPLEndPointURLFromRegistry
CDRMRegisterPLRestRequest::RegisterPL
CDRMSoapRequest::DispatchRequest
CDRMSoapRequest::DispatchRequestLocal
CDRMSoapRequest::DispatchRequestUseServerInfo
CDRMSoapRequest::PutResponse
CDRMSoapRequest::TryToGetServerInfo
CDRMStore::Add
CDRMStore::Delete
CDRMStore::GetFileNamesAndData
CDRMStore::GetPersistedLicense
CDRMtoSP::DRMCreateBoundLicense( hEnv, &oParams, eulLicense.GetCertificateChain().c_str(), &hBoundLicense, NULL)
CDRMtoSP::DRMCreateEnablingBitsDecryptor(m_hBoundLicense, 0, 0, 0, &hDecryptor)
CDRMtoSP::DRMCreateEnablingBitsDecryptor(m_hBoundLicense, 0, 0, 0, &m_hDecryptor)
CDRMtoSP::DRMCreateEnablingBitsDecryptorWithCipherMode(pNewKey->m_hBoundLicense, 0, 0, 0, dwCipherMode, &(pNewKey->m_hDecryptor))
CDRMtoSP::DRMCreateEnablingBitsEncryptor(m_hBoundLicense, 0, 0, 0, &m_hEncryptor)
CDRMtoSP::DRMCreateEnablingPrincipal( pUserIdentity->GetEnvironmentHandle(), NULL, idStandardEP.wszID, &idNULL, const_cast<PWSTR>(wstrRac.c_str()), &hEnablingPrincipal)
CDRMtoSP::DRMDecrypt( m_hDecryptor, uiPosition, fFinal, fHash, cb, reinterpret_cast<BYTE*>(pvCiphertext), reinterpret_cast<UINT*>(pcbResult), reinterpret_cast<BYTE*>(pvPlaintext), reinterpret_cast<UINT*>(pcbHash), reinterpret_cast<BYTE*>(pvHash) )
CDRMtoSP::DRMDecryptWithRac(hRac, SafeInt<UINT>(vEncSessionKey.size()), &vEncSessionKey[0], CRYPT_OAEP, &cbDecSessionKey, &vDecSessionKey[0])
CDRMtoSP::DRMDuplicateHandle(m_hSpCLC, &(pCloneId->m_hSpCLC))
CDRMtoSP::DRMDuplicateHandle(m_hSpRAC, &(pCloneId->m_hSpRAC))
CDRMtoSP::DRMDuplicateHandle(pKey->GetBoundLicenseHandle(), &m_hBoundLicense)
CDRMtoSP::DRMDuplicateHandle(spKey->GetBoundLicenseHandle(), &m_hBoundLicense)
CDRMtoSP::DRMEncrypt( m_hEncryptor, reinterpret_cast<UINT>(pvIV), fFinal, fHash, cb, reinterpret_cast<BYTE*>(pvPlaintext), reinterpret_cast<UINT*>(pcbResult), reinterpret_cast<BYTE*>(pvCiphertext), reinterpret_cast<UINT*>(pcbHash), reinterpret_cast<BYTE*>(pvHash))
CDRMtoSP::DRMGetInfo( h, g_wszQUERY_BLOCKSIZE, &eType, &cbcbBlock, reinterpret_cast<BYTE*>(&m_cbBlock))
CDRMtoSP::DRMGetInfo( hEnablingBits, g_wszQUERY_SYMMETRICKEYSIZE, &eType, &cbBuffer, 0)
CDRMtoSP::DRMGetInfo( hEnablingBits, g_wszQUERY_SYMMETRICKEYSIZE, &eType, &cbBuffer, reinterpret_cast<BYTE*>(&puKeySize))
CDRMtoSP::DRMGetInfo( hEnablingBits, g_wszQUERY_SYMMETRICKEYTYPE, &eType, &cbBuffer, 0)
CDRMtoSP::DRMGetInfo( hEnablingBits, g_wszQUERY_SYMMETRICKEYTYPE, &eType, &cbBuffer, reinterpret_cast<BYTE*>(static_cast<wchar_t*>(wszKeyType)))
CDRMtoSP::DRMInitEnvironment(wszMachineCert, &autohEnv)
cdwLcid != nullptr
CEnrollment::AcquireEnrollmentCert_msipp
CEnrollment::DispatchSoapRequest
CERT_TYPE_CA == vCertChain.back()->GetCertType()
CertCompareCertificate
CertFreeCertificateChain
CertFreeCertificateContext
CertGetCertificateChain
CertGetEnhancedKeyUsage
Certificate
CERTIFICATE
Certificate
CertificateChain
CERTIFICATECHAIN
CertificateChain
Certification
CertificationInternalService
CertificationService
Certify
CERT-Machine
CERT-Machine-2048
CertVerifyCertificateChainPolicy
ch.ConstructCertificateChain(1, &wszLicense, &nChainLength, const_cast<PWSTR>(wstrChain.c_str()))
ch.ConstructCertificateChain(1, &wszLicense, &nChainLength, NULL)
ChangeRootException
Changing of owner is not allowed for Republish only license
CHANT
CheckAdd(dwReceived, dwBytesRead)
CheckforMaxNumber(dwLength)
Checking for Key rollover. Looking for CLCs matching URL: %ws
CheckIpcCredential(pContext->pcCredential)
CheckMultiply(dwReceived, 100)
CheckRMSOUrlIsHttps(hWinHttpRequest)
CheckTemplateOwnerRight
CHttpBase::AddDiagnosticIdsToHeader
CHttpBase::CheckResponseBodyForContent
CHttpBase::DispatchRequest
CHttpBase::DoGetOpertaion
CHttpBase::GetAlternateUrl
CHttpBase::GetResponse
CHttpBase::GetResponseBody
CHttpBase::HandlePostRedirects
CHttpBase::InitializeHttpRequest
CHttpBase::ResolveUrlWithGET
CHttpBase::SendRequest
CHttpBase::SetServerInfo
CIssuanceLicense::GetDecryptor
CIssuanceLicense::ParseLicense
CIssuanceLicense::ParseSignedIssuanceLicense
CJsonHelper::Serialize
CLC Sig Verification for UTF16 Payload
CLC Sig Verification for UTF8 Payload
CleanLicenseStoreForUrls Deleting all licenses corresponding to %ws
CLicenseAcq::AcquireBatchLicenses
CLicenseAcq::AcquireContext::DispatchSoapRequest
CLicenseAcq::AcquireLicenseContext::AcquisitionProc_msipp
cLicenseCount == cPrincipals
client
Client-Licensor-Certificate
CloseHandle
CLSIDFromString
CMicrosoftUrlHelper::GetExtranetDistributionPoint
CMicrosoftUrlHelper::ReplaceWithMicrosoftRMSOUrl
cNeededLen == cWrittenLen
cntrl
CoCreateGuid
CoCreateInstance
CoInitializeEx
CompanyName
CompareFileTime
CONDITION
CONDITIONLIST
configurationNamingContext
connection aborted
connection already in progress
Connection info is NULL
connection refused
connection reset
connection_aborted
connection_already_in_progress
connection_refused
connection_reset
ConnectionInfo.ExtranetUrl
ConnectionInfo.IntranetUrl
ConnectionMode
const
Consuming with regular discovery flow
ContentId
Content-Length: 
Content-License
Content-Type: application/json;charset=UTF-8
Content-Type: application/x-www-form-urlencoded
Content-Type: text/xml; charset=utf-8
converting 0x%x to HRESULT_FROM_WIN32(ERROR_FILE_NOT_FOUND)
ConvertSidToStringSidW
ConvertStringSecurityDescriptorToSecurityDescriptorW
ConvertStringSecurityDescriptorToSecurityDescriptorW( wszSecurityDescriptor, SDDL_REVISION_1, &(pSecurityAttributes->lpSecurityDescriptor), NULL)
copyStringToList - Not enough memory allocated.
CorrelationId
Correlation-Id/Request-Id: %ws
Could not format a filetime
Could not format a systemtime
Could not format a time range
Could not get a url from AD. hr = 0x%x
Could not get a url from the registry. hr = 0x%x
Couldn't find a EUL in the store
Couldn't find a EUL in the store for deletion
Couldn't find identity information for the Symmetric Key Token info cached in the registry
Couldn't Generate the EUL from PL locally
Couldn't get an EUL from the server.
couldn't open key (%ws) - 0x%X
CoUninitialize
CP tZ
CPhp$
Create
Created the enabling principal
CreateDirectoryW
CreateEventExW
CreateEventW
CreateFileW
CreateLicenseWithRacFromStoreObject
CreateMutexExW
CreateMutexW
CreateSemaphoreExW
Creating a key
Creating license from template ID
cRights > 0
CRMSOServerVerification::ValidateRMSOSSLRequest(hRequest)
CRMTemplateAPI::AcquireTemplatesFromServer
CRMTemplateAPI::CheckForCryptoUpdate
CRMTemplateAPI::IsKeyRolloverDetected
cross device link
CRYPT32.dll
CryptAcquireContext(&hProv, NULL, NULL, PROV_RSA_AES, CRYPT_NEWKEYSET)
CryptAcquireContext(&hProv, NULL, NULL, PROV_RSA_FULL, CRYPT_NEWKEYSET)
CryptAcquireContextW
CryptCreateHash
CryptDecrypt
CryptDecrypt(hKey, 0, FALSE, 0, (BYTE*)&decData[0], &dwDecDataLen)
CryptDestroyKey
CryptEncrypt
CryptEncrypt(hKey, 0, FALSE, 0, (BYTE*)&encData[0], &dwEncDataLen, cbRequiredBytes)
CryptEncrypt(hKey, 0, FALSE, dwEncryptFlags, (BYTE*)&encData[0], &dwData, cbRequiredBytes)
CryptGenRandom
CryptGetHashParam
CryptHashCertificate2
CryptHashData
CryptImportKey
CryptImportKey(hProv, (BYTE*)&pbKeyBlob[0], SafeInt<DWORD>(pbKeyBlob.size()), 0, 0, &hKey)
CryptImportKey(hProv, (PBYTE)&deskey, sizeof(deskey), NULL, 0, &hKey)
CryptImportKey(hProv, pbKey, SafeInt<DWORD>(cbKey), 0, 0, &hKey)
CryptImportKey(hProv, pbSimpleBlob, cbSimpleBlob, hE1K, 0, &hKey)
crypto upgrade is detected
Crypto version of EUL doesn't match crypto verion of the RAC.
CryptoUpdate Clean License Store hr = 0x%x
CryptReleaseContext
CryptSetHashParam
CryptSetKeyParam
CryptSetKeyParam(hKey, KP_MODE, (BYTE*)&dwMode, 0)
CryptVerifySignatureW
CServiceLocation::DoServiceDiscoveryRequest
CServiceLocation::FindServiceLocationBatchRequest
Current owner: %ws
CurrentBuildNumber
currentContextId
currentContextMessage
currentContextName
CurrentMajorVersionNumber
CurrentMinorVersionNumber
CurrentVersion
CXmlenc::EscapeXML(vNameAndDescriptionItems[i].wstrDescription.c_str(),&wszEscapedDesc)
CXmlenc::EscapeXML(vNameAndDescriptionItems[i].wstrName.c_str(),&wszEscapedName)
CXmlenc::UnescapeXML(m_wszExceptionMessage)
CXmlenc::UnescapeXML(m_wszFaultCode)
CXmlenc::UnescapeXML(m_wszFaultCorrelationId)
CXmlenc::UnescapeXML(m_wszFaultString)
CXmlenc::UnescapeXML(m_wszRightName,&wszOut,&uRightNameLength)
D$ j@P
D$ QQ
D$$j@P
D$`SVW
D$<VW
D$8jlP
D$dVW
D$HPj
D$HSVW
D$LPj
D$LVW
D:(A;OICI;GA;;;BA)(A;OICI;GA;;;SY)(A;OICI;GA;;;%s)
D0I0S0X0
DataSize
DebugBreak
DebugOutputEnabled
DecodePointer
Decoding failed, try disabling the compression and retrying
-Default
Default server in registry cache is %ws
Default server is configured in the registry: %ws
Default server is not set
Default server is set
Default server is the SCP : %ws
DefaultIdentityServer
DelegatedEmailAddress
DelegatedIdentities
DELETE
Delete
DeleteAllLicenses
DeleteCertsForMachineActivation
DeleteCLC
DeleteCriticalSection
DeleteEUL
DeleteFileW
DeleteLicense
DeleteRAC
deque<T> too long
DESCRIPTOR
destination address required
destination_address_required
detail
device or resource busy
DeviceInfo.OSArch
DiagnosticTenantId
Didn't get a 401 challenge.
different
DIGEST
digit
DIRECTORY
directory not empty
DisablePassportCertification
DispatchRequestLocal(g_wszAT_MSOSSP)
DispatchRequestLocal(pToken->GetTokenType())
DISTRIBUTIONPOINT
DNS Lookup failed looking up record for %ws with %d
DNS Lookup succeeded looking up record for %ws
DNSAPI.dll
DnsFree
DnsLookupOp
DnsQuery_W
DnsRedirectionDisabled
DnsSuccess
DocTrackingUrl requested for non RMSO
DocumentCreationException
DocumentReadException
DocumentReadHrException
DocumentWriteException
DoesDirectoryExist(path)
DomException
Done consuming with regular discovery flow hr = 0x%x
Done creating a key
Done creating key
Done getting identity from license
Done getting templates with result: hr = 0x%x
Done ippGetEULForRACs
Done loading the Security Processor.
Done serializing the license
Done trying TUD ippGetUserForLicenseUsingTud hr = 0x%x
Done with getting templates
don't have
downloadTemplates(pcUser)
DRM_AL_NO_SERVERINFO != (DRM_AL_NO_SERVERINFO & m_uFlags)
DRM_LICENSE_TYPE_UNMANAGED_TEMPLATE != eType
DRM-CA-Certificate
DRMCreateEnablingBitsDecryptor for Any Rights FAILED : %x
DRMCreateEnablingBitsDecryptor for EDITRIGHTSDATA FAILED : %x
DRMCreateEnablingBitsDecryptor for VIEWRIGHTSDATA FAILED : %x
DRMDecrypt FAILED : %x
DRMENCODINGTYPE_STRING == eType
DRMENCODINGTYPE_UINT == eType
-DRMGetApplicationSpecificData HR=%x
-DRMGetLicenseId hr = 0x%x
-DRMGetNameAndDescription HR=%x
-DRMGetRightInfo
-DRMGetUserInfo
-DRMGetUserRights HR=%x
-DRMGetUsers HR=%x
-DRMResetValidityTime HR=%x
-DRMSetIntervalTime HR=%x
-DRMSetNameAndDescription HR=%x
drmSoap.AddArrayParameter( g_wszLA_AcquireDelegationLicenseStruct, g_wszLA_ParamDelegatedIdentities, g_wszLA_ParamTypeString, SOAP_DATA_TYPE_STRING, *m_userIdentities)
drmSoap.AddArrayParameter( g_wszLA_AcquireDelegationLicenseStruct, g_wszLA_ParamLicenseeCerts, g_wszLA_ParamTypeCertificate, SOAP_DATA_TYPE_CERT, vwstrUserCerts)
drmSoap.AddArrayParameter( g_wszLA_AcquireDelegationLicenseStruct, g_wszLA_ParamRightsLabel, g_wszLA_ParamTypeCertificate, SOAP_DATA_TYPE_CERT, issuanceLicenseChain)
drmSoap.AddArrayParameter( g_wszLA_AcquirePreLicenseStruct, g_wszLA_ParamLicenseeIdentities, g_wszLA_ParamTypeString, SOAP_DATA_TYPE_STRING, *m_pvwstrUserIdentities)
drmSoap.AddArrayParameter( g_wszLA_AcquirePreLicenseStruct, g_wszLA_ParamRightsLabel, g_wszLA_ParamTypeCertificate, SOAP_DATA_TYPE_CERT, vwstrILChain)
drmSoap.AddArrayParameter( wszAcqLicParams, g_wszLA_ParamLicenseeCerts, g_wszLA_ParamTypeCertificate, SOAP_DATA_TYPE_CERT, vwstrUserCerts, 1, j)
drmSoap.AddArrayParameter( wszAcqLicParams, g_wszLA_ParamRightsLabel, g_wszLA_ParamTypeCertificate, SOAP_DATA_TYPE_CERT, vwstrILChain, SafeInt<UINT>(vwstrILChain.size()), j)
drmSoap.AddArrayParameter(g_wszLA_RequestParams, g_wszPUB_PersonaCerts, g_wszLA_ParamTypeCertificate, SOAP_DATA_TYPE_CERT, vwstrUserCerts)
drmSoap.AddArrayParameter(wszLicensorParams, wszPersonaCerts, g_wszLA_ParamTypeCertificate, SOAP_DATA_TYPE_CERT, vwstrUserCerts)
drmSoap.AddHeaderParameter(NULL, g_wszACT_MaximumVersion, SOAP_DATA_TYPE_STRING, g_wszACT_CurrentVersion)
drmSoap.AddHeaderParameter(NULL, g_wszACT_MaximumVersion, SOAP_DATA_TYPE_STRING, g_wszACT_Version11)
drmSoap.AddHeaderParameter(NULL, g_wszACT_MinimumVersion, SOAP_DATA_TYPE_STRING, g_wszACT_CurrentVersion)
drmSoap.AddHeaderParameter(NULL, g_wszACT_MinimumVersion, SOAP_DATA_TYPE_STRING, g_wszACT_Version11)
drmSoap.AddParameter( g_wszSI_ServerInfoRequest, g_wszSI_ServerInfoRequestType, SOAP_DATA_TYPE_STRING, dwRequestIndex, g_wszSI_ServerFeatureInfo)
drmSoap.AddParameter( g_wszSI_ServerInfoRequest, g_wszSI_ServerInfoRequestType, SOAP_DATA_TYPE_STRING, dwRequestIndex, g_wszSI_ServiceLocations)
drmSoap.AddParameter( g_wszSI_ServerInfoRequest, g_wszSI_ServerInfoRequestType, SOAP_DATA_TYPE_STRING, dwRequestIndex, g_wszSI_VersionInfo)
drmSoap.AddParameter( wszAcqLicParams, g_wszLA_ParamIssuanceLicenseV2, SOAP_DATA_TYPE_STRING, m_pPLLicense->GetLicense().c_str() )
drmSoap.AddParameter(wszLicensorParams, L"SignatureEncoding", SOAP_DATA_TYPE_STRING, L"utf-8")
drmSoap.AddStructParameter(g_wszLA_AcquireDelegationLicenseStruct, 3)
drmSoap.AddStructParameter(g_wszLA_AcquirePreLicenseStruct, 2)
drmSoap.AddStructParameter(g_wszLA_RequestParams, 1)
drmSoap.AddStructParameter(g_wszSI_ServerInfoRequest, 1)
drmSoap.AddStructParameter(wszAcqLicParams, 7)
drmSoap.AddStructParameter(wszLicensorParams, 1)
drmSoap.CreateHeader(g_wszACT_VersionData, 2)
drmSoap.CreateRequest( g_wszSI_GetServerInfo, g_wszSI_GetServerInfoRequests, g_wszPUB_ServerServiceNamespace, 1)
drmSoap.CreateRequest(g_wszLA_AcquireDelegationLicenseMethod, g_wszLA_RMSO_requestParameters, g_wszLA_AcquireDelegationLicenseNamespace, 1)
drmSoap.CreateRequest(g_wszLA_AcquirePreLicenseMethod, requestParams.c_str(), g_wszLA_AcquirePreLicenseNamespace, 1)
drmSoap.CreateRequest(wszAcqLicMethod, g_wszLA_RequestParams, g_wszLA_AcquireLicenseNamespace, 1)
drmSoap.CreateRequest(wszMethod, g_wszLA_RequestParams, g_wszPUB_PublishingServiceNamespace, 1)
drmSoap.DispatchGetRequest()
drmSoap.GetArrayParameterValue(g_wszLA_AcquireDelegationLicenseResponse, 0, g_wszLA_ParamCertChain, i, certChainPart)
drmSoap.GetArrayParameterValue(g_wszLA_AcquirePreLicenseResponse, 0, g_wszLA_ParamCertChain, i, spwstrValue)
drmSoap.GetArrayParameterValueCount(g_wszLA_AcquireDelegationLicenseResponse, 0, g_wszLA_ParamCertChain, &licenseCount)
drmSoap.GetArrayParameterValueCount(g_wszLA_AcquireDelegationLicenseResponse, 0, g_wszLA_ParamLicenses, &licenseCount)
drmSoap.GetArrayParameterValueCount(g_wszLA_AcquirePreLicenseResponse, 0, g_wszLA_ParamCertChain, &cLicenseCount)
drmSoap.GetArrayParameterValueCount(g_wszLA_AcquirePreLicenseResponse, 0, g_wszLA_ParamLicenses, &cLicenseCount)
drmSoap.GetParameterValue(wszResponse, wszCertChainResponseName, i, pwstrNextCert)
drmSoap.GetParameterValueCount(wszResponse, wszCertChainResponseName, &cCertChainCount)
drmSoap.SetCallbackInfo(NULL, DRM_MSG_ACQUIRE_LICENSE, NULL)
drmSoap.SetCancelHandle(NULL)
drmSoap.SetIpcContext(m_spIpcContext)
drmSoap.SetIpcContext(pIpcContext)
drmSoap.SetServerInfo(wstrLicensingUrl.c_str(), HTTP_NO_UI | HTTP_GET)
drmSoap.SetServerInfo(wstrPaddedURL.c_str(),(uFlags & DRM_AL_NOUI) ? HTTP_NO_UI : 0)
drmSoap.SetServerInfo(wstrServerInfoUrl.c_str(), ipp::IIpcContext::IsSilentMode(pIpcContext) ? HTTP_NO_UI : 0)
drmSoap.SetServerInfo(wstrUrl.c_str(), 0)
drmSoap.SetServerInfo(wstrUrl.c_str(), HTTP_NO_UI)
drmSoap.SetServerMethod(g_wszLA_LicensingService, g_wszLA_AcquireDelegationLicense)
drmSoap.SetServerMethod(g_wszLA_LicensingService, g_wszLA_AcquirePreLicense)
drmSoap.SetServerMethod(g_wszLA_LicensingService, wszAcqLicMethod)
drmSoap.SetServerMethod(g_wszPUB_PublishingService, wszMethod)
drmSoap.SetServerMethod(g_wszPUB_ServerService, g_wszSI_GetServerInfo)
drmSoapTemplate.AddArrayParameter(g_wszLA_RequestParams, g_wszPUB_PersonaCerts, g_wszLA_ParamTypeCertificate, SOAP_DATA_TYPE_CERT, vwstrUserCerts)
drmSoapTemplate.AddStructParameter(g_wszAILT_Guids, 1)
drmSoapTemplate.AddStructParameter(g_wszLA_RequestParams, 1)
DRMtoSPObj.RMGetBoundRightKey( hBoundLicense, g_wszEDITRIGHTSDATARIGHT, NULL, &cbKeyBlob)
DRMtoSPObj.RMGetBoundRightKey( hBoundLicense, g_wszEDITRIGHTSDATARIGHT, pbKeyBlob, &cbKeyBlob)
DRMtoSPObj.RMGetBoundRightKey( m_hBoundLicense, IPC_WRITE_RIGHTS, &keyBlob[0], &cbKeyBlob)
DRMtoSPObj.RMGetBoundRightKey( m_hBoundLicense, IPC_WRITE_RIGHTS, NULL, &cbKeyBlob)
drmXml.Child(g_wszSOAP_FAULT_DETAIL, 0, &tagchk)
drmXml.Child(g_wszSOAP_FAULT_EXCEPTION_MESSAGE, 0, &tagchk)
drmXml.Child(g_wszSOAP_FAULT_SERVERINFO, 0, &tagchk)
drmXml.FirstChild(&tagchk)
drmXml.GetNodeType(&nodeType)
drmXml.GetNodeValue(&m_wszMethodName)
drmXml.GetNodeValue(&wszNodeValue)
drmXml.GetXMLFragment(FALSE, &m_wszExceptionMessage)
drmXml.GetXMLFragment(FALSE, &m_wszFaultCode)
drmXml.GetXMLFragment(FALSE, &m_wszFaultString)
drmXml.NextSibling(&tagchk)
drmXml.Parent(&tagchk)
DsGetDcNameW
DtCSV
Duration
DurationWithoutExternalOps
dwBlockNumber
dwCipherMode
dwFlags
dwFlags == 0
dwFlags:      
dwLanguageId
dwPreambleSize <= (pvEnd - pvStrings)
dwPropID
dwReservedCheck != (dwReservedCheck & pLoggingConfig->dwLogTypes)
dwType
dwType:    
dwType:       
dwType:        
DWVQh
E_DRM_ABORTED
E_DRM_INVALID_LICENSE
E_DRM_RIGHT_NOT_SET
E_FAIL
E_INVALIDARG
E_OUTOFMEMORY
E0J0T0[0
E0R0\0l0
eax~Z
EDITRIGHTSDATA
ekhHD
Element not found : %ws
ElementException
ElementReadException
ElementWriteException
Email
Email in PL Content ID = %ws EUL Content ID = %ws
Email in RAC = %ws Email in EUL = %ws
Email-ID didn't match
EMBED
EnableBrowser
EncodePointer
encrypted-rights-data
EndTime
EndUserLicenseService
EnterCriticalSection
en-us
en-US
Envelope
Error
ERROR -- UNKNOWN TYPE: 
Error encountered while activating the machine, hr = 0x%08x
Error encountered while deleting existing certs, hr = 0x%08x
Error HRESULT 0x%x mapped to 0x%x
Error message 401.3
Error of unknown type
Error while trying to get the network connectivity info - hr=0x%x. Will assume it is connected.
Error: hr validation had unexpected behavior
ERROR_INSUFFICIENT_BUFFER == dwError
ErrorCode
EscapeXML(wszIn, &escaped[0], &cchEscapedSize)
EscapeXML(wszIn, NULL, &cchEscapedSize)
EtwEnabled
EventActivityIdControl
EventData
EventEnabled
EventRegister
EventSetInformation
EventUnregister
EventWrite
EventWriteTransfer
Exception
Exception Message not of Revocation type
Exception while building user agent string: hr == 0x%x. Setting it to "MSIPC".
Exception while getting the error message out of the Exception object
exclusion
executable format error
Expecting a string element but value is not string : %ws
Expecting an Array element but value is not an Array : %ws
Expecting an Object element but value is not an Object : %ws
expecting name value pairs to be strings : %ws
Expired
EXPORT
external
ExternalUrl
ext-ms-win-shell32-shellfolders-l1-1-0.dll
EXTRACT
ExtractParameter(&drmXml, pNewParameter)
Extranet
Extranet DNS redirection detected from %ws to %ws
Extranet Licensing redirection detected from %ws to %ws
Extranet URL of the original PL is %ws
Extranet-Activation
Extranet-License-Acquisition-URL
ExtranetLicenseURL
eyJ0eXAiOiJKV1QiLCJhbGciOiJTaGEyNTYifQ==
F t7;N$u2h
f W{Q
F$9{$t
F(9{(t
F(Pj'
F,9{,t
f;<Nu
F;w r
F;wh|
F;wPr
F@!s7
F<!s7
failed
Failed loading secproc with path: %ws, with error 0x%x
Failed matching the CLC issuer public key with the template issuer key hr = 0x%x
Failed to enumerate existing identities hr = 0x%x
Failed to get certification and licensing URLs using new service discovery. Falling back to using old service discovery.
Failed to initialze Identity hr = 0x%x
Failed to parse JSON string : %d Offset: %u
Failed to retrieve RAC & CLC from the store hr = 0x%x.
FAILED(retHr) ? retHr : HRESULT_FROM_WIN32(ERROR_NOT_SUPPORTED)
FailFast
Failure
Failure writing to registry value '%ws'.
failureCount
failureId
failureType
FallbackError
fAllowFromScratch: 
false
FALSE
false
False
false
Fault
faultcode
faultstring
fCheck
fCheckTokenSize
fclose
fDelete
Feature
Federated User from enterprise server, skip downloading templates
Federation
FederationHomeRealm
FederationHomeRealm registry key is detected:
fFinal
file exists
file too large
FileDescription
FileExtension
FileFormat
fileName
filename too long
filename_too_long
FileTimeToSystemTime
FileTimeToSystemTime failed with hr = 0x%08x
FileVersion
FindClose
FindFirstFileW
FindNextFileW
FindResourceExW
FindServiceLocationsForUser
fname
FOLDER
FormatMessageW
Formatting log message failed with hr = 0x%x
Found %lu RAC & CLC pairs in the store
Found DNS redirection. Setting licensing redirection registry key for user.
Found identity information for the symmetric key token info cached in the registry.
Found templates in UnManagedStore.
FreeLibrary
fseek
fSendRegistrationMail
FsException::setDetailedMessage - Error in ::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchPrintf.
function
function not supported
FWh|5
fwscanf_s
G,+L$
G;~ r
G;x0s
g_fGlobalOptionUseWinhttp
g_fIsEnvironmentChangeOK
g_pfnWinHttpQueryHeaders( hRequest, dwWINHTTP_QUERY_FLAG_NUMBER | dwWINHTTP_QUERY_STATUS_CODE, g_wszWINHTTP_HEADER_NAME_BY_INDEX, &dwStatusCode, &cbQueryBufferLength, lpdwWINHTTP_NO_HEADER_INDEX)
g_pfnWinHttpQueryHeaders( hRequest, dwWINHTTP_QUERY_WWW_AUTHENTICATE, g_wszWINHTTP_HEADER_NAME_BY_INDEX, &header[0], &cbQueryBufferLength, lpdwWINHTTP_NO_HEADER_INDEX)
g_pfnWinHttpQueryOption(hWinHttpRequest, dwWINHTTP_OPTION_SECURITY_FLAGS, &dwSecurityFlags, &cbSecurityFlags)
G<!s7
Generating a dummy CLC for consumption only access.
generic
Get Default Identity hr = 0x%x
GetActualIndex(hSession,&uActualIndex)
-GetApplicationSpecificDataNotEncrypted HR=%x
GetCertificationUrls
GetCLCForRAC
GetCLCWithRAC
GetClientLicensorAndUserCertificates
GetClientLicensorAndUserCertificatesEnabled
GetClientLicensorAndUserCertificatesParams
GetClientLicensorAndUserCertificatesResponse
GetClientLicensorCert
GetClientLicensorCertParams
GetClientLicensorCertResponse
GetComputerNameExW
GetComputerObjectNameW
GetCurrentProcess
GetCurrentProcessId
GetCurrentThread
GetCurrentThreadId
GetDesktopWindow
GetDynamicTimeZoneInformation
GetDynamicTimeZoneInformation failed with hr = 0x%08x
GetEULWithRAC
GetFileAttributesExW
GetFileAttributesW
GetFileSize
GetFileVersionInfoExW
GetFileVersionInfoSizeExW
GetLastError
GetLicensorCertificate
GetMachineCert
GetModuleFileNameA
GetModuleFileNameW
GetModuleHandleExW
GetModuleHandleW
GetNativeSystemInfo
GetProcAddress
GetProcessHeap
GetServerInfo
GetServiceLocationForCertificationAndLicensing
GetServiceLocationForLicensing
GetStringTypeW
GetSystemInfo
GetSystemPreferredUILanguages
GetSystemTime
GetSystemTimeAsFileTime
GetTemplateList
GetTemplates
GetThreadLocale
GetTickCount
Getting connection info, extranet: %ws, intranet : %ws
Getting templated for rollover check
Getting templates for user
Getting the error message out of the Exception object failed with hr=0x%x
Getting the EUL from Context
Getting the response body failed with hr=0x%x
Getting the response failed with hr=0x%x
Getting user identity from license
GetTokenInformation
GetUserConsentForConnectionInfo(connectionInfo.Get(), m_pIpcContext)
GetUserConsentForUrls(pwszLicIntUrl, pwszLicExtUrl, pIpcContext)
GetUserConsentForUrls(wszCertificationIntURL, wszCertificationExtURL, pIpcContext)
GetUserConsentForUrls(wszIntURL, wszExtURL, pIpcContext)
GetUserConsentForUrls(wszLicensingIntURL, wszLicensingExtURL, pIpcContext)
GetUserConsentForUrls(wszUserCertIntURL, wszUserCertExtURL, pIpcContext)
GetUserNameExW
GetUserOp
GetUserPreferredUILanguages
GetVersionExW
-GIC-
Global\
GlobalFree
GlobalServiceLocator
Got the Urls: CertURL = %ws LicURL = %ws
graph
Group-Identity-Credential
gt3f;E
guest_tenantId
GuestTenant
GuidHashCount
guids
GXGetLastHR()
handle
HandleException
HashDigestLength
hCancelEvent: 
Header
HeapAlloc
HeapDestroy
HeapFree
HeapReAlloc
HeapSize
hidden
Hierarchy
hIssuanceLicense
HKEY_CLASSES_ROOT
HKEY_CURRENT_USER
HKEY_CURRENT_USER_LOCAL_SETTINGS
HKEY_LOCAL_MACHINE
hLicense
hLicenseMetadata
hModule != nullptr
home_tenantId
HomeTenant
host unreachable
host_unreachable
HostNameRedirection detected: redirecting %ws to %ws
hr = CBase64::UDBase64ToBinW(SafeInt<UINT>(cchBase64Hash), wszBase64Hash, &cbDecoded, NULL)
hr = CBase64::UDBase64ToBinW(uDataLen, wszEncodedString, &uDecodedDataLen, NULL)
hr = CBase64::UDBase64ToBinW(uDataLen, wszEncodedString, &uDecodedDataLen, pbData)
hr = CBase64::UDBinToBase64W( cHash, pbHash, &cHashValue, NULL)
hr = CBase64::UDBinToBase64W( cHash, pbHash, &cHashValue, wszLocalHashValue)
hr = CBase64::UDBinToBase64W( uDataLen, pbDataToEncode, &uBase64DataLen, NULL)
hr = CBase64::UDBinToBase64W( uDataLen, pbDataToEncode, &uBase64DataLen, wszEncodedString)
hr = CDRMCChain::DRMConstructCertificateChain(1,const_cast<PWSTR *> (&wszLicense),&cChain,NULL)
hr = CDRMCChain::DRMConstructCertificateChain(1,const_cast<PWSTR *>(&wszLicense),&cChain,*pwszLicenseChain)
hr = CDRMtoSP::CreateMachineCerts()
hr = CDRMtoSP::DRMCreateBoundLicense( hEnv, &BindParams, wszCLCChain, &hBoundLicense, NULL)
hr = CDRMtoSP::DRMCreateBoundLicense( pUserIdentity->GetEnvironmentHandle(), &BindParams, pUserIdentity->GetCLCLicense()->GetLicense().c_str(), &hBoundLicense, NULL)
hr = CERT_E_MALFORMED
hr = CheckAdd(uCount,m_ulInitialCount)
hr = CheckAdd(uPrimaryKeyBufferLength, uTemp)
hr = CheckAdd(uPrimaryKeyBufferLength,1)
hr = CheckAdd(uPrimaryKeyBufferLength,uSearchDataLength)
hr = CheckAdd(uPrimaryKeyBufferLength,uTemp)
hr = CheckMultiply(uCountSearchData,sizeof(PWSTR))
hr = CXmlenc::EscapeXML(iter->second.c_str(), &wszEscapedStr)
hr = CXmlenc::EscapeXML(m_wszUserId, &wszEscapedUserId)
hr = CXmlenc::EscapeXML(m_wszUserIdType, &wszEscapedUserIdType)
hr = CXmlenc::EscapeXML(m_wszUserName, &wszEscapedUserName)
hr = CXmlenc::EscapeXML(pCNameValue->GetName(), &wstrName[0] ,&cGetName)
hr = CXmlenc::EscapeXML(pCNameValue->GetName(), NULL ,&cGetName)
hr = CXmlenc::EscapeXML(pCNameValue->GetValue(), &wstrValue[0] ,&cGetValue)
hr = CXmlenc::EscapeXML(pCNameValue->GetValue(), NULL ,&cGetValue)
hr = CXmlenc::EscapeXML(wszContentId,&wszContentIdInt)
hr = CXmlenc::EscapeXML(wszContentIdType,&wszContentIdTypeInt)
hr = CXmlenc::EscapeXML(wszContentName,&wszContentNameInt)
hr = CXmlenc::EscapeXML(wszContentType,&wszContentTypeInt)
hr = CXmlenc::EscapeXML(wszReferralInfoName, &wszReferralInfoNameInt)
hr = CXmlenc::EscapeXML(wszReferralInfoURL, &wszReferralInfoURLInt)
hr = CXmlenc::EscapeXML(wszRightName,&wszRightNameInt)
hr = CXmlenc::EscapeXML(wszSKUId,&wszSKUIdInt)
hr = CXmlenc::EscapeXML(wszSKUIdType,&wszSKUIdTypeInt)
hr = CXmlenc::UnescapeXML(m_MetaData.GetContentId(),&wszContentIdOut, &uContentIdLength)
hr = CXmlenc::UnescapeXML(pCNameValue->GetName(),&wszNameOut,&uNameLength)
hr = CXmlenc::UnescapeXML(pCNameValue->GetValue(),&wszDescriptionOut,&uDescriptionLength)
hr = DeletePersistedLicenseNoThrow(DRM_LICENSE_TYPE_GIC, FALSE, 0, NULL, racLicense.GetLicenseId().c_str())
hr = DeletePersistedLicenseNoThrow(eType, FALSE, 0, NULL, pLicense->GetLicenseId().c_str())
hr = DoFindServiceLocation( 1, &(rgwszServiceTypes[1]), wszTempCertIntUrl, wszTempCertExtUrl, uFlags, hParentWnd, pIpcContext, &wszLicExtUrl, NULL)
hr = DRMCXRMLObj.GetRegistryKey(HKEY_LOCAL_MACHINE,g_wszSD_ActivationKey,NULL,pwszValue)
hr = drmSoap.AddHeaderParameter(NULL,g_wszACT_MaximumVersion,SOAP_DATA_TYPE_STRING,g_wszACT_CurrentVersion)
hr = drmSoap.AddHeaderParameter(NULL,g_wszACT_MinimumVersion,SOAP_DATA_TYPE_STRING,g_wszACT_CurrentVersion)
hr = drmSoap.CreateHeader(g_wszACT_VersionData,2)
hr = drmSoap.CreateRequest(g_wszAILT_GetAcquireTemplatesInformation,NULL,g_wszAILTTemplateDistributionServiceNameSpace,1)
hr = drmSoap.GetElementValue(NULL,g_wszAILT_Guid,i,&(pTemplateGuidHash[cCount].wszGuid))
hr = drmSoap.GetElementValue(NULL,g_wszAILT_Hash,i,&(pTemplateGuidHash[cCount].wszHash))
hr = drmSoap.GetParameterValue(NULL, g_wszPUB_Upn, 0, &(rgwszLocalValues[uCount]))
hr = drmSoap.GetParameterValue(NULL,L"GuidHashCount",0,&wszValue)
hr = drmSoap.GetParameterValue(NULL,L"ServerPublicKey",0,&wszServerPublicKey)
hr = drmSoap.SetIpcContext(pIpcContext)
hr = drmSoap.SetServerInfo(wszServerURL, uFlags & DRM_AILT_NONSILENT ? 0 : HTTP_NO_UI)
hr = drmSoap.SetServerMethod(g_wszAILTTemplateDistributionService,g_wszAILT_GetAcquireTemplatesInformation)
hr = drmSoapTemplate.AddHeaderParameter(NULL,g_wszACT_MaximumVersion,SOAP_DATA_TYPE_STRING,g_wszACT_CurrentVersion)
hr = drmSoapTemplate.AddHeaderParameter(NULL,g_wszACT_MinimumVersion,SOAP_DATA_TYPE_STRING,g_wszACT_CurrentVersion)
hr = drmSoapTemplate.AddParameter(g_wszAILT_Guids,g_wszAILT_String,SOAP_DATA_TYPE_STRING,pTemplateGuidHash[j].wszGuid)
hr = drmSoapTemplate.CreateHeader(g_wszACT_VersionData,2)
hr = drmSoapTemplate.CreateRequest(g_wszAILT_GetAcquireTemplates,NULL,g_wszAILTTemplateDistributionServiceNameSpace,1)
hr = drmSoapTemplate.GetElementValue(NULL,g_wszAILT_Guid,i,&(pTemplateGuidTemplate[i].wszGuid))
hr = drmSoapTemplate.SetIpcContext(pIpcContext)
hr = drmSoapTemplate.SetServerInfo(wszServerURL, uFlags & DRM_AILT_NONSILENT ? 0 : HTTP_NO_UI)
hr = drmSoapTemplate.SetServerMethod(g_wszAILTTemplateDistributionService,g_wszAILT_GetAcquireTemplates)
hr = drmStore.GetLicense(DRM_LICENSE_TYPE_JSON_CLC, wszSearchCriteria, abUseRawData, uSearchCriteriaCount, FALSE, &uCount, &rgwszLicense, NULL)
hr = DRMtoSPObj._DRMDecryptECB( hDecryptor, 0, SafeInt<UINT>(encryptedBytes.size()), &encryptedBytes[0], &cbDecryptedData, (BYTE*)&strDecryptedData[0])
hr = DRMtoSPObj.DRMCreateEnablingBitsSigner( hBoundLicense, L"ISSUE", NULL, NULL, &hCLCSigner)
hr = DRMtoSPObj.DRMEnableAndEncrypt( hEnv, uCryptoFlags, m_pbSymKey,m_cbSymKey,RMS_SYMMETRIC_KEY_BLOCKLENGTH, cExponent,pbModulus,cModulus, (const PBYTE)(wszIssuerXML.get()),SafeInt<UINT>(uIssuerCurrentLen)*sizeof(WCHAR), NULL,0, pbEnablingBits,&cbEnablingBits)
hr = DRMtoSPObj.DRMEnableAndEncrypt( hEnv, UDCRYPTO_CIPHER_AES | UDCRYPTO_CIPHERMODE_ECB, m_pbSymKey,m_cbSymKey,RMS_SYMMETRIC_KEY_BLOCKLENGTH, cExponent,pbModulus,cModulus, (const PBYTE)(wszIssuerXML.get()),SafeInt<UINT>(uIssuerCurrentLen)*sizeof(WCHAR), pbEncrypedData,cbAlignedRightsDataLen, pbEnablingBitsTmp,&cbEnablingBitsTmp)
hr = DRMtoSPObj.DRMEnableAndEncrypt( m_hEnv, uCryptoFlags, m_pbSymKey,m_cbSymKey,RMS_SYMMETRIC_KEY_BLOCKLENGTH, cExponent,pbModulusConst,cModulus, (const PBYTE)(wszIssuerData.get()),cIssuerData*sizeof(WCHAR), NULL,0, pbEnablingBits,&cbEnablingBits)
hr = GetActualIndex(hSession,&uActualIndex)
hr = GetLicense( eType, pwszSearchData, pbUseRawData, uSearchDataCount, fDefaultForUser, &uCount, &rgwszLicenseFileNames, &rgwszLicenses, pvpRacs ? &rgwszRacFileNames : NULL, pvpRacs ? &rgwszRacs : NULL)
hr = HRESULT_FROM_WIN32(ERROR_NOT_SUPPORTED)
hr = os::IpcOsCoCreateGuid(&guid)
hr = os::IpcOsFileTimeAsSystemTime( &ftEnd, &stEnd )
hr = os::IpcOsFileTimeAsSystemTime( static_cast<const IPCOS_FILETIME *>(&(pTerm->ftStart)), &stStart )
hr = os::IpcOsGetIpcPlatformVersion(&wszVersion)
hr = os::IpcOsGetLicenseStoreTemplatePath(&ipcfile)
hr = os::IpcOsMaskFileNameNotAllowedChar(pRACLicense->GetIssuerId().c_str(),NULL,&wszRACIssuerIDMasked)
hr = os::IpcOsMaskFileNameNotAllowedChar(pwszSearchData[i],NULL,&pwszSearchDataMasked[i])
hr = os::IpcOsMaskFileNameNotAllowedChar(wszCID,NULL,&wszCIDMasked)
hr = os::IpcOsMaskFileNameNotAllowedChar(wszIssuerID, NULL, &wszIssuerIDMasked)
hr = os::IpcOsMaskFileNameNotAllowedChar(wszLicenseId,NULL,&wszLicenseIdMasked)
hr = os::IpcOsMaskFileNameNotAllowedChar(wszLicenseID,NULL,&wszLicenseIDMasked)
hr = os::IpcOsMaskFileNameNotAllowedChar(wszLocalHashValue,NULL,&wszMaskedHashValue)
hr = os::IpcOsMaskFileNameNotAllowedChar(wszTemplateGuid,NULL,&wszTemplateGuidMasked)
hr = os::IpcOsMaskFileNameNotAllowedChar(wszTemplateHash,NULL,&wszTemplateHashMasked)
hr = os::IpcOsStringCchLength(m_wszContentIdType == NULL ? L"MS-GUID" : m_wszContentIdType, IPC_OS_MAX_CCH, &cchContentIdType)
hr = os::IpcOsStringCchLength(wszData, IPC_OS_MAX_CCH, &cchData)
hr = os::IpcOsStringCchLength(wszDirectory, IPC_OS_MAX_CCH, &cchDirectory)
hr = os::IpcOsStringCchLength(wszEULSignature, IPC_OS_MAX_CCH, &uLicenseSignaturelength)
hr = os::IpcOsStringCchLength(wszIssuanceLicenseData, IPC_OS_MAX_CCH, &uILDataLengthInWchars)
hr = os::IpcOsStringCchLength(wszLicense, IPC_OS_MAX_CCH, &uLicenselength)
hr = os::IpcOsStringCchLength(wszServerPubKeyDigestMaskedHash, IPC_OS_MAX_CCH, &cchServerPubKeyDigestMaskedHash)
hr = os::IpcOsStringCchLength(wszTemplate, IPC_OS_MAX_CCH, &cchData)
hr = os::IpcOsStringCchLength(wszTemplateGuidMasked, IPC_OS_MAX_CCH, &cchTemplateGuidMasked)
hr = os::IpcOsStringCchLength(wszTemplateHash, IPC_OS_MAX_CCH, &cchHash)
hr = os::IpcOsStringCchLength(wszTemplateHashMasked, IPC_OS_MAX_CCH, &cchTemplateHashMasked)
hr = os::IpcOsStringCchLength(wszTempName, IPC_OS_MAX_CCH, &cchReferralInfoNameLength)
hr = os::IpcOsStringCchLength(wszTempURL, IPC_OS_MAX_CCH, &cchReferralInfoURLLength)
hr = os::IpcOsStringCchLength(wszURL, IPC_OS_MAX_CCH, &cchURL)
hr = os::IpcOsStringCchLength(wszUserIdMaskedHash, IPC_OS_MAX_CCH, &cchUserIdMaskedHash)
hr = os::IpcOsUnMaskFileNameNotAllowedChar(pwszFileNames[i],NULL,&pwszUnMaskedFileNames[i])
Hr validation failed 'attributes->nextNode(OUT &node)
Hr validation failed 'document.CoCreateInstance(CLSID_DOMDocument60)
Hr validation failed 'document->createElement(CComBSTR(name.c_str()), OUT &child)
Hr validation failed 'document->createElement(CComBSTR(rootName.c_str()), OUT &root)
Hr validation failed 'document->createTextNode(CComBSTR(text.c_str()), OUT &textNode)
Hr validation failed 'document->get_documentElement(OUT &newRoot)
Hr validation failed 'document->get_xml(OUT &text)
Hr validation failed 'document->load(CComVariant(filePath.c_str()), OUT &success)
Hr validation failed 'document->loadXML(CComBSTR(xml.c_str()), OUT &success)
Hr validation failed 'document->putref_documentElement(element)
Hr validation failed 'document->putref_documentElement(root)
Hr validation failed 'e.Error()
Hr validation failed 'element->appendChild(child, NULL)
Hr validation failed 'element->appendChild(textNode, NULL)
Hr validation failed 'element->get_attributes(OUT &attributes)
Hr validation failed 'element->get_childNodes(OUT &nodes)
Hr validation failed 'element->get_nodeName(OUT &name)
Hr validation failed 'element->get_xml(OUT &text)
Hr validation failed 'element->getAttribute(CComBSTR(key.c_str()), OUT &attribute)
Hr validation failed 'element->removeChild(node, OUT &oldChild)
Hr validation failed 'element->selectNodes(CComBSTR(ChildText), OUT &nodes)
Hr validation failed 'element->selectNodes(CComBSTR(query.c_str()), OUT &nodes)
Hr validation failed 'element->selectSingleNode(CComBSTR(ChildText), OUT &textNode)
Hr validation failed 'element->selectSingleNode(CComBSTR(query.c_str()), OUT &node)
Hr validation failed 'element->setAttribute(CComBSTR(key.c_str()), _variant_t(value.c_str()))
Hr validation failed 'IpcUtf8ToWideChar(lhs, OUT rhs)
Hr validation failed 'node.QueryInterface(OUT &elementNode)
Hr validation failed 'node->get_nodeName(OUT &name)
Hr validation failed 'node->get_nodeType(OUT &type)
Hr validation failed 'node->get_nodeValue(OUT &value)
Hr validation failed 'nodes->nextNode(OUT &node)
Hr validation failed 'textNode->get_text(OUT &result)
hr= drmSoap.AddHeaderParameter(NULL,g_wszACT_MaximumVersion, SOAP_DATA_TYPE_STRING, g_wszACT_CurrentVersion)
hr= drmSoap.AddHeaderParameter(NULL,g_wszACT_MaximumVersion, SOAP_DATA_TYPE_STRING,g_wszACT_CurrentVersion)
hr= drmSoap.AddHeaderParameter(NULL,g_wszACT_MinimumVersion, SOAP_DATA_TYPE_STRING, g_wszACT_CurrentVersion)
hr= drmSoap.AddHeaderParameter(NULL,g_wszACT_MinimumVersion, SOAP_DATA_TYPE_STRING,g_wszACT_CurrentVersion)
hr= drmSoap.AddParameter(g_wszPUB_ServiceLocationRequest,g_wszPUB_Type, SOAP_DATA_TYPE_STRING, i, pwszServiceTypes[i])
hr= drmSoap.AddParameter(g_wszPUB_ServiceNames, g_wszPUB_Type, SOAP_DATA_TYPE_STRING, i, pwszServiceTypes[i])
hr= drmSoap.AddParameter(NULL, g_wszPUB_ExtranetLicenseUrl, SOAP_DATA_TYPE_STRING, 0, wszExtranetUrlFromPl ? wszExtranetUrlFromPl : L"")
hr= drmSoap.AddParameter(NULL, g_wszPUB_IntranetLicenseUrl, SOAP_DATA_TYPE_STRING, 0, wszIntranetUrlFromPl ? wszIntranetUrlFromPl : L"")
hr= drmSoap.AddParameter(NULL, g_wszPUB_SlcPublicKey, SOAP_DATA_TYPE_STRING, 0, pIpcContext->GetSlcPublicKey())
hr= drmSoap.AddStructParameter(g_wszPUB_ServiceLocationRequest, 1)
hr= drmSoap.AddStructParameter(g_wszPUB_ServiceNames, 1)
hr= drmSoap.CreateHeader(g_wszACT_VersionData,2)
hr= drmSoap.CreateRequest(g_wszPUB_FindServiceLocations, g_wszPUB_ServiceNames, g_wszPUB_ServiceLocatorNamespace, 1)
hr= drmSoap.CreateRequest(g_wszPUB_ServiceDiscoveryForUser, g_wszPUB_ServiceDiscoveryRequest, g_wszPUB_DiscoverServiceNamespace, 1)
hr= drmSoap.DispatchRequest()
hr= drmSoap.GetArrayParameterValue(g_wszPUB_ServiceLocationResponse, i, g_wszPUB_Type, 0, &wszType)
hr= drmSoap.GetArrayParameterValue(g_wszPUB_ServiceNames, i, g_wszPUB_Type, 0, &wszType)
hr= drmSoap.GetArrayParameterValue(g_wszPUB_ServiceNames, i, g_wszPUB_URL, 0, &(rgwszLocalValues[i]))
hr= drmSoap.SetIpcContext(pIpcContext)
hr= drmSoap.SetServerInfo(wszServerUrl, (uFlags & DRM_SL_SILENT) ? HTTP_NO_UI : 0)
hr= drmSoap.SetServerMethod(g_wszPUB_DiscoverService, g_wszPUB_ServiceDiscoveryForUser)
hr= drmSoap.SetServerMethod(g_wszPUB_ServiceLocator, g_wszPUB_FindServiceLocations)
hr= DRMtoSPObj.DRMEnableAndEncrypt( hEnv, uCryptoFlags, m_pbSymKey,m_cbSymKey,RMS_SYMMETRIC_KEY_BLOCKLENGTH, cExponent,pbModulus,cModulus, (const PBYTE)(wszIssuerXML.get()),SafeInt<UINT>(uIssuerCurrentLen)*sizeof(WCHAR), NULL,0, NULL,&cbEnablingBits)
hr= DRMtoSPObj.DRMEnableAndEncrypt( hEnv, UDCRYPTO_CIPHER_AES | UDCRYPTO_CIPHERMODE_ECB, m_pbSymKey,m_cbSymKey,RMS_SYMMETRIC_KEY_BLOCKLENGTH, cExponent,pbModulus,cModulus, (const PBYTE)(wszIssuerXML.get()),SafeInt<UINT>(uIssuerCurrentLen)*sizeof(WCHAR), NULL,0, NULL,&cbEnablingBitsTmp)
hr= publicKey.InitRSAPublic( m_uOfficialTemplateIssuerPubKeyExponent, m_cbOfficialTemplateIssuerPubKey*8, m_pbOfficialTemplateIssuerPubKey)
hr=os::IpcOsStringCchCopy(wszLocalUrl, wszUrlLength, wszUrl)
hr=os::IpcOsStringCchCopy(wszTempToken, uTempTokenLength, localHostName)
hr=os::IpcOsStringCchLength(FindFileData.cFileName, IPC_OS_MAX_CCH, &ccFileName)
hr=os::IpcOsStringCchLength(localHostName, IPC_OS_MAX_CCH, &clocalHostName)
hr=os::IpcOsStringCchLength(m_DigestInfo.m_wszDigestAlgorithm, IPC_OS_MAX_CCH, &cchDigestAlgorithm)
hr=os::IpcOsStringCchLength(m_pwszExtendedInfoName[i], IPC_OS_MAX_CCH, &cchExtendedInfoName)
hr=os::IpcOsStringCchLength(m_pwszExtendedInfoValue[i], IPC_OS_MAX_CCH, &cchExtendedInfoValue)
hr=os::IpcOsStringCchLength(m_VersionInfo.m_wszMaxVersion, IPC_OS_MAX_CCH, &cchMaxVersion)
hr=os::IpcOsStringCchLength(m_VersionInfo.m_wszMinVersion, IPC_OS_MAX_CCH, &cchMinVersion)
hr=os::IpcOsStringCchLength(m_VersionInfo.m_wszName, IPC_OS_MAX_CCH, &cchName)
hr=os::IpcOsStringCchLength(m_wszContentId, IPC_OS_MAX_CCH, &cchContentId)
hr=os::IpcOsStringCchLength(m_wszContentName, IPC_OS_MAX_CCH, &cchContentName)
hr=os::IpcOsStringCchLength(m_wszContentType, IPC_OS_MAX_CCH, &cchContentType)
hr=os::IpcOsStringCchLength(m_wszDescriptorId, IPC_OS_MAX_CCH, &cchDescriptorId)
hr=os::IpcOsStringCchLength(m_wszOwnerXML, IPC_OS_MAX_CCH, &cchOwnerXML)
hr=os::IpcOsStringCchLength(m_wszPublicKey, IPC_OS_MAX_CCH, &cchPublicKey)
hr=os::IpcOsStringCchLength(m_wszReferralInfoName, IPC_OS_MAX_CCH, &cchReferralInfoName)
hr=os::IpcOsStringCchLength(m_wszReferralInfoURL, IPC_OS_MAX_CCH, &cchReferralInfoURL)
hr=os::IpcOsStringCchLength(m_wszRightName, IPC_OS_MAX_CCH, &cchRightName)
hr=os::IpcOsStringCchLength(m_wszSignedIssuanceLicenseTemplate, IPC_OS_MAX_CCH, &cchSignedIssuanceLicenseTemplate)
hr=os::IpcOsStringCchLength(m_wszSKUId, IPC_OS_MAX_CCH, &cchSKUId)
hr=os::IpcOsStringCchLength(m_wszSKUIdType, IPC_OS_MAX_CCH, &cchSKUIdType)
hr=os::IpcOsStringCchLength(m_wszUserId, IPC_OS_MAX_CCH, &cchUserId)
hr=os::IpcOsStringCchLength(m_wszUserIdType, IPC_OS_MAX_CCH, &cchUserIdType)
hr=os::IpcOsStringCchLength(m_wszUserName, IPC_OS_MAX_CCH, &cchUserName)
hr=os::IpcOsStringCchLength(pCNameValue->GetName(), IPC_OS_MAX_CCH, &cGetName)
hr=os::IpcOsStringCchLength(pCNameValue->GetName(), IPC_OS_MAX_CCH, &uNameLength)
hr=os::IpcOsStringCchLength(pCNameValue->GetValue(), IPC_OS_MAX_CCH, &cGetValue)
hr=os::IpcOsStringCchLength(pCNameValue->GetValue(), IPC_OS_MAX_CCH, &uValueLength)
hr=os::IpcOsStringCchLength(pdrmCryptoVersion->wszHashAlg, IPC_OS_MAX_CCH, &cchHashAlg)
hr=os::IpcOsStringCchLength(pdrmCryptoVersion->wszSealedKeyType, IPC_OS_MAX_CCH, &cchSealedKeyType)
hr=os::IpcOsStringCchLength(pwszSearchDataMasked[i], IPC_OS_MAX_CCH, &cchSearchDataMasked)
hr=os::IpcOsStringCchLength(wszActualIssuedPrincipalXML, IPC_OS_MAX_CCH, &cchActualIssuedPrincipalXML)
hr=os::IpcOsStringCchLength(wszApplicationSpecificDataXML, IPC_OS_MAX_CCH, &uXMLLength)
hr=os::IpcOsStringCchLength(wszBase64Hash, IPC_OS_MAX_CCH, &cchBase64Hash)
hr=os::IpcOsStringCchLength(wszCIDMasked, IPC_OS_MAX_CCH, &cchCIDMasked)
hr=os::IpcOsStringCchLength(wszCIDSKUIDXML, IPC_OS_MAX_CCH, &cchCIDSKUIDXML)
hr=os::IpcOsStringCchLength(wszContentId, MAX_CIDSKUID_LENGTH, &cchContentId)
hr=os::IpcOsStringCchLength(wszDescriptor, IPC_OS_MAX_CCH, &cchDescriptor)
hr=os::IpcOsStringCchLength(wszDigest, IPC_OS_MAX_CCH, &cchDigest)
hr=os::IpcOsStringCchLength(wszEnablingBits, IPC_OS_MAX_CCH, &cchEnablingBits)
hr=os::IpcOsStringCchLength(wszEnablingBitsBase64data, IPC_OS_MAX_CCH, &cchEnablingBitsBase64data)
hr=os::IpcOsStringCchLength(wszEnablingBitsXML, IPC_OS_MAX_CCH, &cchEnablingBitsXML)
hr=os::IpcOsStringCchLength(wszEscapedUserId, IPC_OS_MAX_CCH, &cchEscapedUserId)
hr=os::IpcOsStringCchLength(wszEscapedUserIdType, IPC_OS_MAX_CCH, &cchEscapedUserIdType)
hr=os::IpcOsStringCchLength(wszEscapedUserName, IPC_OS_MAX_CCH, &cchEscapedUserName)
hr=os::IpcOsStringCchLength(wszEULDigest, IPC_OS_MAX_CCH, &cchEULDigest)
hr=os::IpcOsStringCchLength(wszEULSigValue, IPC_OS_MAX_CCH, &cchEULSigValue)
hr=os::IpcOsStringCchLength(wszExtendedInfoXML, IPC_OS_MAX_CCH, &uExtendedInfoXMLLength)
hr=os::IpcOsStringCchLength(wszFileName, IPC_OS_MAX_CCH, &cchFileName)
hr=os::IpcOsStringCchLength(wszGUID, IPC_OS_MAX_CCH, &cchGUID)
hr=os::IpcOsStringCchLength(wszHostNameMasked, IPC_OS_MAX_CCH, &cchHostNameMasked)
hr=os::IpcOsStringCchLength(wszIL, IPC_OS_MAX_CCH, &cchIL)
hr=os::IpcOsStringCchLength(wszIssuanceLicenseDataTemp, IPC_OS_MAX_CCH, &cchIssuanceLicenseDataTemp)
hr=os::IpcOsStringCchLength(wszIssuanceLicenseTemplate, IPC_OS_MAX_CCH, &cchIssuanceLicenseTemplate)
hr=os::IpcOsStringCchLength(wszIssuerIDMasked, IPC_OS_MAX_CCH, &cchIssuerIDMasked)
hr=os::IpcOsStringCchLength(wszIssuerObjectTagStart, IPC_OS_MAX_CCH, &cchIssuerObjectTagStart)
hr=os::IpcOsStringCchLength(wszIssuerXML, IPC_OS_MAX_CCH, &cchIssuerXML)
hr=os::IpcOsStringCchLength(wszLicenseIDMasked, IPC_OS_MAX_CCH, &cchLicenseIDMasked)
hr=os::IpcOsStringCchLength(wszLicenseIdMasked, IPC_OS_MAX_CCH, &cchLicenseIdMasked)
hr=os::IpcOsStringCchLength(wszLID, IPC_OS_MAX_CCH, &cchLID)
hr=os::IpcOsStringCchLength(wszNameAndDescriptionXML, IPC_OS_MAX_CCH, &cchNameAndDescriptionXML)
hr=os::IpcOsStringCchLength(wszOSExclusionConditionsXML, IPC_OS_MAX_CCH, &cchOSExclusionConditionsXML)
hr=os::IpcOsStringCchLength(wszPrimaryKeyIn, IPC_OS_MAX_CCH, &cchPrimaryKeyIn)
hr=os::IpcOsStringCchLength(wszPrincipalSource, IPC_OS_MAX_CCH, &cchPrincipalSource)
hr=os::IpcOsStringCchLength(wszRACHostNameMasked, IPC_OS_MAX_CCH, &cchRACHostNameMasked)
hr=os::IpcOsStringCchLength(wszRACIssuerIDMasked, IPC_OS_MAX_CCH, &cchRACIssuerIDMasked)
hr=os::IpcOsStringCchLength(wszRACUserNameMasked, IPC_OS_MAX_CCH, &cchRACUserNameMasked)
hr=os::IpcOsStringCchLength(wszRightsXML, IPC_OS_MAX_CCH, &cchRightsXML)
hr=os::IpcOsStringCchLength(wszSecKeyIn, IPC_OS_MAX_CCH, &cchSecKeyIn)
hr=os::IpcOsStringCchLength(wszSignature, IPC_OS_MAX_CCH, &cchSignature)
hr=os::IpcOsStringCchLength(wszUrl, IPC_OS_MAX_CCH, &cchUrl)
hr=os::IpcOsStringCchLength(wszUsagePolicyExclusionXML, IPC_OS_MAX_CCH, &cchUsagePolicyExclusionXML)
hr=os::IpcOsStringCchLength(wszUsagePolicyInclusionXML, IPC_OS_MAX_CCH, &cchUsagePolicyInclusionXML)
hr=os::IpcOsStringCchLength(wszUsagePolicyXML, IPC_OS_MAX_CCH, &cchUsagePolicyXML)
hr=os::IpcOsStringCchLength(wszUserNameMasked, IPC_OS_MAX_CCH, &cchUserNameMasked)
hr=os::IpcOsStringCchLength(wszUsersXML, IPC_OS_MAX_CCH, &cchUsersXML)
hr=os::IpcOsStringCchLength(wszVersion, IPC_OS_MAX_CCH, &cchVersion)
hr=os::IpcOsStringCchLength(wszVersionXML, IPC_OS_MAX_CCH, &cchVersionXML)
hrDownloadTemplates
hRequest
hrError
hrErrorCode
hResource != nullptr
hresult
HRESULT
hresult
HRESULT = 0x%08x
HRESULT_FROM_WIN32(ERROR_FILE_NOT_FOUND)
HRESULT_FROM_WIN32(ERROR_INSUFFICIENT_BUFFER)
HRESULT_FROM_WIN32(ERROR_INTERNAL_ERROR)
HRESULT_FROM_WIN32(ERROR_INVALID_DATA)
HRESULT_FROM_WIN32(ERROR_NO_DATA)
HRESULT_FROM_WIN32(ERROR_NOT_AUTHENTICATED)
HRESULT_FROM_WIN32(ERROR_NOT_SUPPORTED)
HRESULT_FROM_WIN32(GetLastError())
HRESULT_FROM_WIN32(nError)
HRESULT_FROM_WIN32(os::IpcOsGetLastError())
HRESULT_FROM_WIN32(status)
HresultException
hrGetUserSD
hrIppGetUser
HTTP/1.0
http://microsoft.com/DRM/CertificationService
http://microsoft.com/DRM/LicensingService
http://microsoft.com/DRM/PublishingService
http://microsoft.com/DRM/ServerService
http://microsoft.com/DRM/ServiceDiscoveryService
http://microsoft.com/DRM/ServiceLocatorService
http://microsoft.com/DRM/TemplateDistributionService
HTTP_STATUS_DENIED == dwStatusCode
HttpAddRequestHeadersW
HttpCall
HttpOp
HttpOpenRequestW
HttpQueryInfoW
httpRequest.DispatchRequest((BYTE*) &strJsonObjectString[0], (UINT)strJsonObjectString.length())
https://
https://48fc04bd-c84b-44ac-91b7-a4c5eefd5ac1.rms.na.aadrm.com/_wmcs/licensing
https://api.aadrm.com/my/v1/publishedpolicies
https://corprights.microsoft.com/_wmcs/licensing
https://discover.aadrm.com/_wmcs/certification
https://exchange.microsoft.com/_wmcs/licensing
https://licensing.drm.microsoft.com/licensing
https://track.azurerms.com/
HttpSendRequestW
hwndParent:   
HYY9E
i*v'h
identifier removed
Identities
Identities Crypto version didn't match with Server. Clean the license store and Renew the Identity
Identity and Server are in same crypto mode
IDentity Email: %ws ExtUrl: %ws
Identity information from the registry cache
Identity information incomplete - refreshing the cache
Identity is for consumption only. Skipping download templates.
Identity is for consumption only. Skipping template download.
Identity.ExtranetUrl
Identity.Failure
Identity.IntranetUrl
Identity.Status
Identity.Type
Identity.UserProvided
IdentityCacheSize
IdentityRenewalProactivity
IDispatch error #%d
IIpcTokenException
Ij;Xji
illegal byte sequence
inappropriate io control operation
inclusion
IncorrectBufferSizeException
IndexNotFoundException
InitializeCriticalSection
InitializeCriticalSectionAndSpinCount
InitializeCriticalSectionEx
Initializing an HTTP request with WinHTTP url=%ws, UserAgent=%ws
Initializing an HTTP request with WinINET url=%ws, UserAgent=%ws
InitOnceBeginInitialize
InitOnceComplete
INSTALL
Internal
INTERNAL
Internal error: Can not initialize Error Manager
Internal error: Incorrect error message format
Internal error: Unexpected error message string index
InternalName
InternalUrl
InternetCloseHandle
InternetConnectW
InternetCrackUrlW
InternetErrorDlg
InternetOpenW
InternetQueryDataAvailable
InternetQueryOptionW
InternetReadFile
InternetSetOptionW
interrupted
INTERVALTIME
Intializing License ...
Intranet
Intranet DNS redirection detected from %ws to %ws
Intranet Licensing redirection detected from %ws to %ws
IntranetLicenseURL
invalid argument
Invalid challenge returned by the server.
Invalid element type : %ws
invalid map/set<T> iterator
Invalid parameter passed to C runtime function.
invalid seek
invalid stoi argument
invalid stoul argument
invalid string position
invalid vector<T> subscript
invalid_argument
INVALID_HANDLE_VALUE != hLicense
INVALID_HANDLE_VALUE != hLicenseMetadata
INVALID_HANDLE_VALUE != m_hLogFile
INVALID_SET_FILE_POINTER != SetFilePointer(m_hFile, 0, NULL, SEEK_SET)
InvalidChildNodeException
InvalidHandleTypeException
InvalidItemNameException
InvalidRootException
InvalidScopeException
InvalidValueException
io error
ios_base::badbit set
ios_base::eofbit set
ios_base::failbit set
iostream
iostream stream error
IPC_API_MODE_SERVER == apiMode || (ipp::IServerInfo::SERVER_TYPE::eOnlineServer != eServerType) || connectivity.isConnectedToInternet
IPC_API_MODE_SERVER == apiMode || connectivity.isConnected || connectivity.isConnectedToInternet
IPC_CREDENTIAL_TYPE_OAUTH2
IPC_CREDENTIAL_TYPE_SYMMETRIC_KEY
IPC_CREDENTIAL_TYPE_X509
IPC_EI_API_MODE
IPC_EI_APPLICATION_ID
IPC_EI_ENABLE_TELEMETRY
IPC_EI_LOG_CONFIGURATION
IPC_EI_STORE_PATH_ROOT
IPC_GTIL_FLAG_DEFAULT_SERVER_ONLY is specified but couldn't get the default user.
IPC_HANDLE: 
IPC_KEY_HANDLE: 
IPC_LI_CONTENT_KEY is not a valid dwPropID value for this API
IPC_LI_INTERVAL_TIME: %u days
IPC_LI_VALIDITY_TIME: %hs
IPC_LICENSE_HANDLE: 
IPC_LICENSE_METADATA_HANDLE: 
IpcAccessCheck
IpcCloseHandle
IpcCreateLicense
IpcCreateLicense((LPCVOID)hKey, IPC_CL_KEY, dwFlags, NULL, NULL, phLicense)
IpcCreateLicense((LPCVOID)wszTemplateId, IPC_CL_TEMPLATE_ID, dwFlags, pOwner, pCreator, phLicense)
IpcCreateLicenseFromKey
IpcCreateLicenseFromScratch
IpcCreateLicenseFromScratchInternal( pTemplateIssuer, dwFlags, NULL, NULL, pvReserved, activity, phLicense)
IpcCreateLicenseFromScratchInternal( pTemplateIssuer, dwFlags, pOwner, pCreator, pvReserved, activity, phLicense)
IpcCreateLicenseFromTemplateID
IpcCreateLicenseFromTemplateIdInternal( wszTemplateID, dwFlags, NULL, NULL, pvReserved, phLicense)
IpcCreateLicenseFromTemplateIdInternal( wszTemplateId, dwFlags, pOwner, pCreator, pvReserved, phLicense)
IpcCreateLicenseInternal( pvCreateInfo, dwType, dwFlags, pOwner, pCreator, pIpcContext, phLicense)
IpcCreateLicenseInternal( pvLicenseInfo, IPC_CL_TEMPLATE_ID, 0, NULL, pCreator, pIpcContext, reinterpret_cast<PIPC_LICENSE_HANDLE>(&hLicense) )
IpcCreateLicenseMetadataHandle
IpcCreateOAuth2Token
IpcDecrypt
IpcDecrypt (deferred)
IpcDecryptInternal
IpcEncrypt
IpcEncrypt(deferred)
IpcEncryptInternal
IPCERROR_BROKEN_CERT_CHAIN
IPCERROR_LICENSE_INTERVAL_TIME_NOT_SET
IPCERROR_RIGHT_NOT_GRANTED == hr ? hr : hrGetUserSD
IPCERROR_SIA_NOT_INSTALLED
IpcFreeMemory
IpcGetErrorMessageText
IpcGetGlobalProperty
IpcGetKey
IpcGetKeyInternal
IpcGetKeyInternal( &activity, pvLicense, dwFlags, NULL, NULL, pContext, NULL, pvReserved, phKey )
IpcGetKeyInternal( &activity, pvLicense, dwFlags, pConsumer, pToken, pContext, pvUseLicense, pvReserved, phKey )
IpcGetKeyProperty
IpcGetLastErrorMessageText
IpcGetLicenseProperty
IpcGetSerializedLicenseProperty
IpcGetTemplateIssuerList
IpcGetTemplateList
IpcGetTemplateListInternal
IpcGetTemplateListInternal( &activity, pConnectionInfo, NULL, pvReserved, dwFlags, lcid, NULL, pContext, ppcTil)
IpcGetTemplateListInternal( &activity, pConnectionInfo, pCreator, pvReserved, dwFlags, lcid, pcToken, pContext, ppcTil)
ipcos::IpcOsStringCchLength(pwszLDAPString[0], STRSAFE_MAX_CCH, &cchLDAPString)
ipcos::IpcOsStringCchLength(wszDiscoverUrl.c_str(), IPC_OS_MAX_CCH, &cchDiscoverUrl)
ipcos::IpcOsStringCchLength(wszLicenseUrl, IPC_OS_MAX_CCH, &cchLicenseUrl)
IpcOsEventLevelEnabled: an invalid event level provided, returning false...
IpcOsEventLevelEnabled: Event tracing has not been initialized or initialization failed.
IpcOsEventWrite: an exception caught during writing an event.
IpcOsEventWrite: an invalid event level provided, no event is generated.
IpcOsEventWrite: Event tracing failed due to invalid event data.
IpcOsEventWrite: Event tracing has not been initialized or initialization failed.
IpcOsEventWrite: EventWrite failed with error code: %lu.
IpcOsEventWrite: SafeInt Exception
IpcOsGetErrorMessageText( hrError, dwLanguageId, g_hMSIPPHandle, const_cast<LPCWSTR *>(&wszErrorText))
IpcOsGetMachineName failed with hr = 0x%08x
IpcOsGetUserPreferredLocale failed with hr = 0x%08x
IpcOsInitializeEventTracing: EventRegister failed with error code: %lu.
IpcOsStringCchPrintf failed with hr = 0x%08x
IpcOsUninitializeEventTracing: EventUnregister failed with error code: %lu.
IPCP_CK_CIPHER_MODE_CBC_4K == dwCipherMode
IPCP_EI_STORE_NAME
IpcpAllocMemory
IpcpBootstrapUser
IpcpClearKeys
IpcpCreateKeyFromKey
IpcpCreateLicenseFromScratch
IpcpCreateLicenseFromTemplate
IpcpCreateLicenseFromTemplateId
IpcpCreateLicenseFromTemplateID
IpcpCreateLicenseFromTemplateId
IpcpGeneratePreLicensesForUsers
IpcpGeneratePreLicensesForUsersInternal(pvLicense, pUserList, dwFlags, pIpcContext, ppUseLicenses)
IpcpGetErrorInfoInstance
IpcpGetKey
IpcpGetKeyBits
IpcpGetLoggerInstance
IpcpGetTemplateListForUser
IpcpGetUseLicenseFromSerializedLicense
IpcpGetUserInfo
IpcpGetUserListForIssuer
IpcpSerializeLicense
IpcpSetKeyBits
IpcpSetLastFileName
IpcpSetLastIpcError
IpcRegisterLicense
IpcRegisterLicenseInternal
IpcSerializeLicense
IpcSerializeLicenseInternal
IpcSerializeLicenseInternal( &activity, pvLicenseInfo, dwType, dwFlags, NULL, NULL, pContext, phKey, ppvLicense)
IpcSerializeLicenseInternal( &activity, pvLicenseInfo, dwType, dwFlags, pCreator, pToken, pContext, phKey, ppvLicense)
IpcSerializeLicenseWithMetadata
IpcSetGlobalProperty
IpcSetLicenseMetadataProperty
IpcSetLicenseProperty
IpcSPAttest
IpcSPBindLicense
IpcSPCloseHandle
IpcSPCreateDecryptor
IpcSPCreateEnablingPrincipal
IpcSPCreateEncryptor
IpcSPCreateMachineCerts
IpcSPCreateSecurityProcessor
IpcSPDecrypt
IpcSPDecryptWithRac
IpcSPEnableAndEncrypt
IpcSPEncrypt
IpcSPGetBoundRightKey
IpcSPGetCurrentTime
IpcSPGetInfo
IpcSPInitialize
IpcSPIsActivated
IpcSPSign
IPhP^
ipp::CipherInfo::Check(pCipherInfo)
ipp::ConnectionInfo::Check(pConnectionInfo)
ipp::IppAcl::Check(pAcl)
ipp::IppTerm::Check(pTerm)
ipp::IppUser::Check(pCreator)
ipp::IppUser::Check(pOwner)
ipp::IppUser::CheckBootstrapUser(pConsumer)
ipp::IppUser::CheckBootstrapUser(pCreator)
ipp::IppUser::CheckBootstrapUser(pUser)
ipp::IppUtil::AreIpcBuffersEqual(pvLicense, pLicense)
ipp::IppUtil::CheckApiMode(nApiMode)
ipp::IppUtil::CheckBuffer(pvLicense)
ipp::IppUtil::CheckBuffer(pvLicenseWithMetadata)
ipp::IppUtil::CheckBuffer(pvUseLicense)
ipp::IppUtil::CheckCipherMode(nCipherMode)
ipp::IppUtil::CheckCipherMode(pCipherInfo->dwCipherMode)
ipp::IppUtil::CheckForServerApiMode(ipp::IppSettings::GetInstance()->GetApiMode())
ipp::IppUtil::CheckGetKeyFlags(dwFlags)
ipp::IppUtil::CheckGetTemplateIssuerListFlags(dwFlags)
ipp::IppUtil::CheckGetTemplateListFlags(dwFlags)
ipp::IppUtil::CheckIppGetUserFlags( dwFlags )
ipp::IppUtil::CheckIV( pCipherInfo->pbIV, pCipherInfo->cbIV, pCipherInfo->dwCipherMode, pCipherInfo->wszAlgorithm, pCipherInfo->dwKeySize)
ipp::IppUtil::CheckNameValue(&argCheck)
ipp::IppUtil::CheckNotificationPreference(dwNotificationPref)
ipp::IppUtil::CheckNotificationType(dwNotificationType)
ipp::IppUtil::CheckPaddingMode(pCipherInfo->dwPaddingMode)
ipp::IppUtil::CheckPromptContext(pContext)
ipp::IppUtil::CheckSerializeLicenseFlags(dwFlags)
ipp::IppUtil::CheckSerializeLicenseType(dwType)
ipp::IppUtil::CheckStructVersion(pCipherInfo->cbSize, sizeof(IPC_CIPHER_INFO))
ipp::IppUtil::CheckStructVersion(pConnectionInfo->cbSize, sizeof(IPP_USER_FROM_CONNECTION_INFO))
ipp::IppUtil::CheckSymmetricAlgorithmAndKeySize(pCipherInfo->wszAlgorithm, pCipherInfo->dwKeySize)
ipp::IppUtil::CheckSymmetricAlgorithmAndKeySize(wszAlgorithm, cbKey)
ipp::IppUtil::CheckTemplateInfo(pDescriptor)
ipp::IppUtil::CheckToken(pcToken)
ipp::IppUtil::CheckToken(pToken)
ipp::IppUtil::CheckURL(pConnectionInfo->wszExtranetUrl)
ipp::IppUtil::CheckURL(pConnectionInfo->wszIntranetUrl)
ipp::IppUtil::CheckUserInfoConnection( pUserConnectionInfo )
ipp::IppUtil::CheckUserInfoLicense(pLicenseInfo)
ipp::IppUtil::CheckUserInfoTemplate( pTemplateInfo )
ipp::IppUtil::CheckUserList(pUserList)
ipp::IppUtil::ConvertBufferToString(pAutoTemplateBuffer, &wszTemplate, false)
ipp::IppUtil::ConvertBufferToString(pcvLicense, &wszLicense)
ipp::IppUtil::ConvertBufferToString(pvLicense, &wszLicense)
ipp::IppUtil::ConvertBufferToString(pvLicenseWithMetadata, &wszLicense)
ipp::IppUtil::ConvertBufferToString(spKey->GetLicense(), &wszLicense)
ipp::IppUtil::DecipherTime(wszLastUpdatedTime,&stlastUpdatedTime)
ipp::LicenseNameValue::Check(pNameValueList)
IPP_GU_TEMPLATE is handled at public API level, this type should not have come here
IPP_MACHINE_CERT_LOCK_FOR_USER
ippActivateMachine
ippDupEnvHandle(m_hEnv, &(pCloneId->m_hEnv))
ippEULAndRACCanBind
ippGenerateCLCForRAC
ippGenerateOwnerEULForLicense(plLicense, pUserIdentity, pIpcContext, pEULLicense)
ippGetCertAndLicURLs
ippGetCertAndLicURLsWithNewSD
ippGetEnvHandle(wszMachineCert, pIpcContext, &hTempEnv)
ippGetEULForIdentities
ippGetEULForIdentities hr = 0x%x
ippGetEULForIdentity
ippGetEULForRACs
ippGetEULForRACs Using Redirection Urls
ippGetEULFromStoreWithContentID
ippGetEULFromStoreWithContentID failed with unhandled error.
ippGetEULsForIdentities
ippGetKey( *pPLLicense, m_pUser->GetIppUserIdentity(), ipcContext, FALSE, &m_hBoundLicense, pEULLicense, m_setRights, m_appSpecificData)
ippGetNewCLC
ippGetNewRAC
ippGetNewRACAndCLC
ippGetUser
IppGetUser
IppGetUser Failed hr = 0x%x
IppGetUser( IPP_GU_CONNECTION_INFO, &pUserFromConnInfo, pUserFromConnInfo.wszID ? dwFlags : (dwFlags | IPP_GU_NEW), pIpcContext, &hUser)
IppGetUser( IPP_GU_LICENSE, &userFromLicense, dwFlags & ipp::IppUtil::GetValidIppGetUserFlags(), pIpcContext, &hUser)
IppGetUser(dwType, pvInfo, dwFlags, pIpcContext, phUser)
IppGetUser(IPP_GU_CONNECTION_INFO, &connInfo, 0, pContext, &hUser)
IppGetUser(IPP_GU_CONNECTION_INFO, &pUserFromConnInfo, 0, pIpcContext, &hUser)
ippGetUser(IPP_GU_CONNECTION_INFO, pConnectionInfo, dwFlags, ipcContext, m_pUser)
ippGetUser(IPP_GU_LICENSE, pLicenseInfo, dwFlags, ipcContext, m_pUser)
IppGetUser(IPP_GU_TEMPLATE, &userFromTemplateInfo, IPP_GU_SKIP_EXPIRY_CHECK, pIpcContext, &hUser)
ippGetUserForLicense
ippInitializeAuthAndFileBasedLoggingIfNeeded
ippIsLicensingAnonymous
ippIsLicensingAnonymous hr = 0x%x
ippRenewUser HR=%x
ippRenewUser( pUserIdentity, 0, pIpcContext)
ippRenewUser( pUserIdentity, IPP_GU_CONSUMPTION_MODE, pIpcContext)
ippRenewUser(m_pUser.get(), dwFlags, pIpcContext)
ippRenewUser(m_pUser->GetIppUserIdentity(), 0, pIpcContext)
ippRenewUser(ppUserIdentity.get(), dwFlags, pIpcContext)
ippSerializeLicense( hLicense, m_pUser->GetIppUserIdentity(), dwFlags, (m_fGenerateNewContentId || m_State.GetContentId().empty()) ? NULL : m_State.GetContentId().c_str(), const_cast<BYTE *>(&m_vbContentKeyBits[0]), m_cbContentKeyBits, GetCipherInfo(), dwFlags & IPC_SL_FLAG_REUSE_KEY ? m_hBoundLicense : 0, &wszLicense, pOwnerEUL, pIpcContext, true)
ippSerializeLicense( hLicense, m_pUser->GetIppUserIdentity(), dwFlags, (m_fGenerateNewContentId || m_State.GetContentId().empty()) ? NULL : m_State.GetContentId().c_str(), GetCipherInfo(), dwFlags & IPC_SL_FLAG_REUSE_KEY ? m_hBoundLicense : 0, &wszLicense, pOwnerEUL, pIpcContext)
ippSerializeLicense( hLicense, m_pUser->GetIppUserIdentity(), dwFlags, NULL, (BYTE*)(&m_vbContentKey[0]), (DWORD)m_vbContentKey.size(), GetCipherInfo(), 0, &wszLicense, pOwnerEUL, pIpcContext)
IppUser::Check(&(pUserList->aUser[i]))
IppUser::Check(&pAce->User)
IppUtil::CheckAce(&pAcl->rgUserRights[static_cast<DWORD>(i)])
IppUtil::CheckBuffer(cbRequiredStructs + cbRequiredStrings, pvBuffer, pcbBuffer)
IppUtil::CheckNameValue(&pNameValueList->aNameValuePairs[static_cast<DWORD>(i)])
IppUtil::DecipherTime(m_wstrIssuedTime.c_str(), &m_stIssuedTime)
IppUtil::DecipherTime(wstrFrom.c_str(), &m_stFrom)
IppUtil::DecipherTime(wstrIssuedData.c_str(), &m_issuedTime)
IppUtil::DecipherTime(wstrIssuedDate.c_str(), &m_creationDate)
IppUtil::DecipherTime(wstrTo.c_str(), &m_stTo)
IppUtil::DecipherTime(wstrValidUntil.c_str(), &m_validUntil)
IppUtil::IsPassportCertificationEnabled: hr == 0x%x
IPViewer
is a directory
isalpha
IsCertTypeOptional() || CERT_TYPE_UNKNOWN != m_eCertType
isClcUrlMicrosoftUrl is %ws
IsDebuggerPresent
IServerInfoException
IServerInfoNotSupportedException
IsExpired hr = 0x%x
IsFederated
IsFromRmso
IsFromTemplate
IsGlobalDefaultServerSet hr = 0x%x
islower
IsMOSSAInstalled
IsRMSO Getting server info silently to check whether the Urls point to RMSO.
IsRMSOIdentity hr = 0x%x
IsSigned()
issto
IssuanceLicense
IssuanceLicenseV2
IssuanceLicV2Enabled
ISSUE
ISSUEDPRINCIPALS
ISSUEDTIME
IssuedTimeSet : %hs
issuedtoken
ISSUER
Issuer name: %ws
IssuerId
IssuerName
IsTestHooked()
isupper
iswalnum
iswspace
Iteration = %d UrlType = %ws Using url = %ws
IUrlIteratorInvalidArgException
IUserIdentities::GenerateIpcUserList - Not enough memory allocated.
IUserIdentitiesException
IUserIdentitiesIncorrectBufferSizeException
IUserIdentitiesNotEnoughMemoryException
j h(^
j h8L
j hP]
j PhT^
j Yj@
j!_;u
j!h Z
j!h8d
j!h8Y
j!hxF
j"h Z
j"hh4
j"Y_^f
j#h Z
j#hPI
j$h`\
j$hPI
j%hHX
j%hPI
j%hxF
j%Yj f
j&h Z
j&hHX
j(h`\
j(hpR
j)hh4
j)hhc
j)hpR
j*hHO
j*hpR
j,hHO
j,hpR
j.hHO
j.hpN
j/hpN
j/Yf9
j/Zf;
j:Xf;A
j;Xj f;
j;Xjbf
j;Xjf
j;Xjh
j;Zf9
j@h(5
j@hh4
j\_f9|A
j\Xf;A
j\Xf9DV
j\Xf9FHu
j\Yf9Lz
j\YQf
j\Zf;TA
j]Yf9
j^h 0
j`hH}
j{h0k
j+h J
j+h8Y
j+hHO
j+hpN
j+hxM
j<h`\
j<h0W
j=hxj
j>Xf9
j>Yf9
j0^j9Zf;
j0^Qf
j0_f9;
j0hpN
j0hpR
j0Xf9
j0XhF
j0Yf;
j0Yf9
j2hh!
j2hhc
j3hpN
j3hpR
j4hHO
j4hpR
j5h8K
j8Xf;
j9[f;
j9^f93
j9Xf;
j9Xf9
j9Yf;
j9Yf9
jAh(5
jAhXb
jAhXP
jaYQf
jchxj
JCLC-
jfYQf
jgh 0
j'h w
j'hh!
j-hHO
j'hHX
j-hpR
jjjjjj
jl_Qf
jlYQf
jnYQf
jrYQf
jsonClcLicense.get()
JsonIssuanceLicense::DecryptAndParseData
JsonIssuanceLicense::EncryptPayload
JsonIssuanceLicense::GenerateOwnerLicense
JsonIssuanceLicense::GetSignedIssuanceLicense
JsonIssuanceLicense::JsonIssuanceLicense
JsonIssuanceLicense::ParseCustomPolicy
JsonIssuanceLicense::ParseLicense
JsonIssuanceLicense::ParseOfficialPolicy
JsonIssuanceLicense::ParseUserRights
JsonIssuanceLicense::SetJsonData
JsonIssuanceLicense::SetJsonUserRights
JsonIssuanceLicense::SignLicense
JSVWj
jTh0k
jtYQf
juXf;
juYQf
jVhx_
j-Xf9C
j-XSf
j-Yf9
j-Yf9LV
jZhxj
k*do^
kernelbase.dll
Key rollover occurred for %ws. Deleting templates
KeyHandle
KL;CP
kVhh]
L$$_^3
L$,^3
L$\^3
L$D_^3
L$l_^[3
L$l_^3
L$T_^[3
L$T_^3
L'\\' != uncPathCheck[2] && L'\0' != uncPathCheck[2] && L'?' != uncPathCheck[2]
L'\0' != *rootDirectory
LANGID=
Last attempt was more than 1 day ago, suggesting identity renew.
Last Error Code set is 0x%x and the error message is %ws
LastUpdatedTime
LastUserUpdateAttempt
LCID 
LCID %d:NAME %s:DESCRIPTION %s;
LCIDToLocaleName
LCIDToLocaleName failed with hr = 0x%08x
LeaveCriticalSection
LegalCopyright
Less than 1 day remaining, suggesting identity renew.
Level
License Created
License handle doesn't have contentId set
License handle doesn't have IssuedTimeSet set
License handle doesn't have owner set
License is not created from official template. wszId will be NULL
License uses CBC512 no padding: %s 
License-Acquisition-URL
licenseCount == principals
LicenseeCerts
LicenseeIdentities
LicenseFormat
LicenseId
LICENSEMETADATA
LicensePropertyType
Licenses
LicenseType
Licensing
Licensing endpoint is not anonymous.So skipping TUD check.
Licensing URL from PL is %ws
LicensingInternalService
LicensingService
LicensorCertificateResponse
Licesne usees deprecated algorithm: %s
lineNumber
list<T> too long
Loading the Security Processor
LoadLibraryExA
LoadLibraryExW
LoadResource
Local\SM0:%d:%d:%hs
LocalAlloc
localeconv
LocaleNameToLCID
LocalFree
locator->GetCertificationUrls(ppwszInternalUrl, ppwszExternalUrl, &eState)
LockResource
Log Version: 1.1
logEvent
LoggedOnUserTokenException
Logging failed
Logging failed with hr = 0x%x
Logging Initialized for %hs mode, store name is %ws
LogHr
logoncli.dll
LogPath
lower
M QRSP
m_fCanRepublish
m_hBoundLicense != 0
m_keyBlob.InitRSAPublic(m_uExponent, GetModulusBitsSize(), &m_vbModulus[0])
m_pbModulusIssuedPrincipal = new BYTE[m_cModulusIssuedPrincipal]
m_pbModulusIssuer = new BYTE[m_cModulusIssuer]
m_pbOfficialTemplateIssuerPubKey = new (std::nothrow) BYTE[m_cbOfficialTemplateIssuerPubKey]
m_pCCLCPubData = new (std::nothrow) CCLCPubData()
m_pCRACPubData = new (std::nothrow) CRACPubData()
m_pCryptoVersionToVerify
m_pfnHttpSetWindowsCredentialsCallback( hRequest, dwStatusCode, hParentWindow, fSilent, hCancelEvent, m_pvAppData)
m_pKeyBlob->InitRSAPublic(m_uPubExponent, SafeInt<UINT>(BYTES_TO_BITS(vbPubKey.size())), &vbPubKey[0])
m_pPLLicense
m_pRACLicense.get()
m_pSignature.get()
m_psRights
m_pTimeInterval
m_pTimeRange
m_pUser.get()
m_pUser.get() != 0
m_pVerificationData.get()
m_pvRights
m_setRights.size() > 0
m_vRights.end() != std::find(m_vRights.begin(), m_vRights.end(), xa::wszIssueRight)
m_wstrAddressesType.size() == m_wstrAddresses.size()
Machine-Certificate
MachineCertificateChain
mailto:
Main-Rights
malloc
map/set<T> too long
MatchKey(keyBlob, s_rootKeys, ARRAYSIZE(s_rootKeys), eMatchedHierarchy)
MaxFiles
MaximumVersion
MaxLengthSignedOfflineIssuanceLicense
MaxLinesInFile
MaxLinesInMemory
memcmp
memcpy
memcpy_s
memmove
memmove_s
MemoryTracingEnabled
memset
message
Message
message
message size
message_size
METADATA
Microsoft
Microsoft Active Directory Rights Management Services Client
Microsoft Corporation
Microsoft Enhanced RSA and AES Cryptographic Provider
Microsoft Official Rights Template
Microsoft Online Services Sign-in Assistant is Installed
Microsoft Online Services Sign-in Assistant is not Installed
Microsoft Online Services Sign-in Assistant version is %ws
Microsoft Rights Label
Microsoft Rights Template
Microsoft.DigitalRightsManagement.Activation.EmailAddressNotVerified
Microsoft.DigitalRightsManagement.Certification.MismatchedIdentificationEmailAddressException
Microsoft.DigitalRightsManagement.Core.VerifyEmailAddressFailedException
Microsoft.DigitalRightsManagement.Core.VerifyMachineCertificateChainFailedException
Microsoft.DigitalRightsManagement.Cryptography.UnsupportedCryptographicSetException
Microsoft.DigitalRightsManagement.Licensing.BlackBoxIsInvalidException
Microsoft.DigitalRightsManagement.Licensing.DrmacIsExcludedException
Microsoft.DigitalRightsManagement.Licensing.InvalidPersonaCertSignatureException
Microsoft.DigitalRightsManagement.Licensing.InvalidPersonaCertTimeException
Microsoft.DigitalRightsManagement.Licensing.IssuanceLicenseIsNotWithinValidTimeRangeException
Microsoft.DigitalRightsManagement.Licensing.NoRightsForRequestedPrincipalException
Microsoft.DigitalRightsManagement.Licensing.UnexpectedPersonaCertException
Microsoft.DigitalRightsManagement.Licensing.UntrustedPersonaCertException
Microsoft.DigitalRightsManagement.Licensing.UserIsExcludedException
Microsoft.DigitalRightsManagement.PublishingDisabledException
Microsoft.DigitalRightsManagement.Utilities.ADEntrySearchFailedException
Microsoft.InformaionProtection.RMS.MSIPC
Microsoft.Windows.ErrorHandling.Fallback
Microsoft::FoundationServices::Common::Registry::LogRegistryOperation
Microsoft::FoundationServices::Common::Registry::Open
Microsoft::InformationProtection::CBaseLicense::Parse
Microsoft::InformationProtection::CCLCLicense::LogCLC
Microsoft::InformationProtection::CIpcLogger::Release
Microsoft::InformationProtection::CPLLicense::LogPL
Microsoft::InformationProtection::CRACLicense::LogRAC
Microsoft::InformationProtection::DelegationLicenseAcq::AcquireBatchLicenses
Microsoft::InformationProtection::DelegationLicenseAcq::AcquireDelegationLicenseContext::AcquisitionProc_msipp
Microsoft::InformationProtection::DelegationLicenseAcq::AcquireDelegationLicenseContext::HandleDelegationLicenseResponse_msipp
Microsoft::InformationProtection::DnsLookupClient::LookupDiscoveryService
Microsoft::InformationProtection::GetCertAndLicURLsWithFallback
Microsoft::InformationProtection::GetCertAndLicURLsWithoutFallback
Microsoft::InformationProtection::GetNetworkConnectivityInfo
Microsoft::InformationProtection::GlobalServiceLocator::GetCertificationUrls
Microsoft::InformationProtection::IpcErrorManager::GetLastIpcError
Microsoft::InformationProtection::IpcOsGetActiveDirectoryServiceImpl
Microsoft::InformationProtection::ippGetEULForLicense
Microsoft::InformationProtection::ippGetEULForLicenseDns
Microsoft::InformationProtection::ippGetEULFromPL
Microsoft::InformationProtection::ippGetEULfromServer
Microsoft::InformationProtection::ippGetUser
Microsoft::InformationProtection::ippGetUserForLicense
Microsoft::InformationProtection::ippGetUserForLicenseUsingServiceDiscovery
Microsoft::InformationProtection::ippGetUserForLicenseUsingTud
Microsoft::InformationProtection::ippGetUserForUserInfo
Microsoft::InformationProtection::ippGetUserForUserInfoWithCache
Microsoft::InformationProtection::ippGetUserFromUserListForLicense
Microsoft::InformationProtection::ippIsRMSO
Microsoft::InformationProtection::IPPLicenseStore::DeleteCLC
Microsoft::InformationProtection::IPPLicenseStore::GetCLCForRAC
Microsoft::InformationProtection::IPPLicenseStore::GetCLCWithRAC
Microsoft::InformationProtection::IPPLicenseStore::GetFirstJsonCLC
Microsoft::InformationProtection::ippPreProcessUserListForTud
Microsoft::InformationProtection::ippRenewUser
Microsoft::InformationProtection::ippRenewUserAndLicenseUsingTud
Microsoft::InformationProtection::IPPUserIdentity::CleanLicenseStoreForUrls
Microsoft::InformationProtection::IPPUserIdentity::GetIdentityFromRegistry
Microsoft::InformationProtection::IPPUserIdentity::GetIdentityFromRegistryOrStore
Microsoft::InformationProtection::IPPUserIdentity::GetNewIdentity
Microsoft::InformationProtection::IPPUserIdentity::GetNewWindowsIdentity
Microsoft::InformationProtection::IPPUserIdentity::GetServerIdentityRegValues
Microsoft::InformationProtection::IPPUserIdentity::GetServerIdentityRegValuesForToken
Microsoft::InformationProtection::IPPUserIdentity::GetServerIdentityRegValuesForURL
Microsoft::InformationProtection::IPPUserIdentity::InitializeIdentityForIdentityInfo
Microsoft::InformationProtection::IPPUserIdentity::InitializeIdentityForServer
Microsoft::InformationProtection::IPPUserIdentity::InitializeIdentityForUserInfo
Microsoft::InformationProtection::IPPUserIdentity::InitializeIdentityFromCache
Microsoft::InformationProtection::IPPUserIdentity::InitializeIDFromCLCAndRAC
Microsoft::InformationProtection::IPPUserIdentity::InitializeUserIdentity
Microsoft::InformationProtection::IPPUserIdentity::IsDefaultServerConfigured
Microsoft::InformationProtection::IPPUserIdentity::IsExpired
Microsoft::InformationProtection::IPPUserIdentity::IsGlobalDefaultServerSet
Microsoft::InformationProtection::IPPUserIdentity::IsRMSOIdentity
Microsoft::InformationProtection::IPPUserIdentity::ReadCLCAndRACFromStore
Microsoft::InformationProtection::IPPUserIdentity::ReadIdentityRegValues
Microsoft::InformationProtection::IPPUserIdentity::SetCLC
Microsoft::InformationProtection::IPPUserIdentity::SetDefaultsForServer
Microsoft::InformationProtection::IPPUserIdentity::SetRAC
Microsoft::InformationProtection::IPPUserIdentity::SetServerIdentityRegKeys
Microsoft::InformationProtection::IPPUserIdentity::SetUpnRegKeys
Microsoft::InformationProtection::IPPUserIdentity::VerifyServerIsTrusted
Microsoft::InformationProtection::IppUtil::Base64Encode
Microsoft::InformationProtection::IppUtil::copyStringToList
Microsoft::InformationProtection::IppUtil::GetNameAndDescriptionFallback
Microsoft::InformationProtection::IppUtil::HandleException
Microsoft::InformationProtection::IppUtil::HandlePublicAPIException
Microsoft::InformationProtection::IppUtil::IsServerURLTrusted
Microsoft::InformationProtection::IppUtil::MapDRMErrorToIPCError
Microsoft::InformationProtection::IppUtil::WideCharToMultiByte
Microsoft::InformationProtection::IppUtil::WstringToInteger
Microsoft::InformationProtection::JsonLicenses::CJsonCLCLicense::VerifySignature
Microsoft::InformationProtection::JsonLicenses::ContentKey::AddSerializableData
Microsoft::InformationProtection::JsonLicenses::ContentKey::DeserializeFromObject
Microsoft::InformationProtection::JsonLicenses::CustomPolicy::DeserializeFromObject
Microsoft::InformationProtection::JsonLicenses::Header::AddSerializableData
Microsoft::InformationProtection::JsonLicenses::Header::DeserializeFromObject
Microsoft::InformationProtection::JsonLicenses::IJsonObject::Deserialize
Microsoft::InformationProtection::JsonLicenses::IssuedTo::AddSerializableData
Microsoft::InformationProtection::JsonLicenses::IssuedTo::DeserializeFromObject
Microsoft::InformationProtection::JsonLicenses::Issuer::AddSerializableData
Microsoft::InformationProtection::JsonLicenses::Issuer::DeserializeFromObject
Microsoft::InformationProtection::JsonLicenses::License::AddSerializableData
Microsoft::InformationProtection::JsonLicenses::License::DeserializeFromObject
Microsoft::InformationProtection::JsonLicenses::Policy::AddSerializableData
Microsoft::InformationProtection::JsonLicenses::Policy::DeserializeFromObject
Microsoft::InformationProtection::JsonLicenses::PublishingLicense::AddSerializableData
Microsoft::InformationProtection::JsonLicenses::PublishingLicense::DeserializeFromObject
Microsoft::InformationProtection::JsonLicenses::PublishingLicense::FinalizePayload
Microsoft::InformationProtection::JsonLicenses::RevokeObject::AddSerializableData
Microsoft::InformationProtection::JsonLicenses::RevokeObject::DeserializeFromObject
Microsoft::InformationProtection::JsonLicenses::RSAKey::AddSerializableData
Microsoft::InformationProtection::JsonLicenses::RSAKey::DeserializeFromObject
Microsoft::InformationProtection::JsonLicenses::SessionKey::AddSerializableData
Microsoft::InformationProtection::JsonLicenses::SessionKey::DeserializeFromObject
Microsoft::InformationProtection::JsonLicenses::Signature::AddSerializableData
Microsoft::InformationProtection::JsonLicenses::Signature::DeserializeFromObject
Microsoft::InformationProtection::JsonLicenses::UserCert::AddSerializableData
Microsoft::InformationProtection::JsonLicenses::UserCert::DeserializeFromObject
Microsoft::InformationProtection::JsonLicenses::UserCertPrivateData::AddSerializableData
Microsoft::InformationProtection::JsonLicenses::UserCertPrivateData::DeserializeFromObject
Microsoft::InformationProtection::JsonLicenses::UserCertPublicData::AddSerializableData
Microsoft::InformationProtection::JsonLicenses::UserCertPublicData::DeserializeFromObject
Microsoft::InformationProtection::JsonLicenses::UserRights::DeserializeFromObject
Microsoft::InformationProtection::LicenseMetadata::AddReadOnlyValues
Microsoft::InformationProtection::LicenseMetadata::GetFileTimeString
Microsoft::InformationProtection::LicensePropertyAllocator::GetParsedLicense
Microsoft::InformationProtection::LicensePropertyAllocator::GetProperty
Microsoft::InformationProtection::LogFunctionHelper::~LogFunctionHelper
Microsoft::InformationProtection::LogFunctionHelper::LogFunctionHelper
Microsoft::InformationProtection::OperatingSystem::IpcOsGetFilePathFromMsipcInstallLocation (g_wszRedirectionUrlFileName, &ipcosPath)
Microsoft::InformationProtection::OperatingSystem::IpcOsInitializeSecurityProcessor
Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchLength(pAppId->wszClientId, IPC_OS_MAX_CCH, &_cchLen)
Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchLength(pAppId->wszRedirectUri, IPC_OS_MAX_CCH, &_cchLen)
Microsoft::InformationProtection::ProactiveRenewal::ShouldRenewUser
Microsoft::InformationProtection::ProxyResolver::GetProxyCallBack
Microsoft::InformationProtection::ProxyResolver::GetProxyForAutoSettings
Microsoft::InformationProtection::ProxyResolver::GetProxyForUrlEx
Microsoft::InformationProtection::ProxyResolver::ProxyResolver
Microsoft::InformationProtection::ProxyResolver::ResolveProxy
Microsoft::InformationProtection::ProxyResolver::SetNextProxySetting
Microsoft::InformationProtection::ProxyResolver::SetNextProxySettingEx
Microsoft::InformationProtection::ServerInfoImpl::processResponse
Microsoft::InformationProtection::TemplateManager::copyTemplateInfoToList
Microsoft::InformationProtection::TemplateManager::downloadTemplates
Microsoft::InformationProtection::TemplateManager::DownloadTemplatesIfNeeded
Microsoft::InformationProtection::TemplateManager::GetTemplateIssuersFromTemplates
Microsoft::InformationProtection::TemplateManager::GetTemplateList
Microsoft::InformationProtection::TemplateManager::isTemplateStoreStale
Microsoft::InformationProtection::TemplateManager::isV1Server
Microsoft::InformationProtection::TemplateManager::usersPublicKeyMatchWithTemplates
Microsoft::InformationProtection::TraceUtil::Trace
Microsoft::InformationProtection::UrlIterator::GetNextUrl
Microsoft::InformationProtection::UserIdentities::init
Microsoft::InformationProtection::Win7IppLicense::Serialize
Microsoft::InformationProtection::Win7IppLicenseWithMetadata::Serialize
Microsoft::InformationProtection::Win7IppUser::IsEnterpriseFederatedUser
Microsoft-RMS-MSIPC
Microsoft-RMS-MSIPC/Debug
MinimumVersion
Missing
module
modulus
mr"iR
MS.Content.DateCreated
MS.Content.DateModified
MS.Content.Name
MS.ContentPath.Hash
MS.MachineName.Hash
MS.Notify.Culture
MS.Notify.DeniedOnly
MS.Notify.Digest
MS.Notify.Enabled
MS.Notify.TZDN
MS.Notify.TZID
MS.Notify.TZO
MS.Notify.TZSN
Msg:[%ws] 
MS-GUID
msipc
MSIPC
msipc
MSIPC
msipc
MSIPC;version=%ws;AppName=%ws;AppVersion=%ws;AppArch=%ws;PID=%u;OSName=%ws;OSVersion=%ws;OSArch=%ws
MsipcActivity
MsipcApi
MsipcApiAuthCallbackProvided
MsipcApiBootstrapIdentity
MsipcApiConnectionInfo
MsipcApiIdentityExpired
MsipcApiOnline
MsipcApiRenewIdentity
MsipcApiTokenProvided
MsipcApiUserProvided
MSIPC-Client
MsipcHostNameRedirection.dat
MSOIDCRLVersion
MSOSPN
MSOSSO
MSOSSP
msvcrt.dll
MSXmlDomException
MultiByteToWideChar
Mutex::Lock - Error in WaitForSingleObject.  rc = %lu.
Mutex::Unlock - Error in ReleaseMutex.  rc = %lu.
N$9^(vE
N4;N$
NeedsRenewal
needToReplaceWithRMSOUrl is %ws
NetApiBufferFree
netutils.dll
Network connectivity: local - %ws, internet - %ws
network down
network reset
network unreachable
network_down
network_reset
network_unreachable
no buffer space
no child process
No Connection info specified
No federation home realm
No HostNameRedirection hr=0x%x
No Json CLC available hr = 0x%x
no link
no lock available
no message
no message available
no protocol option
no space on device
no stream resources
no such device
no such device or address
no such file or directory
no such process
No template issuers available locally or from non-default servers, default service discovery failed. Failed hr = 0x%x
no_buffer_space
no_protocol_option
NoChildrenException
NodeCastException
NodeInformationException
NodeTypeException
NOLICCACHE
NOLICCACHE is set. Saved EUL in Context
NoOfDomainsSearched
NoOfDomainsSkipped
not a directory
not a socket
not a stream
Not able to delete 1024-bit machine cert, hr = 0x%08x
Not able to delete 2048-bit machine cert, hr = 0x%08x
Not able to delete CLCs, hr = 0x%08x
Not able to delete GICs, hr = 0x%08x
Not able to find any valid files matching the search criteria
Not able to read data from file hr=%x
Not an enterprise server, so skipping TUD check
not connected
not enough memory
Not persisting the owner EUL as the owner  doesn't have owner rights or AutoGrantOwnerFullAccess = 0.
Not suggesting identity renew - identity does not expire.
Not suggesting identity renew with %.2f % remaining.
not supported
not_a_socket
not_connected
NoTypeNameFoundException
NoValidation
ntdll.dll
nTypeRead == nType && *pcchOut > 0 && *pcchOut % sizeof (T) == 0
Nu!h@]
NULL != dynamic_cast<const ipp::IEULLicense*>(&license)
NULL != m_pvwstrUserIdentities && !m_pvwstrUserIdentities->empty()
NULL != ppv
NULL != pv
NULL != pvLicense
NULL != pvSerializedLicense
NULL == m_wszData
NULL == pcToken->pcvTokenData
NULL == pvReserved
NullHandleException
nullptr != m_userCerts && !m_userCerts->empty()
nullptr != m_userIdentities && !m_userIdentities->empty()
nullptr != pfnGetUserNameExWAdd
nullptr != pUserIdentity
Number of existing matching CLCs, %d
O(PPj
O@hP^
OAUTH2
OAuth2TokenException
OBJECT
OfficePlugin
Offline
OHt*f;
OLEAUT32.dll
onecore\internal\sdk\inc\wil\opensource\wil\resource.h
onecore\internal\sdk\inc\wil\opensource\wil\result.h
onecoreuap\ds\security\rm\client\src\base\domdocument\domdocument.cpp
onecoreuap\ds\security\rm\client\src\base\domdocument\msxmldomdocument.cpp
onecoreuap\ds\security\rm\client\src\base\domdocument\msxmldomelement.cpp
onecoreuap\ds\security\rm\client\src\base\errormanager\ipcerrormanager.cpp
onecoreuap\ds\security\rm\client\src\base\FsCommon\auto_array.h
onecoreuap\ds\security\rm\client\src\base\FsCommon\auto_coinit.h
onecoreuap\ds\security\rm\client\src\base\fscommon\auto_handle.h
onecoreuap\ds\security\rm\client\src\base\FsCommon\auto_handle.h
onecoreuap\ds\security\rm\client\src\base\FsCommon\auto_ipcmem.h
onecoreuap\ds\security\rm\client\src\base\FsCommon\auto_pointer.h
onecoreuap\ds\security\rm\client\src\base\fscommon\auto_pointer.h
onecoreuap\ds\security\rm\client\src\base\FsCommon\auto_refcount.h
onecoreuap\ds\security\rm\client\src\base\fscommon\ccachemruqueue.cpp
onecoreuap\ds\security\rm\client\src\base\FsCommon\FastMutex.h
onecoreuap\ds\security\rm\client\src\base\fscommon\mutex.cpp
onecoreuap\ds\security\rm\client\src\base\fscommon\registry.cpp
onecoreuap\ds\security\rm\client\src\base\FsCommon\registry.h
onecoreuap\ds\security\rm\client\src\base\fscommon\Registry.h
onecoreuap\ds\security\rm\client\src\base\FsCommon\registry.h
onecoreuap\ds\security\rm\client\src\base\FsCommon\str_t.h
onecoreuap\ds\security\rm\client\src\base\Handle\IpcHandle.h
onecoreuap\ds\security\rm\client\src\base\logging\circularfilelogger.cpp
onecoreuap\ds\security\rm\client\src\base\logging\ipcfilelogchannel.cpp
onecoreuap\ds\security\rm\client\src\base\logging\ipclogger.cpp
onecoreuap\ds\security\rm\client\src\base\Logging\IpcLogging.h
onecoreuap\ds\security\rm\client\src\base\logging\LogFileSlot.h
onecoreuap\ds\security\rm\client\src\base\Serialization\DeserializeTree.h
onecoreuap\ds\security\rm\client\src\base\serialization\IndexedTree.h
onecoreuap\ds\security\rm\client\src\base\serialization\SafeEnum.h
onecoreuap\ds\security\rm\client\src\base\Serialization\SafeEnum.h
onecoreuap\ds\security\rm\client\src\base\serialization\serializationtree.cpp
onecoreuap\ds\security\rm\client\src\base\serialization\TypeConversions.h
onecoreuap\ds\security\rm\client\src\base\Serialization\TypeConversions.h
onecoreuap\ds\security\rm\client\src\base\serialization\xmlprotocol.cpp
onecoreuap\ds\security\rm\client\src\base\Serialization\XmlProtocol.h
onecoreuap\ds\security\rm\client\src\base\serialization\xmlreader.cpp
onecoreuap\ds\security\rm\client\src\base\storepath\storepath.cpp
onecoreuap\ds\security\rm\client\src\base\util\auto_localfree.h
onecoreuap\ds\security\rm\client\src\base\Util\auto_localfree.h
onecoreuap\ds\security\rm\client\src\base\util\ipputil.cpp
onecoreuap\ds\security\rm\client\src\base\util\wstringutil.cpp
onecoreuap\ds\security\rm\client\src\msipc\activation\activation.cpp
onecoreuap\ds\security\rm\client\src\msipc\api\ippapi.cpp
onecoreuap\ds\security\rm\client\src\msipc\api\licensepropertyallocator.cpp
onecoreuap\ds\security\rm\client\src\msipc\common\cipherinfo.cpp
onecoreuap\ds\security\rm\client\src\msipc\common\connectioninfo.cpp
onecoreuap\ds\security\rm\client\src\msipc\common\drmutil.cpp
onecoreuap\ds\security\rm\client\src\msipc\common\ipccontext.cpp
onecoreuap\ds\security\rm\client\src\msipc\common\ipcuselicenselist.cpp
onecoreuap\ds\security\rm\client\src\msipc\common\ippacl.cpp
onecoreuap\ds\security\rm\client\src\msipc\common\ippterm.cpp
onecoreuap\ds\security\rm\client\src\msipc\common\licensemetadata.cpp
onecoreuap\ds\security\rm\client\src\msipc\common\licensestate.cpp
onecoreuap\ds\security\rm\client\src\msipc\common\namevalue.cpp
onecoreuap\ds\security\rm\client\src\msipc\common\proactiverenewal.cpp
onecoreuap\ds\security\rm\client\src\msipc\common\templateinfo.cpp
onecoreuap\ds\security\rm\client\src\msipc\common\templateissuer.cpp
onecoreuap\ds\security\rm\client\src\msipc\common\traceutil.cpp
onecoreuap\ds\security\rm\client\src\msipc\core\ipcstringallocator.cpp
onecoreuap\ds\security\rm\client\src\msipc\core\ipplicensestore.cpp
onecoreuap\ds\security\rm\client\src\msipc\core\ippmsdrmwrapper.cpp
onecoreuap\ds\security\rm\client\src\msipc\core\ippumcommon.cpp
onecoreuap\ds\security\rm\client\src\msipc\core\ippuseridentity.cpp
onecoreuap\ds\security\rm\client\src\msipc\core\ippusermanagement.cpp
onecoreuap\ds\security\rm\client\src\msipc\core\offlinepl.cpp
onecoreuap\ds\security\rm\client\src\msipc\core\secureenv.cpp
onecoreuap\ds\security\rm\client\src\msipc\core\useridentities.cpp
onecoreuap\ds\security\rm\client\src\msipc\cryptutil\rmsudcapi.cpp
onecoreuap\ds\security\rm\client\src\msipc\cryptutil\udcapiblob.cpp
onecoreuap\ds\security\rm\client\src\msipc\cryptutil\udcapirsa.cpp
onecoreuap\ds\security\rm\client\src\msipc\dnslookupclient\dnslookupclient.cpp
onecoreuap\ds\security\rm\client\src\msipc\dnslookupclient\domain.cpp
onecoreuap\ds\security\rm\client\src\msipc\drmmain\udmgrldr.cpp
onecoreuap\ds\security\rm\client\src\msipc\drmobjects\drmcbase.cpp
onecoreuap\ds\security\rm\client\src\msipc\drmobjects\drmcbase.h
onecoreuap\ds\security\rm\client\src\msipc\DrmObjects\drmcbase.h
onecoreuap\ds\security\rm\client\src\msipc\drmobjects\drmcint.h
onecoreuap\ds\security\rm\client\src\msipc\drmxrml\xmlenc.cpp
onecoreuap\ds\security\rm\client\src\msipc\http\bearerchallengeparser.cpp
onecoreuap\ds\security\rm\client\src\msipc\http\drmchttp.cpp
onecoreuap\ds\security\rm\client\src\msipc\http\iipctoken.cpp
onecoreuap\ds\security\rm\client\src\msipc\http\loggedonusertoken.cpp
onecoreuap\ds\security\rm\client\src\msipc\http\LoggedOnUserToken.h
onecoreuap\ds\security\rm\client\src\msipc\http\networkconnectivity.cpp
onecoreuap\ds\security\rm\client\src\msipc\http\oauth2token.cpp
onecoreuap\ds\security\rm\client\src\msipc\http\orgididcrltoken.cpp
onecoreuap\ds\security\rm\client\src\msipc\http\OrgIdIdcrlToken.h
onecoreuap\ds\security\rm\client\src\msipc\http\rmsoserververification.cpp
onecoreuap\ds\security\rm\client\src\msipc\http\serverinfo.cpp
onecoreuap\ds\security\rm\client\src\msipc\http\serverinfocache.cpp
onecoreuap\ds\security\rm\client\src\msipc\http\soaprequest.cpp
onecoreuap\ds\security\rm\client\src\msipc\http\symmetrickeytoken.cpp
onecoreuap\ds\security\rm\client\src\msipc\http\SymmetricKeyToken.h
onecoreuap\ds\security\rm\client\src\msipc\http\urliterator.cpp
onecoreuap\ds\security\rm\client\src\msipc\http\windowstoken.cpp
onecoreuap\ds\security\rm\client\src\msipc\http\windowsusernameandpasswordtoken.cpp
onecoreuap\ds\security\rm\client\src\msipc\http\winhttpproxy.cpp
onecoreuap\ds\security\rm\client\src\msipc\http\winhttpproxywrapper.cpp
onecoreuap\ds\security\rm\client\src\msipc\http\x509token.cpp
onecoreuap\ds\security\rm\client\src\msipc\http\X509Token.h
onecoreuap\ds\security\rm\client\src\msipc\jsonlicenses\cjsonclclicense.cpp
onecoreuap\ds\security\rm\client\src\msipc\jsonlicenses\CJsonCLCLicense.h
onecoreuap\ds\security\rm\client\src\msipc\jsonlicenses\cjsonpllicense.cpp
onecoreuap\ds\security\rm\client\src\msipc\jsonlicenses\contentkey.cpp
onecoreuap\ds\security\rm\client\src\msipc\jsonlicenses\custompolicy.cpp
onecoreuap\ds\security\rm\client\src\msipc\jsonlicenses\header.cpp
onecoreuap\ds\security\rm\client\src\msipc\jsonlicenses\IJsonObject.h
onecoreuap\ds\security\rm\client\src\msipc\jsonlicenses\issuedto.cpp
onecoreuap\ds\security\rm\client\src\msipc\jsonlicenses\issuer.cpp
onecoreuap\ds\security\rm\client\src\msipc\jsonlicenses\license.cpp
onecoreuap\ds\security\rm\client\src\msipc\jsonlicenses\policy.cpp
onecoreuap\ds\security\rm\client\src\msipc\jsonlicenses\publishinglicense.cpp
onecoreuap\ds\security\rm\client\src\msipc\jsonlicenses\revokeobject.cpp
onecoreuap\ds\security\rm\client\src\msipc\jsonlicenses\rsakey.cpp
onecoreuap\ds\security\rm\client\src\msipc\jsonlicenses\sessionkey.cpp
onecoreuap\ds\security\rm\client\src\msipc\jsonlicenses\signature.cpp
onecoreuap\ds\security\rm\client\src\msipc\jsonlicenses\usercert.cpp
onecoreuap\ds\security\rm\client\src\msipc\jsonlicenses\usercertprivatedata.cpp
onecoreuap\ds\security\rm\client\src\msipc\jsonlicenses\usercertpublicdata.cpp
onecoreuap\ds\security\rm\client\src\msipc\jsonlicenses\userrights.cpp
onecoreuap\ds\security\rm\client\src\msipc\jsonlicenses\UserRights.h
onecoreuap\ds\security\rm\client\src\msipc\licenseacquisition\delegationlicacq.cpp
onecoreuap\ds\security\rm\client\src\msipc\licenseacquisition\enrollment.cpp
onecoreuap\ds\security\rm\client\src\msipc\licenseacquisition\licacq.cpp
onecoreuap\ds\security\rm\client\src\msipc\licenseacquisition\prelicacq.cpp
onecoreuap\ds\security\rm\client\src\msipc\licenses\cclclicense.cpp
onecoreuap\ds\security\rm\client\src\msipc\licenses\ceullicense.cpp
onecoreuap\ds\security\rm\client\src\msipc\licenses\clicense.cpp
onecoreuap\ds\security\rm\client\src\msipc\licenses\cpllicense.cpp
onecoreuap\ds\security\rm\client\src\msipc\Licenses\CPrincipal.h
onecoreuap\ds\security\rm\client\src\msipc\licenses\cpublickey.cpp
onecoreuap\ds\security\rm\client\src\msipc\licenses\craclicense.cpp
onecoreuap\ds\security\rm\client\src\msipc\licenses\cxmlutils.cpp
onecoreuap\ds\security\rm\client\src\msipc\Licenses\IPLLicense.h
onecoreuap\ds\security\rm\client\src\msipc\licenses\licenseobjects.cpp
onecoreuap\ds\security\rm\client\src\msipc\licenses\verification.cpp
onecoreuap\ds\security\rm\client\src\msipc\msipcobjects\win7ippkey.cpp
onecoreuap\ds\security\rm\client\src\msipc\msipcobjects\win7ipplicense.cpp
onecoreuap\ds\security\rm\client\src\msipc\msipcobjects\win7ippstore.cpp
onecoreuap\ds\security\rm\client\src\msipc\msipcobjects\win7ippuser.cpp
onecoreuap\ds\security\rm\client\src\msipc\msipcobjects\win7templateissuermanager.cpp
onecoreuap\ds\security\rm\client\src\msipc\publishing\drmcpub.cpp
onecoreuap\ds\security\rm\client\src\msipc\publishing\drmcpubimp.cpp
onecoreuap\ds\security\rm\client\src\msipc\publishing\jsonissuancelicense.cpp
onecoreuap\ds\security\rm\client\src\msipc\publishing\microsofturlhelper.cpp
onecoreuap\ds\security\rm\client\src\msipc\register\registerplrestrequest.cpp
onecoreuap\ds\security\rm\client\src\msipc\servicelocation\globalservicelocator.cpp
onecoreuap\ds\security\rm\client\src\msipc\servicelocation\servicelocation.cpp
onecoreuap\ds\security\rm\client\src\msipc\servicelocation\servicelocatorhelpers.cpp
onecoreuap\ds\security\rm\client\src\msipc\store\drmstore.cpp
onecoreuap\ds\security\rm\client\src\msipc\templateacquisition\rmtemplateapi.cpp
onecoreuap\ds\security\rm\client\src\msipc\testhooks\testwin7ipplicense.cpp
onecoreuap\ds\security\rm\client\src\oswindows\core\ipcosactivedirectory.cpp
onecoreuap\ds\security\rm\client\src\oswindows\core\ipcosmisc.cpp
onecoreuap\ds\security\rm\client\src\oswindows\core\ipcossecuritygeneral.cpp
onecoreuap\ds\security\rm\client\src\oswindows\core\ipcossync.cpp
onecoreuap\ds\security\rm\client\src\oswindows\util\winutil.cpp
Online
Only Extranet Url is available.
Only Intranet Url is available.
OpenProcessToken
OpenSemaphoreW
OpenThreadToken
operation canceled
operation in progress
operation not permitted
operation not supported
operation would block
operation_in_progress
operation_not_supported
operation_would_block
OperationName
OrgIdIdcrlTokenException
original flags
OriginalFilename
originatingContextId
originatingContextMessage
originatingContextName
os::IpcOsCoCreateGuid(&guid)
os::IpcOsCryptCreateHash(hProv, uAlgID, NULL, 0, &hHash)
os::IpcOsCryptCreateHash(hProv, uType, NULL, 0, &hHash)
os::IpcOsCryptGenRandom(hProv, cFill, pbFill)
os::IpcOsCryptGetHashParam(hHash, HP_HASHSIZE, (BYTE*)pcbDigest, &dwDataLen, 0)
os::IpcOsCryptGetHashParam(hHash, HP_HASHVAL, pbDigest, (DWORD*)pcbDigest, 0)
os::IpcOsCryptHashData(hHash, pbContent, cbContent, 0)
os::IpcOsCryptSetHashParam(hHash, HP_HASHVAL, pbDigest, 0)
os::IpcOsFileTimeAsSystemTime( &ftEnd, &stEnd )
os::IpcOsFileTimeAsSystemTime( static_cast<const IPCOS_FILETIME *>(&(pTerm->ftStart)), &stStart )
os::IpcOsFileTimeToSystemTime(&ftAdded, &stAdded)
os::IpcOsGetCurrentUserId( &m_wszSID )
os::IpcOsGetCurrentUserId( ppwszSid )
os::IpcOsGetCurrentUserId(&wszUserID)
os::IpcOsGetErrorMessageFromStringTable(HRErrorToResourceString(errInfo.hrErrorCode), static_cast<WORD>(dwLanguageId), g_hMSIPPHandle, &wszErrStr)
os::IpcOsGetErrorMessageText( hrError, 0, g_hMSIPPHandle, const_cast<PCWSTR*>(&wszErrorMessage))
os::IpcOsGetErrorMessageText(GetErrorInfo().hrErrorCode, dwLanguageId, g_hMSIPPHandle, const_cast<LPCWSTR*>(&wszErrStr))
os::IpcOsGetFileVersionInfo(wstrAppFilePath.c_str(), dwHandle, SafeInt<DWORD>(vbVersionInfo.size()), &vbVersionInfo[0])
os::IpcOsGetHMACSHA256(m_pbSymmKey, m_cbSymmKey, const_cast<PBYTE>(&vbData[0]), SafeInt<int>(vbData.size()), &pbHash, &cbHash)
os::IpcOsGetMachineName(&wszMachineName)
os::IpcOsGetUserPerferredLocale(&dwLangId)
os::IpcOsInitializeCriticalSectionAndSpinCount(&m_cs, 0)
os::IpcOsRegCreateKeyEx( hRoot, pszSubkey, 0, 0, 0, KEY_READ | KEY_WRITE, const_cast<SECURITY_ATTRIBUTES*>(pSa), &m_hKey, &dwDisposition)
os::IpcOsRegDeleteKey(m_hKey, pszKey)
os::IpcOsRegDeleteValue(m_hKey, pszValue)
os::IpcOsRegSetValueEx( m_hKey, pszValueName, 0, REG_DWORD, (PBYTE)&nValue, sizeof (nValue))
os::IpcOsRegSetValueEx(m_hKey, pszValueName, 0, nType, (PBYTE)pszValue, cbValue)
os::IpcOsStringCbCopy(reinterpret_cast<LPWSTR>(pvStrings), pvEnd - pvStrings, wszId)
os::IpcOsStringCbCopy(wszDest, cbDest, wszSrc)
os::IpcOsStringCbLength((LPWSTR)pvStrings, STRSAFE_MAX_CCH * sizeof(WCHAR), &stDataSize)
os::IpcOsStringCbLength(wszId, STRSAFE_MAX_CCH * sizeof(WCHAR), &stDataSize)
os::IpcOsStringCbLength(wszLicense, IPC_OS_MAX_CCH, &cbTemp)
os::IpcOsStringCchCopy( wszCombinedLicense, IPC_OS_MAX_CCH, wsCombinedLicense.c_str())
os::IpcOsStringCchCopy(*pwszOut, *pcchRemaining, wszIn.c_str())
os::IpcOsStringCchCopy(*wszBuffer, cchCharsInBuffer, propIter->second.c_str())
os::IpcOsStringCchCopy(const_cast<LPWSTR>(pOut->wszID), cchID, pOwner->wszID)
os::IpcOsStringCchCopy(const_cast<PWSTR>(pOut->wszDescription), cchDescription, wszDescription)
os::IpcOsStringCchCopy(const_cast<PWSTR>(pOut->wszID), cchTemplateId, wszTemplateId)
os::IpcOsStringCchCopy(const_cast<PWSTR>(pOut->wszIssuerDisplayName), cchIssuerName, wszIssuerName)
os::IpcOsStringCchCopy(const_cast<PWSTR>(pOut->wszName), cchName, wszName)
os::IpcOsStringCchCopy(localStr, uSrcLength, wszSrc)
os::IpcOsStringCchCopy(pszOut, cchRemaining, pNameValueIn->wszName)
os::IpcOsStringCchCopy(pszOut, cchRemaining, pNameValueIn->wszValue)
os::IpcOsStringCchCopy(pwszOut, (cbInfo - cchUsed) / 2, wszEmailId.c_str())
os::IpcOsStringCchCopy(pwszOut, (cbInfo - cchUsed) / 2, wszId.c_str())
os::IpcOsStringCchCopy(pwszRedirectorUrl, *pcRedirectorUrlLength, wstrNewUrl.c_str())
os::IpcOsStringCchCopy(reinterpret_cast<wchar_t*>(pbOut), cchExtranetURL, pConnectionInfo->wszExtranetUrl)
os::IpcOsStringCchCopy(reinterpret_cast<wchar_t*>(pbOut), cchIntranetURL, pConnectionInfo->wszIntranetUrl)
os::IpcOsStringCchCopy(wsz, cch, wstrName.c_str())
os::IpcOsStringCchCopy(wsz, cch, wszValue)
os::IpcOsStringCchCopy(wszBuffer, cchCharsInBuffer, iter->userId.c_str())
os::IpcOsStringCchCopy(wszBuffer, cchCharsInBuffer, rightsIter->c_str())
os::IpcOsStringCchCopy(wszNameCopy, cchNameCopy, wszName)
os::IpcOsStringCchCopy(wszOut, cchContentId, wstrContentId.c_str())
os::IpcOsStringCchCopy(wszOut, cchErrorText, wstrErrorMsg.c_str())
os::IpcOsStringCchCopy(wszOut, cchErrorText, wszErrorText)
os::IpcOsStringCchCopy(wszOut, cchReferralInfoUrl, wstrReferralInfoUrl.c_str())
os::IpcOsStringCchCopy(wszOut, cchUserName, wszDisplayUserName)
os::IpcOsStringCchCopy(wszOut, trackingUrlsize, wszDocTrackingUrl)
os::IpcOsStringCchCopy(wszString, cchString, (*i).c_str())
os::IpcOsStringCchCopy(wszTemplate, cchTemplateBuffer, vpTemplates[i]->GetLicense().c_str())
os::IpcOsStringCchCopyN(wszTempName, cchLocalName, wszLocalName.c_str(), (cchLocalName - 1))
os::IpcOsStringCchLength(&wszLangNames[cOffset], IPC_OS_MAX_CCH, &stDataSize)
os::IpcOsStringCchLength(m_wszInternalChainStart, IPC_OS_MAX_CCH, &cchInternalChainStart)
os::IpcOsStringCchLength(pNameValue->wszName, IPC_OS_MAX_CCH, 0)
os::IpcOsStringCchLength(pNameValue->wszValue, IPC_OS_MAX_CCH, 0)
os::IpcOsStringCchLength(pNameValueIn->wszName, IPC_OS_MAX_CCH, &cch)
os::IpcOsStringCchLength(pNameValueIn->wszValue, IPC_OS_MAX_CCH, &cch)
os::IpcOsStringCchLength(pszKey, CCH_MAX_REG_KEY_NAME, 0)
os::IpcOsStringCchLength(pszSubkey, IPC_OS_MAX_CCH, 0)
os::IpcOsStringCchLength(pszValue, CCH_MAX_REG_VALUE_NAME, 0)
os::IpcOsStringCchLength(pTemplateInfo->wszDescription, IPC_OS_MAX_CCH, 0)
os::IpcOsStringCchLength(pTemplateInfo->wszName, IPC_OS_MAX_CCH, 0)
os::IpcOsStringCchLength(rgwszRights[i], IPC_OS_MAX_CCH, 0)
os::IpcOsStringCchLength(wszDescription, IPC_OS_MAX_CCH, &cchDescription)
os::IpcOsStringCchLength(wszEnding, IPC_OS_MAX_CCH, &cchEnding)
os::IpcOsStringCchLength(wszEUL, IPC_OS_MAX_CCH, &cbEUL)
os::IpcOsStringCchLength(wszID, IPC_OS_MAX_CCH, 0)
os::IpcOsStringCchLength(wszIssuerName, IPC_OS_MAX_CCH, &cchIssuerName)
os::IpcOsStringCchLength(wszName, IPC_OS_MAX_CCH, &cchName)
os::IpcOsStringCchLength(wszName, IPC_OS_MAX_CCH, &cchNameCopy)
os::IpcOsStringCchLength(wszRequestedRights, IPC_OS_MAX_CCH, 0)
os::IpcOsStringCchLength(wszSrc, IPC_OS_MAX_CCH, &lenSrc)
os::IpcOsStringCchLength(wszSrc, IPC_OS_MAX_CCH, &uSrcLength)
os::IpcOsStringCchLength(wszString, IPC_OS_MAX_CCH, &cchString)
os::IpcOsStringCchLength(wszTemplate, IPC_OS_MAX_CCH, &cchLength)
os::IpcOsStringCchLength(wszTemplateId, IPC_OS_MAX_CCH, &cchTemplateId)
os::IpcOsStringCchLength(wszUserID, IPC_OS_MAX_CCH, &cchUserID)
os::IpcOsStringCchPrintf( &wszJwtToken[0], cchJwtToken, g_wstrJwtTokenFmt.c_str(), stTimeInSecSince1970, endTimeInSecSince1970, m_wstrAppPrincipalId.c_str(), m_wstrBposTenantId.c_str(), wstrMachineName.c_str())
os::IpcOsStringCchPrintf( s_wszSystemInformationString, ARRAYSIZE(s_wszSystemInformationString), wszSystemInfoFormat, GetOsVersion().c_str(), GetArchitecture(true).c_str(), CUdmgrldr().GetClientHierarchy(), appName.c_str(), appVersion.c_str(), os::IpcOsGetCurrentProcessId(), GetLogableStdStringA(stNow).c_str())
os::IpcOsStringCchPrintf( wszDocTrackingUrl, ARRAYSIZE(wszDocTrackingUrl), format, g_wszTrackingPortalBaseUrl, wstrContentId.c_str(), pOwner->wszID)
os::IpcOsStringCchPrintf( wszSerializedCLC.get(), cchCLC, g_wszCLC, wszCLCGuid.c_str(), racLicense.GetIssuerId().c_str(), wstrIssuerNameEscaped.c_str(), wszModulusSize, wstrModulus.c_str(), wstrLicensingIntranetUrlEscaped.c_str(), wstrLicensingExtranetUrlEscaped.c_str(), wstrIssuedPrincipalTypeEscaped.c_str(), wstrIssuedPrincipalIdEscaped.c_str(), wstrEmailIdEscaped.c_str(), wszModulusSize, wstrModulus.c_str(), wszModulusSize, wstrModulus.c_str())
os::IpcOsStringCchPrintf( wszUserAgentString, MAX_USER_AGENT_STRING, wszUserAgentStringFormat, os::IpcOsGetBuildVersion(), wstrAppName.c_str(), wstrAppVersion.c_str(), wstrAppArch.c_str(), os::IpcOsGetCurrentProcessId(), os::IpcOsGetOsName(), wstrOsVersion.c_str(), wstrOsArch.c_str())
os::IpcOsStringCchPrintf(wszCurrTime,MAX_PATH,L"%04d-%02d-%02dT%02d:%02d",currTime.wYear,currTime.wMonth,currTime.wDay,currTime.wHour,currTime.wMinute)
os::IpcOsStringCchPrintf(wszModulusSize, ARRAYSIZE(wszModulusSize), L"%d", uModulusSize)
os::IpcOsStringCchPrintf(wszVersion, MAX_VERSION_LENGTH, L"%d.%d.%d", dwMajor, dwMinor, dwBuild)
os::IpcOsStringCchPrintf(wszVersion, MAX_VERSION_LENGTH, L"%d.%d.%d.%d", dwMajor, dwMinor, dwBuild, dwRevision)
os::IpcOsSystemTimeToFileTime(&(validityTimeRange.GetFrom()), &ftFrom)
os::IpcOsSystemTimeToFileTime(&(validityTimeRange.GetTo()), &ftExpiry)
os::IpcOsSystemTimeToFileTime(&st, &ft)
os::IpcOsSystemTimeToFileTime(&stEnd, &ftEnd)
os::IpcOsSystemTimeToFileTime(&stFrom, &ftFrom)
os::IpcOsSystemTimeToFileTime(&stIssuedTime, &m_ftIssuedTime)
os::IpcOsSystemTimeToFileTime(&stlastUpdatedTime,&ftLastTry)
os::IpcOsSystemTimeToFileTime(&stNow, &ftNow)
os::IpcOsSystemTimeToFileTime(&stStart, &ftStart)
os::IpcOsSystemTimeToFileTime(&stTo, &ftTo)
os::IpcOsVerQueryValue(&vbVersionInfo[0], wszSubBlock, (LPVOID*) &pFileInfo, (PUINT)&nBufLen)
OS-Exclusion
Our cache indicates that %ws server is not resolvable
Our cache indicates that this url does not use ADFS.
Our cache indicates that this url is resolvable and therefore does not use ADFS.
Out of memory
OutputDebugStringA
OutputDebugStringW
ouwjtXf9F
OWNER
owner dead
Owner EUL didn't work
Owner Key is not available in PL.
OwnerId
pAppId->cbSize >= sizeof(IPC_AAD_APPLICATION_ID)
pAppId->wszClientId
pAppId->wszRedirectUri
PARAMETER
Parent element is empty when querying member : %ws
ParseIssuanceLicenseTemplate ...
ParseLicenseOp
ParseSignedIssuanceLicense ...
parsing new license
Parsing owner ...
PartA_PrivTags
Passport
PathIsURLW
pAuthTypeCertification = CDRMSoapRequest::GetElement(pAuthType, g_wszSI_AuthTypeCertification, 0)
pAuthTypeLicensing = CDRMSoapRequest::GetElement(pAuthType, g_wszSI_AuthTypeLicensing, 0)
pAuthTypeVDir = CDRMSoapRequest::GetElement(pAuthTypeVRoot, g_wszSI_Vdir, 0)
pbCiphertext
pbContentKey
pbHash != nullptr
pbHash == nullptr
pbPlaintext
pcbBuffer
pcbContentKey
pcbHash
pcbPreamble
pcbResult
pcCertContext: 
pcchOut
pcConnInfo
pcCredential->pcCertContext
PCIPC_CONNECTION_INFO
PCIPC_CREDENTIAL
PCIPC_PROMPT_CTX
PCIPC_TEMPLATE_ISSUER
PCIPC_USER
PCIPCP_TOKEN
pCipherInfo
pCLCLicense.get()
pCLCLicense->GetCryptoVersion().dwRSAKeySize == racLicense.GetCryptoVersion().dwRSAKeySize
pCNameValue->GetName()
pCNameValue->GetValue()
pcOAuth2: 
pConnectionInfo
pConnectionInfo->wszExtranetUrl != 0 || pConnectionInfo->wszIntranetUrl != 0
pConsumer
pContext
pContext->pcCredential
pContext->pcCredential->dwType == IPC_CREDENTIAL_TYPE_OAUTH2
pCreator
pcRedirectorUrlLength
pCryptoVersion
pcSymmetricKey
pcSymmetricKey: 
pcSymmetricKey->wszAppPrincipalId
pcSymmetricKey->wszBase64Key
pcSymmetricKey->wszBposTenantId
pcToken
pcToken->cbTokenData == sizeof(PCIPCP_WINDOWS_CREDENTIALS)
pcToken->pcvTokenData
pcUser
pcUserInfo
pcvLicense
pcvTokenData: 
pcWinCreds->pwszUserName
pdwBuild
pdwIdType
pdwMajor
pdwMinor
pdwNameType
pdwRevision
permission denied
permission_denied
Persistent
PersonaCertificates
PersonaCerts
pEULLicense
pfAccessGranted
pFactory != 0 && pFactory->IsValid()
pFilePath
pGetLanguagesFunc != nullptr
phDecryptor
phIpcAuthToken
phKey
phLicense
phMetadata
phProv
phUser
pIdRegValues
pItem
Pj;Xjj
pKey->AccessCheck(IPC_GENERIC_ALL)
pKey->IsValid()
pLicense->IsValid()
pLicenseInfo
pLicenseInfo->pvLicense
pLicenseInfo->pvLicense->pvBuffer
pLicenseMetadata->IsValid()
pLoggingConfig->cbSize >= sizeof(IPC_LOGGING_CONFIGURATION)
pNameValue
pNameValue->wszName
pNameValue->wszValue
pNameValueList
pNetworkListManager.CoCreateInstance(CLSID_NetworkListManager)
pNetworkListManager->get_IsConnected(&bIsConnected)
pNetworkListManager->get_IsConnectedToInternet(&bIsConnectedToInternet)
pnValue
POLICY
POLICYLIST
PolicyType
pOwner
pParentUserCertResponseEle = CDRMSoapRequest::GetElement(pResponseEle, g_wszPUB_UserCertificateResponse, 0)
ppcRight
ppcTemplateIssuers
ppcTi
ppcTil
ppcUser
ppcUsers
ppdwLcid != nullptr
ppErrorInfoInstance
ppIdRegValues
ppLoggerInstance
PPPPP
PPPPQQPP
PPQPPPPP
ppUseLicenses
ppUserInfo
ppvInfo
ppvKeyInfo
ppvLicense
ppvLicenseInfo
ppvProperty
ppvTemplate
ppvUseLicense
PPVWP
ppwszDest
ppwszErrorMessageText
ppwszUTF16
ppwszValue
PQQQQQQQ
PQQQS
PQQQSVW
PQQQW
PQQSS
PQQVS
PQRh@
pRACLicense.get()
pRacPubKeyBlob->InitRSAPublic(pCRACPubData->m_cExponentIssuedPrincipal, SafeInt<UINT>(BYTES_TO_BITS(pCRACPubData->m_cModulusIssuedPrincipal)), pCRACPubData->m_pbModulusIssuedPrincipal)
PRECONDITIONLIST
pRegistry
pResponseEle = drmSoap.GetElement(g_wszPUB_GetClientLicensorAndUserCertificatesResponse, 0)
pResultsEle = drmSoap.GetElement(g_wszSI_Results, 0)
PRINCIPAL
print
PRINT
PrivateKey is missing
ProActive EUL renewal from server
ProactiveEULRenewalDisabled
ProductName
ProductVersion
protocol error
protocol not supported
protocol_not_supported
ProxyResolved: AutoDetecting
ProxyResolved: Autoproxy with Autoconfig Url
ProxyResolved: Using Static Proxy setting
ProxyResolver already Initialized
ProxyResolver: WinHttpGetIEProxyConfigForCurrentUser Failed : %d
-ProxyResolver::GetProxyCallBack
ProxyResolver::GetProxyCallBack Failed with hr=0x%x
ProxyResolver::GetProxyCallBack ignoring the status.
ProxyResolver::GetProxyCallBack quitting dwResult=%d
ProxyResolver::GetProxyCallBack Success
-ProxyResolver::GetProxyForAutoSettings hr=0x%x
-ProxyResolver::GetProxyForUrlEx hr=0x%x
-ProxyResolver::ProxyResolver
ProxyResolver::ResolveProxy
ProxyResolver::ResolveProxy hr=0x%x
ProxyResolver::ResolveProxy WinHttp proxy configuration: AutoDetect=%ws, AutoConfigUrl=%ws, Proxy=%ws, Bypass=%ws
-ProxyResolver::SetNextProxySetting hr=0x%x
-ProxyResolver::SetNextProxySettingEx hr=0x%x
PRQhx
PRRRQR
PRVA<
PRVSh
pServerFeatureInfo = CDRMSoapRequest::GetElement(pSIRServerFeatureInfo, g_wszSI_ServerFeatureInfo, 0)
pServiceLocation = CDRMSoapRequest::GetElementWithAttributeValue( pServiceLocations, g_wszSI_ServiceLocation, g_wszSI_ServiceLocationType, wszServiceName)
pSIRServerFeatureInfo = CDRMSoapRequest::GetElementWithAttributeValue( pResultsEle, g_wszSI_ServerInfoRequest, g_wszSI_ServerInfoRequestType, g_wszSI_ServerFeatureInfo)
pSIRVersionInfo = CDRMSoapRequest::GetElementWithAttributeValue( pResultsEle, g_wszSI_ServerInfoRequest, g_wszSI_ServerInfoRequestType, g_wszSI_VersionInfo)
pspLicense
PSShP
PSSVS
pstrUTF16
ptDestroyHash
pTemplateInfo
pTemplateInfo->lcid != 0
pTemplateInfo->pvTemplate
pTemplateInfo->pvTemplate->pvBuffer
pTemplateIssuer
pToken
pu,f9V
Public Key doesn't have required members.
Public key with template didn't match after renewing the user.
public-exponent
PUBLICKEY
PublishingService
Publishing-URL
puiCorrRACIndex
punct
pUser
pUser->IsValid()
pUserCertResponseEle = CDRMSoapRequest::GetElement(pParentUserCertResponseEle, g_wszPUB_UserCertificateResponse, 0)
pUserIdentity
pUserIdentity->GetCLCLicense().get()
pUserIdentity->GetRACLicense().get()
pUserList
pUserList->cUsers > 0
pvBuffer
pvBuffer->cbBuffer != 0
pvBuffer->pvBuffer
pvCreateInfo
pVersionInfo = CDRMSoapRequest::GetElement(pSIRVersionInfo, g_wszSI_VersionInfo, 0)
PVh|^
pvInfo
PVj"Q
pvLicense
pvLicenseInfo
pvLicenseWithMetadata
pvpLicenses
PVQVVVQ
pvReserved
pvSerializedLicense
pvUseLicense
PVVVQQ
PWh|^
PWh<[
PWj j
PWSSQ
pwszArrayLocal = new (std::nothrow) PWSTR[cArray]
pwszDomain
pwszLocalRACFileNames = new (std::nothrow) PWSTR[*puCount]
pwszLocalRACList = new (std::nothrow) PWSTR[*puCount]
pwszMachineName
pwszNextItemStart
pwszNextValue
pwszOrgUrl
pwszStringArray = new PWSTR[uCount]
pwszUnMaskedFileNames = new (std::nothrow) PWSTR[cFileNames]
PWWh4
PWWWWj
QPShp
QQPQQQ
QQQQj
QQQQVPQh
QQQVP
QQSV3
QQSVW
QQVWh4
QQWWW
QSSSQ
QSSWP
QSVW3
QSVWh
QSVWj
QueryException
QueryPerformanceCounter
QueryPerformanceFrequency
QueryString
Quota
QVQVP
QVWh`
QVWh|
r,PSW
r;msipc
r-+>+
R0\0l0
raB3G
RAC cannot bind to EUL user identity (%ws) didn't match eul (%ws)
RAC cannot bind to EUL, content Id didn't match (%ws) didn't match eul (%ws)
RAC cannot bind to EULIssuedPrincipal public key didn't match with RAC.
RACObjectId
Rac's Public key doesn't match with PL creators
RACType
RaiseException
RaiseFailFastException
RANGETIME
read only file system
ReaderWriterLock::LockRead: Error in %lu ResetEvent.
ReaderWriterLock::LockWrite: Error in %lu ResetEvent.
ReaderWriterLock::UnlockRead: Error in %lu SetEvent.
ReaderWriterLock::UnlockWrite: Error in %lu SetEvent.
ReadFile
realloc
realm
Referal info URL: %ws
Referral-Info
Reg key not defined (%ws)
Reg key not defined(%ws)
Reg value not defined (%ws)
REG_DWORD == nType && sizeof (DWORD) == cbSize
RegCloseKey
RegCreateKeyExW
RegDeleteKeyW
RegDeleteValueW
RegEnumKeyW
RegEnumValueW
regex_error
regex_error(error_backref): The expression contained an invalid back reference.
regex_error(error_badbrace): The expression contained an invalid range in a { expression }.
regex_error(error_badrepeat): One of *?+{ was not preceded by a valid regular expression.
regex_error(error_brace): The expression contained mismatched { and }.
regex_error(error_brack): The expression contained mismatched [ and ].
regex_error(error_collate): The expression contained an invalid collating element name.
regex_error(error_complexity): The complexity of an attempted match against a regular expression exceeded a pre-set level.
regex_error(error_ctype): The expression contained an invalid character class name.
regex_error(error_escape): The expression contained an invalid escaped character, or a trailing escape.
regex_error(error_paren): The expression contained mismatched ( and ).
regex_error(error_parse)
regex_error(error_range): The expression contained an invalid character range, such as [b-a] in most encodings.
regex_error(error_space): There was insufficient memory to convert the expression into a finite state machine.
regex_error(error_stack): There was insufficient memory to determine whether the regular expression could match the specified character sequence.
regex_error(error_syntax)
RegisterPL
REGISTRY - Attempted searching for RegKey with %ws           opening a reg key using HKEY_CURRENT_USER_LOCAL_SETTING failed.            Falling back to HKEY_CURRENT_USER.
REGISTRY - searched with %ws
REGISTRY: %hs - %hs [%hs\%ws\%ws] %ws.
REGISTRY: %hs [%hs\%ws\%ws] %ws
REGISTRY: %hs [%hs\%ws\%ws] %ws=%ws
REGISTRY: %hs [%hs\%ws\%ws] %ws=dword:%u
RegistryBasedLocator
RegOpenKeyExW
RegQueryValueExW
RegSetValueExW
ReinterpretKeyHandle
ReleaseMutex
ReleaseSemaphore
ReleaseSRWLockExclusive
Renew
Renew expired users and try TUD.
RenewIdentityFailure
Renewing user %ws from %ws
Renewing user Failed hr = 0x%x
RenewUserOp
ReplaceWithMicrosoftRMSOURL: Replacing extranet Url %ws with Microsoft RMSO Url: %ws
RepublishOnly
requestParameters
requestParams
RequestParams
requests
Required element has empty value : %ws
Required element not found : %ws
RequiresBrowser
RequiresRedirect
Reset the defaults as the new identity was acquired because of a license redirection.
ResetEvent
resource
resource deadlock would occur
resource unavailable try again
RESTORE
Result
result out of range
Results
retHr
Retrieve RAC & CLC from the store...
RETURN
Returned from deleting templates. hr = 0x%x
ReturnHr
Returning IPCERROR_NEEDS_ONLINE, store is stale
RevokedBy
RevokedMessage
RevokedTime
rgwszLocalValues = new (std::nothrow) PWSTR[uResponseCount]
rgwszRights
RichV
RIGHT
RIGHTSGROUP
RIGHTSLIST
RMS Online
rmsocorrelationid: 
rmsoscenarioid: 
RMSOServerVerification
rootDomainNamingContext
RPQh 
RQPh 
RQPh(
RQPSh
RRPQVSRh
RRPSQVRh
RRRRQ
RRVPQWRj
RSA PKCS#1-V1.5
RSA1u
RSA2u$
RSDST
RtlDisownModuleHeapAllocation
RtlDllShutdownInProgress
RtlTrace error: hr = 0x%08x
RVVVPW
s ;s$to
s$PVW
s\ax}?
S_OK != hrError
s+Php
s=jd[
s=jd^
SafeEnumException
SafeIntException
SameAsOSVersion
sbhh]
ScenarioId
Scenario-Id: %ws
SDKVersion
sealed-key
sealed-key-v2
secur32.dll
SecureEnvHelper::InitializeEnablingPrincipal(pUserIdentity)
SerializationException
SerializationTreeElementNameException
SerializationTreeException
SerializationTreeNameConflictException
Serialize is not supported for this CLC
Serializing the license
server
Server identity not defined in registry (%ws)
Server key rollover detected. Renew the Identity.
Server returned a valid EUL for one of the RACs
ServerFeatureInfo
ServerForRegisterPL
ServerInfo
ServerInfo Not found for a previously bootstrapped server: hr = 0x%x
ServerInfoInvalidUrlException
ServerInfoRequest
ServerInfoUnSupportedAuthTypeException
Server-Licensor-Certificate
ServerPublicKey
ServerService
ServerType
serviceBindingInformation
ServiceDiscovery
ServiceDiscoveryChecked
ServiceDiscoveryForUser
ServiceDiscoveryOp
serviceDiscoveryRequest
ServiceDiscoveryService
ServiceDiscoveryUrl
ServiceLocation
ServiceLocationRequest
ServiceLocationResponse
ServiceLocations
ServiceLocatorService
ServiceNames
SetAuthPreferences()
SetEndOfFile
SetEndOfFile(m_hFile)
SetEvent
SetFileAttributesW
SetFilePointer
SetLastError
setlocale
Setting extranet licensing redirection %ws to %ws
Setting intranet licensing redirection %ws to %ws
Setting the default identity information for the server.
Setting WinHttp proxy: direct=%ws, bypass=%ws, scheme=%d, proxy=%ws, port=%d
Setting WinHttp proxy: type=%d, proxy=%ws, bypass=%ws
SetUnhandledExceptionFilter
sha256
SHA256
SHGetFolderPathW
SIGNATURE
SignatureEncoding
Signer Id : %ws, Name = %ws
Signer info cannot be set.
silent flag
sizeof(IPC_PROMPT_CTX) == pContext->cbSize
SizeofResource
Skipping Machine activation because of Offline mode
Skipping the "%ws" user as it's an Azure RMS user.
Skipping the "%ws" user as it's an ILS user and PassportCertification is disabled.
Skipping the "%ws" user as it's federated.
SkipServerInfo
SLCPublicKey
Sleep
SleepConditionVariableSRW
soap:Body
soap:Envelope
soap:Fault
soap:Header
SOAPAction: "http://microsoft.com/DRM/%s/%s"
soapenc:arrayType
Software\Classes\Local Settings\
Software\Microsoft\MSOIdentityCRL
Software\Microsoft\Windows NT\CurrentVersion
SOFTWARE\Microsoft\WinMSIPC
Software\Microsoft\WINMSIPC
SOFTWARE\Microsoft\WINMSIPC
Software\Microsoft\WINMSIPC
SOFTWARE\Microsoft\WINMSIPC
SOFTWARE\Microsoft\WINMSIPC\Federation
SOFTWARE\Microsoft\WINMSIPC\HostNameRedirection
SOFTWARE\Microsoft\WINMSIPC\LicensingRedirection\
SOFTWARE\Microsoft\WINMSIPC\Server
SOFTWARE\Microsoft\WINMSIPC\ServiceLocation\CloudPublishing
SOFTWARE\Microsoft\WINMSIPC\ServiceLocation\EnterpriseCertification
SOFTWARE\Microsoft\WINMSIPC\ServiceLocation\EnterprisePublishing
SOFTWARE\Microsoft\WINMSIPC\Servicelocation\LicensingRedirection\
SOFTWARE\Microsoft\WINMSIPC\ServiceLocation\RMSOnlineGlobalCertification
SOFTWARE\Microsoft\WINMSIPC\ServiceLocation\TrustTestRoot
Software\Microsoft\WINMSIPC\TrustedServers
space
SPh(^
spLicAcqObj->ItemCount()
spLicAcqObj->ItemCount() == vpEULs.size()
spLicense->IsValid()
spLicObj.get()
sprintf_s
SQPVW
-sSO\
SSPQSh
SSSSh
SSSSPQSh
SSSSS
SSSSSj
SSSSSS
SSSSSSQj
SSSSSSQS
SSSSSV
StartTime
state not recoverable
Status
StatusCode
stoi argument out of range
StopApi
STORE: Add license %ws
STORE: Delete license - %ws
STORE: Deleting license - %ws
STORE: Found license - %ws
STORE: Query license - %ws
StoreOp
storing cached license in key
stoul argument out of range
strchr
strcspn
stream timeout
string
String
string
string too long
StringCbLengthA(szMessage, STRSAFE_MAX_CCH, &cbSize)
StringCchCopy( s_wszStoreNameBuffer, _countof(s_wszStoreNameBuffer), wszStoreName)
StringCchLength(wszStoreName, STRSAFE_MAX_CCH, &cchStoreName)
StringCchLengthW(JSON_OBJECT_FORMAT_STRING, STRSAFE_MAX_CCH, &lengthOfObject)
StringCchLengthW(wszLic, STRSAFE_MAX_CCH, &licLen)
StringCchPrintf(&path[0], path.size(), wszPathFormat, basePath.c_str(), iSlot, wszSuffix)
StringCchPrintfExW(&wstrJsonObjectString[0], lengthOfObject + 1, NULL, &unusedCharactersCount, STRSAFE_NULL_ON_FAILURE, JSON_OBJECT_FORMAT_STRING, wstrJsonPL.c_str(), wstrJsonContentName.c_str(), wstrJsonSendRegistrationMail.c_str())
StringCchPrintfW( &dateTimeString[0], dateTimeString.size(), wszDateTimeFormat, st.wYear, st.wMonth, st.wDay, st.wHour, st.wMinute)
StringCchPrintfW( &descriptor[0], descriptor.size(), wszFormat, userId.c_str())
StringFileInfo
StringFromGUID2
strncmp
strnlen
strrchr
strstr
STv/N
SubType
succeeded
success
Success
Suggesting identity renew with %.2f % remaining.
SVjLYhh]
SVWh@
SVWh<
SVWj [
SVWj@
SVWPQ
swprintf_s
Symmetric Key token is detected, let's see if we have identity information cached for this token...
Symmetric Key Token provided. Caching identity information for the token in registry.
symmetric-key-size
SymmetricKeyTokenIncorrectSizeException
SymmetricKeyTokenNotUsingWinHttpException
symmetric-key-type
system
System.ArgumentException
System.UnauthorizedAccessException
SystemTimeToFileTime
sYWhp
t#9x0t
T$@kL$0
t$<WP
t$Ff;
T$LPh
t$pVQ
t$VhP
t%f;E
t%j0Yf;
t&f;E
t(;8w$
t(f;E
t(PhP^
t*SQQ
t,f;E
t.f;E
t.hDa
t/QPh
t:h y
t]hh]
t_j?Yf;
t+PhP^
t+ShP^
t1h|U
t2j;Zf;
t4j#Z
t7VShh+
t9f93t4
t-9J8r
t'9P(t"
t9Vhd
tAA;M
taf97t\9u
tagchk
tbPhX
tC7Ddx
tC97u?j
tdhh]
tE9>t
tehh]
Template
Template description: %ws
Template id: %ws
Template is from RMSO: %s
Template is from template: %s
Template name: %ws
TemplateDistributionService
TemplateId
TemplateInfo::GenerateIpcProtTil - Not enough memory allocated.
TemplateInfoNotEnoughMemoryException
TemplateIssuer::GenerateIpcProtTil - Not enough memory allocated.
TemplateIssuerIncorrectBufferSizeException
TemplateIssuerNotEnoughMemoryException
Templates in UnManagedStore %ws the same public key as the user.
Templates\
TemplatesCount
TemplateStore is stale - can't find last update time hr=0x%x
TemplateStore is stale - last update time is not valid
TemplateStore is stale - last update time is past current time
TemplateStore is stale - templates are not up-to-date
TemplateStore is stale - templates version is not current.
TemplatesVersion
TemplateUpdateFrequency
TemplateUpdateFrequencyInSeconds
Temporary
TerminateProcess
text file busy
TextException
TextReadException
TextWriteException
tFhh]
tFj!Zf9W
tghh]
The CLC issuer public key doesn't match with the template issuer key. The key has been rolled.
The connection string associated with a license cannot be set.
The default server is not set and is not configured. Setting this as a default server.
The defaults are already set. 
The flag specifying docTrackingUrl cannot be set.
The flag specifying whether the license is created based on an official template cannot be set.
The flag specifying whether the license is created by RMSO cannot be set.
The prefered encryption package is: %ud 
The URL "%ws" does not point to a trusted server
The user needs to be renewed before we can get the templates. Marking appropriately in the registry.
There has not been a last try (or it is in the incorrect format).
thhh]
This identity is not allowed for Publishing
This is an on-prem server. Use the original url.
This is Azure RMS and we don't have a token, try using adal and get a token from a social idp
This is Azure RMS and we don't have a token, try using the Sign-in Assistant.
This is Azure RMS and we have a token.
This is the default identity
This server/tenant is for consumption only. Not setting it as a default.
thj<_W
threadId
Thrown error
tIhha
timed out
timed_out
tJf93tE
tJf97tE
tJhh]
tK97t(
tkhh]
TlsAlloc
TlsGetValue
TlsSetValue
TMPV2-
tn9=D
tNh44
tnSj0Zj
Token Type is not supported : %ws
token_type=acs
TokenProvided
too many files open
too many files open in system
too many links
too many symbolic link levels
too_many_files_open
toupper
towlower
tPf97tK9u
tPht[
Trace
TRANSFER
Translation
TreeException
Tried to acquire EUL using existing identities hr = 0x%x
Tried to create an Exception with a non-failing error code - hr=0x%x. Converting it to E_FAIL.
TrustIntEKU
TrustTestRoot()
TrustTestSSLRoot
Trying Owner EUL
Trying to check if DNS redirection exist.
Trying to generate Owner EUL from PL locally
Trying to get the EUL from the server
Trying to get the EUL from the store
Trying TUD hr = 0x%x
Trying TUD or Social IDP with user %ws
TShH\
tshh]
tTWVh
TUD using identities
tUj/V
tV9^0t$
TypeConversionsException
u QSP
u!hxb
u!j>Q
U$r>P
u$WSQ
u&f98t
u&hl~
u)Wh\
U:[]S,I
u:9F(u
u?j/Xf9Dz
u+QhP^
u+Qhxa
u>j;Xjc
U1(\Q
u18^tu,
u3h$"
u3h(F
u3hpW
u4F;3
u6h F
u6h$K
u6h(F
u6h,I
u6htU
u6hxW
u6j5Xf;
u6j8Xf;
uBSh,
UDRMPublishingSignRL_%lu%lu
UDStdPlg Enabling Principal
uEf9Q
uFsTrace error: hr = 0x%08x
uhhtU
uIhP^
Uint16
Uint32
u-j-Yf9LF
uKh$+
unf9V
uNh`V
UnhandledError
UnhandledExceptionFilter
unhP@
UNINSTALL
Unknown
unknown
Unknown C++ error
Unknown COM error
unknown error
Unknown error 0x%0lX
Unknown key size
Unknown key type: %s
Unknown preferred encryption package.
unknown type for dwNotificationPreference
unknown type for dwNotificationType
unknown type for dwType
UNKNOWN_REGISTRY_ROOT
UnManagedTemplates\
uNPPV
Unrecognized internal user ID
Unrecognized user type
unsigned 
unsigned_
Unspecified
Unsupported user type
UNTIL
uPj5Xf;
upper
uQf9Q
uQSj0h
UrlBasedLocator
UrlGetPartW
User is not allowed to publish as CLC request is rejected by the Server. Generating a Temporary CLC.
UserCert Issuer public key didn't match with original CLC public key
UserCertificateResponse
UserIdentityNotFoundForTemplateIssuerException
UserInfo.Principal
UserLicense for this identity is not available to serialize in IPC_SL_FLAG_ISSUANCE_LICENSE_V2 format
UserProvided
Using AES128 - CBC4K Encryption package
Using AES128 - CBC512NOPAD Encryption package
Using AES128 - ECB Encryption package
Using AES256 - CBC4K Encryption package
Using AES256 - CBC512NOPAD Encryption package
using cached parsed license
Using existing enabling principal
Using the extended WinHttp APIs for the resolving proxy.
usj-Yf9LV
usrts
utf-16
utf-8
uuuuuuuubtnufruuuuuuuuuuuuuuuuuu
u-Whx`
uXf9V
v(hPa
v`hP^
v+Phd
v0j&Xf
V1 Serever doesn't have Templates
Validation failed '(value >= 0) && (value <= MaxValue)'
Validation failed '0 != dynamic_cast<VN*>(m_pCurrent)'
Validation failed '0 != m_pCurrent'
Validation failed 'configuration.Root().first == element->Index()'
Validation failed 'data.empty()'
Validation failed 'document'
Validation failed 'element'
Validation failed 'elements.size() > 1'
Validation failed 'false'
Validation failed 'FALSE'
Validation failed 'FindFirst(target, OUT result)'
Validation failed 'handle'
Validation failed 'IsElement(node)'
Validation failed 'IsNamedValue()'
Validation failed 'item'
Validation failed 'name.length() > 0'
Validation failed 'name.length() > 1'
Validation failed 'name.size() > 0'
Validation failed 'newRoot'
Validation failed 'node'
Validation failed 'pHandle'
Validation failed 'root'
Validation failed 'SerializerGetTypeName(m_object, wstrName)'
Validation failed 'SerializerGetTypeName(T(), wstrName)'
Validation failed 'tree'
Validation failed 'tree->Index() == element->Name().c_str()'
Validation failed 'VARIANT_FALSE != success'
VALIDITYTIME
VALUE
Value
VALUE
Value
Value element has empty value : %ws
value too large
VarFileInfo
vBodies.size() == vLicenses.size()
vClcObjs.size() > 0
vDPTypes.size() == m_vwstrDistributionPointNames.size()
vDPTypes.size() == m_vwstrDistributionPointXMLs.size()
vDPTypes.size() == vDPAddresses.size()
vector<bool> too long
vector<T> too long
Verified
VERIFY
VerifyCertChainDuration
VerifyServerIsTrusted Looks like URLs point to an on-prem server. Verify that the given URLs are trusted.
VerifyServerIsTrusted No check needed. AllowOnlyTrustedServers reg key is not set or this is RMSO (we always trust RMSO).
VerifySignatureDuration
VerQueryValueW
version
Version
Version component is invalid : %ws
VersionData
VersionInfo
VERSIONSPAN
versionspan
VIEWRIGHTSDATA
VirtualProtect
VirtualQuery
vpCLCLicenses.size() == vpRACLicenses.size()
vpCLCs.size() == vpRACs.size()
VPh O
VPWSh
VQj0Y
VQPWV
vRacObjs.size() > 0
VS_VERSION_INFO
Vt\pt
VVSQVh
VVVVPQVh
VVVVQQ
VVVVVV
VWh8d
VWhh]
VWhL/
VWj03
vwstrParameterNames.size() == vwstrParameterValues.size()
vwstrPrincipalIds.size() == vwstrPrincipalIdTypes.size()
vwstrPrincipalIds.size() == vwstrPrincipalNames.size()
vwstrPrincipalIds.size() == vwstrPrincipalObjectIds.size()
vwstrPrincipalIds.size() == vwstrPrincipalPuids.size()
vwstrPrincipalIds.size() == vwstrPrincipalTids.size()
VWVPj
w!+t$
W;q4s&
WaitForSingleObject
WaitForSingleObjectEx
WakeAllConditionVariable
Warning
wBPSj
wcschr
wcscpy_s
wcsncmp
wcsncpy_s
wcsnlen
wcsrchr
wcsstr
wcstok_s
wcstol
wcstoul
We have the ADFS alternate url cached for this url:
wEHK~%
WEVT_TEMPLATE
WideCharToMultiByte
wilActivity
WilError_03
Will replace external distribution point Url in license
wilResult
win:Error
win:Informational
win:Verbose
win:Warning
Windows
WindowsAuthProvider
WindowsPortUtil::GetFileNameFromModulePath(wcszModule, wcszFileName, &wszPath)
WindowsPortUtil::GetModuleDirectory(wszModuleName, OUT wstrPath)
WindowsPortUtil::GetSecurityProcessorFileName
WindowsUsernameAndPasswordTokenException
WINHTTP.dll
winhttp.dll
WinHttpAddRequestHeaders
WinHttpCloseHandle
WinHttpConnect
WinHttpCrackUrl
WinHttpCreateProxyResolver
WinHttpFreeProxyResult
WinHttpGetIEProxyConfigForCurrentUser
WinHttpGetProxyForUrl
WinHttpGetProxyForUrlEx
WinHttpGetProxyResult
WinHttpOpen
WinHttpOpenRequest
WinHttpQueryAuthSchemes
WinHttpQueryDataAvailable
WinHttpQueryHeaders
WinHttpQueryOption
WinHttpReadData
WinHttpReceiveResponse
WinHttpSendRequest
WinHttpSetCredentials
WinHttpSetOption
WinHttpSetStatusCallback
WININET.dll
winipcsecproc.dll
winipcsecproc_isv.dll
winipcsecproc_ssp.dll
winipcsecproc_ssp_isv.dll
winipcsecproc_ssp_test.dll
winipcsecproc_test.dll
winmsipc
winmsipc.dll
winmsipc.pdb
wiPWj
Wj;Xje
WLDAP32.dll
wlhh]
WPhHR
WPQhh
WQhPo
WQRPV
wresult
Write
WriteFile
WriteFile(m_hFile, szMessage, static_cast<DWORD>(cbSize), &dwWritten, NULL)
wrong protocol type
wrong_protocol_type
WRPQh`
wstrEncoding.empty() || wstrEncoding == xa::wszEncodingBase64
wstring::npos != i
wstring::npos != nDash
wstring::npos != nLastSlash
WSVVh
wszAuthToken
wszCertificationUrl from AD is NULL.
wszCertificationUrl from registry is NULL.
wszCertUrl
wszCLC
wszCLCIssuerUrl
wszContentIdOut
wszContentName
wszData is not a valid email or url
wszDescriptionOut
wszDisplayName:    
wszEmail
wszEmailId
wszErrStr != nullptr
wszErrStr.is_valid()
wszEUL
wszExtranetUrl
wszExtranetUrl: 
wszFileName
wszHeader
wszHostName
wszHostNameName
wszID:     
wszIdType
wszInput
wszIntranetUrl
wszIntranetUrl && wszExtranetUrl
wszIntranetUrl: 
wszKeyword
wszLic
wszLicense
wszMsipcApi
wszName
wszName = CDRMSoapRequest::GetAttributeValue(pAuthType, g_wszSI_Name)
wszName = CDRMSoapRequest::GetName(pQueryString)
wszNameOut
wszNameType
wszOut
wszPL
wszRAC
wszRBValue = CDRMSoapRequest::GetValue(pAuthTypeRequiresBrowser)
wszRequestedRights
wszRight
wszRRValue = CDRMSoapRequest::GetValue(pAuthTypeRequiresRedirect)
wszScenarioId
wszServerHostName
wszServerURLExt && IppUtil::IsServerURLTrusted(wszServerURLExt) || wszServerURLInt && IppUtil::IsServerURLTrusted(wszServerURLInt)
wszString = new WCHAR[static_cast<size_t>(cchString)]
wszTemplate
wszTemplateId
wszTemplateID
wszUrl
wszUrl = CDRMSoapRequest::GetAttributeValue(pServiceLocation, g_wszSI_SLTypeUrl)
wszUser
wszUserId
wszUserIdType
wszUserSid
wszValue = CDRMSoapRequest::GetValue(pQueryString)
wszVdir = CDRMSoapRequest::GetValue(pAuthTypeVDir)
wszVersion = CDRMSoapRequest::GetAttributeValue(pVersionInfo, g_wszSI_Version)
WVQPj
WVVVVQ
wWhh]
WWWPQQ
WWWWWW
x\SjU
X0e0s0
X509TokenIncorrectSizeException
X509TokenNotUsingWinHttpException
X5AHx
x5QQV
xa::wszEncodingBase64 == wstrEncoding
xAhh]
xDhh]
xdigit
xe::wszRSAAlgorithm == issuerKey.GetAlgorithm() && xe::wszPKCS1_15Algorithm == signature.GetSignatureAlgorithm() && signature.GetSignatureBitsSize() == issuerKey.GetModulusBitsSize() && signature.GetSignatureBitsSize() >= childVersion.dwRSAKeySize
xe::wszRSAAlgorithm == pIssuedPrincipalKey->GetAlgorithm() && signature.GetSignatureBitsSize() >= pIssuedPrincipalKey->GetModulusBitsSize()
xg^Jp5|
xMC;]
XmlElement
xmlns
XmlProtocolException
xsd:string
xsi:nil
xsu,hW
XYTOX
xyu,hW
y"Vh@e
y$ShH{
y%Ph8
y%Php
y%PhXH
y%WhP^
y(Ph(P
y(Ph`
y(Ph4J
y(PhhJ
y(PhP
y(PhP^
y(PhX
y(ShP^
y(VhP^
y,VhP^
y.PhH
y.VhP^
y/Php
y/PhX
y:Ph8
Y;F(u
Y__^[
y+Ph 
y+Ph f
y+Ph o
y+Ph(
y+Ph,
y+Ph,z
y+Ph@
y+Ph@n
y+Ph@r
y+Ph@s
y+Ph@t
y+Ph@x
y+Ph`
y+Ph`s
y+Ph|
y+Ph0
y+Ph0|
y+Ph0w
y+Ph0Y
y+Ph4q
y+Ph8
y+Ph8m
y+Phd
y+Phh
y+PhH
y+Phh
y+PhH
y+Phh
y+PhHh
y+Phhz
y+PhP
y+Php
y+PhP
y+Php
y+PhP
y+PhP^
y+Phpo
y+PhX
y+Phx
y+PhX
y+Phx
y+PhX
y+Phx
y+PhX
y+PhXp
y+Qh0r
y+Qh8t
y+QhX
y+QhXw
y+ShP^
y+ShXg
y+Vh,z
y+Vh`
y+Vhhn
y+VhP^
y+Vhx
y1Php
y1Vh 
y8Vh$
y8Vh@
y8Vhh
y9Ph u
y9Ph`
y9Whp'
yDVhP
yFPhH
yLPhP
yOPhh
yOVhp
y'Ph0
y'Ph8
yPPhX
yQPhX
YWhP^
YY_^[
YYShP^
YYt*h
YYVhP^
yZPhX.
Z~$|7
zdq^`
Zf;TA
