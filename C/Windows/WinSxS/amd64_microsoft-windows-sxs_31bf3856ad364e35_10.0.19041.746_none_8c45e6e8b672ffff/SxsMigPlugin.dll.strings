           workingDir: %s
     assemblyFullPath: %s
  assemblyPathPattern: %s
 A_A^_
 A_A^A\
 A_A^A\_^
 A_A^A]A\_
 H3E H3E
 http://www.microsoft.com/windows0
 Microsoft Corporation. All rights reserved.
 Operating System
 Windows
!<%t-
!assemblyDir || !absoluteManifestFilename || !pAssemblyCache
!l$ 3
!manifestDir || !sxsVersion
!pIdentity
!This program cannot be run in DOS mode.
!workingDir
"Microsoft Window
$`2X`F
$Microsoft Ireland Operations Limited1
$Microsoft Ireland Operations Limited1&0$
%APPID%
%FriendlyName%
%hs!%p: 
%hs(%d) tid(%x) %08X %ws
%hs(%u)\%hs!%p: 
%Microsoft Windows Production PCA 2011
%Microsoft Windows Production PCA 20110
%MODULE%
%MODULEGUID%
%MODULETYPE%
%s assembly is inbox
%s\Error-SxsAsm%u
%s\SxsAsm%u
%SystemDrive%
%u assemblies processed: Success=%u, Failed/Skipped=%u
%windir%
%WINDIR%\servicing\0.0.0.1\
(*m_pfnGetIdentityAuthority)(&m_authority)
(*m_pfnSetIsolationIMalloc)(m_malloc.get())
(*m_pfnWcpInitialize)(&m_wcpCookie)
(*pfnCreateAssemblyCache)(&pAssemblyCache, 0)
(_^][
(caller: %p) 
(dwFlags != 0) || !ManifestPath
(lastError != ERROR_PATH_NOT_FOUND) && (lastError != ERROR_FILE_NOT_FOUND)
)Microsoft Root Certificate Authority 20100
***   Source File: %s, line %ld
*** Assertion failed: %s
*expanded
,JoagB8kWvxASWonD/wiLMAFN0NJcmFwTYN0XDviU1so=0Z
,Module
.?AVbad_alloc@std@@
.?AVexception@@
.00cfg
.CRT$XCA
.CRT$XCL
.CRT$XCU
.CRT$XCZ
.CRT$XIA
.CRT$XIAA
.CRT$XIZ
.data
.data$brc
.data$r$brc
.edata
.gehcont
.gfids
.giats
.idata$2
.idata$3
.idata$4
.idata$5
.idata$6
.manifest
.pdata
.rdata
.rdata$brc
.rdata$zzzdbg
.rsrc$01
.rsrc$02
.text
.text$di
.text$mn
.text$mn$00
.text$x
.text$yd
.xdata
.xdata$x
/&eT#
::CoGetMalloc(1, &m_malloc)
::CoGetMalloc(1, &srpIMalloc)
??0exception@@QEAA@AEBQEBDH@Z
??0exception@@QEAA@AEBV0@@Z
??1exception@@UEAA@XZ
??1type_info@@UEAA@XZ
?{uQH
?=u"L
?what@exception@@UEBAPEBDXZ
@.data
@.reloc
@.rsrc
@8y(t
@A^_^
@A_A^_
@SUVWATAVAWH
@SUVWAUAVAW
@SUVWH
@UATAUAVAWH
@USVWATAUAVAW
@USVWATAUAVAWH
@USVWATAVAWH
@USVWAUAVAWH
@USWATAUAVAWH
@USWAVH
@UVWATAUAVAWH
@UVWH
@UWATAVAWH
[ VWAVH
[%hs(%hs)]
[%hs]
\$ E3
\$ UH
\$ UVWATAUAVAWH
\$ UVWAVAWH
\$ UVWH
\$ VWAVH
\$0L+
\$PE3
\*.manifest
\cbscore.dll
\Implemented Categories
\manifests
\ssshim.dll
\SxsAsm*
\system32\ssshim.dll
\syswow64\ssshim.dll
\wcp.dll
\winsxs
__C_specific_handler
__CxxFrameHandler3
__dllonexit
_amsg_exit
_callnewh
_CxxThrowException
_errno
_initterm
_lock
_onexit
_purecall
_resetstkoflw
_unlock
_vsnwprintf
_wcsicmp
_XcptFilter
`.rdata
`A_A^A]A\_^]
{>Eu$
{d2caca93-9eef-4c24-9790-61cdefd255d4}
{d6bfda37-8a70-4cab-a153-556eb377a4c5}
|$ UH
|D.\u
|hK,_
<%u>H
<W.u8H
=L9o<
>http://www.microsoft.com/pki/certs/MicRooCerAut_2010-06-23.crt0
>http://www.microsoft.com/pki/certs/MicTimStaPCA_2010-07-01.crt0
040904B0
0A^_^
0A_A^_
0A_A^_^]
0A_A^A\_^
0A_A^A]A\_
1(0&0
1/0-0
10.0.19041.746
10.0.19041.746 (WinBuild.160101.0800)
100701213655Z
111019184142Z
1http://www.microsoft.com/PKI/docs/CPS/default.htm0@
200304183039Z
201015172822Z
20210108200704.607Z0
20210109004021Z
20210110004021Z0w0=
210303183039Z0p1
220112172822Z0
229879+4583620
250701214655Z0|1
261019185142Z0
31bf3856ad364e35
6595b64144ccf1df
8D$0t
8D$0taH
8T$@H
8T$Au/D
8'uhH
9 w%H
9 w&H
9A98u6A9x
9y8v*H
A^A]_^]
A_A^_^]
A_A^A\_]
A_A^A\_^
A_A^A\_^[]
A_A^A]_]
A_A^A]_^[]
A_A^A]_^][
A_A^A]A\]
A_A^A]A\_
A_A^A]A\_[]
A_A^A]A\_^[]
A_A^A]A\_^]
absoluteAssemblySubDir
absoluteManifestFilename
ADVAPI32.dll
advapi32.dll
Analyze Transaction failed with 0x%x
API-MS-Win-Core-LocalRegistry-L1-1-0.dll
APPID
AppID
Apply Transaction failed with 0x%x
Apply_Offline
Apply_Offline()
Apply_Online()
ApplySuccess
Assemblies/Manifests: Found=%u/%u Installed=%u
Assembly %s backed up to %s
Assembly %s is not considered installed, skipping
Assembly scan found a directory (%s)
ATAVAWH
ATL$__a
ATL$__m
ATL$__z
b03f5f7f11d50a3a
b77a5c561934e089
B8<0u
Backing up assembly %s
BackupAssembly(%s) done
BackupAssembly: %s
BackupAssemblyIfNecessary(manifestAbsoluteFilename, manifestFileName, fileNameBufferSize, wfd, backupIndex, backup)
backupIndex          => %u
bad allocation
base\win32\fusion\migration\offline_sxsinstallw.cpp
base\win32\fusion\migration\Offline_SxsInstallW.h
base\win32\fusion\tis\sxsutil.cpp
bstrMessage
CallContext:[%hs] 
calloc
cbscore.dll
CbsCoreFinalize
CbsCoreInitialize
CbsFindServicingStackDirectory(wcpPath, ARRAYSIZE(wcpPath), nullptr, nullptr)
CbsGetSsBinaryPathFromTargetImage(FALSE , offlineWindir.get(), L"wcp.dll", wil::out_param(wcpPath))
CharNextA
Chttp://www.microsoft.com/pkiops/crl/MicWinProPCA2011_2011-10-19.crl0a
CloseHandle
CLSID
CLSID\
CoCreateGuid
CoCreateInstance
CoGetMalloc
CompanyName
Component Categories
COMPONENTS
ConstructPartialMsgVA
CopyFileW
CopyFileW(catalogPath, backupDestPath, FALSE)
CopyFileW(ManifestPath, backupDestPath, FALSE)
CopyFileW(sourceFilePath, backupDestPath, FALSE)
Copying catalog %s -> %s
Copying manifest %s -> %s
Copying payload %s
Copying payload file %s -> %s
CoTaskMemAlloc
CoTaskMemFree
CoTaskMemRealloc
Could not backup assembly %s
Could not get %hs: 0x%x
Could not get CreateAssemblyCache: 0x%x
Could not load %s: 0x%x
Could not load sxs.dll: 0x%x
Could not load wcp.dll: 0x%x
CreateAssemblyCache
Created working directory %s
CreateDirectoryW
CreateDirectoryW(backupDir, nullptr)
CreateMutexExW
CreateNewOfflineStore
CreateNewPseudoWindows
CreateNewPseudoWindowsEx
CreateNewWindows
CreateSemaphoreExW
Creating backup directory %s
CSxsMigration Object
CurrentIP
cursor == nullptr
CurVer
CWcpDll::Initialize
D!t$$H
D$ E2
D$ E3
D$ fD
D$ L;
D$(H;
D$@E3
D$`H+
D$0E3
D$0H;
D$HE3
D$xE3
D8,2u
D8{8t
D8|$@H
D8|$Pt
D8|$Pt5H
D8l$@t+L
D9D$0A
D9D$0t'
D9m(u
DbgPrintEx
DebugBreak
Delete
DeleteCriticalSection
DeleteFileW
Detected long running migration, will delay until online phase
Discover
Discovered assembly %u: %s
DismountRegistryHives
DllCanUnloadNow
DllGetClassObject
DllMain
DllRegisterServer
DllUnregisterServer
E(=csm
E(H9E tQH
E,;E(r
E8=csm
EH=csm
Eh=csm
Ehttp://crl.microsoft.com/pki/crl/products/MicRooCerAut_2010-06-23.crl0Z
Ehttp://crl.microsoft.com/pki/crl/products/MicTimStaPCA_2010-07-01.crl0Z
Ehttp://www.microsoft.com/pkiops/certs/MicWinProPCA2011_2011-10-19.crt0
EnterCriticalSection
en-US
Error finding payload %s: 0x%X
Ex=csm
EX=csm
Exception
ExpandEnvironmentStringsW
F,;F(r
F\Required Categories
f9,^u
f9,Au
f9l$0
Failed to create working directory %s: 0x%x
Failed to rename backup assembly: 0x%x
FailFast
fB9\E
fD9 t
fD9"t
fD9$Bu
fD9$Nu
fD9,Au
fD9,Bu
fD9<Au
fD9<ru
fD93t
fD94Au
fD9l$`t
fE9$Gu
fF9,pu
FileDescription
FileType
FileVersion
FindClose
FindFirstFileW
FindNextFileW
FindResourceExA
ForceRemove
FormatMessageW
Found %s
Found assembly manifest to install: %s
Found assembly to install: %s
Found catalog %s @ %s
FreeAndZeroCSI_BROKEN_COMPONENT
FreeAndZeroCSI_REPAIRED_COMPONENT
FreeLibrary
FriendlyName
Gather
GatherSuccess
GetAppIdAuthority
GetCurrentProcess
GetCurrentProcessId
GetCurrentThreadId
GetEnvironmentVariable(L"%SystemDrive%", value)
GetEnvironmentVariable(L"%windir%", value)
GetErrorMode
GetFileAttributesW
GetFunction(m_wcp.get(), "GetIdentityAuthority", m_pfnGetIdentityAuthority)
GetFunction(m_wcp.get(), "ParseManifest", m_pfnParseManifest)
GetFunction(m_wcp.get(), "SetIsolationIMalloc", m_pfnSetIsolationIMalloc)
GetFunction(m_wcp.get(), "WcpInitialize", m_pfnWcpInitialize)
GetFunction(m_wcp.get(), "WcpShutdown", m_pfnWcpShutdown)
GetIdentityAuthority
GetLastError
GetModuleFileNameA
GetModuleFileNameW
GetModuleHandleA
GetModuleHandleExW
GetModuleHandleW
GetOfflineHKLM(L"COMPONENTS", wil::out_param(subkey))
GetOfflineHKLM(L"SOFTWARE", wil::out_param(subkey))
GetOfflineHKLM(L"SYSTEM", wil::out_param(subkey))
GetOfflineStatus(isOffline)
GetOfflineSystemDriveBstr(&offlineSystemDrive)
GetOfflineWindirBstr(&offlineWindir)
GetProcAddress
GetProcessHeap
GetSxsVersion(manifestAndSxsCatalogDir, &sxsVersion)
GetSystemDriveBstr(&systemDrive)
GetSystemStore
GetSystemTimeAsFileTime
GetTempPathW
GetThreadLocale
GetTickCount
GetTickCount64
GetWindirBstr(&windir)
H!|$@H
H!D$0M
H0I!v(A
H9|$0t
H9|$0u
H9C(u
H9S(u
H9t$P
Hardware
Hbg&~
HcD$ H
HeapAlloc
HeapDestroy
HeapFree
HeapReAlloc
HeapSize
HKEY_CLASSES_ROOT
HKEY_CURRENT_CONFIG
HKEY_CURRENT_USER
HKEY_DYN_DATA
HKEY_LOCAL_MACHINE
HKEY_PERFORMANCE_DATA
HKEY_USERS
HKLM\
hr != HRESULT_FROM_WIN32(ERROR_NO_MORE_FILES)
hrCreateDirectory
HRESULT_FROM_WIN32(rc)
hrLastError
HZo6m|
I0G1-0+
InitializeCriticalSection
InitializeCSI_BROKEN_COMPONENT
InitializeCSI_REPAIRED_COMPONENT
InprocServer32
Install assembly %s failed with 0x%x
Install assembly %s failed with 0x%x during Offline; this is a fatal condition
Install assembly %s requires a reboot
Install assembly %s succeeded with 0x%x (ERROR_SUCCESS_REBOOT_REQUIRED). This is informational only (would have been fatal if not performed offline)
InstallAssemblies(false, nullptr, nullptr, nullptr, nullptr, pAssemblyCache)
InstallAssemblies(true, pIdentity, pAppIdAuthority, pIMalloc, pStore, nullptr)
InstallAssemblies_Offline(pIdentity.get(), pAppIdAuthority.get(), m_malloc.get(), store2.get())
InstallAssemblies_Online(pAssemblyCache.get())
Installed assembly %s
Installing assemblies (%s)
Interface
InternalName
Invalid parameter passed to C runtime function.
IsAssemblyInstalled(pIdentity.get(), backup)
IsDBCSLeadByte
IsDebuggerPresent
IsThirdPartyAssembly(pIdentity.get(), isThirdPartyAssembly)
KERNEL32.dll
kernelbase.dll
L$ H;
L$ SUVW
L$ SUVWH
L$ SVWH
l$ VWATAVAWH
L$(E3
L$(H3
l$@D9D$4t
L$@H3
L$`H!t$xM
L$`H3
L$0E3
L$0H3
L$8E3
L$8H3
L$8x,H
L$h!l$hE3
l$HE3
L$HH3
l$PE3
l$XE3
L$XfA
L$XL+
L9{@u
L9{0t#H
L9i(t
L9o(u
L9O@t
L9v t
L9v(t
L9v@t
L9v`t
L9v0t
L9v8t
L9vht
L9vHt
L9vPt
L9vpt
L9vxt
L9vXt
LcA<E3
Lct$$H
LeaveCriticalSection
Legal_Policy_Statement
LegalCopyright
lL7Ki"0
LoadLibraryExA
LoadLibraryExW
LoadResource
Local\SM0:%d:%d:%hs
LocalServer32
LockResource
LOG_IF_FAILED(%S) failed with 0x%x
LogHr
lstrcmpiA
m_authority->GenerateDefinitionKey(IIDENTITYAUTHORITY_GENERATE_DEFINITION_KEY_FLAG_IGNORE_VERSION, pIdentity, &versionLessKeyform)
m_context->get_WorkingDir(&workingDir)
m_context->raw_ExpandEnvironmentVariables(bstr.get(), expanded)
m_context->raw_GetOfflineFileLocation(systemDrive.get(), value)
m_context->raw_GetOfflineFileLocation(windir.get(), value)
m_context->raw_GetOfflineRegistryLocation(onlinePath, &offlinePath)
m_context->raw_GetOfflineStatus(&isOfflineExecution)
m_context->raw_LongRunningPlugin()
m_context->raw_ResetPluginTimer()
m_context->raw_SendLogMessage(static_cast<UINT>(severity), bstrMessage.get())
m_pfnParseManifest(manifestAbsoluteFilename, nullptr, __uuidof(IDefinitionIdentity), reinterpret_cast<IUnknown**>(&pIdentity))
M0K0I
malloc
manifestFilename     => %s
manifestPattern
memcmp
memcpy
memcpy_s
memset
Microsoft
Microsoft Corporation
Microsoft Corporation1
Microsoft Corporation1&0$
Microsoft Corporation1.0,
Microsoft Corporation1-0+
Microsoft Corporation1200
Microsoft Time-Stamp PCA 2010
Microsoft Time-Stamp PCA 20100
Microsoft Time-Stamp Service
Microsoft Time-Stamp Service0
Microsoft Windows0
Module
Module_Raw
MODULEGUID
MODULETYPE
MoveFileW
Msg:[%ws] 
msvcrt.dll
MultiByteToWideChar
N0L0J
No catalog found for %S
No payload found @ %s
No SxS directory found
nonsxs
NoRemove
ntdll.dll
O0M0K
Offline
Offline_InstallAssembly(absoluteAssemblyDir, absoluteManifestFilename, pIMalloc, pStore, pIdentity, pAppIdAuthority)
Offline_SxsStoreTraceInitialize()
oK0D$"<
ole32.dll
OLEAUT32.dll
onecore\base\wcp\wcpstub\cwcpdll.cpp
onecore\internal\sdk\inc\wil\opensource\wil\resource.h
onecore\internal\sdk\inc\wil\opensource\wil\win32_helpers.h
Online
onlinePath.Append(HIVEPREFIX_HKLM)
onlinePath.Append(onlineRegistryPath)
onlinePath.Length() != HIVEPREFIX_HKLM_LENGTH + wcslen(onlineRegistryPath)
OpenExistingOfflineStore
OpenSemaphoreW
OriginalFilename
OutputDebugStringA
OutputDebugStringW
p1%E;
pA^_^
PA_A^_^]
PA_A^A\_^][
PA_A^A]A\_^]
Parameters.Set_pszHostRegistryMachineComponentsPath(subkey.get())
Parameters.Set_pszHostRegistryMachineSoftwarePath(subkey.get())
Parameters.Set_pszHostRegistryMachineSystemPath(subkey.get())
Parameters.Set_pszHostSystemDrivePath(offlineSystemDrive.get())
Parameters.Set_pszHostWindowsDirectoryPath(offlineWindir.get())
ParseManifest
ParseManifestEx
pAssemblyCache->InstallAssembly(0, absoluteManifestFilename, nullptr)
Pend Transaction failed with 0x%x
pIdentity->GetAttribute(nullptr, L"PublicKeyToken", &publicKeyToken)
pIdentity->GetAttribute(nullptr, L"Version", &version)
pIdentity->GetAttribute(nullptr, L"VersionScope", &versionScope)
PostApply
PostGather
PreApply
PreGather
ProductName
ProductVersion
ProgID
Programmable
Pu<Hc
PublicKeyToken
PupHc
QueryPerformanceCounter
R!s4Z
r~akow
RaiseException
RaiseFailFastException
realloc
Redmond1
RegCloseKey
RegCreateKeyExA
RegDeleteKeyA
RegDeleteKeyExA
RegDeleteValueA
RegEnumKeyExA
RegEnumValueW
REGISTRY
RegOpenKeyExA
RegOpenKeyExW
RegOpenKeyIfExists(HKEY_LOCAL_MACHINE, WINSXS_WINNERS_INFO_REGKEY, 0, KEY_READ | KEY_WOW64_64KEY, hkeyWinners)
RegOpenKeyIfExists(hkeyWinnerAssembly.get(), versionBuffer, 0, KEY_READ | KEY_WOW64_64KEY, hkeyWinnerAssemblyFV)
RegOpenKeyIfExists(hkeyWinners.get(), versionLessKeyform, 0, KEY_READ | KEY_WOW64_64KEY, hkeyWinnerAssembly)
RegQueryInfoKeyA
RegQueryValueExW
RegQueryValueIfExists(hkeyWinnerAssemblyFV.get(), versionBuffer, nullptr, &type, installMap, &installMapSize, found)
RegSetValueExA
ReleaseMutex
ReleaseSemaphore
RemoveDirectoryW
Renamed backup assembly %s -> %s
Renaming backup assembly %s -> %s
Required Pend Transaction failed with 0x%x
RETURN_HR(%S) failed with 0x%x
RETURN_HR_IF(%S) failed with 0x%x
RETURN_IF_FAILED(%S) failed with 0x%x
RETURN_IF_NULL_ALLOC(%S) failed with 0x%x
RETURN_IF_WIN32_BOOL_FALSE(%S) failed with 0x%x
ReturnHr
RPCRT4.dll
RpcStringFreeW
RtlCaptureContext
RtlDisownModuleHeapAllocation
RtlDllShutdownInProgress
RtlFreeHeap
RtlLookupFunctionEntry
RtlRaiseStatus
RtlVirtualUnwind
RtlWcpDllDebugEntrypoint
Scanning for assemblies %s
SECURITY
SetErrorMode
SetIsolationIMalloc
SetLastError
SetThreadLocale
SetUnhandledExceptionFilter
SHELL32.dll
SHGetFileInfoA
SizeofResource
Sleep
Software
SOFTWARE
SOFTWARE\Microsoft\Windows\CurrentVersion\Component Based Servicing\Version
Software\Microsoft\Windows\CurrentVersion\SideBySide\Winners
SssBindServicingStack
SssGetServicingStackFilePath
SssGetServicingStackFilePathLength
SssPreloadDownlevelDependencies
SssReleaseServicingStack
strcat_s
strcpy_s
StringCchCatW(absoluteAssemblySubDir.get(), absoluteAssemblySubDirLength, wfd.cFileName)
StringCchCatW(absoluteManifestFilename.get(), absoluteManifestFilenameLength, L"\\")
StringCchCatW(absoluteManifestFilename.get(), absoluteManifestFilenameLength, manifestWFD.cFileName)
StringCchCatW(assemblyDir, MAX_PATH, cursor)
StringCchCatW(assemblyDir, MAX_PATH, L"\\*")
StringCchCatW(assemblyDir, MAX_PATH, L"\\winsxs")
StringCchCatW(assemblyFullPath, MAX_PATH, L"\\")
StringCchCatW(assemblyPathPattern, MAX_PATH, L"\\SxsAsm*")
StringCchCatW(backupDestPath, MAX_PATH, L"\\")
StringCchCatW(candidateCatalogPath, MAX_PATH, L"\\*")
StringCchCatW(candidateCatalogPath, MAX_PATH, SXS_CATALOG_FILE_EXTENSION)
StringCchCatW(candidateManifestPath, MAX_PATH, L"\\*")
StringCchCatW(candidateManifestPath, MAX_PATH, SXS_MANIFEST_FILE_EXTENSION)
StringCchCatW(manifestAbsoluteFilename, MAX_PATH, L"\\")
StringCchCatW(manifestAndSxsCatalogDir, MAX_PATH, L"\\manifests")
StringCchCatW(manifestAndSxsCatalogDir, MAX_PATH, L"\\winsxs")
StringCchCatW(manifestPattern.get(), manifestPatternLength, L"\\*.manifest")
StringCchCatW(sourceFilePath, MAX_PATH, L"\\")
StringCchCatW(wcpPath, MAX_PATH, L"\\wcp.dll")
StringCchCopyW(absoluteAssemblySubDir.get(), absoluteAssemblySubDirLength, assemblyFullPath)
StringCchCopyW(absoluteManifestFilename.get(), absoluteManifestFilenameLength, absoluteAssemblySubDir.get())
StringCchCopyW(assemblyDir, MAX_PATH, windir.get())
StringCchCopyW(assemblyFullPath, MAX_PATH, workingDir.get())
StringCchCopyW(assemblyPathPattern, MAX_PATH, workingDir.get())
StringCchCopyW(backupDestPath, MAX_PATH, backupDir)
StringCchCopyW(backupPath, backupPathSize, backupDir)
StringCchCopyW(backupPath, backupPathSize, L"")
StringCchCopyW(candidateCatalogPath, MAX_PATH, manifestAndSxsCatalogDir)
StringCchCopyW(candidateManifestPath, MAX_PATH, manifestDir)
StringCchCopyW(catalogPath, MAX_PATH, ManifestPath)
StringCchCopyW(cursor, fileNameBufferSize - (cursor - manifestFilename), SXS_MANIFEST_FILE_EXTENSION)
StringCchCopyW(cursor, MAX_PATH-(cursor-catalogPath), SXS_CATALOG_FILE_EXTENSION)
StringCchCopyW(DestFileName, DestFileNameBufferSize, cursor)
StringCchCopyW(DestFileName, DestFileNameBufferSize, wfd.cFileName)
StringCchCopyW(manifestAbsoluteFilename, MAX_PATH, manifestAndSxsCatalogDir)
StringCchCopyW(manifestAndSxsCatalogDir, MAX_PATH, windir.get())
StringCchCopyW(manifestFilename, fileNameBufferSize, wfdCatalog.cFileName)
StringCchCopyW(manifestPattern.get(), manifestPatternLength, absoluteAssemblySubDir.get())
StringCchCopyW(path.get(), pathLength, offlinePath.get())
StringCchCopyW(SourceFileName, SourceFileNameBufferSize, wfd.cFileName)
StringCchCopyW(sourceFilePath, MAX_PATH, assemblyDir)
StringCchCopyW(versionBuffer, ARRAYSIZE(versionBuffer), version)
StringCchCopyW(workingPath, workingPathSize, workingDir.get())
StringCchPrintfW(backupDir, ARRAYSIZE(backupDir), L"%s\\SxsAsm%u", workingDir.get(), Index)
StringCchPrintfW(targetDir, ARRAYSIZE(targetDir), L"%s\\Error-SxsAsm%u", workingDir, index)
StringFileInfo
StringFromCLSID
StringFromGUID2
strncpy_s
Submitting install transaction
Submitting stage transaction with %d operations
Submitting uninstall transaction
Sxs Migration Plugin
sxs.dll
SxsMigPlugin.dll
SxsMigPlugin.MigrationPlugin
SxsMigPlugin.MigrationPlugin.1
SxsMigPlugin.pdb
SxsMigPlugin: Finished %s
SxsMigPlugin: Offline: %s
SxsMigPlugin: Running offline on downlevel OS; failures are critical and will abort migration.
SxsMigPlugin: Running on WinPE after an offline failure; taking no action and signaling retry to run the plugin online.
SxsMigPlugin: Running online following an offline failure; failures beyond this point are considered non-fatal.
SxsMigPlugin: Starting %s
SxsStoreWdsLog
SYSTEM
SYSTEM\CurrentControlSet\Control\MiniNt
SYSTEM\CurrentControlSet\Services\TrustedInstaller\Version
t"D8=6
t$ UWATAVAWH
t$ UWAVH
t$ WAVAWH
t$ WH
T$$D!t$ H
T$(E3
t$(E3
T$@E3
t$8E3
T$8H!\$8
T$8H!t$8H
t$fD92t
t$HE8.u
t$hH9
T$pE3
t$PE3
t+H9^
t2HcV
t3HcV
tBfE9
td@8=
TerminateProcess
Thales TSS ESN:3BD4-4B80-69C31%0#
ThreadingModel
tLD9r
TlP0X
Transact2 failed with 0x%x
Transact2 sensing pending content failed with 0x%x
Translation
TypeLib
u HcA<H
U0S0Q
UATAUAVAWH
Unable to get procedure CreateNewOfflineStore
Unable to get procedure CreateNewPseudoWindows
Unable to get procedure CreateNewPseudoWindowsEx
Unable to get procedure CreateNewWindows
Unable to get procedure DismountRegistryHives
Unable to get procedure FreeAndZeroCSI_BROKEN_COMPONENT
Unable to get procedure FreeAndZeroCSI_REPAIRED_COMPONENT
Unable to get procedure GetAppIdAuthority
Unable to get procedure GetIdentityAuthority
Unable to get procedure GetSystemStore
Unable to get procedure InitializeCSI_BROKEN_COMPONENT
Unable to get procedure InitializeCSI_REPAIRED_COMPONENT
Unable to get procedure OpenExistingOfflineStore
Unable to get procedure ParseManifest
Unable to get procedure ParseManifestEx
Unable to get procedure RtlWcpDllDebugEntrypoint
Unable to get procedure SetIsolationIMalloc
Unable to get procedure WcpSetHelperCallback
UnhandledExceptionFilter
UnregisterClassA
USER32.dll
UuidCreate
UuidToStringW
UVWATAUAVAWH
UVWAUAVH
UVWAVAWH
UWATAVAWH
UWAUAVAWH
VarFileInfo
Version
VersionIndependentProgID
VersionScope
VS_VERSION_INFO
VWATAVAWH
VWAVH
WaitForSingleObject
WaitForSingleObjectEx
Washington1
WATAUAVAWH
WAVAWH
wcp.dll
wcpDll.GetAppIdAuthority(&pAppIdAuthority)
wcpDll.GetIdentityAuthority(&pIdentity)
wcpDll.Initialize(wcpPath.get())
wcpDll.OpenExistingOfflineStore( OPEN_EXISTING_OFFLINE_STORE_FLAGS_USE_KTM | OPEN_EXISTING_OFFLINE_STORE_FLAGS_MINIMAL_SYSTEM, &Parameters, __uuidof(IStore2), reinterpret_cast<IUnknown**>(&store2), nullptr)
WcpInitialize
WcpSetHelperCallback
WcpShutdown
wcschr
wcscmp
wcsncpy_s
wcsrchr
wcstoul
wdscore.dll
WdsSetupLogMessageA
wfdCatalog.cFileName => %s
WideCharToMultiByte
WilError_03
workingDir
x ATAVAWH
x ATH
x AVH
x UATAUAVAWH
X,GC,R
xA^_[]
xhE;~
Y@H9;u+L
Yz}jL/
z.9Wv
