           workingDir: %s
     assemblyFullPath: %s
  assemblyPathPattern: %s
 http://www.microsoft.com/windows0
 Microsoft Corporation. All rights reserved.
 Microsoft Operations Puerto Rico1&0$
 Operating System
 Windows
!\$ W
!]_0t
!assemblyDir || !absoluteManifestFilename || !pAssemblyCache
!manifestDir || !sxsVersion
!pIdentity
!This program cannot be run in DOS mode.
!TkjE
!workingDir
"Microsoft Window
#HMDuV
$Microsoft Ireland Operations Limited1
$V<%u
%APPID%
%FriendlyName%
%hs!%p: 
%hs(%d) tid(%x) %08X %ws
%hs(%u)\%hs!%p: 
%Microsoft Windows Production PCA 2011
%Microsoft Windows Production PCA 20110
%MODULE%
%MODULEGUID%
%MODULETYPE%
%s assembly is inbox
%s\Error-SxsAsm%u
%s\SxsAsm%u
%SystemDrive%
%u assemblies processed: Success=%u, Failed/Skipped=%u
%windir%
%WINDIR%\servicing\0.0.0.1\
&go`4
&PWSV
&S|9a
(*m_pfnGetIdentityAuthority)(&m_authority)
(*m_pfnSetIsolationIMalloc)(m_malloc.get())
(*m_pfnWcpInitialize)(&m_wcpCookie)
(*pfnCreateAssemblyCache)(&pAssemblyCache, 0)
(caller: %p) 
(dwFlags != 0) || !ManifestPath
(lastError != ERROR_PATH_NOT_FOUND) && (lastError != ERROR_FILE_NOT_FOUND)
)Microsoft Root Certificate Authority 20100
***   Source File: %s, line %ld
*** Assertion failed: %s
*expanded
,27APpGA01LybW+IRrzDIMtXY0uXYliw9XiwwTRHlYOc=0Z
,Module
.?AVbad_alloc@std@@
.?AVexception@@
.00cfg
.CRT$XCA
.CRT$XCL
.CRT$XCU
.CRT$XCZ
.CRT$XIA
.CRT$XIAA
.CRT$XIZ
.data
.data$brc
.data$r$brc
.edata
.gfids
.giats
.idata
.idata$2
.idata$3
.idata$4
.idata$5
.idata$6
.manifest
.rdata
.rdata$brc
.rdata$sxdata
.rdata$zzzdbg
.rsrc$01
.rsrc$02
.text
.text$di
.text$mn
.text$x
.text$yd
.xdata$x
:#:C:
:%:/:C:j:o:
:%;+;8;C;\;g;p;y;
:&:F:c:
::CoGetMalloc(1, &m_malloc)
::CoGetMalloc(1, &srpIMalloc)
:-:J:^:{:
:1:E:X:r:{:
:4:?:n:
:4;@;t;
:5;`;
:f;y;
:Tt3n
:X;];o;
;#;F;e;n;u;
;,;L;];w;
;^<t<
;+<:<Y<
;2<i<
;A;Z;d;x;
;B<`<
;I;q;
;V<t<
? ?,?@?G?N?Z?n?~?
?/?\?r?{?
?/=KzdN
??0exception@@QAE@ABV0@@Z
??0exception@@QAE@XZ
??1exception@@UAE@XZ
??1type_info@@UAE@XZ
?=u/W
?C?S?
?what@exception@@UBEPBDXZ
@.reloc
@.rsrc
[%hs(%hs)]
[%hs]
\$,Php<
\$8Ph
\*.manifest
\cbscore.dll
\Implemented Categories
\manifests
\ssshim.dll
\SxsAsm*
\system32\ssshim.dll
\syswow64\ssshim.dll
\wcp.dll
\winsxs
__CxxFrameHandler3
__dllonexit
_amsg_exit
_callnewh
_CxxThrowException
_errno
_except_handler4_common
_initterm
_lock
_onexit
_purecall
_resetstkoflw
_unlock
_vsnwprintf
_wcsicmp
_XcptFilter
`.data
`0^0\
`gyhOT
{d2caca93-9eef-4c24-9790-61cdefd255d4}
{d6bfda37-8a70-4cab-a153-556eb377a4c5}
|L,A3+
<#<E<J<a<
<$<3<S<y<
<%u2V
<(=B=X=r=
<,<f<t<
<.<[<f<m<
<[=|=
<\=h=
<+<<<d<k<q<~<
<<<o<
<=<h<
<'=T>
<><G<X<~<
<9<S<
<H=_=
=!=<=J=n=
=">K>P>q>
=$=e=p=
=)=/=5=@=F=N=U=c=j=o=
=*=]=
=.=m=r=
=.><>A>p>}>
=?=E=Z=
=+><>K>b>
='>5>A>
=9=L=Q=
=L9o<
=T>}>
> >2>G>M>R>Y>p>
>!>'>->B>M>S>[>b>
>%u:V
>)?.?F?M?u?
>)?C?W?\?j?
>,>f>
>??P?g?
>]?c?i?
>^>k>
>+>9>
>3>8>U>Z>l>
>http://www.microsoft.com/pki/certs/MicRooCerAut_2010-06-23.crt0
>I?T?a?
>NGdx
0 0$0(0,0004080<0@0D0H0L0P0T0X0\0`0d0h0l0p0t0x0|0
0 0$00040P0T0p0t0
0 0]0c0w0
0"080@0G0j0x0
0#010M0b0w0
0&0J0
0*0;0_0
0.060C0K0X0x0
0@0&171<1_1~1
0'04090>0M0[0l0t0
040904B0
040U0\0s0
071>1l1
0f;2u
0O0q0
0QhhU
1 1$1(1,1014181<1@1D1H1L1P1T1X1\1`1d1h1l1p1t1x1|1
1 1(10181@1H1P1X1`1h1p1x1
1"1.141=1D1]1u1
1"171<1A1F1K1P1[1u1
1$1,141<1@1H1\1x1
1%202E2R2W2d2i2
1%3R3
1(0&0
1)1@1S1o1}1
1*111M1y1
1,0*0
1/2<2h2m2
1_2r2
1+1_1
1+2@2
1=1J1a1k1x1
1=1L1
10.0.19041.2130
10.0.19041.2130 (WinBuild.160101.0800)
111019184142Z
1-1g1n1
161Q1^1r1
2 2$2(2,2024282<2@2D2H2L2P2T2X2\2`2d2h2l2p2t2x2|2
2 2-2L2u2
2!2H2X2]2
2#2-262U2_2h2
2%2,232@2
2(2L2X2`2x2
2,3Y3f3s3
20221004073204.452Z0
20221004082820Z
20221005082820Z0t0:
210930182225Z
213q3
220302185142Z
220505192315Z
229879+4700220
230504192315Z0p1
230511185142Z0
23282d2u2
261019185142Z0
2E3^3
2G;|$@|
2M2h2
2VSVP
3 3&3,3Z3q3
3 3(30383@3H3P3X3`3h3p3x3
3#313
3#31363
3%3;3@3o3
3*4@4i4n4
3,323
3,4c4
3?4O4V4[4b4p4~4
3+404t4
300930183225Z0|1
31bf3856ad364e35
344h4
3F3\3
3http://www.microsoft.com/pkiops/Docs/Repository.htm0
4!4'484V4]4i4o4u4
4#4(4-42474<4A4
4#4-4C4a4m4r4
4)575<5
4[5v5
424q4x4
4-4X4}4
4l4p4x4
4Y4w4
5 6'6@6G6`6g6
5"5&5,50565:5B5F5L5P5V5Z5`5d5j5n5
5"5@5G5S5Y5_5p5
5%6A6M6_6
5&6e6v6
5/5[5y5
5/6]6
5=5U5c5h5
515;5Y5}5
5-5R5a5)6@6x6f7
5j5o5}5
6"6'6-61666<6Q6f6t8
6%6C6
6)777H7
6*616=6C6I6Z6x6
6]7v7
606N6V6t6
637N7
656p6~6
6595b64144ccf1df
69728G8};
6Q6Y6_6y697J7S7`7z7
7$7D7Y7f7r7|7
7*7/7f7m7
7,8F8
7/8=8Z8_8
7>7E7J7Q7V7b7g7
768H8Z8y8
7'7-737D7b7i7u7{7
7B7G7b7y7
7E8c8x8
8!9e9
8"8'8-878A8Q8a8g8r8x8
8#8,8;8L8V8q8
8(8/8
8*8:8?8V8c8h8
8.8L8S8_8e8k8|8
8/8]8~8
898J8
8A9o9
8D$'t
8R8\8l8
9#:,:
9$9*949>9N9W9
9$9-9y9
9%9K9a9
9(:X:b:
9,969C9^9n9s9
9_ v)V
9~(s,j
9>:L:u:
939:9F9L9R9c9x9
949X9
9O9r9{9
9V<%u
9W:v:
absoluteAssemblySubDir
absoluteManifestFilename
ADVAPI32.dll
advapi32.dll
Analyze Transaction failed with 0x%x
API-MS-Win-Core-LocalRegistry-L1-1-0.dll
AppID
APPID
Apply Transaction failed with 0x%x
Apply_Offline
Apply_Offline()
Apply_Online()
ApplySuccess
as.,k{n?,
Assemblies/Manifests: Found=%u/%u Installed=%u
Assembly %s backed up to %s
Assembly %s is not considered installed, skipping
Assembly scan found a directory (%s)
ATL$__a
ATL$__m
ATL$__z
b03f5f7f11d50a3a
b77a5c561934e089
Backing up assembly %s
BackupAssembly(%s) done
BackupAssembly: %s
BackupAssemblyIfNecessary(manifestAbsoluteFilename, manifestFileName, fileNameBufferSize, wfd, backupIndex, backup)
backupIndex          => %u
bad allocation
base\win32\fusion\migration\offline_sxsinstallw.cpp
base\win32\fusion\migration\Offline_SxsInstallW.h
base\win32\fusion\tis\sxsutil.cpp
BSQPR
bstrMessage
bzC|I
C;_ r
CallContext:[%hs] 
calloc
cbscore.dll
CbsCoreFinalize
CbsCoreInitialize
CbsFindServicingStackDirectory(wcpPath, ARRAYSIZE(wcpPath), nullptr, nullptr)
CbsGetSsBinaryPathFromTargetImage(FALSE , offlineWindir.get(), L"wcp.dll", wil::out_param(wcpPath))
CharNextA
Chttp://www.microsoft.com/pkiops/crl/MicWinProPCA2011_2011-10-19.crl0a
CloseHandle
CLSID
CLSID\
CoCreateGuid
CoCreateInstance
CoGetMalloc
CompanyName
Component Categories
COMPONENTS
ConstructPartialMsgVA
CopyFileW
CopyFileW(catalogPath, backupDestPath, FALSE)
CopyFileW(ManifestPath, backupDestPath, FALSE)
CopyFileW(sourceFilePath, backupDestPath, FALSE)
Copying catalog %s -> %s
Copying manifest %s -> %s
Copying payload %s
Copying payload file %s -> %s
CoTaskMemAlloc
CoTaskMemFree
CoTaskMemRealloc
Could not backup assembly %s
Could not get %hs: 0x%x
Could not get CreateAssemblyCache: 0x%x
Could not load %s: 0x%x
Could not load sxs.dll: 0x%x
Could not load wcp.dll: 0x%x
CreateAssemblyCache
Created working directory %s
CreateDirectoryW
CreateDirectoryW(backupDir, nullptr)
CreateMutexExW
CreateNewOfflineStore
CreateNewPseudoWindows
CreateNewPseudoWindowsEx
CreateNewWindows
CreateSemaphoreExW
Creating backup directory %s
CSxsMigration Object
CurrentIP
cursor == nullptr
CurVer
CWcpDll::Initialize
D$ Ph
D$ Qh
D$(Ph
D$,WP
D$,WPV
D$`_f
D$`Ph
D$0PV
D$LPh
D$LPW
D$pPW
D$XhP
D$XPW
DbgPrintEx
DebugBreak
Delete
DeleteCriticalSection
DeleteFileW
Detected long running migration, will delay until online phase
Discover
Discovered assembly %u: %s
DismountRegistryHives
DllCanUnloadNow
DllGetClassObject
DllMain
DllRegisterServer
DllUnregisterServer
E0U0c0
Ebgcv
Ehttp://crl.microsoft.com/pki/crl/products/MicRooCerAut_2010-06-23.crl0Z
Ehttp://www.microsoft.com/pkiops/certs/MicWinProPCA2011_2011-10-19.crt0
EnterCriticalSection
en-US
Error finding payload %s: 0x%X
Exception
ExpandEnvironmentStringsW
f;D$,u
F\Required Categories
Failed to create working directory %s: 0x%x
Failed to rename backup assembly: 0x%x
FAILED(hr) && (hr != STRSAFE_E_INSUFFICIENT_BUFFER)
FailFast
fg:SM
FileDescription
FileType
FileVersion
FindClose
FindFirstFileW
FindNextFileW
FindResourceExA
ForceRemove
FormatMessageW
Found %s
Found assembly manifest to install: %s
Found assembly to install: %s
Found catalog %s @ %s
FreeAndZeroCSI_BROKEN_COMPONENT
FreeAndZeroCSI_REPAIRED_COMPONENT
FreeLibrary
FriendlyName
FYY;w
g 44B'
g#\!R
G8SVP
Gather
GatherSuccess
GetAppIdAuthority
GetCurrentProcess
GetCurrentProcessId
GetCurrentThreadId
GetEnvironmentVariable(L"%SystemDrive%", value)
GetEnvironmentVariable(L"%windir%", value)
GetErrorMode
GetFileAttributesW
GetFunction(m_wcp.get(), "GetIdentityAuthority", m_pfnGetIdentityAuthority)
GetFunction(m_wcp.get(), "ParseManifest", m_pfnParseManifest)
GetFunction(m_wcp.get(), "SetIsolationIMalloc", m_pfnSetIsolationIMalloc)
GetFunction(m_wcp.get(), "WcpInitialize", m_pfnWcpInitialize)
GetFunction(m_wcp.get(), "WcpShutdown", m_pfnWcpShutdown)
GetIdentityAuthority
GetLastError
GetModuleFileNameA
GetModuleFileNameW
GetModuleHandleA
GetModuleHandleExW
GetModuleHandleW
GetOfflineHKLM(L"COMPONENTS", wil::out_param(subkey))
GetOfflineHKLM(L"SOFTWARE", wil::out_param(subkey))
GetOfflineHKLM(L"SYSTEM", wil::out_param(subkey))
GetOfflineStatus(isOffline)
GetOfflineSystemDriveBstr(&offlineSystemDrive)
GetOfflineWindirBstr(&offlineWindir)
GetProcAddress
GetProcessHeap
GetSxsVersion(manifestAndSxsCatalogDir, &sxsVersion)
GetSystemDriveBstr(&systemDrive)
GetSystemStore
GetSystemTimeAsFileTime
GetTempPathW
GetThreadLocale
GetTickCount
GetTickCount64
GetWindirBstr(&windir)
Hardware
HeapAlloc
HeapDestroy
HeapFree
HeapReAlloc
HeapSize
HKEY_CLASSES_ROOT
HKEY_CURRENT_CONFIG
HKEY_CURRENT_USER
HKEY_DYN_DATA
HKEY_LOCAL_MACHINE
HKEY_PERFORMANCE_DATA
HKEY_USERS
HKLM\
HPh|_
hr != HRESULT_FROM_WIN32(ERROR_NO_MORE_FILES)
hrCreateDirectory
HRESULT_FROM_WIN32(rc)
hrLastError
I(h`"
I0G1-0+
I9sLt
InitializeCriticalSection
InitializeCSI_BROKEN_COMPONENT
InitializeCSI_REPAIRED_COMPONENT
InprocServer32
Install assembly %s failed with 0x%x
Install assembly %s failed with 0x%x during Offline; this is a fatal condition
Install assembly %s requires a reboot
Install assembly %s succeeded with 0x%x (ERROR_SUCCESS_REBOOT_REQUIRED). This is informational only (would have been fatal if not performed offline)
InstallAssemblies(false, nullptr, nullptr, nullptr, nullptr, pAssemblyCache)
InstallAssemblies(true, pIdentity, pAppIdAuthority, pIMalloc, pStore, nullptr)
InstallAssemblies_Offline(pIdentity.get(), pAppIdAuthority.get(), m_malloc.get(), store2.get())
InstallAssemblies_Online(pAssemblyCache.get())
Installed assembly %s
Installing assemblies (%s)
Interface
InternalName
Invalid parameter passed to C runtime function.
IsAssemblyInstalled(pIdentity.get(), backup)
IsDBCSLeadByte
IsDebuggerPresent
IsThirdPartyAssembly(pIdentity.get(), isThirdPartyAssembly)
j,h`a
j.Zf;
J>f;O
KERNEL32.dll
kernelbase.dll
L$$WV
L$,QQ
L$@!D$H
L$0WV
LeaveCriticalSection
LegalCopyright
LoadLibraryExA
LoadLibraryExW
LoadResource
Local\SM0:%d:%d:%hs
LocalServer32
LockResource
LOG_IF_FAILED(%S) failed with 0x%x
LogHr
lstrcmpiA
m_authority->GenerateDefinitionKey(IIDENTITYAUTHORITY_GENERATE_DEFINITION_KEY_FLAG_IGNORE_VERSION, pIdentity, &versionLessKeyform)
m_context->get_WorkingDir(&workingDir)
m_context->raw_ExpandEnvironmentVariables(bstr.get(), expanded)
m_context->raw_GetOfflineFileLocation(systemDrive.get(), value)
m_context->raw_GetOfflineFileLocation(windir.get(), value)
m_context->raw_GetOfflineRegistryLocation(onlinePath, &offlinePath)
m_context->raw_GetOfflineStatus(&isOfflineExecution)
m_context->raw_LongRunningPlugin()
m_context->raw_ResetPluginTimer()
m_context->raw_SendLogMessage(static_cast<UINT>(severity), bstrMessage.get())
m_pfnParseManifest(manifestAbsoluteFilename, nullptr, __uuidof(IDefinitionIdentity), reinterpret_cast<IUnknown**>(&pIdentity))
m<&8cx
M0K0I
malloc
manifestFilename     => %s
manifestPattern
memcmp
memcpy
memcpy_s
memset
Microsoft
Microsoft Corporation
Microsoft Corporation1
Microsoft Corporation1&0$
Microsoft Corporation1)0'
Microsoft Corporation1.0,
Microsoft Corporation1200
Microsoft Time-Stamp PCA 2010
Microsoft Time-Stamp PCA 20100
Microsoft Time-Stamp Service
Microsoft Time-Stamp Service0
Microsoft Windows0
Module
Module_Raw
MODULEGUID
MODULETYPE
MoveFileW
Msg:[%ws] 
msvcrt.dll
MultiByteToWideChar
N0L0J
Nhttp://www.microsoft.com/pkiops/crl/Microsoft%20Time-Stamp%20PCA%202010(1).crl0l
No catalog found for %S
No payload found @ %s
No SxS directory found
nonsxs
NoRemove
ntdll.dll
O0M0K
Offline
Offline_InstallAssembly(absoluteAssemblyDir, absoluteManifestFilename, pIMalloc, pStore, pIdentity, pAppIdAuthority)
Offline_SxsStoreTraceInitialize()
ole32.dll
OLEAUT32.dll
onecore\base\wcp\wcpstub\cwcpdll.cpp
onecore\internal\sdk\inc\wil\opensource\wil\resource.h
onecore\internal\sdk\inc\wil\opensource\wil\win32_helpers.h
Online
onlinePath.Append(HIVEPREFIX_HKLM)
onlinePath.Append(onlineRegistryPath)
onlinePath.Length() != HIVEPREFIX_HKLM_LENGTH + wcslen(onlineRegistryPath)
OpenExistingOfflineStore
OpenSemaphoreW
OQ7l\
OriginalFilename
OutputDebugStringA
OutputDebugStringW
Parameters.Set_pszHostRegistryMachineComponentsPath(subkey.get())
Parameters.Set_pszHostRegistryMachineSoftwarePath(subkey.get())
Parameters.Set_pszHostRegistryMachineSystemPath(subkey.get())
Parameters.Set_pszHostSystemDrivePath(offlineSystemDrive.get())
Parameters.Set_pszHostWindowsDirectoryPath(offlineWindir.get())
ParseManifest
ParseManifestEx
pAssemblyCache->InstallAssembly(0, absoluteManifestFilename, nullptr)
Pend Transaction failed with 0x%x
Phttp://www.microsoft.com/pkiops/certs/Microsoft%20Time-Stamp%20PCA%202010(1).crt0
pIdentity->GetAttribute(nullptr, L"PublicKeyToken", &publicKeyToken)
pIdentity->GetAttribute(nullptr, L"Version", &version)
pIdentity->GetAttribute(nullptr, L"VersionScope", &versionScope)
PjeSW
PostApply
PostGather
PPPPP
PPPPVWP
PQQQh
PreApply
PreGather
ProductName
ProductVersion
ProgID
Programmable
PSSSV
PublicKeyToken
PVh@F
q(9>u
q\Q17
QQSVWj
QRRRh
QRRRP
QSVWh
QueryPerformanceCounter
R!s4Z
RaiseException
RaiseFailFastException
realloc
Redmond1
RegCloseKey
RegCreateKeyExA
RegDeleteKeyA
RegDeleteKeyExA
RegDeleteValueA
RegEnumKeyExA
RegEnumValueW
REGISTRY
RegOpenKeyExA
RegOpenKeyExW
RegOpenKeyIfExists(HKEY_LOCAL_MACHINE, WINSXS_WINNERS_INFO_REGKEY, 0, KEY_READ | KEY_WOW64_64KEY, hkeyWinners)
RegOpenKeyIfExists(hkeyWinnerAssembly.get(), versionBuffer, 0, KEY_READ | KEY_WOW64_64KEY, hkeyWinnerAssemblyFV)
RegOpenKeyIfExists(hkeyWinners.get(), versionLessKeyform, 0, KEY_READ | KEY_WOW64_64KEY, hkeyWinnerAssembly)
RegQueryInfoKeyA
RegQueryValueExW
RegQueryValueIfExists(hkeyWinnerAssemblyFV.get(), versionBuffer, nullptr, &type, installMap, &installMapSize, found)
RegSetValueExA
ReleaseMutex
ReleaseSemaphore
RemoveDirectoryW
Renamed backup assembly %s -> %s
Renaming backup assembly %s -> %s
Required Pend Transaction failed with 0x%x
RETURN_HR(%S) failed with 0x%x
RETURN_HR_IF(%S) failed with 0x%x
RETURN_IF_FAILED(%S) failed with 0x%x
RETURN_IF_NULL_ALLOC(%S) failed with 0x%x
RETURN_IF_WIN32_BOOL_FALSE(%S) failed with 0x%x
ReturnHr
RichY
RPCRT4.dll
RpcStringFreeW
RRRRRRR
RtlDisownModuleHeapAllocation
RtlDllShutdownInProgress
RtlFreeHeap
RtlRaiseStatus
RtlWcpDllDebugEntrypoint
s09>uO
Scanning for assemblies %s
SECURITY
SetErrorMode
SetIsolationIMalloc
SetLastError
SetThreadLocale
SetUnhandledExceptionFilter
SHELL32.dll
SHGetFileInfoA
SizeofResource
Sleep
Software
SOFTWARE
SOFTWARE\Microsoft\Windows\CurrentVersion\Component Based Servicing\Version
Software\Microsoft\Windows\CurrentVersion\SideBySide\Winners
sp^Z6
SPh8!
SssBindServicingStack
SssGetServicingStackFilePath
SssGetServicingStackFilePathLength
SssPreloadDownlevelDependencies
SssReleaseServicingStack
SSSSSSSPSSSV
strcat_s
strcpy_s
StringCchCatW(absoluteAssemblySubDir.get(), absoluteAssemblySubDirLength, wfd.cFileName)
StringCchCatW(absoluteManifestFilename.get(), absoluteManifestFilenameLength, L"\\")
StringCchCatW(absoluteManifestFilename.get(), absoluteManifestFilenameLength, manifestWFD.cFileName)
StringCchCatW(assemblyDir, MAX_PATH, cursor)
StringCchCatW(assemblyDir, MAX_PATH, L"\\*")
StringCchCatW(assemblyDir, MAX_PATH, L"\\winsxs")
StringCchCatW(assemblyFullPath, MAX_PATH, L"\\")
StringCchCatW(assemblyPathPattern, MAX_PATH, L"\\SxsAsm*")
StringCchCatW(backupDestPath, MAX_PATH, L"\\")
StringCchCatW(candidateCatalogPath, MAX_PATH, L"\\*")
StringCchCatW(candidateCatalogPath, MAX_PATH, SXS_CATALOG_FILE_EXTENSION)
StringCchCatW(candidateManifestPath, MAX_PATH, L"\\*")
StringCchCatW(candidateManifestPath, MAX_PATH, SXS_MANIFEST_FILE_EXTENSION)
StringCchCatW(manifestAbsoluteFilename, MAX_PATH, L"\\")
StringCchCatW(manifestAndSxsCatalogDir, MAX_PATH, L"\\manifests")
StringCchCatW(manifestAndSxsCatalogDir, MAX_PATH, L"\\winsxs")
StringCchCatW(manifestPattern.get(), manifestPatternLength, L"\\*.manifest")
StringCchCatW(sourceFilePath, MAX_PATH, L"\\")
StringCchCatW(wcpPath, MAX_PATH, L"\\wcp.dll")
StringCchCopyW(absoluteAssemblySubDir.get(), absoluteAssemblySubDirLength, assemblyFullPath)
StringCchCopyW(absoluteManifestFilename.get(), absoluteManifestFilenameLength, absoluteAssemblySubDir.get())
StringCchCopyW(assemblyDir, MAX_PATH, windir.get())
StringCchCopyW(assemblyFullPath, MAX_PATH, workingDir.get())
StringCchCopyW(assemblyPathPattern, MAX_PATH, workingDir.get())
StringCchCopyW(backupDestPath, MAX_PATH, backupDir)
StringCchCopyW(backupPath, backupPathSize, backupDir)
StringCchCopyW(backupPath, backupPathSize, L"")
StringCchCopyW(candidateCatalogPath, MAX_PATH, manifestAndSxsCatalogDir)
StringCchCopyW(candidateManifestPath, MAX_PATH, manifestDir)
StringCchCopyW(catalogPath, MAX_PATH, ManifestPath)
StringCchCopyW(cursor, fileNameBufferSize - (cursor - manifestFilename), SXS_MANIFEST_FILE_EXTENSION)
StringCchCopyW(cursor, MAX_PATH-(cursor-catalogPath), SXS_CATALOG_FILE_EXTENSION)
StringCchCopyW(DestFileName, DestFileNameBufferSize, cursor)
StringCchCopyW(DestFileName, DestFileNameBufferSize, wfd.cFileName)
StringCchCopyW(manifestAbsoluteFilename, MAX_PATH, manifestAndSxsCatalogDir)
StringCchCopyW(manifestAndSxsCatalogDir, MAX_PATH, windir.get())
StringCchCopyW(manifestFilename, fileNameBufferSize, wfdCatalog.cFileName)
StringCchCopyW(manifestPattern.get(), manifestPatternLength, absoluteAssemblySubDir.get())
StringCchCopyW(path.get(), pathLength, offlinePath.get())
StringCchCopyW(SourceFileName, SourceFileNameBufferSize, wfd.cFileName)
StringCchCopyW(sourceFilePath, MAX_PATH, assemblyDir)
StringCchCopyW(versionBuffer, ARRAYSIZE(versionBuffer), version)
StringCchCopyW(workingPath, workingPathSize, workingDir.get())
StringCchPrintfW(backupDir, ARRAYSIZE(backupDir), L"%s\\SxsAsm%u", workingDir.get(), Index)
StringCchPrintfW(targetDir, ARRAYSIZE(targetDir), L"%s\\Error-SxsAsm%u", workingDir, index)
StringFileInfo
StringFromCLSID
StringFromGUID2
strncpy_s
Submitting install transaction
Submitting stage transaction with %d operations
Submitting uninstall transaction
SVWhX:
SVWj@
Sxs Migration Plugin
sxs.dll
SxsMigPlugin.dll
SxsMigPlugin.MigrationPlugin
SxsMigPlugin.MigrationPlugin.1
SxsMigPlugin.pdb
SxsMigPlugin: Finished %s
SxsMigPlugin: Offline: %s
SxsMigPlugin: Running offline on downlevel OS; failures are critical and will abort migration.
SxsMigPlugin: Running on WinPE after an offline failure; taking no action and signaling retry to run the plugin online.
SxsMigPlugin: Running online following an offline failure; failures beyond this point are considered non-fatal.
SxsMigPlugin: Starting %s
SxsStoreWdsLog
SYSTEM
SYSTEM\CurrentControlSet\Control\MiniNt
SYSTEM\CurrentControlSet\Services\TrustedInstaller\Version
t!<.t
t"97t
t"f90t
t$ PQ
t$ PW
t$<WP
T$hPV
t$pVQ
t;< t7S
t`j.Zf;
t7j.Zf;
tDh(a
TerminateProcess
Thales TSS ESN:4D2F-E3DD-BEEF1%0#
ThreadingModel
tK97t(
TlP0X
tOWh|'
Transact2 failed with 0x%x
Transact2 sensing pending content failed with 0x%x
Translation
tVV9_
TypeLib
u'!D$D
u?!t$L
u_SSSSSSS
U0S0Q
u5h|\
u5h8[
u5h8\
u5hhZ
u5hL^
u5hX]
Unable to get procedure CreateNewOfflineStore
Unable to get procedure CreateNewPseudoWindows
Unable to get procedure CreateNewPseudoWindowsEx
Unable to get procedure CreateNewWindows
Unable to get procedure DismountRegistryHives
Unable to get procedure FreeAndZeroCSI_BROKEN_COMPONENT
Unable to get procedure FreeAndZeroCSI_REPAIRED_COMPONENT
Unable to get procedure GetAppIdAuthority
Unable to get procedure GetIdentityAuthority
Unable to get procedure GetSystemStore
Unable to get procedure InitializeCSI_BROKEN_COMPONENT
Unable to get procedure InitializeCSI_REPAIRED_COMPONENT
Unable to get procedure OpenExistingOfflineStore
Unable to get procedure ParseManifest
Unable to get procedure ParseManifestEx
Unable to get procedure RtlWcpDllDebugEntrypoint
Unable to get procedure SetIsolationIMalloc
Unable to get procedure WcpSetHelperCallback
UnhandledExceptionFilter
uNPPV
UnregisterClassA
USER32.dll
UuidCreate
UuidToStringW
uyL7j
V([_^
v~Bpd
VarFileInfo
Version
VersionIndependentProgID
VersionScope
Vj ^V
VQPWV
VS_VERSION_INFO
VWhP"
VWj:Z
WaitForSingleObject
WaitForSingleObjectEx
Washington1
wcp.dll
wcpDll.GetAppIdAuthority(&pAppIdAuthority)
wcpDll.GetIdentityAuthority(&pIdentity)
wcpDll.Initialize(wcpPath.get())
wcpDll.OpenExistingOfflineStore( OPEN_EXISTING_OFFLINE_STORE_FLAGS_USE_KTM | OPEN_EXISTING_OFFLINE_STORE_FLAGS_MINIMAL_SYSTEM, &Parameters, __uuidof(IStore2), reinterpret_cast<IUnknown**>(&store2), nullptr)
WcpInitialize
WcpSetHelperCallback
WcpShutdown
wcschr
wcsncpy_s
wcsrchr
wcstoul
wdscore.dll
WdsSetupLogMessageA
wfdCatalog.cFileName => %s
WideCharToMultiByte
WilError_03
workingDir
WWWPR
X0V0T
x8hDO
xSu$W
y"ShPC
Y__^[
y+Shx 
y=Vh`.
