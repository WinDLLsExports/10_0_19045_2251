 exceeding max number of microphones
 invalid index
 invalid mic array specifier
 unknown spec
 unsupported beamformer name
 unsupported params
 unsupported specifier
 unsupported WPE params
!This program cannot be run in DOS mode.
"080G0
%s %s %s: %s vs. %s, %s
(((m_options & Option_OutputSelectorFeatures) ? 2U : 1U))
(((uint64_t)sampleCnt))
((_fseeki64(fp, 0, 2)))
((_fseeki64(fp, 4, 0)))
((_fseeki64(fp, 40, 0)))
((_fseeki64(fp, begin_byte, 1)))
((_fwrite_nolock(&x1, n, 1, fp)))
((0))
((0U))
((1))
((-1))
((16000))
((1U))
((2U))
((3U))
((4U))
((5U))
((8U))
(('A'))
((bit % 8U))
((buf[0]))
((buf[1]))
((buf[2]))
((buf[3]))
((channelCnt))
((chunkSize))
((cnt*shiftLen))
(('E'))
(('F'))
((false))
((fmt.AudioFormat))
((fmt.BitsPerSample % 8U))
((fmt.NumChannels))
((fopen_s(&fp, path, "rb")))
((fopen_s(&fp, path, "wb")))
((found))
((fread_s(&chunkSize, sizeof(chunkSize), 1, sizeof(chunkSize), fp)))
((fread_s(&r, sizeof(r), 1, sizeof(r), fp)))
((fread_s(buf, sizeof(buf), 1, 4, fp)))
((fread_s(temp.get(), chunkSize, 1, chunkSize, fp)))
((fseek(fp, 0, 0)))
((fwrite(&bitsPerSample, sizeof(short), 1, fp)))
((fwrite(&blockAlign, sizeof(short), 1, fp)))
((fwrite(&byteRate, sizeof(int), 1, fp)))
((fwrite(&channels, sizeof(short), 1, fp)))
((fwrite(&chunkSize, sizeof(unsigned int), 1, fp)))
((fwrite(&fmtCode, sizeof(short), 1, fp)))
((fwrite(&sampleRate, sizeof(int), 1, fp)))
((fwrite(&subChunk1Size, sizeof(unsigned int), 1, fp)))
((fwrite(&subChunk2Size, sizeof(unsigned int), 1, fp)))
((fwrite(data, 4, 1, fp)))
((fwrite(fmt, 4, 1, fp)))
((fwrite(RIFF, 4, 1, fp)))
((fwrite(WAVE, 4, 1, fp)))
((Hop))
(('I'))
((InCnt * K * sizeof(transform_table[0])))
((ir))
((k))
((kp))
((kp_16))
((L / 4))
((L')'))
((len))
((m_aec.GetInputPortCount()))
((m_aec.GetOutputPortCount()))
((m_agc.GetInputPortCount()))
((m_agc.GetOutputPortCount()))
((m_bandPassFir.GetOutputPortCount()))
((m_bank.GetOutputPortCount()))
((m_beam_bank.GetOutputPortCount()))
((m_bf_wpe->GetInputPortCount()))
((m_bf_wpe->GetOutputPortCount()))
((m_buf.empty()))
((m_buf.size()))
((m_decFir.GetInputPortCount()))
((m_eos))
((m_es.GetInputPortCount()))
((m_es.GetOutputPortCount()))
((m_filter->GetOutputPort(i)->GetSampleRate()))
((m_freq_filter->GetInputPortCount()))
((m_freq_filter->GetOutputPortCount()))
((m_init))
((m_inputChannelCnts[index]))
((m_inputPorts[index].get()))
((m_mask.GetOutputPortCount()))
((m_mic_bank.GetOutputPortCount()))
((m_Nr))
((m_ns.GetInputPortCount()))
((m_ns.GetOutputPortCount()))
((m_readers.empty()))
((m_readers.size()))
((m_readers[0]->Format().SampleRate))
((m_readers[0]->SampleCount()))
((m_readers[i]->Format().AudioFormat))
((m_readers[i]->Format().NumChannels))
((m_readers[i]->Format().SampleRate))
((m_readers[i]->SampleCount()))
((m_ref_bank.GetOutputPortCount()))
((m_res.GetInputPortCount()))
((m_res.GetOutputPortCount()))
((m_selector.GetInputPortCount()))
((m_selector.GetOutputPortCount()))
((m_synth.GetInputPortCount()))
((m_wpe.GetInputPortCount()))
((m_wpe.GetOutputPortCount()))
((m_writers.empty()))
((m_writers.size()))
((nullptr))
((options & Option_OutputSelectorFeatures ? 2U : 1U))
(('R'))
((r_in))
((r_ref))
((ReadInput(0, (float*)m_sample)))
((ReadInput(0, in_buf.get())))
((rev(kp_16, m)))
((sizeof(r)))
((sizeof_transform_table))
((source->GetChannelCount()))
((spec[spec.size() - 1]))
((std::isnan(x)))
((test == 0 || test == -1))
((tokens.size()))
((true))
((u64SampleCnt))
(('V'))
(('W'))
(0/04090>0E0
(0:0`0v0X1j1
(070]0j0
(bit % 8 + fmt.BitsPerSample)
(byte)
(chanCnt)
(chanCnt1)
(chanCnt2)
(cnt)
(coef)
(dataSize)
(delay)
(fHigh)
(fLow)
(fmt.BitsPerSample)
(GetInputPortCount())
(GetOutputPortCount())
(index)
(initDelay)
(ipc)
(L % Hop == 0)
(LL1)
(LL2)
(m_in_chanCnt)
(m_inputPorts.size())
(m_maxDelay)
(m_ndx)
(m_Nr)
(m_read + m_delay)
(m_read)
(m_ref_T2)
(m_write)
(maxDelay)
(Np / 4)
(open_paren_cnt)
(OutCnt)
(ports.size())
(pos + 2)
(R) %s
(scale - 1)
(-scale)
(spec.size())
(tokens.size())
(W) %s
)0O0^0q0
.?AVbad_alloc@std@@
.?AVbad_array_new_length@std@@
.?AVexception@std@@
.?AVruntime_error@std@@
.?AVtype_info@@
.00cfg
.0W0g0
.CRT$XCA
.CRT$XCZ
.CRT$XIA
.CRT$XIC
.CRT$XIZ
.CRT$XPA
.CRT$XPZ
.CRT$XTA
.CRT$XTZ
.data
.data$r$brc
.edata
.gfids
.idata
.idata$2
.idata$3
.idata$4
.idata$5
.idata$6
.rdata
.rdata$brc
.rdata$r$brc
.rdata$sxdata
.rdata$zzzdbg
.rtc$IAA
.rtc$IZZ
.rtc$TAA
.rtc$TZZ
.text
.text$mn
.text$x
.xdata$x
: :,:L:T:`:
:!:&:0:c:z:
:$:,:4:@:`:h:p:x:
:$:,:4:<:D:L:T:\:d:l:t:|:
:$:X:g:
:*;D;
:?:X:g:
:1;@;
:7;G;e;u;
:e:z:
:h;w;
:H<Z<8>J>h?z?
:J;Q;V;[;`;g;
:L:S:X:]:b:i:
:n:u:z:
:O;V;[;`;e;o;
:S:c:|:
:t:{:
:X:j:8;H;X;
:X;j;-?4?9?>?C?J?
; ;(;0;8;@;L;l;t;|;
;$;,;4;<;D;L;T;\;d;l;t;|;
;$;D;L;T;`;
;&<-<2<7<<<C<u<
;(?8?
;(<7<
;*<1<6<;<@<G<
;*<H<W<
;,<I<R<x<
;:<A<F<K<P<W<
;?;p;z;
;2>H>
;7<><C<H<M<T<
;c;j;o;t;y;
;f;m;r;w;|;
;F8sT
;G<N<S<X<]<d<
;GDs'
;GDs.
;H;O;g;
;H;W;
;t$0r
;W$s'
;Z<a<f<k<p<w<
? ?@?H?P?X?`?p?
?!?&?+?2?
?"_^u
?$?)?0?m?
?$?,?4?<?D?L?T?\?d?l?t?|?
?$?,?4?<?D?P?t?|?
?&?u?~?
?'?=?H?Z?{?
?_Xinvalid_argument@std@@YAXPBD@Z
?_Xlength_error@std@@YAXPBD@Z
?_Xout_of_range@std@@YAXPBD@Z
?<?D?L?T?\?d?l?t?|?
?<?X?j?
?1?7?
?3?M?m?
?333?
?4?X?g?
?6?d?
?9?X?j?
?G?h?x?
?J?z?
?M?v?
@.reloc
@;C,r
__CxxFrameHandler3
_CxxThrowException
_except_handler4_common
_FDtest
_fdtest
_initterm
_initterm_e
_o___acrt_iob_func
_o___std_exception_copy
_o___std_exception_destroy
_o___std_type_info_destroy_list
_o___stdio_common_vfprintf
_o___stdio_common_vsprintf
_o___stdio_common_vsprintf_s
_o__aligned_free
_o__aligned_malloc
_o__callnewh
_o__cexit
_o__configure_narrow_argv
_o__errno
_o__execute_onexit_table
_o__fgetc_nolock
_o__fseeki64
_o__fwrite_nolock
_o__initialize_narrow_environment
_o__initialize_onexit_table
_o__invalid_parameter_noinfo_noreturn
_o__libm_sse2_cos_precise
_o__libm_sse2_exp_precise
_o__libm_sse2_log_precise
_o__libm_sse2_log10_precise
_o__libm_sse2_sin_precise
_o__libm_sse2_sqrt_precise
_o__purecall
_o__seh_filter_dll
_o_fclose
_o_fgetc
_o_fopen_s
_o_fread_s
_o_free
_o_fseek
_o_fwrite
_o_malloc
_o_terminate
_o_wcstof
_o_wcstol
_o_wcstoul
`.data
`?fff?
`0g0l0q0v0
|$(;t$0r
+|$$+
+0X0f0
< <$<8<G<
< <(<4<T<\<h<
<!<&<+<2<
<"=<=B=G=M=e=
<"=8=G=
<#=*=/=4=9=@=~=
<$<)<0<b<
<$<,<4<<<D<L<T<\<d<l<t<|<
<$<,<4<<<D<L<T<\<d<p<
<$=C=
<(=:=
<(=?=`=
<(=Z=
<)=J=
<*<'=K=
<,=x=
<-<k<
<'<M<Z<s<
<'=|=
<0=7=<=A=F=M=
<4<<<D<P<t<|<
<5=<=A=F=K=U=
<6<X<g<
<a=h=m=r=w=~=
<M<|=
<P<t<
= =(=4=T=`=
=!>7>P>m>
="=)=X=
=">>>h>w>
=$=,=4=<=D=L=T=\=d=l=t=|=
=$=0=P=`=
=(?0?8?I?d?p?
=:>X>f>
=?=V=^=
=?>R>k>~>
=<>h>u>
='=_=
=3>v>
=C=h=v=
=c>|>
=c>j>o>t>y>
=g>n>s>x>}>
=H=X=
=H>Z>
=S=r=
> >(>8>\>d>l>t>|>
> >'>
>$>^>g>n>t>z>
>&?-?2?7?<?C?
>(>0><>\>h>
>(>L>T>\>d>l>t>|>
>,>x>
>0>8>D>d>p>
>6???h?v?
>8>G>
>8>G>l>
>f>m>r>w>|>
>F>O>x>
>H>W>
>M?T?Y?^?c?j?
>o>v>{>
>R>Y>^>c>h>o>
>X?g?
>Z?a?f?k?p?w?
0 0$0(0,0004080<0@0D0H0L0P0T0X0\0`0d0h0l0p0t0x0|0
0 0,0L0T0\0d0l0t0
0!0=0
0!1(1-12171>1
0#0*0
0$0,040<0D0L0T0\0d0l0t0|0
0$0,040<0H0l0t0|0
0$0,0H0h0t0
0$0+0Z0
0(171i1
0(1o1v1{1
0*11161;1@1J1
0,13181=1B1I1x1
0,1L1T1`1
0.151:1?1D1K1
0:0|0
0_1f1k1p1u1|1
0'0s0z0
020H0Y0
031:1?1D1I1P1
040\0|0
060X0g0
070u0
080H0
081G1j1
081J1
0H0U0u0
1 1$1(1,1014181<1@1D1H1L1P1T1X1\1`1d1h1l1p1t1x1|1
1 1(181\1d1l1t1|1
1 1@1H1P1X1d1
1"1'1.1
1"1A1Q1f1
1#3*3/34393@3r3
1$101P1X1`1h1x1
1$4\4
1&1+10151<1v1
1(141T1\1d1l1x1
1/2x2
1;2B2G2L2Q2[2
1<2R2i2z2
1'1r1 2'2,21262=2o2
181H1
1D2K2P2U2Z2a2
1h2p2x2
1J1}1
1k1z1
2 2$2(2,2024282<2@2D2H2L2P2T2X2\2`2d2h2l2p2t2x2|2
2 2*2\2x2
2 2@2L2l2x2
2$2)2.232:2l2
2$2,242<2D2L2X2x2
2$202P2\2|2
2%2>2
2%2H2U2u2
2%2T2
2%3,31363;3B3
2)30353:3?3F3u3
2.353:3?3D3N3
2/3?3]3m3
2^2e2j2o2t2{2
2+3L3
2<2D2L2T2\2d2l2t2|2
20A0I0a0t0
223h3z3
242@2`2h2t2
2b2i2n2s2x2
2g2n2s2x2}2
2h3u3
2J2z2
3 3$3(3,3034383<3@3D3H3L3P3T3X3\3`3d3h3l3p3t3x3|3
3 3%3*313
3 3(30383@3P3t3|3
3 4n4
3"424R4
3$3,343<3D3L3T3\3d3l3t3|3
3$3,343L3T3`3
3$3+3]3x3
3%4\4
3%4h4
3&363O3
3&3W3
3(363
3(4:4
3(474
3)4H4V4
3@3O3
3[3x3
3+3B3U3o3
3<3L3X3`3
313N3
343H3U3l3
354<4A4F4K4U4
364=4B4G4L4S4
383@3H3T3t3|3
383I3`3
384J4
394X4e4|4
3D4o4#5O6V6[6`6e6l6
3d6k6p6u6z6
3G4N4S4X4]4d4
3H3Y3
3h4u4
3j3q3v3{3
3o4v4{4
3w3~3
4 4$4(4,4044484<4@4D4H4L4P4T4X4\4`4d4h4l4p4t4x4|4
4 414G4W4
4$4)404b4x4
4$4,444<4D4L4T4\4d4l4t4
4$4,444<4D4L4T4\4d4l4t4|4
4$404P4\4|4
4$5*5b5l5
4%4H4V4
4(595X5
4(5X5j5T6{6
4)494?4K4Q4h4w4h5w586G6
4/565;5@5E5L5
4]5d5i5n5s5}5
4`5w5
404>4D4J4P4V4\4c4j4q4x4
404L4\4h4
405H5X5
405T5~5
484G4
4H4h4w4
4N4&5^5
4o4v4{4
4O6V6[6`6e6l6
4X4j4
5 5$5(5,5054585<5@5D5H5L5P5T5X5\5`5d5h5l5
5 7H7U7u7
5"5f5m5r5w5|5
5#5*5Y5x5
5$5,545@5`5h5p5x5
5$5,545<5D5L5T5\5|5
5$5,545<5D5L5T5\5d5l5t5|5
5(585
5(6,6<6@6H6`6p6t6
5(6/64696>6E6w6
5)5@5N5^5e5
5)696T6
5)6Q6`6
5*5Z5
5,585X5d5
5\6c6h6m6r6y6
505|5
525J5P5r5
536T6
5-6Q6
576|6
585E5e5
586Q6x6
587D7
5a6k6
5F5X5e5t5
5F6M6R6W6\6f6
5ineI
5M6T6Y6^6c6j6
5N6U6Z6_6d6n6
5ntel
5q5|5
5Y5{5
6 6(606<6\6d6l6t6
6 737\7r7
6!6&6-6\6x6
6#6(6-646n6~6
6$6,646<6D6L6T6\6d6l6t6|6
6&7-72777<7C7
6(888
6*747
6*7X7e7|7
6,646<6D6L6T6\6d6l6t6|6
6,7>7
6.6H6
606L6P6p6
616?6G6[6f6
62797>7C7H7O7
667m7
6'7C7
686@6H6P6\6|6
686G6
686J6a6t6k7
687?7D7I7N7U7
6h7v7
7 7$7(707D7L7T7\7p7x7
7 7$7,7D7T7X7\7
7 7%7,7^7
7 7@7H7P7X7`7h7x7
7 7D7L7T7\7d7l7t7|7
7 8'8,81868=8
7!7&7+70777i7
7!8(8-82878>8p8
7$7,747<7D7L7T7\7d7l7t7|7
7$8@8
7%7H7R7
7(8/84898>8H8
7(898(9
7(8Z8
7,8B8|8
7:8A8F8K8P8W8
7;8B8G8L8Q8X8
7;9b=i=n=s=x=
7@7E8
728X8e8
777G7f7v7
787E7i7
7C8u8
7D8I8
7F8,9]9
7h7w7
7h8y8
7I7X7
7J7^7e7
7K7l7
7V7w7
7X8f8}8
8!818O8_8
8!8'8-83898?8E8K8Q8W8b8h8n8t8z8
8!9'9
8$808P8X8d8
8%9,91969;9B9x9
8(858O8
8(888O8
8,=3=8===B=I=
8,848<8D8L8T8\8d8l8t8|8
8@9v9
8<9C9H9M9R9Y9
809C9
848<8D8L8T8\8t8|8
858A8
888@8H8P8`8
889J9
899@9E9J9O9Y9
8'9C9
8d8d9a:h:m:r:w:~:
8E8|8
8F8h8w8
8L9S9X9]9b9l9
8M9T9Y9^9c9j9
8V9]9b9g9l9s9
8Y8i8
9 9R9h9z9
9!:(:-:2:7:>:p:
9":[:
9">)>.>3>8>?>
9$9,949<9D9L9T9\9d9l9t9|9
9$9,949<9D9L9T9`9
9&9H9
9(9H9P9X9`9h9p9|9
9@:G:L:Q:V:]:
9+:[:|:
9+9s9z9
9<9D9L9T9\9h9
9>9w9
91:k:
94:b:
9'949K9x9
9C,v0
9c:|:
9h9w9
9I:X:h:
9I9Y9m9
9K8vS
9L:H;Z;
9N4v*
9O@v-
9S,v2
9T9\9
9V4vN
9V4vS
9VHv%
9w v(
9w@v93
9W@vH
9w@vT3
9w9~9
9WHv@
9wHvB3
9WHvq
9x9%:,:1:6:;:B:q:
A;K4r
A;N4r
A;O@r
api-ms-win-core-debug-l1-1-0.dll
api-ms-win-core-errorhandling-l1-1-0.dll
api-ms-win-core-interlocked-l1-1-0.dll
api-ms-win-core-processthreads-l1-1-0.dll
api-ms-win-core-processthreads-l1-1-1.dll
api-ms-win-core-profile-l1-1-0.dll
api-ms-win-core-sysinfo-l1-1-0.dll
api-ms-win-crt-math-l1-1-0.dll
api-ms-win-crt-private-l1-1-0.dll
api-ms-win-crt-runtime-l1-1-0.dll
api-ms-win-crt-string-l1-1-0.dll
auto_ref_delay_aec
avcore\audioprocessing\capture\core\mas\apps\CAGCFilterTest.h
avcore\audioprocessing\capture\core\mas\apps\CFFTFilterBankTest.h
avcore\audioprocessing\capture\core\mas\apps\CNoiseSuppressionFilterTest.h
avcore\audioprocessing\capture\core\mas\apps\CPMAFilter.h
avcore\audioprocessing\capture\core\mas\apps\CResidualEchoSuppressionFilterTest.h
avcore\audioprocessing\capture\core\mas\apps\CWPEFilterTest.h
avcore\audioprocessing\capture\core\mas\basics\CAbstractBufferedOutputFilter.h
avcore\audioprocessing\capture\core\mas\basics\CAbstractCompositeFilter.h
avcore\audioprocessing\capture\core\mas\basics\CAbstractDirectOutputFilter.h
avcore\audioprocessing\capture\core\mas\basics\CComplex_simd_sse.h
avcore\audioprocessing\capture\core\mas\basics\CFFTFilterBank.h
avcore\audioprocessing\capture\core\mas\basics\CFFTSynthBank.h
avcore\audioprocessing\capture\core\mas\basics\CRadix4FFT_float.h
avcore\audioprocessing\capture\core\mas\basics\CSplitWaveSink.h
avcore\audioprocessing\capture\core\mas\basics\CSplitWaveSource.h
avcore\audioprocessing\capture\core\mas\basics\CUnimicBuffer.h
avcore\audioprocessing\capture\core\mas\basics\CUnimicProcessor.h
avcore\audioprocessing\capture\core\mas\basics\CWaveReader.h
avcore\audioprocessing\capture\core\mas\basics\CWaveWriter.h
avcore\audioprocessing\capture\core\mas\filters\CAGCMaskEstimator.h
avcore\audioprocessing\capture\core\mas\filters\CAutoRefDelayAECFilter.h
avcore\audioprocessing\capture\core\mas\filters\CBandPassFIRFilter.h
avcore\audioprocessing\capture\core\mas\filters\CCorrelationEstimator.h
avcore\audioprocessing\capture\core\mas\filters\CDelayFilter.h
avcore\audioprocessing\capture\core\mas\filters\CDownSampleFilter.h
avcore\audioprocessing\capture\core\mas\filters\CErleEstimator.h
avcore\audioprocessing\capture\core\mas\filters\CFBeamFormer.h
avcore\audioprocessing\capture\core\mas\filters\CFDAFAECFilter_float.h
avcore\audioprocessing\capture\core\mas\filters\CForkFilter.h
avcore\audioprocessing\capture\core\mas\filters\CFResidualEchoSuppressor_float.h
avcore\audioprocessing\capture\core\mas\filters\CFWPEFilter.h
avcore\audioprocessing\capture\core\mas\filters\CLogLoopAGCFilter.h
avcore\audioprocessing\capture\core\mas\unimic_runtime.cpp
B;V4r
B;VHr
bad allocation
bad array new length
band_pass_fir
C B;S
C;^@r
C0J0O0T0Y0c0
coremas.dll
COREMAS.pdb
CreateCustomUnimicSource
CreateUnimicFilter
CreateUnimicProcessor
CreateUnimicSinkToSplitChannelWaveFiles
CreateUnimicSinkToWaveFile
CreateUnimicSourceFromSplitChannelWaveFiles
CreateUnimicSourceFromWaveFile
D$<+D$
DeleteUnimicFilter
DeleteUnimicProcessor
DeleteUnimicSink
DeleteUnimicSource
deque<T> too long
down_sample
F;w r
F;w@r
F433s?
F4C+F0
F4tx+F03
fdaf_aec
FOR_TEST_ONLY:agcmasktest
FOR_TEST_ONLY:agctest
FOR_TEST_ONLY:beamformer
FOR_TEST_ONLY:corrtest
FOR_TEST_ONLY:delay
FOR_TEST_ONLY:erletest
FOR_TEST_ONLY:estest
FOR_TEST_ONLY:fft_filter_bank
FOR_TEST_ONLY:fork
FOR_TEST_ONLY:nltest
FOR_TEST_ONLY:nstest
FOR_TEST_ONLY:sum
FOR_TEST_ONLY:wpetest
G ;G(v
G;~<r
G;~Hr
G0PPP
GetCurrentProcess
GetCurrentProcessId
GetCurrentThreadId
GetSystemTimeAsFileTime
GetUnimicFilterInputPortCount
GetUnimicFilterOutputPort
GetUnimicFilterOutputPortCount
GetUnimicProcessorDelay
GetUnimicProcessorInputChannelCount
GetUnimicProcessorOutputChannelCount
GetUnimicSinkChannelCount
GetUnimicSourceChannelCount
GetUnimicSourceSampleRate
InitializeSListHead
invalid stof argument
invalid stoi argument
invalid stoul argument
invalid string position
IsDebuggerPresent
IsProcessorFeaturePresent
j&h$!
jSh$!
L$ 9~
memcpy
memmove
memset
msvcp_win.dll
N<;~8r
non-integer oversample
PQSVW
QueryPerformanceCounter
rassert_op (line %d of %s):
ReadUnimicSource
rfail (line %d of %s):
Rich@
RunUnimicProcessor
SetUnhandledExceptionFilter
SetUnimicFilterInputPort
split
stof argument out of range
stoi argument out of range
stoul argument out of range
string too long
sUfff
T$ ff
T$,ff
t0fff
TerminateProcess
UnhandledExceptionFilter
unimic_runtime error
Unknown exception
vector<T> too long
WriteUnimicSink
WVh$%
WVh$,
WVh(&
WVh()
WVh,$
WVh,,
WVh,4
WVh,5
WVh@!
WVh`!
WVh`9
WVh|%
WVh|8
WVh< 
WVh<#
WVhd 
WVhd*
WVhh#
WVhH6
WVhP9
WVhT!
WVht"
WVhT"
WVhT&
Y__^[
