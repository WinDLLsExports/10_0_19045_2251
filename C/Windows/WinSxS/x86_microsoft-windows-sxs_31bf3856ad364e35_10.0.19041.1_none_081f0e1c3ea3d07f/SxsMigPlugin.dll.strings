           workingDir: %s
     assemblyFullPath: %s
  assemblyPathPattern: %s
 http://www.microsoft.com/windows0
 Microsoft Corporation. All rights reserved.
 Operating System
 Windows
!\$ W
!assemblyDir || !absoluteManifestFilename || !pAssemblyCache
!manifestDir || !sxsVersion
!pIdentity
!This program cannot be run in DOS mode.
!workingDir
"Microsoft Window
$`2X`F
$020H0M0
$Microsoft Ireland Operations Limited1
$Microsoft Ireland Operations Limited1&0$
$V<%u
%APPID%
%FriendlyName%
%hs!%p: 
%hs(%d) tid(%x) %08X %ws
%hs(%u)\%hs!%p: 
%Microsoft Windows Production PCA 2011
%Microsoft Windows Production PCA 20110
%MODULE%
%MODULEGUID%
%MODULETYPE%
%s assembly is inbox
%s\Error-SxsAsm%u
%s\SxsAsm%u
%SystemDrive%
%u assemblies processed: Success=%u, Failed/Skipped=%u
%windir%
%WINDIR%\servicing\0.0.0.1\
&PWSV
(*m_pfnGetIdentityAuthority)(&m_authority)
(*m_pfnSetIsolationIMalloc)(m_malloc.get())
(*m_pfnWcpInitialize)(&m_wcpCookie)
(*pfnCreateAssemblyCache)(&pAssemblyCache, 0)
(caller: %p) 
(dwFlags != 0) || !ManifestPath
(lastError != ERROR_PATH_NOT_FOUND) && (lastError != ERROR_FILE_NOT_FOUND)
)Microsoft Root Certificate Authority 20100
***   Source File: %s, line %ld
*** Assertion failed: %s
*expanded
,27APpGA01LybW+IRrzDIMtXY0uXYliw9XiwwTRHlYOc=0Z
,Module
.?AVbad_alloc@std@@
.?AVexception@@
.00cfg
.CRT$XCA
.CRT$XCL
.CRT$XCU
.CRT$XCZ
.CRT$XIA
.CRT$XIAA
.CRT$XIZ
.data
.data$brc
.data$r$brc
.edata
.gfids
.giats
.idata
.idata$2
.idata$3
.idata$4
.idata$5
.idata$6
.manifest
.rdata
.rdata$brc
.rdata$sxdata
.rdata$zzzdbg
.rsrc$01
.rsrc$02
.text
.text$di
.text$mn
.text$x
.text$yd
.xdata$x
:%:A:^:j:v:
:&:C:f:
:(;E;N;
:/:M:a:g:
::CoGetMalloc(1, &m_malloc)
::CoGetMalloc(1, &srpIMalloc)
:0:_:
:1:{:
:1:|:
:T:`:
:U;k;{;
;!;/;y;
;";F;^;v;
;&;-;[;z;
;*;2;B;X;a;m;u;
;.;>;C;e;j;
;+<A<G<u<
;0<N<
;4;C;L;U;j;
;4;J;
;7<A<\<j<
;D<[<
;F;K;e;
?#?Q?d?
?%?2?Q?V?n?u?
?)?.?6?>?C?Q?m?
?*?2?A?I?Q?V?a?m?
?*?8?E?K?Q?a?r?v?
?/?T?u?|?
??0exception@@QAE@ABV0@@Z
??0exception@@QAE@XZ
??1exception@@UAE@XZ
??1type_info@@UAE@XZ
?=u/W
?>?D?X?~?
?what@exception@@UBEPBDXZ
?Y?|?
@.reloc
@.rsrc
[%hs(%hs)]
[%hs]
\$,Ph
\$8Pht<
\*.manifest
\cbscore.dll
\Implemented Categories
\manifests
\ssshim.dll
\SxsAsm*
\system32\ssshim.dll
\syswow64\ssshim.dll
\wcp.dll
\winsxs
__CxxFrameHandler3
__dllonexit
_amsg_exit
_callnewh
_CxxThrowException
_errno
_except_handler4_common
_GUG@
_initterm
_lock
_onexit
_purecall
_resetstkoflw
_unlock
_vsnwprintf
_wcsicmp
_XcptFilter
`.data
{d2caca93-9eef-4c24-9790-61cdefd255d4}
{d6bfda37-8a70-4cab-a153-556eb377a4c5}
|hK,_
}bgk#!F
<!</<`<q<
<#<*</<D<M<[<s<
<#<B=
<%</<8<B<K<i<|<
<%u2V
<&=F=]=z=
<(<L<X<y<
<><G<X<~<
<2<[<
<N=m=
="=C=^=
="=z=
=]?s?
===K=i=q=y=
=2=@=c=q=
=B=k=p=
=L9o<
=N=\=a=
=N>h>y>
=U>d>r>
=Y=f=
>#?@?
>#>)>?>R>j>o>
>#>4>
>%u:V
><?Z?
>2>;>n>
>9>@>
>B?O?
>http://www.microsoft.com/pki/certs/MicRooCerAut_2010-06-23.crt0
>http://www.microsoft.com/pki/certs/MicTimStaPCA_2010-07-01.crt0
>I>N>f>m>
>I>V>
>N>W>h>
0 0$0(0,0004080<0@0D0H0L0P0T0X0\0`0d0h0l0p0t0x0|0
0 0$00040P0T0p0t0
0"1m1
0$0.0J0Q0m0
0%0?0I0V0
0)030@0J0T0f0
0)0I0S0n0
0<2n2x2
000R0
0-0I0`0s0
020W0k0{0
040904B0
050?0h0
051M1z1
061b1
080@0D0L0P0X0\0d0h0p0t0|0
0f;2u
0R1c1v1
1 1$1(1,1014181<1@1D1H1L1P1T1X1\1`1d1h1l1p1t1x1|1
1 1(10181@1H1P1X1`1h1p1x1
1 181
1$1C1M1V1u1
1(0&0
1(1/151I1]1q1
1(1/1H1O1
1.1E1R1Y1w1
1/0-0
1/2\213V3}3
1?2R2e2
10.0.19041.1
10.0.19041.1 (WinBuild.160101.0800)
100701213655Z
111019184142Z
111S1X1
112a2
151a1
162L2
190502212436Z
191023231917Z
1H1b1w1
1http://www.microsoft.com/PKI/docs/CPS/default.htm0@
2 2$2(2,2024282<2@2D2H2L2P2T2X2\2`2d2h2l2p2t2x2|2
2#3[3t3
2%3^3u3
200502212436Z0p1
20191207040247.118Z0
20191207092635Z
20191208092635Z0w0=
210121231917Z0
212K2^2c2i2}2
229879+4541120
250701214655Z0|1
252C2Q2V2
261019185142Z0
2G;|$@|
2G3N3o3v3
2R2W2~2
2VSVP
3 3(30383@3H3P3X3`3h3p3x3
3"303>3x3
3(3-3M3x3
3)3/353F3d3k3w3}3
3*3Y3f3s3y3
31bf3856ad364e35
373C3e3|3
383=3W3^3d3z3
3K3P3
4%565O5_5
4<5F5a5
4>4O4{4
4>4T4f4
404N4U4a4g4m4~4
414X4_4{4
444>4G4L4Q4W4\4k4t4}4
44494]4u4
464Q4
474O4
4C5^5
4l4p4x4
5#5@5s5
5#6.696n6
5&5A5P5W5]5q5
555P5n5v5
585?5K5Q5W5h5
595P5i5z5
5L5u5
6 6%61666c6j6o6v6{6
6"6)656;6A6R6p6w6
6"696B6M6T6f6l6r6x6~6
6&626<6\6
6(7-7J7Z7_7v7
6+606J6O6
656B6v6{6
6595b64144ccf1df
686g6r6
6H6T7
6I7s7
7 7.737O7}7
7!7'72787D7T7]7n7t7z7
7%7+7<7Z7a7m7s7y7
7%828G8
7%8T8
7.7`7
7=:S:c:
717[7o7
7-7Y7j7
797Z7
7J7g7
8 8@8E8J8
8#888?8F8p8
8$999A9G9k9
8)8E8
8.858?8x8
8.9S9u9
8/8N8f8~8
828;8k8
83888L8V8c8~8
8B9S9b9h9r9x9~9
8D$'t
8E9`9{9
8M9U9b9
9 :G:
9#9F9f9
9%969F9_9
9&9I9
9)9V9j9
9-:a:z:
9;:Z:l:
9;9O9
9[:t:
9_ v)V
9~(s,j
9-9E9O9c9
9V<%u
absoluteAssemblySubDir
absoluteManifestFilename
advapi32.dll
ADVAPI32.dll
Analyze Transaction failed with 0x%x
API-MS-Win-Core-LocalRegistry-L1-1-0.dll
APPID
AppID
Apply Transaction failed with 0x%x
Apply_Offline
Apply_Offline()
Apply_Online()
ApplySuccess
Assemblies/Manifests: Found=%u/%u Installed=%u
Assembly %s backed up to %s
Assembly %s is not considered installed, skipping
Assembly scan found a directory (%s)
ATL$__a
ATL$__m
ATL$__z
b cFCL
b03f5f7f11d50a3a
b77a5c561934e089
Backing up assembly %s
BackupAssembly(%s) done
BackupAssembly: %s
BackupAssemblyIfNecessary(manifestAbsoluteFilename, manifestFileName, fileNameBufferSize, wfd, backupIndex, backup)
backupIndex          => %u
bad allocation
base\win32\fusion\migration\offline_sxsinstallw.cpp
base\win32\fusion\migration\Offline_SxsInstallW.h
base\win32\fusion\tis\sxsutil.cpp
BSQPR
bstrMessage
C;_ r
CallContext:[%hs] 
calloc
cbscore.dll
CbsCoreFinalize
CbsCoreInitialize
CbsFindServicingStackDirectory(wcpPath, ARRAYSIZE(wcpPath), nullptr, nullptr)
CbsGetSsBinaryPathFromTargetImage(FALSE , offlineWindir.get(), L"wcp.dll", wil::out_param(wcpPath))
CharNextA
Chttp://www.microsoft.com/pkiops/crl/MicWinProPCA2011_2011-10-19.crl0a
CloseHandle
CLSID
CLSID\
CoCreateGuid
CoCreateInstance
CoGetMalloc
CompanyName
Component Categories
COMPONENTS
ConstructPartialMsgVA
CopyFileW
CopyFileW(catalogPath, backupDestPath, FALSE)
CopyFileW(ManifestPath, backupDestPath, FALSE)
CopyFileW(sourceFilePath, backupDestPath, FALSE)
Copying catalog %s -> %s
Copying manifest %s -> %s
Copying payload %s
Copying payload file %s -> %s
CoTaskMemAlloc
CoTaskMemFree
CoTaskMemRealloc
Could not backup assembly %s
Could not get %hs: 0x%x
Could not get CreateAssemblyCache: 0x%x
Could not load %s: 0x%x
Could not load sxs.dll: 0x%x
Could not load wcp.dll: 0x%x
CreateAssemblyCache
Created working directory %s
CreateDirectoryW
CreateDirectoryW(backupDir, nullptr)
CreateMutexExW
CreateNewOfflineStore
CreateNewPseudoWindows
CreateNewPseudoWindowsEx
CreateNewWindows
CreateSemaphoreExW
Creating backup directory %s
CSxsMigration Object
CurrentIP
cursor == nullptr
CurVer
CWcpDll::Initialize
D$ Phh;
D$,WP
D$,WPV
D$`_f
D$`Ph
D$0PV
D$8Phx9
D$LPh
D$LPW
D$PhP
D$pPW
D$PPW
D$XPW
DbgPrintEx
DebugBreak
Delete
DeleteCriticalSection
DeleteFileW
Discover
Discovered assembly %u: %s
DismountRegistryHives
DllCanUnloadNow
DllGetClassObject
DllMain
DllRegisterServer
DllUnregisterServer
Ehttp://crl.microsoft.com/pki/crl/products/MicRooCerAut_2010-06-23.crl0Z
Ehttp://crl.microsoft.com/pki/crl/products/MicTimStaPCA_2010-07-01.crl0Z
Ehttp://www.microsoft.com/pkiops/certs/MicWinProPCA2011_2011-10-19.crt0
EnterCriticalSection
en-US
Error finding payload %s: 0x%X
Exception
ExpandEnvironmentStringsW
f;D$(u
F\Required Categories
F\w[u
Failed to create working directory %s: 0x%x
Failed to rename backup assembly: 0x%x
FAILED(hr) && (hr != STRSAFE_E_INSUFFICIENT_BUFFER)
FailFast
fbb?(Hs
FileDescription
FileType
FileVersion
FindClose
FindFirstFileW
FindNextFileW
FindResourceExA
ForceRemove
FormatMessageW
Found %s
Found assembly manifest to install: %s
Found assembly to install: %s
Found catalog %s @ %s
FreeAndZeroCSI_BROKEN_COMPONENT
FreeAndZeroCSI_REPAIRED_COMPONENT
FreeLibrary
FriendlyName
FYY;w
G8SVP
Gather
GatherSuccess
GetAppIdAuthority
GetCurrentProcess
GetCurrentProcessId
GetCurrentThreadId
GetEnvironmentVariable(L"%SystemDrive%", value)
GetEnvironmentVariable(L"%windir%", value)
GetErrorMode
GetFileAttributesW
GetFunction(m_wcp.get(), "GetIdentityAuthority", m_pfnGetIdentityAuthority)
GetFunction(m_wcp.get(), "ParseManifest", m_pfnParseManifest)
GetFunction(m_wcp.get(), "SetIsolationIMalloc", m_pfnSetIsolationIMalloc)
GetFunction(m_wcp.get(), "WcpInitialize", m_pfnWcpInitialize)
GetFunction(m_wcp.get(), "WcpShutdown", m_pfnWcpShutdown)
GetIdentityAuthority
GetLastError
GetModuleFileNameA
GetModuleFileNameW
GetModuleHandleA
GetModuleHandleExW
GetModuleHandleW
GetOfflineHKLM(L"COMPONENTS", wil::out_param(subkey))
GetOfflineHKLM(L"SOFTWARE", wil::out_param(subkey))
GetOfflineHKLM(L"SYSTEM", wil::out_param(subkey))
GetOfflineStatus(isOffline)
GetOfflineSystemDriveBstr(&offlineSystemDrive)
GetOfflineWindirBstr(&offlineWindir)
GetProcAddress
GetProcessHeap
GetSxsVersion(manifestAndSxsCatalogDir, &sxsVersion)
GetSystemDriveBstr(&systemDrive)
GetSystemStore
GetSystemTimeAsFileTime
GetTempPathW
GetThreadLocale
GetTickCount
GetWindirBstr(&windir)
GHh8A
HA1o7w
Hardware
HeapAlloc
HeapDestroy
HeapFree
HeapReAlloc
HeapSize
HKEY_CLASSES_ROOT
HKEY_CURRENT_CONFIG
HKEY_CURRENT_USER
HKEY_DYN_DATA
HKEY_LOCAL_MACHINE
HKEY_PERFORMANCE_DATA
HKEY_USERS
HKLM\
hr != HRESULT_FROM_WIN32(ERROR_NO_MORE_FILES)
hrCreateDirectory
HRESULT_FROM_WIN32(rc)
hrLastError
I(h`"
I0G1-0+
I9sLt
InitializeCriticalSection
InitializeCSI_BROKEN_COMPONENT
InitializeCSI_REPAIRED_COMPONENT
InprocServer32
Install assembly %s failed with 0x%x
Install assembly %s failed with 0x%x during Offline; this is a fatal condition
Install assembly %s requires a reboot
Install assembly %s succeeded with 0x%x (ERROR_SUCCESS_REBOOT_REQUIRED). This is informational only (would have been fatal if not performed offline)
InstallAssemblies(false, nullptr, nullptr, nullptr, nullptr, pAssemblyCache)
InstallAssemblies(true, pIdentity, pAppIdAuthority, pIMalloc, pStore, nullptr)
InstallAssemblies_Offline(pIdentity.get(), pAppIdAuthority.get(), m_malloc.get(), store2.get())
InstallAssemblies_Online(pAssemblyCache.get())
Installed assembly %s
Installing assemblies (%s)
Interface
InternalName
Invalid parameter passed to C runtime function.
IsAssemblyInstalled(pIdentity.get(), backup)
IsDBCSLeadByte
IsDebuggerPresent
IsThirdPartyAssembly(pIdentity.get(), isThirdPartyAssembly)
j,h `
j.Zf;
KERNEL32.dll
kernelbase.dll
KuLVW
L$$WV
L$,QQ
L$@!D$H
L$0WV
L+x`r
LeaveCriticalSection
Legal_Policy_Statement
LegalCopyright
LoadLibraryExA
LoadLibraryExW
LoadResource
Local\SM0:%d:%d:%hs
LocalServer32
LockResource
LOG_IF_FAILED(%S) failed with 0x%x
LogHr
lstrcmpiA
m_authority->GenerateDefinitionKey(IIDENTITYAUTHORITY_GENERATE_DEFINITION_KEY_FLAG_IGNORE_VERSION, pIdentity, &versionLessKeyform)
m_context->get_WorkingDir(&workingDir)
m_context->raw_ExpandEnvironmentVariables(bstr.get(), expanded)
m_context->raw_GetOfflineFileLocation(systemDrive.get(), value)
m_context->raw_GetOfflineFileLocation(windir.get(), value)
m_context->raw_GetOfflineRegistryLocation(onlinePath, &offlinePath)
m_context->raw_GetOfflineStatus(&isOfflineExecution)
m_context->raw_LongRunningPlugin()
m_context->raw_ResetPluginTimer()
m_context->raw_SendLogMessage(static_cast<UINT>(severity), bstrMessage.get())
m_pfnParseManifest(manifestAbsoluteFilename, nullptr, __uuidof(IDefinitionIdentity), reinterpret_cast<IUnknown**>(&pIdentity))
M0K0I
malloc
manifestFilename     => %s
manifestPattern
memcmp
memcpy
memcpy_s
memset
Microsoft
Microsoft Corporation
Microsoft Corporation1
Microsoft Corporation1&0$
Microsoft Corporation1.0,
Microsoft Corporation1-0+
Microsoft Corporation1200
Microsoft Time-Stamp PCA 2010
Microsoft Time-Stamp PCA 20100
Microsoft Time-Stamp Service
Microsoft Time-Stamp Service0
Microsoft Windows0
Module
Module_Raw
MODULEGUID
MODULETYPE
MoveFileW
Msg:[%ws] 
msvcrt.dll
MultiByteToWideChar
N0L0J
Nikn0
No catalog found for %S
No payload found @ %s
No SxS directory found
nonsxs
NoRemove
ntdll.dll
O0M0K
Offline
Offline_InstallAssembly(absoluteAssemblyDir, absoluteManifestFilename, pIMalloc, pStore, pIdentity, pAppIdAuthority)
Offline_SxsStoreTraceInitialize()
oK0D$"<
ole32.dll
OLEAUT32.dll
onecore\base\wcp\wcpstub\cwcpdll.cpp
onecore\internal\sdk\inc\wil\opensource\wil\resource.h
onecore\internal\sdk\inc\wil\opensource\wil\win32_helpers.h
Online
onlinePath.Append(HIVEPREFIX_HKLM)
onlinePath.Append(onlineRegistryPath)
onlinePath.Length() != HIVEPREFIX_HKLM_LENGTH + wcslen(onlineRegistryPath)
OpenExistingOfflineStore
OpenSemaphoreW
OriginalFilename
OutputDebugStringA
OutputDebugStringW
Parameters.Set_pszHostRegistryMachineComponentsPath(subkey.get())
Parameters.Set_pszHostRegistryMachineSoftwarePath(subkey.get())
Parameters.Set_pszHostRegistryMachineSystemPath(subkey.get())
Parameters.Set_pszHostSystemDrivePath(offlineSystemDrive.get())
Parameters.Set_pszHostWindowsDirectoryPath(offlineWindir.get())
ParseManifest
ParseManifestEx
pAssemblyCache->InstallAssembly(0, absoluteManifestFilename, nullptr)
Pend Transaction failed with 0x%x
pIdentity->GetAttribute(nullptr, L"PublicKeyToken", &publicKeyToken)
pIdentity->GetAttribute(nullptr, L"Version", &version)
pIdentity->GetAttribute(nullptr, L"VersionScope", &versionScope)
PjeSW
PostApply
PostGather
PPPPP
PPPPVWP
PQQhPB
PQQQhL:
PreApply
PreGather
ProductName
ProductVersion
ProgID
Programmable
PSSSV
PublicKeyToken
PVh(E
q(9>u
QQSVWj
QRRRh8Y
QRRRP
QSVWh
QueryPerformanceCounter
R!s4Z
r~akow
RaiseException
RaiseFailFastException
realloc
Redmond1
RegCloseKey
RegCreateKeyExA
RegDeleteKeyA
RegDeleteKeyExA
RegDeleteValueA
RegEnumKeyExA
RegEnumValueW
REGISTRY
RegOpenKeyExA
RegOpenKeyExW
RegOpenKeyIfExists(HKEY_LOCAL_MACHINE, WINSXS_WINNERS_INFO_REGKEY, 0, KEY_READ | KEY_WOW64_64KEY, hkeyWinners)
RegOpenKeyIfExists(hkeyWinnerAssembly.get(), versionBuffer, 0, KEY_READ | KEY_WOW64_64KEY, hkeyWinnerAssemblyFV)
RegOpenKeyIfExists(hkeyWinners.get(), versionLessKeyform, 0, KEY_READ | KEY_WOW64_64KEY, hkeyWinnerAssembly)
RegQueryInfoKeyA
RegQueryValueExW
RegQueryValueIfExists(hkeyWinnerAssemblyFV.get(), versionBuffer, nullptr, &type, installMap, &installMapSize, found)
RegSetValueExA
ReleaseMutex
ReleaseSemaphore
RemoveDirectoryW
Renamed backup assembly %s -> %s
Renaming backup assembly %s -> %s
Required Pend Transaction failed with 0x%x
RETURN_HR(%S) failed with 0x%x
RETURN_HR_IF(%S) failed with 0x%x
RETURN_IF_FAILED(%S) failed with 0x%x
RETURN_IF_NULL_ALLOC(%S) failed with 0x%x
RETURN_IF_WIN32_BOOL_FALSE(%S) failed with 0x%x
ReturnHr
RichY
RPCRT4.dll
RpcStringFreeW
RRRRRRR
RtlDisownModuleHeapAllocation
RtlDllShutdownInProgress
RtlFreeHeap
RtlRaiseStatus
RtlWcpDllDebugEntrypoint
s09>uO
Scanning for assemblies %s
SECURITY
SetErrorMode
SetIsolationIMalloc
SetLastError
SetThreadLocale
SetUnhandledExceptionFilter
SHELL32.dll
SHGetFileInfoA
SizeofResource
Sleep
SOFTWARE
Software
SOFTWARE\Microsoft\Windows\CurrentVersion\Component Based Servicing\Version
Software\Microsoft\Windows\CurrentVersion\SideBySide\Winners
SPh8!
SssBindServicingStack
SssGetServicingStackFilePath
SssGetServicingStackFilePathLength
SssPreloadDownlevelDependencies
SssReleaseServicingStack
SSSSSSSPSSSV
strcat_s
strcpy_s
StringCchCatW(absoluteAssemblySubDir.get(), absoluteAssemblySubDirLength, wfd.cFileName)
StringCchCatW(absoluteManifestFilename.get(), absoluteManifestFilenameLength, L"\\")
StringCchCatW(absoluteManifestFilename.get(), absoluteManifestFilenameLength, manifestWFD.cFileName)
StringCchCatW(assemblyDir, MAX_PATH, cursor)
StringCchCatW(assemblyDir, MAX_PATH, L"\\*")
StringCchCatW(assemblyDir, MAX_PATH, L"\\winsxs")
StringCchCatW(assemblyFullPath, MAX_PATH, L"\\")
StringCchCatW(assemblyPathPattern, MAX_PATH, L"\\SxsAsm*")
StringCchCatW(backupDestPath, MAX_PATH, L"\\")
StringCchCatW(candidateCatalogPath, MAX_PATH, L"\\*")
StringCchCatW(candidateCatalogPath, MAX_PATH, SXS_CATALOG_FILE_EXTENSION)
StringCchCatW(candidateManifestPath, MAX_PATH, L"\\*")
StringCchCatW(candidateManifestPath, MAX_PATH, SXS_MANIFEST_FILE_EXTENSION)
StringCchCatW(manifestAbsoluteFilename, MAX_PATH, L"\\")
StringCchCatW(manifestAndSxsCatalogDir, MAX_PATH, L"\\manifests")
StringCchCatW(manifestAndSxsCatalogDir, MAX_PATH, L"\\winsxs")
StringCchCatW(manifestPattern.get(), manifestPatternLength, L"\\*.manifest")
StringCchCatW(sourceFilePath, MAX_PATH, L"\\")
StringCchCatW(wcpPath, MAX_PATH, L"\\wcp.dll")
StringCchCopyW(absoluteAssemblySubDir.get(), absoluteAssemblySubDirLength, assemblyFullPath)
StringCchCopyW(absoluteManifestFilename.get(), absoluteManifestFilenameLength, absoluteAssemblySubDir.get())
StringCchCopyW(assemblyDir, MAX_PATH, windir.get())
StringCchCopyW(assemblyFullPath, MAX_PATH, workingDir.get())
StringCchCopyW(assemblyPathPattern, MAX_PATH, workingDir.get())
StringCchCopyW(backupDestPath, MAX_PATH, backupDir)
StringCchCopyW(backupPath, backupPathSize, backupDir)
StringCchCopyW(backupPath, backupPathSize, L"")
StringCchCopyW(candidateCatalogPath, MAX_PATH, manifestAndSxsCatalogDir)
StringCchCopyW(candidateManifestPath, MAX_PATH, manifestDir)
StringCchCopyW(catalogPath, MAX_PATH, ManifestPath)
StringCchCopyW(cursor, fileNameBufferSize - (cursor - manifestFilename), SXS_MANIFEST_FILE_EXTENSION)
StringCchCopyW(cursor, MAX_PATH-(cursor-catalogPath), SXS_CATALOG_FILE_EXTENSION)
StringCchCopyW(DestFileName, DestFileNameBufferSize, cursor)
StringCchCopyW(DestFileName, DestFileNameBufferSize, wfd.cFileName)
StringCchCopyW(manifestAbsoluteFilename, MAX_PATH, manifestAndSxsCatalogDir)
StringCchCopyW(manifestAndSxsCatalogDir, MAX_PATH, windir.get())
StringCchCopyW(manifestFilename, fileNameBufferSize, wfdCatalog.cFileName)
StringCchCopyW(manifestPattern.get(), manifestPatternLength, absoluteAssemblySubDir.get())
StringCchCopyW(path.get(), pathLength, offlinePath.get())
StringCchCopyW(SourceFileName, SourceFileNameBufferSize, wfd.cFileName)
StringCchCopyW(sourceFilePath, MAX_PATH, assemblyDir)
StringCchCopyW(versionBuffer, ARRAYSIZE(versionBuffer), version)
StringCchCopyW(workingPath, workingPathSize, workingDir.get())
StringCchPrintfW(backupDir, ARRAYSIZE(backupDir), L"%s\\SxsAsm%u", workingDir.get(), Index)
StringCchPrintfW(targetDir, ARRAYSIZE(targetDir), L"%s\\Error-SxsAsm%u", workingDir, index)
StringFileInfo
StringFromCLSID
StringFromGUID2
strncpy_s
Submitting install transaction
Submitting stage transaction with %d operations
Submitting uninstall transaction
SVWj@
Sxs Migration Plugin
sxs.dll
SxsMigPlugin.dll
SxsMigPlugin.MigrationPlugin
SxsMigPlugin.MigrationPlugin.1
SxsMigPlugin.pdb
SxsMigPlugin: Finished %s
SxsMigPlugin: Offline: %s
SxsMigPlugin: Running offline on downlevel OS; failures are critical and will abort migration.
SxsMigPlugin: Running on WinPE after an offline failure; taking no action and signaling retry to run the plugin online.
SxsMigPlugin: Running online following an offline failure; failures beyond this point are considered non-fatal.
SxsMigPlugin: Starting %s
SxsStoreWdsLog
SYSTEM
SYSTEM\CurrentControlSet\Control\MiniNt
SYSTEM\CurrentControlSet\Services\TrustedInstaller\Version
t!<.t
t"97t
t"f90t
t$ PQ
t$ PW
t$<WP
T$hPV
t$pVQ
t;< t7S
t`j.Zf;
t7j.Zf;
TerminateProcess
Thales TSS ESN:AB41-4B27-F0261%0#
ThreadingModel
tK97t(
tKR-oD
TlP0X
tOWh|'
Transact2 failed with 0x%x
Transact2 sensing pending content failed with 0x%x
Translation
tVV9_
TypeLib
u'!D$D
u?!t$L
u_SSSSSSS
U0S0Q
u2h(^
u5h$]
u5h0\
u5h0Z
u5hh\
u5hL[
u5ht]
u5htZ
u5hx[
Unable to get procedure CreateNewOfflineStore
Unable to get procedure CreateNewPseudoWindows
Unable to get procedure CreateNewPseudoWindowsEx
Unable to get procedure CreateNewWindows
Unable to get procedure DismountRegistryHives
Unable to get procedure FreeAndZeroCSI_BROKEN_COMPONENT
Unable to get procedure FreeAndZeroCSI_REPAIRED_COMPONENT
Unable to get procedure GetAppIdAuthority
Unable to get procedure GetIdentityAuthority
Unable to get procedure GetSystemStore
Unable to get procedure InitializeCSI_BROKEN_COMPONENT
Unable to get procedure InitializeCSI_REPAIRED_COMPONENT
Unable to get procedure OpenExistingOfflineStore
Unable to get procedure ParseManifest
Unable to get procedure ParseManifestEx
Unable to get procedure RtlWcpDllDebugEntrypoint
Unable to get procedure SetIsolationIMalloc
Unable to get procedure WcpSetHelperCallback
UnhandledExceptionFilter
uNPPV
UnregisterClassA
USER32.dll
UuidCreate
UuidToStringW
V([_^
VarFileInfo
Version
VersionIndependentProgID
VersionScope
Vj ^V
VQPWV
VS_VERSION_INFO
VWhP"
VWj:Z
WaitForSingleObject
WaitForSingleObjectEx
Washington1
wcp.dll
wcpDll.GetAppIdAuthority(&pAppIdAuthority)
wcpDll.GetIdentityAuthority(&pIdentity)
wcpDll.Initialize(wcpPath.get())
wcpDll.OpenExistingOfflineStore( OPEN_EXISTING_OFFLINE_STORE_FLAGS_USE_KTM | OPEN_EXISTING_OFFLINE_STORE_FLAGS_MINIMAL_SYSTEM, &Parameters, __uuidof(IStore2), reinterpret_cast<IUnknown**>(&store2), nullptr)
WcpInitialize
WcpSetHelperCallback
WcpShutdown
wcschr
wcsncpy_s
wcsrchr
wcstoul
wdscore.dll
WdsSetupLogMessageA
wfdCatalog.cFileName => %s
WideCharToMultiByte
WilError_03
workingDir
WWWPR
X>?f#
y"Sh@C
Y__^[
y+Shx 
y=Vh`.
z.9Wv
