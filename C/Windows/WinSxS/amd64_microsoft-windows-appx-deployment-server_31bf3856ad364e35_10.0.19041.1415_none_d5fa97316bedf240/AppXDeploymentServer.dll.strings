                                     Callstack: %p %p %p %p %p %p %p %p %p %p %p %p
  ""$D
 (0>*
 (08@HP
 (08@HP^*
 (08@HPX`hp~*
 (08@HPX`hpx
 (08@HPX`n*
 (08@HV*
 (08@N*
 (08F*
 (x$T ~
 *<"t
 @8}8t?L
 4P2"
 A%2O+r
 A^^]
 A^_]
 A^_^
 A^_^[]
 A^A\_
 A^A\_^]
 A__]
 A__^
 A_A\]
 A_A\_
 A_A]_^]
 A_A^]
 A_A^_
 A_A^_^]
 A_A^_H
 A_A^A\
 A_A^A\_]
 A_A^A\_^
 A_A^A\_^][
 A_A^A]_]
 A_A^A]_^
 A_A^A]A\_
 A_A^A]A\_^]
 addPackageList:
 D8}@uG
 D8}gt/L
 D8t$0tJH
 destagePackageList:
 for user 
 H3E H3E
 Hcy@H
 is updating to 
 Microsoft Corporation. All rights reserved.
 Operating System
 removePackageList:
 stagePackageList:
 t&A;
 tDD8
 UPDATE Package SET Flags=Flags|0x400 WHERE _PackageID IN (SELECT toSetFlags._PackageID FROM PACKAGE AS toSetFlags INNER JOIN (SELECT p._PackageID, p.SourceBundle, MAX(Version) AS MaxVersion FROM Package AS p WHERE p.PackageType&0x21!=0 AND (p._WorkId=0 OR p._WorkId=?1) AND EXISTS (SELECT 1 FROM PackageUser AS puser WHERE p._PackageID=puser.Package AND puser._WorkId=?1) AND NOT EXISTS (SELECT 1 FROM PackageUser AS pu WHERE p._PackageID=pu.Package AND (pu.DeploymentState=6 OR pu.DeploymentState=5) AND (pu._WorkId=0 OR pu._WorkId=?1) AND (p._WorkId=0  OR p._WorkId=?1) LIMIT 1) GROUP BY PackageFamily) highestVersion ON CASE WHEN toSetFlags.SourceBundle=0 THEN highestVersion._PackageID=toSetFlags._PackageID ELSE toSetFlags.SourceBundle=highestVersion.SourceBundle AND toSetFlags.PackageType=8 END)
 UPDATE Package SET Flags=Flags|0x400 WHERE _PackageID IN (SELECT toSetFlags._PackageID FROM PACKAGE AS toSetFlags INNER JOIN (SELECT p._PackageID, p.SourceBundle, MAX(Version) AS MaxVersion FROM Package AS p WHERE p.PackageType&0x21!=0 AND p._WorkId=0 AND NOT EXISTS (SELECT 1 FROM PackageUser AS pu WHERE p._PackageID=pu.Package AND (pu.DeploymentState=6 OR pu.DeploymentState=5) AND pu._WorkId=0 AND p._WorkId=0 LIMIT 1) AND (p.PackageFamily NOT IN (SELECT PackageFamily FROM Package WHERE Flags&0x400!=0 GROUP BY PackageFamily)) GROUP BY PackageFamily) highestVersion ON CASE WHEN toSetFlags.SourceBundle=0 THEN highestVersion._PackageID=toSetFlags._PackageID ELSE toSetFlags.SourceBundle=highestVersion.SourceBundle AND toSetFlags.PackageType=8 END)
 UPDATE Package SET Flags=Flags|0x400 WHERE _PackageID IN (SELECT toSetFlags._PackageID FROM PACKAGE AS toSetFlags INNER JOIN (SELECT p._PackageID, p.SourceBundle, MAX(Version) AS MaxVersion FROM Package AS p WHERE p.PackageType&0x21!=0 AND p.PackageFamily=? AND p._WorkId=0 AND NOT EXISTS (SELECT 1 FROM PackageUser AS pu WHERE p._PackageID=pu.Package AND (pu.DeploymentState=6 OR pu.DeploymentState=5) AND pu._WorkId=0 AND p._WorkId=0 LIMIT 1) GROUP BY PackageFamily) highestVersion ON CASE WHEN toSetFlags.SourceBundle=0 THEN highestVersion._PackageID=toSetFlags._PackageID ELSE toSetFlags.SourceBundle=highestVersion.SourceBundle AND toSetFlags.PackageType=8 END)
 UPDATE Package SET Flags=Flags|0x400 WHERE _PackageID IN (SELECT toSetFlags._PackageID FROM PACKAGE AS toSetFlags INNER JOIN (SELECT p._PackageID, p.SourceBundle, MAX(Version) AS MaxVersion FROM Package AS p WHERE p.PackageType&0x21!=0 AND p.PackageFamily=?1 AND (p._WorkId=0 OR p._WorkId=?2) AND NOT EXISTS (SELECT 1 FROM PackageUser AS pu WHERE p._PackageID=pu.Package AND (pu.DeploymentState=6 OR pu.DeploymentState=5) AND (pu._WorkId=0 OR pu._WorkId=?2) AND (p._WorkId=0  OR p._WorkId=?2)  LIMIT 1) GROUP BY PackageFamily) highestVersion ON CASE WHEN toSetFlags.SourceBundle=0 THEN highestVersion._PackageID=toSetFlags._PackageID ELSE toSetFlags.SourceBundle=highestVersion.SourceBundle AND toSetFlags.PackageType=8 END)
 updateList:
 UpstreamDependentPackageFullName
 Windows
!(H!l$ I
!\$ L
!\$@H
!\$0H
!\$XH
!]PE3
!{X!{`
!|$0H
!<HOp
!55t6
!D8l$0uUH
!L$ !L$03
!LR4|
!Ncz#i
!t$`H
!This program cannot be run in DOS mode.
!'U1w
!WyMo
"[G<%kl
"`zSf!"W
"0$8(
"0082
"46fL
"D9|$0t6H
"lH|O
"R&F$|",*F"|  
#|H<`
#6onecore\admin\appmodel\stagingmanager\src\encryptionstaginghelpers.cpp
#8]@t\H
#D8mwu&
#RewO
#StreamingDataSourcePrefetchCanceled
#text
$#Au+
$0< u
$0ku!
$0ku(
$7l^B
$9t$0u
$B"`*",J*
$D8h@t
$f$F(B
$NduxV,
$p(:*
$q=Vm
%:q;.<
%;\$8t
%|fUN<
%02u%02u%02u %02u%02u%02u.%03u [%s 0x%08X] P%x T%x: %s
%02u%02u%02u %02u%02u%02u.%03u [Profile %ums] P%x T%x: %s
%02u%02u%02u %02u%02u%02u.%03u [Trace] P%x T%x: %s
%1.8e;%1.8e;%1.8e;%1.8e;%1.8e;%1.8e
%AppRepository%
%AppRepository%\Downlevel\StateRepository-Machine.srd
%AppRepository%\StateRepository-Deployment.srd
%AppRepository%\StateRepository-Machine.srd
%d.%d.%d.%d
%f,%f,%f
%hs!%p: 
%hs(%d) tid(%x) %08X %ws
%hs(%u)\%hs!%p: 
%hu.%hu.%hu.%hu
%PROGRAMDATA%
%programdata%\Microsoft\Windows\AppRepository\
%ProgramFiles%
%s!%s
%s-%s-
%s-%s%c
%s-%s%c0
%s%s%s%s
%s%s\%s
%s.%s
%s.%s%s
%s:%s:%s
%s\%s
%s\AC
%s\AppData
%s\LocalCache
%s\LocalState
%s\microsoft.system.package.metadata\%s
%s\resources.pri
%s\RoamingState
%s\Settings
%s\TempState
%s\WpSystem
%s\WpSystem\%s\AppData\Local\Packages
%s\WpSystem\*
%s\WpSystem\AppData\Local\Packages
%s_%08X-%04X-%04X-%02X%02X-%02X%02X%02X%02X%02X%02X.%s
%s_%s_%s
%s_%s_%s_%s
%s_32
%s_64
%SystemRoot%\System32\RuntimeBroker.exe
%USERPROFILE%
%windir%\Logs\WindowsUpdate\
%windir%\Temp\
&"(&&
&:L9,
&|(n&
&< >R
&>J>&
&8nG=
&9l$@t?H
&D8t$@t
&NN}2
&v:DP
(/*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application' and @*[local-name()='Executable']])
(/*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application' and @*[local-name()='HostId']])
(/*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application']/*[local-name()='Extensions']/*[local-name()='Extension' and @*[local-name()='Executable']])
(/*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application']/*[local-name()='Extensions']/*[local-name()='Extension' and @*[local-name()='HostId']])
(/*[local-name()='Package']/*[local-name()='Extensions']/*[local-name()='Extension' and @*[local-name()='Executable']])
(/*[local-name()='Package']/*[local-name()='Extensions']/*[local-name()='Extension' and @*[local-name()='HostId']])
(\EXE
(_^][
(|$@I
(8%Qg!
(A;;0x120089;;;BU)
(A;;0x1200A9;;;BU)
(A;;0x1200a9;;;RC)
(A;;FR;;;BU)
(A;;GA;;;SY)(A;;0x120089;;;S-1-15-2-2)(A;;0x120089;;;LS)(A;;0x120089;;;NS)(A;;GA;;;S-1-5-80-956008885-3418522649-1831038044-1853292631-2271478464)(A;;0x120089;;;S-1-15-3-1024-3635283841-2530182609-996808640-1887759898-3848208603-3313616867-983405619-2501854204)
(A;;GA;;;SY)(A;;0x1200A9;;;S-1-15-2-2)(A;;0x1200A9;;;LS)(A;;0x1200A9;;;NS)(A;;GA;;;S-1-5-80-956008885-3418522649-1831038044-1853292631-2271478464)(A;;0x1200A9;;;S-1-15-3-1024-3635283841-2530182609-996808640-1887759898-3848208603-3313616867-983405619-2501854204)
(A;CI;FRFX;;;BA)(XA;;FRFX;;;BU;(exists WIN://SYSAPPID))
(A;CI;FRFX;;;BU)(XA;;FX;;;BU;(exists WIN://SYSAPPID))
(A;CI;FX;;;BU)(A;OICI;0x010116;;;BA)
(A;OICI;0x120089;;;%s)
(A;OICI;0x120089;;;%s)(A;OICI;0x120089;;;%s)
(A;OICI;0x120089;;;BU)
(A;OICI;0x1200A9;;;%s)
(A;OICI;0x1200A9;;;%s)(A;OICI;0x1200A9;;;%s)
(A;OICI;0x1200A9;;;AC)
(A;OICI;0x1200A9;;;BU)
(A;OICI;0x1200A9;;;S-1-15-2-2)
(A;OICI;FR;;;BU)
(A;OICI;FRFX;;;BA)
(A;OICI;FRFX;;;BU)
(A;OICI;GR;;;S-1-15-3-1024-3635283841-2530182609-996808640-1887759898-3848208603-3313616867-983405619-2501854204)(A;OICI;GA;;;SY)(A;OICI;FR;;;RC)
(A;OICI;GRGX;;;S-1-15-3-1024-3635283841-2530182609-996808640-1887759898-3848208603-3313616867-983405619-2501854204)(A;OICI;GA;;;SY)(A;OICI;FRFX;;;LS)(A;OICI;FRFX;;;NS)(A;OICI;FRFX;;;RC)
(A;OICI;GRGX;;;S-1-15-3-1024-3635283841-2530182609-996808640-1887759898-3848208603-3313616867-983405619-2501854204)(A;OICI;GA;;;SY)(A;OICI;FRFX;;;RC)
(A^_^[
(A_A^A]A\_^[]
(aP"=$
(caller: %p) 
(D$@f
(D8uHu
(H93u!H
(null)
(onecore\admin\appmodel\packagemanager\server\serversidediskusage.cpp
(query only)
(t$ H
(t$@L
(t$0H
(t$PL
(Unknown)
(XA;;0x120089;;;BU;(exists WIN://PKG))
(XA;;0x1200A9;;;BU;(exists WIN://PKG))
(XA;;0x1200A9;;;BU;(WIN://SYSAPPID Contains "
(XA;OICI;0x120089;;;BU;(WIN://SYSAPPID Contains "%s"))
(XA;OICI;0x1200A9;;;BU;(WIN://SYSAPPID Contains "%s"))
)(A;OICI;0x1200a9;;;
)~wQ:
)5:c_
)L$`H
)L$`L
)L$PL
)L$pL
)MCfonecore\admin\appmodel\packagemanager\server\resetparameterprocessor.cpp
)Od3;
)t$ I
)t$0H
)t$0t%
***Invalid***
*.dat*
*.rslc
*[local-name()='%s']
*[local-name()='AllowedProduct']
*[local-name()='AppExecutionAlias']
*[local-name()='AppExtension']
*[local-name()='AppExtensionHost']/*[local-name()='Name']
*[local-name()='AppInstaller']/*[local-name()='Dependencies']/*[local-name()='Package']
*[local-name()='AppInstaller']/*[local-name()='MainBundle']
*[local-name()='AppInstaller']/*[local-name()='MainPackage']
*[local-name()='AppInstaller']/*[local-name()='OptionalPackages']/*[local-name()='Bundle']
*[local-name()='AppInstaller']/*[local-name()='OptionalPackages']/*[local-name()='Package']
*[local-name()='AppInstaller']/*[local-name()='RelatedPackages']/*[local-name()='Bundle']
*[local-name()='AppInstaller']/*[local-name()='RelatedPackages']/*[local-name()='Package']
*[local-name()='AppInstaller']/*[local-name()='UpdateSettings']/*[local-name()='AutomaticBackgroundTask']
*[local-name()='AppInstaller']/*[local-name()='UpdateSettings']/*[local-name()='ForceUpdateFromAnyVersion']
*[local-name()='AppInstaller']/*[local-name()='UpdateSettings']/*[local-name()='OnLaunch']
*[local-name()='AppInstaller']/@Uri
*[local-name()='AppInstaller']/@Version
*[local-name()='AppService']
*[local-name()='AppUriHandler']
*[local-name()='BackgroundTasks']/*[local-name()='Task']
*[local-name()='ContentPackageVisualElements']
*[local-name()='DisplayName']
*[local-name()='DriverConstraint']
*[local-name()='EditFlags']
*[local-name()='ExecutionAlias']
*[local-name()='FileTypeAssociation']
*[local-name()='FileTypeAssociation']/*[local-name()='SupportedFileTypes']/*[local-name()='FileType']
*[local-name()='HoloContent']
*[local-name()='Host']
*[local-name()='HostRuntime']
*[local-name()='InfoTip']
*[local-name()='Logo']
*[local-name()='MixedRealityModel']/@*[local-name()='Path']
*[local-name()='Properties']
*[local-name()='Protocol']
*[local-name()='PublisherCacheFolders']/*[local-name()='Folder']
*[local-name()='SupportedVerbs']/*[local-name()='Verb' and @Id='Open']
*[local-name()='VisualElements']
*[local-name()='VisualElements']/*[local-name()='ApplicationView']
*[local-name()='VisualElements']/*[local-name()='DefaultTile']/*[local-name()='MixedRealityModel']/*[local-name()='SpatialBoundingBox']
*[local-name()='VisualElements']/*[local-name()='DefaultTile']/*[local-name()='MixedRealityModel']/@Path
*[local-name()='VisualElements']/*[local-name()='DefaultTile']/*[local-name()='ShowNameOnTiles']/*[local-name()='ShowOn']
*[local-name()='VisualElements']/*[local-name()='DefaultTile']/@ShortName
*[local-name()='VisualElements']/*[local-name()='DefaultTile']/@ShowName
*[local-name()='VisualElements']/*[local-name()='DefaultTile']/@Square310x310Logo
*[local-name()='VisualElements']/*[local-name()='DefaultTile']/@Tall150x310Logo
*[local-name()='VisualElements']/*[local-name()='DefaultTile']/holo:HoloContent
*[local-name()='VisualElements']/*[local-name()='InitialRotationPreference']/*[local-name()='Rotation']
*[local-name()='VisualElements']/*[local-name()='LockScreen']
*[local-name()='VisualElements']/*[local-name()='LockScreen']/@BadgeLogo
*[local-name()='VisualElements']/*[local-name()='LockScreen']/@Notification
*[local-name()='VisualElements']/*[local-name()='SplashScreen']
*[local-name()='VisualElements']/*[local-name()='SplashScreen']/@*[local-name()='Optional']
*[local-name()='VisualElements']/*[local-name()='VisualGroup']
*[local-name()='VisualElements']/@BackgroundColor
*[local-name()='VisualElements']/@DisplayName
*[local-name()='VisualElements']/@ForegroundText
*[local-name()='XboxLive']
*_;*MBp
*+D4|iy
*0,t.
*1 UI
*9\$8v"H
*D8|$0u}D
*D8d$QtXL
*D8t$Au H
*fD93u
*R;Ei
*u I;
*x.:0u
, could not get user sid
, user SID: 
,cge$
,dE8_O
,J*<&F
,L9't
,p<DR
,xEPg
,Zndrz
.*"6.0"
... Applicability is offline, because it is not Installed for every user and is offline
... Applicability is offline, because package family is on an offline volume
... Applicability state is Installable because a higher version of the package was found, but the caller is forcing a downgrade.
... Applicability state is Installable because a higher version was found, but lower versions are installable
... Applicability state is Installable because it is a framework and concurrent architecture installs are allowed when neither of them is neutral.
... Applicability state is Installable because it is not already installed and no higher version was found
... Applicability state is Installable because the package is Inbox and a different version is currently installed
... Applicability state is Installed because a higher version of the package was found installed.
... Applicability state is Installed because the exact version, arch and language was found installed.
... Applicability state is Installed but package was not found in mini-repository. Applicability State is RequiresReinstall.
... Applicability state is Installed but this inbox package was not found in the per-user AllUserStore. Applicability State is RequiresReinstall.
... Applicability state is Not Installable
... Applicability state is NotInstallable because it is already installed with a different resourceID
... Applicability state is NotInstallable because the architecture is incompatible with the system
... Applicability state is NotInstallable because the package is incompatible with the system by policy
... Applicability state is RequiresReinstall because the exact version, arch and language was found installed, but it is in a bad status
... Checking Applicability for user
... Package may have been blocked because payload type is unknown
....... Package may have been blocked because payload type is unknown
./*[local-name()='VisualElements']
./m:VisualElements
./m2:VisualElements
./m3:VisualElements
.:0v.bB
.?AV<lambda_c11cd384dede5ed21b37ab49eb636685>@@
.?AVbad_alloc@std@@
.?AVbad_array_new_length@std@@
.?AVexception@std@@
.?AVResultException@wil@@
.?AVtype_info@@
._Q%N
.00cfg
.00l2
.appx_
.blockcache
.bqQ)7FF
.CRT$XCA
.CRT$XCU
.CRT$XCZ
.CRT$XIA
.CRT$XIC
.CRT$XIZ
.CRT$XPA
.CRT$XPZ
.CRT$XTA
.CRT$XTZ
.D8d$Rt.
.D8ugt%H
.data
.data$brc
.data$r$brc
.didat$2
.didat$3
.didat$4
.didat$5
.didat$6
.didat$7
.edata
.emsix
.gehcont
.gfids
.giats
.H:V<
.idata$2
.idata$3
.idata$4
.idata$5
.idata$6
.msix
.pdata
.rdata
.rdata$brc
.rdata$r
.rdata$zETW0
.rdata$zETW1
.rdata$zETW2
.rdata$zETW9
.rdata$zzzdbg
.recovery
.rslc
.rsrc
.rsrc$01
.rsrc$02
.rtc$IAA
.rtc$IZZ
.rtc$TAA
.rtc$TZZ
.text
.text$di
.text$mn
.text$mn$00
.text$x
.text$yd
.xdata
.xdata$x
.xn--
/*[local-name()="Package"]/*[local-name()="Applications"]/*[local-name()="Application" and (@EntryPoint="Windows.FullTrustApplication" or @EntryPoint="Windows.PartialTrustApplication")]
/*[local-name()="Package"]/*[local-name()="Applications"]/*[local-name()="Application" and @*[local-name()="RuntimeBehavior" and .="packagedClassicApp"]]
/*[local-name()="Package"]/*[local-name()="Applications"]/*[local-name()="Application" and @*[local-name()="RuntimeBehavior" and .="win32App"]]
/*[local-name()="Package"]/*[local-name()="Applications"]/*[local-name()="Application" and @*[local-name()="TrustLevel" and .="mediumIL"] and not(@*[local-name()="RuntimeBehavior" and .="packagedClassicApp"] or @*[local-name()="RuntimeBehavior" and .="win32App"]) and not(@EntryPoint="Windows.FullTrustApplication")]
/*[local-name()="Package"]/*[local-name()="Applications"]/*[local-name()="Application" and @*[local-name()="TrustLevel" and .="mediumIL"] and not(@EntryPoint="Windows.FullTrustApplication" or not(boolean(//EntryPoint)))]
/*[local-name()="Package"]/*[local-name()="Applications"]/*[local-name()="Application" and @*[local-name()="TrustLevel" and .="mediumIL"]]
/*[local-name()="Package"]/*[local-name()="Applications"]/*[local-name()="Application" and @EntryPoint="Windows.FullTrustApplication"]
/*[local-name()="Package"]/*[local-name()="Applications"]/*[local-name()="Application"]/*[local-name()="Extensions"]/*[local-name()="Extension" and ( @Category="windows.fullTrustProcess" or @Category="windows.toastNotificationActivation" or @Category="windows.searchProtocolHandler" or @Category="windows.appPrinter" or @Category="windows.searchFilterHandler" or @Category="windows.searchPropertyHandler" or @Category="windows.mailProvider" or @Category="windows.comServer" or @Category="windows.comInterface" )]
/*[local-name()="Package"]/*[local-name()="Applications"]/*[local-name()="Application"]/*[local-name()="Extensions"]/*[local-name()="Extension" and ( @Category="windows.fullTrustProcess" or @Category="windows.toastNotificationActivation" or @Category="windows.searchProtocolHandler" or @Category="windows.appPrinter" or @Category="windows.searchFilterHandler" or @Category="windows.searchPropertyHandler" or @Category="windows.mailProvider" or @Category="windows.comServer" or @Category="windows.comInterface" or @Category="windows.desktopAppMigration" )]
/*[local-name()="Package"]/*[local-name()="Applications"]/*[local-name()="Application"]/*[local-name()="Extensions"]/*[local-name()="Extension" and (@EntryPoint="Windows.FullTrustApplication" or @EntryPoint="Windows.PartialTrustApplication")]
/*[local-name()="Package"]/*[local-name()="Applications"]/*[local-name()="Application"]/*[local-name()="Extensions"]/*[local-name()="Extension" and @*[local-name()="RuntimeBehavior" and .="packagedClassicApp"]]
/*[local-name()="Package"]/*[local-name()="Applications"]/*[local-name()="Application"]/*[local-name()="Extensions"]/*[local-name()="Extension" and @*[local-name()="RuntimeBehavior" and .="win32App"]]
/*[local-name()="Package"]/*[local-name()="Applications"]/*[local-name()="Application"]/*[local-name()="Extensions"]/*[local-name()="Extension" and @*[local-name()="TrustLevel" and .="mediumIL"] and not(@*[local-name()="RuntimeBehavior" and .="packagedClassicApp"] or @*[local-name()="RuntimeBehavior" and .="win32App"]) and not(@EntryPoint="Windows.FullTrustApplication")]
/*[local-name()="Package"]/*[local-name()="Applications"]/*[local-name()="Application"]/*[local-name()="Extensions"]/*[local-name()="Extension" and @*[local-name()="TrustLevel" and .="mediumIL"] and not(@EntryPoint="Windows.FullTrustApplication" or not(boolean(//EntryPoint)))]
/*[local-name()="Package"]/*[local-name()="Applications"]/*[local-name()="Application"]/*[local-name()="Extensions"]/*[local-name()="Extension" and @*[local-name()="TrustLevel" and .="mediumIL"]]
/*[local-name()="Package"]/*[local-name()="Applications"]/*[local-name()="Application"]/*[local-name()="Extensions"]/*[local-name()="Extension" and @Category="windows.activatableClass.outOfProcessServer"]/*[local-name()="OutOfProcessServer" and (@RunFullTrust="true" or @RunFullTrust="1")]
/*[local-name()="Package"]/*[local-name()="Applications"]/*[local-name()="Application"]/*[local-name()="Extensions"]/*[local-name()="Extension" and @EntryPoint="Windows.FullTrustApplication"]
/*[local-name()="Package"]/*[local-name()="Extensions"]/*[local-name()="Extension" and ( @Category="windows.firewallRules" or  @Category="windows.comInterface"  or  @Category="windows.primaryInteropAssemblies" or  @Category="windows.classicAppCompatKeys" )]
/*[local-name()="Package"]/*[local-name()="Extensions"]/*[local-name()="Extension" and (@EntryPoint="Windows.FullTrustApplication" or @EntryPoint="Windows.PartialTrustApplication")]
/*[local-name()="Package"]/*[local-name()="Extensions"]/*[local-name()="Extension" and @*[local-name()="RuntimeBehavior" and .="packagedClassicApp"]]
/*[local-name()="Package"]/*[local-name()="Extensions"]/*[local-name()="Extension" and @*[local-name()="RuntimeBehavior" and .="win32App"]]
/*[local-name()="Package"]/*[local-name()="Extensions"]/*[local-name()="Extension" and @*[local-name()="TrustLevel" and .="mediumIL"] and not(@*[local-name()="RuntimeBehavior" and .="packagedClassicApp"] or @*[local-name()="RuntimeBehavior" and .="win32App"]) and not(@EntryPoint="Windows.FullTrustApplication")]
/*[local-name()="Package"]/*[local-name()="Extensions"]/*[local-name()="Extension" and @*[local-name()="TrustLevel" and .="mediumIL"] and not(@EntryPoint="Windows.FullTrustApplication" or not(boolean(//EntryPoint)))]
/*[local-name()="Package"]/*[local-name()="Extensions"]/*[local-name()="Extension" and @*[local-name()="TrustLevel" and .="mediumIL"]]
/*[local-name()="Package"]/*[local-name()="Extensions"]/*[local-name()="Extension" and @Category="windows.activatableClass.outOfProcessServer"]/*[local-name()="OutOfProcessServer" and (@RunFullTrust="true" or @RunFullTrust="1")]
/*[local-name()="Package"]/*[local-name()="Extensions"]/*[local-name()="Extension" and @EntryPoint="Windows.FullTrustApplication"]
/*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application' and @Id='%s']
/*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application' and @Id='%s']/*[local-name()='ApplicationContentUriRules']
/*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application' and @Id='%s']/*[local-name()='Extensions']/*[local-name()='Extension' and @Category='windows.ntServices']
/*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application' and @Id='%s']/*[local-name()='Extensions']/*[local-name()='Extension']
/*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application' and @Id='%s']/*[local-name()='Properties']/*
/*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application' and @Id='%s']/*[local-name()='VisualElements']/*[local-name()='DefaultTile']
/*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application' and @StartPage] | /*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application']/*[local-name()='Extensions']/*[local-name()='Extension' and @StartPage]
/*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application']
/*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application']/*[local-name()='Extensions']/*[local-name()='Extension' and @Category='windows.localExperiencePack']
/*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application']/*[local-name()='Extensions']/*[local-name()='Extension' and @Category='windows.ntServices']
/*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application']/*[local-name()='Extensions']/*[local-name()='Extension' and @Category='windows.service']
/*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application']/*[local-name()='Extensions']/*[local-name()='Extension' and @Category='xbox.live']
/*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application']/*[local-name()='Extensions']/*[local-name()='Extension' and @Category='xbox.vui']/*[local-name()='XboxVui']
/*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application']/*[local-name()='Ratings']
/*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application']/*[local-name()='VisualElements']/*[local-name()='DefaultTile']
/*[local-name()='Package']/*[local-name()='Capabilities']/*[local-name()='Capability'][@Name='contentRestrictions']
/*[local-name()='Package']/*[local-name()='Capabilities']/*[local-name()='CustomCapability' and @Name='Microsoft.coreAppActivation_8wekyb3d8bbwe']
/*[local-name()='Package']/*[local-name()='Capabilities']/*[local-name()='CustomCapability' and @Name='Microsoft.deployFullTrustOnHost_8wekyb3d8bbwe']
/*[local-name()='Package']/*[local-name()='Dependencies']/*[local-name()!='HostRuntimeDependency' and local-name()!='TargetDeviceFamily']
/*[local-name()='Package']/*[local-name()='Dependencies']/*[local-name()='DriverDependency']
/*[local-name()='Package']/*[local-name()='Dependencies']/*[local-name()='HostRuntimeDependency']
/*[local-name()='Package']/*[local-name()='Dependencies']/*[local-name()='OSPackageDependency']
/*[local-name()='Package']/*[local-name()='Extensions']/*[local-name()='Extension' and @Category='windows.hostRuntime']
/*[local-name()='Package']/*[local-name()='Extensions']/*[local-name()='Extension' and @Category='windows.installedLocationVirtualization']
/*[local-name()='Package']/*[local-name()='Extensions']/*[local-name()='Extension' and @Category='windows.mutablePackageDirectories']/*[local-name()='MutablePackageDirectories']/*[local-name()='MutablePackageDirectory']
/*[local-name()='Package']/*[local-name()='Extensions']/*[local-name()='Extension'] | /*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application']/*[local-name()='Extensions']/*[local-name()='Extension']
/*[local-name()='Package']/*[local-name()='Extensions']/*[local-name()='Extension'] | /*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application']/*[local-name()='Extensions']/*[local-name()='Extension'] | /*[local-name()='Package']/*[local-name()='Extensions']/mx:PackageExtension
/*[local-name()='Package']/*[local-name()='Extensions']/*[local-name()='Extension'] |/*[local-name()='Package']/*[local-name()='Extensions']/mx:PackageExtension
/*[local-name()='Package']/*[local-name()='Extensions']/*[local-name()='Extension']/*[local-name()='CustomInstall']
/*[local-name()='Package']/*[local-name()='Extensions']/*[local-name()='PackageExtension' and @Category='xbox.contentpackage']/*[local-name()='ContentPackage']
/*[local-name()='Package']/*[local-name()='Prerequisites']/*[local-name()='OSName']
/*[local-name()='Package']/*[local-name()='Properties']/*[local-name()='*']
/*[local-name()='Package']/*[local-name()='Properties']/*[local-name()='AllowExternalContent' and .='true']
/*[local-name()='Package']/*[local-name()='Properties']/*[local-name()='FileSystemWriteVirtualization' and text()='disabled']
/*[local-name()='Package']/*[local-name()='Properties']/*[local-name()='ModificationPackage' and text()='true']
/*[local-name()='Package']/*[local-name()='Properties']/*[local-name()='PackageIntegrity']/*[local-name()='Content']/@Enforcement
/*[local-name()='Package']/*[local-name()='Properties']/*[local-name()='PackageIntegrity']/*[local-name()='ExeSigning']/@Enforcement
/*[local-name()='Package']/*[local-name()='Properties']/*[local-name()='PackageIntegrity']/*[local-name()='ModuleSigning']/@Enforcement
/*[local-name()='Package']/*[local-name()='Properties']/*[local-name()='PublisherDisplayName']
/*[local-name()='Package']/*[local-name()='Properties']/*[local-name()='RegistryWriteVirtualization' and text()='disabled']
/*[local-name()='Package']/*[local-name()='Properties']/*[local-name()='SupportedUsers']
//*[local-name() = 'Extension' and @Category = 'windows.settingsApp']
/;\$8t'
/5Uz-
/D8d$@
/ejEc
/X|vH
: could not check access
: could not get SDDL
: could not get security descriptor
: owner is 
: SDDL is 
: user has access 0x
: user has no access
:%|fUu3
:&*$"
:&.<|$&<
:&26*X"P
:(s$+u(
::GetLastError()
:@8y=tCH
:[WVG
:\t"H
:8\$@tOH
:8< >
-:d=[
:D8mou
:gMd`u3
:memory:
:m'w8u(
:n$p^
:n:T:B:
:OK`U/
:PKCXu
:PKCXuD
:TOC8uOD9B
:y1@C
;\$8r
;\$xu
;|$Pr
;D8e8
;f99t{L+
;kOXH5Kd
;L$Hr
;L$hr
;onecore\admin\appmodel\dependencymanager\deferredregistrationsresolver.cpp
;onecore\admin\appmodel\deploymentmanager\src\appreputationhelpers.cpp
;P$t#H
;PKCXt#
;t$@r
;t$@t
;t$`r
;T$Hv-
?_Xbad_function_call@std@@YAXXZ
?_Xlength_error@std@@YAXPEBD@Z
?_Xout_of_range@std@@YAXPEBD@Z
?9\$Hu.L
?ARI8u
?P/G?
?PFun=
?RSST
@ !H0H
@(D8d$0t;
@*[local-name()='DdeExecApplication']
@*[local-name()='DdeExecCommand']
@*[local-name()='DdeExecIfExec']
@*[local-name()='DdeExecTopic']
@*[local-name()='HostId']
@*[local-name()='Parameters']
@*[local-name()='RuntimeBehavior']
@*[local-name()='ServiceWorker']
@*[local-name()='Subsystem']
@*[local-name()='SupportsMultipleInstances']
@*[local-name()='TrustLevel']
@.data
@.didat
@.reloc
@<@e'
@6><<
@6>8<
@66666666[
@8!HHH
@8@HV*
@8|$ u
@8|$@
@8|$@ub
@8|$0
@8|$0t
@8|$0u;
@8|$1u;
@8|$1ua@
@8|$2
@8|$at
@8|$AtW
@8|$pt
@8}@t
@8}@u
@8<.u
@8==h
@8iMuE
@8l$0
@8l$Xu]H
@8t$@
@8t$@tAA
@8t$`
@8t$`t
@8t$0
@8t$0u!H
@8t$1
@8t$8
@8t$8u
@8t$At`H
@8t$AtGH
@8t$D
@8t$Pt3
@8u uD
@8u(t
@8u@t
@8u@ta
@8u@uvM
@8u0t
@8u8t
@8ugt
@8uou
@8uPu3
@8uPuD
@8xhu
@A^_]
@A^_^
@A^_^[]
@A^_^][
@A^A\_
@A^A]A\_]
@A__]
@A__^][
@A_A]A\_]
@A_A^]
@A_A^_
@A_A^_^[
@A_A^_^]
@A_A^A\
@A_A^A\_]
@A_A^A\_^
@A_A^A\_^[]
@A_A^A]_^
@A_A^A]A\_^[
@A_A^A]A\_^]
@a>ct
@Center
@Extents
@FamilyName
@FullName
@H;{ r
@HJ4.
@HL9m0uY
@HPX`
@HPX`hpx
@IsLOBApp
@J(8&
@MinDate
@MinVersion
@Name
@onecore\base\appmodel\staterepository\dataaccesslayer\statementexecution.cpp
@P!H`f
@PackageType
@ProvisionSourceIsBundle
@Qm6t
@SUVAVAWH
@SUVWATAUAVAWH
@SUVWATAVAWH
@SUVWAUAVAWH
@SUVWAVAWH
@SUVWAVH
@SUVWH
@SVWATAUAVAWH
@SVWAVH
@SVWH
@Tile
@UATAUAVAWH
@UATAVAWH
@USVATAUAVAWH
@USVAVAWH
@USVH
@USVWATAUAVAWH
@USVWATAUAVH
@USVWATAUAWH
@USVWATAVAWH
@USVWATAVH
@USVWAUAVAWH
@USVWAVAWH
@USVWAVH
@USVWAWH
@USVWH
@USWAVAWH
@USWH
@UVWAVAWH
@UWATAVAWH
[ UVWAVAWH
[%hs(%hs)]
[%hs]
[]Lq/m[
[checkstatements] #%u Database %p: Statement %p: %s SQL %s
[DatabaseCache.Add] #%u Database %p: StatementCache %p: Cache Size/Hits/Misses %u/%llu/%llu
[DatabaseCache.Get(Hit)] #%u DatabaseCache %p: Database %p: StatementCache %p: Cache Size/Hits/Misses %u/%llu/%llu: Filename %s
[DatabaseCache.Get(Miss)] #%u DatabaseCache %p: Cache Size/Hits/Misses %u/%llu/%llu: Filename %s
[io:xClose] #%u xClose() failed
[IzZG
[P(5A
[post-sqlite3_exec] #%u Database %p: Try %u (%llums) {%08X-%04X-%04X-%02X%02X-%02X%02X%02X%02X%02X%02X} TID:%u : SQL %s
[post-sqlite3_finalize] #%u Database %p: Statement %p: --
[post-sqlite3_prepare] #%u Database %p: Statement -------- --: Try %u (%llums) : SQL %s
[post-sqlite3_prepare] #%u Database %p: Statement %p %s: Try %u (%llums) : SQL %s
[post-sqlite3_reset] #%u Database %p: Statement %p: %s
[post-sqlite3_step] #%u Database %p: Statement %p %s: Tries %u
[pre-DatabaseCache.Get] #%u DatabaseCache %p: Cache Size/Hits/Misses %u/%llu/%llu: Filename %s
[pre-sqlite3_exec] #%u Database %p {%08X-%04X-%04X-%02X%02X-%02X%02X%02X%02X%02X%02X} TID:%u : SQL %s
[pre-sqlite3_finalize] #%u Database %p: Statement %p: %s
[pre-sqlite3_prepare] #%u Database %p : SQL %s
[pre-sqlite3_reset] #%u Database %p: Statement %p: %s
[pre-sqlite3_step] #%u Database %p: Statement %p %s
[pre-StatementCache.Get] #%u StatementCache %p: Cache Size/Hits/Misses %u/%llu/%llu
[sqlite3_close] #%u Database %p: %s
[sqlite3_exec] #%u Database %p: Try %u (%llums) {%08X-%04X-%04X-%02X%02X-%02X%02X%02X%02X%02X%02X}%s%s TID:%u %s : SQL %s
[sqlite3_finalize] #%u Database %p: Statement %p: --: %s
[sqlite3_open: lastErrNo:0x%X filecontrolrc:%d] #%u Database %p: %hs
[sqlite3_open: lastErrNo:0x%X filecontrolrc:%d] #%u Database %p: %s
[sqlite3_prepare] #%u Database %p: Try %u (%llums) %s : SQL %s
[sqlite3_prepare] #%u Database %p: Try %u (%llums)%s%s %s : SQL %s
[sqlite3_reset] #%u Database %p: Statement %p: %s: %s
[sqlite3_step] #%u Database %p: Statement %p %s: Try %u (%llums)%s%s %s : SQL %s
[StatementCache.Add(list)] #%u StatementCache %p: Cache Size/Hits/Misses %u/%llu/%llu
[StatementCache.Add] #%u Database %p: StatementCache %p: Statement %p: Cache Size/Hits/Misses %u/%llu/%llu: SQL %s
[StatementCache.Get(Hit)] #%u Database %p: StatementCache %p: Statement %p: Cache Size/Hits/Misses %u/%llu/%llu: SQL %s
[StatementCache.Get(Miss)] #%u StatementCache %p: Cache Size/Hits/Misses %u/%llu/%llu: SQL %s
[vfs:xOpen] #%u sqlite3_malloc() failed
[w3/m
\$ E3
\$ UH
\$ UVWATAUAVAWH
\$ UVWATAVH
\$ UVWAVAW
\$ UVWAVAWH
\$ UVWH
\$ VWAVH
\$ WH
\$(E3
\$(H;
\$@D83u5
\$@D8l$Pt
\$@D9m@t
\$@E3
\$@H;
\$`9t$8t`
\$|A;
\$0;\$4u'D
\$0D;
\$0E3
\$2D8o u
\$8E3
\$8H!\$@
\$DH9
\$HA;^
\$hD9t$H
\$HH;~
\$HH9Y8
\$PD;
\$PE;
\$PE3
\$PH;
\$PH9
\$PL;
\$Pt2H
\$tH9
\$XE3
\$xE3
\$XI;
\$XM9
\*.xml
\?vCV
\\?\%s\microsoft.system.package.metadata\%s
\\?\UNC\
\AC\PackageInUseState\
\AppData
\Autogen
\ByteCodeGenerator.exe
\Deleted
\DeletedAllUserPackages
\J*1)
\JSByteCodeCache
\Local
\LocalCache
\LocalState
\Microsoft\Windows\AppxDeploymentClient
\Microsoft\Windows\CurrentVersion\AppModel\StateChange\PackageList\
\nZ&X
\Packages
\resources.pri
\RoamingState
\RPC Control
\Schemas
\Settings
\settings.dat
\Settings\roaming.lock
\SharedLimitedTime\
\SharedLocal
\Staging
\TempState
\t'fA
\u"fD
\Volume{
\WcifsPort
]|pIX
]HD8}8
]HD9e
]HfA;
]oL;iPs
]oL;nPs
]PD9m
]PE8n,u H
]XE8f,u
]XHcE
^0WZ(
^D9|$0u
^lBaaAV
^m&5t
_^[]H
__C_specific_handler
__CxxFrameHandler3
__CxxFrameHandler4
__std_terminate
__TlgCV__
_1.0.0.0_neutral_neutral_nopublisherid
_Classes
_Classes\Local Settings\Software\Microsoft\Windows\CurrentVersion\AppModel\Repository\Packages
_cw5n1h2txyewy
_CxxThrowException
_D8|$0t
_gExijvn:W|~
_initterm
_initterm_e
_o___std_exception_copy
_o___std_exception_destroy
_o___std_type_info_destroy_list
_o___stdio_common_vsnprintf_s
_o___stdio_common_vsnwprintf_s
_o___stdio_common_vsprintf
_o___stdio_common_vsprintf_s
_o___stdio_common_vswprintf
_o___stdio_common_vswscanf
_o__callnewh
_o__cexit
_o__configure_narrow_argv
_o__crt_atexit
_o__errno
_o__execute_onexit_table
_o__initialize_narrow_environment
_o__initialize_onexit_table
_o__invalid_parameter_noinfo
_o__invalid_parameter_noinfo_noreturn
_o__register_onexit_function
_o__seh_filter_dll
_o__set_errno
_o__stricmp
_o__ui64tow_s
_o__ultow_s
_o__wcsicmp
_o__wcslwr
_o__wcsnicmp
_o__wtoi
_o_calloc
_o_free
_o_malloc
_o_qsort
_o_realloc
_o_strncpy_s
_o_strtol
_o_terminate
_o_toupper
_o_wcscpy_s
_o_wcsncat_s
_o_wcsncpy_s
_o_wcstoul
_onecore\admin\appmodel\packagemanager\server\endoflifelist.cpp
` AUAVAWH
` UAUAWH
` UAVAWH
`.rdata
``hF*
``hpx
``hv*
``pB|,
`8:x*
`8@HJ
`A^^]
`A^_^
`A^_^[]
`A^_^][
`A_A^]
`A_A^^[]
`A_A^_^]
`A_A^A\_^[]
`A_A^A\_^][
`A_A^A]A\^[]
`A_A^A]A\_^]
`D6F6
`D8eGtt
`F"VI
`hp~*
`hpF*
`hpJh
'`NkdH
`P4*U
{ ATAVAWH
{ AVH
{ cu!
{ UATAUAVAWH
{0001376b-930d-50cd-2b29-491ca938cd54}
{072665fb-8953-5a85-931d-d06aeab3d109}
{19c13211-dec8-42d5-885a-c4cfa82ea1ed}
{3C42000F-CC27-48C3-A005-48F6E38B131F}
{3F471139-ACB7-4A01-B7A7-FF5DA4BA2D43}
{5526aed1-f6e5-5896-cbf0-27d9f59b6be7}
{A87u
{A89ECE52-7E8E-444F-BBD0-C68B76C2ECA4}#
{aa1b41d3-d193-4660-9b47-dd701ba55841}
{ba44067a-3c4b-459c-a8f6-18f0d3cf0870}
{BFF15E13-81BF-45EE-8B16-7CFEAD00DA86}
{cf7f94b3-08dc-5257-422f-497d7dc86ab3}
{D49918CF-9489-4BF1-9D7B-014D864CF71F}
{EB65A492-86C0-406A-BACE-9912D595BD69}
{F1EF270A-0D32-4352-BA52-DBAB41E1D859}
{fe0ab4b4-19b6-485b-89bb-60fd931fdd56}
{fe762fb1-341a-4dd4-b399-be1868b3d918}
{NoActivityID}
|$ ATAVAWH
|$ AVH
|$ D+
|$ D8yMuC
|$ E3
|$ UATAUAVAWH
|$ UATAVH
|$ UATAWH
|$ UAVAWH
|$ UH
|$(A^
|$(A_
|$(D#
|$(E3
|$@E3
|$@t;H
|$`E3
|$`I;
|$`L;v
|$`M;
|$|.u
|$<\u
|$0E3
|$0t&H
|$4!}
|$8A_A^A]
|$8E3
|$8H+
|$AD8l$@u
|$DD!t$@H
|$HD8|$pt'I
|$hD8}
|$hD9}
|$hD9d$8tUM
|$hE3
|$HE3
|$HL+
|$pM9
|$xD8l$1
|$XD9d$0t}
|$XE3
|$Xf9t$`t
|$xH;|$pt4H
|$xL9g0
|`c<z
|<TFTTTfT|T
|6}Cx
|6Z6X
|Hq^v
|Jr,|@r&
}&<P~
}@!}HH
}@D8UptjE
}@L9}
}`H!}@
}+onecore\admin\appmodel\deploymentmanager\src\plmsessionlist.cpp
}0H+}(H
}bwu3
}HD8}8
}HH!EHH9;t
}PH!}@!}0A
}PL9\$Hu*
~  u#L
~)|Tm
~?fE9$
~@H9FXu
~[IcQ(A
~]^j,
~~s@gH
~1LcA(H
~HD+y
~HM9/
~Uk+|o7.
~VHcS(A
~WMcA(fA
~YHcS(A
~ZHcS(
+:?Ky
+dZrp>N
+L$XA
+L9't
<$I9|$
<&,6|$$6
<?xml version="1.0" encoding="utf-8"?><xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://schemas.microsoft.com/appx/2013/appxprovisionpackage" xmlns="http://schemas.microsoft.com/appx/2013/appxprovisionpackage" xmlns:m="http://schemas.microsoft.com/appx/2013/appxprovisionpackage" xmlns:xs="http://www.w3.org/2001/XMLSchema"><xs:element name="AppxProvisionList">  <xs:complexType>    <xs:all>      <xs:element name="EndOfLife" type="CT_EndOfLife" minOccurs="0"/>      <xs:element name="Provisioned" type="CT_Provisioned" minOccurs="0"/>    </xs:all>  </xs:complexType>  <xs:unique name="Package_FamilyName">    <xs:selector xpath="m:EndOfLife/m:Package"/>    <xs:field xpath="@FamilyName"/>  </xs:unique>  <xs:unique name="Package_FullName">    <xs:selector xpath="m:Provisioned/m:Package"/>    <xs:field xpath="@FullName"/>  </xs:unique></xs:element><xs:complexType name="CT_EndOfLife">  <xs:sequence>    <xs:element name="Package" maxOccurs="unbounded">      <xs:complexType>        <xs:attribute name="FamilyName" type="ST_FamilyName" use="required"/>      </xs:complexType>    </xs:element>  </xs:sequence></xs:complexType><xs:complexType name="CT_Provisioned">  <xs:sequence>    <xs:element name="Package" maxOccurs="unbounded">      <xs:complexType>        <xs:attribute name="FullName" type="ST_FullName" use="required"/>        <xs:attribute name="PackageType" type="ST_PackageType"/>        <xs:attribute name="ProvisionSourceIsBundle" type="xs:boolean"/>        <xs:attribute name="IsLOBApp" type="xs:boolean"/>      </xs:complexType>    </xs:element>  </xs:sequence></xs:complexType><xs:simpleType name="ST_FamilyName">  <xs:restriction base="xs:string">    <xs:minLength value="17"/>    <xs:maxLength value="64"/>  </xs:restriction></xs:simpleType><xs:simpleType name="ST_FullName">  <xs:restriction base="xs:string">    <xs:minLength value="30"/>    <xs:maxLength value="127"/>  </xs:restriction></xs:simpleType><xs:simpleType name="ST_PackageType">  <xs:restriction base="xs:string">    <xs:enumeration value="resource"/>    <xs:enumeration value="framework"/>    <xs:enumeration value="bundle"/>  </xs:restriction></xs:simpleType></xs:schema>
<@/t5L
<@\t<
<@\t=fB
<|[WU
<0`f?
<5#88
<Error 0x%X converting the user's SID to a string>
<Error 0x%X getting the user's SID from the process' token>
<Error 0x%X in GetApplicationUserModelIdFromToken>
<Error 0x%X in GetPackageFullName>
<Error 0x%X in NtQueryInformationProcess>
<Error 0x%X in OpenProcessToken>
<Error 0x%X in QueryFullProcessImageNameW>
<Error 0x%X moving command line>
<Error allocating memory>
<Error message string not found>
<error>
<G:t)A
<G\t?
<l 8jWa
<No commandline present>
<no-error-message>
<None>
<null>
<O\tK
<P/u(
<String too big>
<Task xmlns="http://schemas.microsoft.com/windows/2004/02/mit/task">            <RegistrationInfo>                <SecurityDescriptor>D:(A;;GA;;;SY)(A;;FRFX;;;LS)(A;;FA;;;BA)</SecurityDescriptor>            </RegistrationInfo>            <Principals>                <Principal id="LocalSystem">                    <UserId>S-1-5-18</UserId>                </Principal>            </Principals>            <Triggers>                <TimeTrigger>                    <Repetition>                        <Interval>PT8H</Interval>                        <StopAtDurationEnd>false</StopAtDurationEnd>                    </Repetition>                    <StartBoundary>2017-01-01T00:00:00Z</StartBoundary>                    <Enabled>true</Enabled>                    <RandomDelay>PT8H</RandomDelay>                </TimeTrigger>            </Triggers>            <Settings>                <MultipleInstancesPolicy>IgnoreNew</MultipleInstancesPolicy>                <DisallowStartIfOnBatteries>true</DisallowStartIfOnBatteries>                <StopIfGoingOnBatteries>false</StopIfGoingOnBatteries>                <AllowHardTerminate>false</AllowHardTerminate>                <StartWhenAvailable>true</StartWhenAvailable>                <RunOnlyIfNetworkAvailable>true</RunOnlyIfNetworkAvailable>                <AllowStartOnDemand>true</AllowStartOnDemand>                <Enabled>true</Enabled>                <Hidden>false</Hidden>                <RunOnlyIfIdle>true</RunOnlyIfIdle>                <WakeToRun>false</WakeToRun>                <Priority>8</Priority>                <UseUnifiedSchedulingEngine>true</UseUnifiedSchedulingEngine>            </Settings>            <Actions Context="LocalSystem">                <Exec>                    <Command>%windir%\system32\rundll32.exe</Command>                    <Arguments>%windir%\system32\AppxDeploymentClient.dll,AppInstallerUpdateAllTask</Arguments>                </Exec>            </Actions>        </Task>
<unknown>
<Unknown>
=E0x#
=L9t$ tHL
=L9u@trD
>#w`Ic
>$oYw
>`PublisherCacheFolder
>=PW^
>3B>SetContentGroupState
>D8l$0u
>KR}Na
0 2*4
0:*V6:*"$
0123456789abcdefghjkmnpqrstvwxyz
0123456789abcdefonecore\base\appmodel\common\bytebuffer.cpp
0123456789ABCDEFonecore\base\appmodel\common\sidhelper.cpp
02I}$
040904B0
07B91411-14FE-4856-8982-C3FA%08x
08@HP
08@HPX
08@HPX`
08@HPX`h
08@HPX`hp
08@HPX`hpx
0A^_]
0A^_^
0A^_^[]
0A^_^][
0A^A\_^]
0A^A]_^]
0A_A^]
0A_A^_
0A_A^_^]
0A_A^A\
0A_A^A\_]
0A_A^A\_^
0A_A^A\_^[]
0A_A^A\_^][
0A_A^A]_^
0A_A^A]A\]
0A_A^A]A\_
0A_A^A]A\_^[
0A_A^A]A\_^]
0D8d$1
0DpC)
0'E6lMV+~
0H;\$Hr
0n5%6
0RP\M
0x%08lx
0xFFFFFFFFFFFF
0yCX4>|
0ZRz-
1.3.6.1.4.1.311.10.3.6
1.3.6.1.4.1.311.76.3.1
1_:[u
10.0.19041.1415
10.0.19041.1415 (WinBuild.160101.0800)
102P2
1234567890abcdefghjkmnpqrstvwxyzABCDEFGHJKMNPQRSTVWXYZ
1onecore\admin\appmodel\datasource\filedatasource\src\fileappxstreamingdatasource.cpp
1R/7U"Sgx
2*0"8"2*0JN
2.T,J*
2@`YFN
2=I`g
2>PN]R[
264666
2D8mHt
2hWYe
2t$A+
3D$4A
3D$8%x
3D$8A
3D$H%x
3D$HA
3D$PA
3D$PD
3D$XA
3D$XD
4$@8y8
4$D8q8
4$M;t$
4(6l:
4*>Kf
4@8|$0
4D8eHt
5D8egtOI
5e|*b
5H9|$ptD
5L9|$PtDH
5P;-N
5sB{\
5UE{O
5ZAnQ
6""$"
6":"<
6&"("
6(8(6
6*","
6`xSR
6<">"
66666
6BVTy
6H93t
6hG@j
6I9x w
7*I:L
7+UU=
78w'E
797t3A
7b5?p3?
7C|s$i
7g|iO!b
7QvE|
7V8'}m,
8/tHH
8@8|$1
8@HP^*
8@HPX`hpx
8@HPX`hpx"
8@HV*
8\$@t8
8\$`t
8\$`tHI
8\$`u_
8\$0t
8\$5t[A8
8\$8t6H
8\$At
8\$AtE
8\$BtC
8\$Cty
8\$Dt?
8\$Hu
8\$Iu%H
8\$pt=H
8\$Pt8
8\$PtpH
8\$Pu
8\$Pu^H
8] t(L
8_^][
89:u!
8A^_^[
8A_A^A]A\_^[]
8A_A^A]A\_^][
8APPXu
8D$@u
8D$`t
8D$1tf
8D$Qt%E
8D$Qu
8EAPX
8Ewu(
8H!0H
8L$pt
8RSLCt
8T$XtiH
8U`uz
8Y`t9H
8Y8t9H
8Y8ut
8YDt9H
8YHt9H
8Ylt9H
8YPt9H
8YXt9H
8Zpz8
9;\$8t1
9\$@u
9\$8t H
9\$8v H
9\$8v1
9\$Hr
9\$Xu
9\tpA
9{Xv/@8
9|$ t
9|$`t
9|$hu%
9|$Xv
9}@v|I
9~8wKH
9~uhf9Y
90v,H
9104db00-b51f-4774-a4bb-f3f68c556cb6
98v"H
98v)H
98v0H
9ARI8u(A
9C u I
9C$|0M
9D$@t#
9D$0t
9D$Xt
9E(}K
9e}IG
9H!]0H
9iHhx&
9l$ t
9L$0}
9L$4ub
9l$Dt
9L$Dt
9l$pt
9l$pvMA
9l$pwQD
9L9u@tRD
9O$tQ
9O4t;
9O4tC
9O4tT
9O4tt
9O4tZ
9O4tz
9onecore\base\appmodel\staterepository\dataaccesslayer\entity-targetdevicefamily.cpp
9r0t%H
9r0tAA
9RSLC
9RSSTuvE
9s@|/3
9SRD1H
9t$@t
9t$@v3A
9t$`t
9T$`w=9T$`
9T$4t
9t$4u
9t$Xt
9u(v-
9-uBH
9W$}'H
9X0uSH
9y<tjH
A!4$I
A(;A,H
A(9B8u
A(A;@
A(A;E8u
A,9A(H
A,H;F
A,I9E
A;G uOI
A]A\]
A^_^[]
A^_^][
A^A\]
A^A\_
A^A\_^[]
A^A\_^]
A^A]]
A^A]A\_]
A^A]A\_^
A^A]A\_^[]
A__^[]
A_A\]
A_A\_^]
A_A]]
A_A]A\_]
A_A]A\_^[]
A_A^]
A_A^_
A_A^_^[
A_A^_^[]
A_A^_^]
A_A^_^][
A_A^A\
A_A^A\]
A_A^A\^]
A_A^A\_]
A_A^A\_]H
A_A^A\_^
A_A^A\_^[]
A_A^A\_^][
A_A^A]
A_A^A]^]
A_A^A]_]
A_A^A]_^
A_A^A]_^[]
A_A^A]A\
A_A^A]A\]
A_A^A]A\^
A_A^A]A\^[]
A_A^A]A\_
A_A^A]A\_^[
A_A^A]A\_^[]
A_A^A]A\_^]
A_A^A]A\_^][
a+v"H
A0H9A8u
a7l6y+
A8_8t
A8|$(u$H
A8|$)t$H
A84>u
A9,$}
A9}0t H
A94$u
A9F@viH
A9v u
A9v u4A
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/%u!
Absolute Uri
access
AccessCheck
AccessControlFlags
AccTreeResetNamedSecurityInfo
AcgApi
AclExternalLocation
ACLKeyPath
AcquireRoamingData %ws
AcquireRoamingDataWrapper %d
AcquireSRWLockExclusive
AcquireSRWLockShared
AcquireStateLock
AcquisitionCost
AcquisitionInfo
Action
action
ActionDisplayName
ActivatableClasses\Package
ActivatableClassIdentifier
ActivateInstance %ws
Activation
ActivationUser
ActivityError
ActivityFailure
ActivityIntermediateStop
ActivityStoppedAutomatically
Add %ws operation %u
AddAccessAllowedAce
AddAccessAllowedAceEx
AddDeprovisionedPackageMarking
AddDirectXFeatureLevelToContext
addend
AddEndOfLifePackageMarking
AddExtensionProgId
AddOrUpdatePrimaryTileForUserAndApplication
AddOrUpdatePrimaryTilesForUserAndPackage
AddPackageToFamilyXref
AddPackageToPreinstalledAppsVolume
AddPackageToRegistryStore
AddPrimaryTilesForPackage
AddPrimaryTileUserRecord
AddSearchStringToPath
AddStagingUriAndEstimateFootprintSize() should only be called once per URI
AddToPurgeList
AddUpgradePackageToPreinstalledVolume
AddUpgradePackageToRegistryStore
AdjustTokenPrivileges
Afe#*
AgeRating
agileProgressReference %d
ALARM_DEH_KEYWORD
Alias
aliceBlue
All applicable packages are installed for the user, so the bundle is Installed
All applicable packages are staged for the system, so the bundle is Installed
All Main Packages
allLogos
AllocateAndInitializeSid
AllowDeploymentInSpecialProfiles
AllowedProductId
AllowExecution
allowForWebOnly
AllowPreinstalledRemoval
AllPackages
AllUserPackageRemediation
AllUsers
Already encrypted %ws can't do DPL
Alt(H
alt+H
Always
AlwaysUnsafe
Analyze
ANALYZE;
antiqueWhite
any publisher
Aonecore\admin\appmodel\packagemanager\server\deploymentoperationarguments.cpp
AOWAPP_DEH_KEYWORD
api-ms-win-appmodel-runtime-internal-l1-1-0.dll
api-ms-win-appmodel-runtime-internal-l1-1-1.dll
api-ms-win-appmodel-runtime-internal-l1-1-2.dll
api-ms-win-appmodel-runtime-internal-l1-1-4.dll
api-ms-win-appmodel-runtime-internal-l1-1-7.dll
api-ms-win-appmodel-runtime-l1-1-0.dll
api-ms-win-appmodel-runtime-l1-1-1.dll
api-ms-win-appmodel-state-l1-2-0.dll
api-ms-win-appmodel-unlock-l1-1-0.dll
api-ms-win-containers-cmclient-l1-1-0.dll
api-ms-win-containers-cmclient-l1-2-0.dll
api-ms-win-core-apiquery-l1-1-0.dll
api-ms-win-core-biplmapi-l1-1-0.dll
api-ms-win-core-com-l1-1-0.dll
api-ms-win-core-com-l1-1-1.dll
api-ms-win-core-debug-l1-1-0.dll
api-ms-win-core-delayload-l1-1-0.dll
api-ms-win-core-delayload-l1-1-1.dll
api-ms-win-core-errorhandling-l1-1-0.dll
api-ms-win-core-errorhandling-l1-1-2.dll
api-ms-win-core-file-l1-1-0.dll
api-ms-win-core-file-l1-2-0.dll
api-ms-win-core-file-l1-2-2.dll
api-ms-win-core-file-l2-1-0.dll
api-ms-win-core-file-l2-1-2.dll
api-ms-win-core-handle-l1-1-0.dll
api-ms-win-core-heap-l1-1-0.dll
api-ms-win-core-heap-l2-1-0.dll
api-ms-win-core-interlocked-l1-1-0.dll
api-ms-win-core-io-l1-1-0.dll
api-ms-win-core-io-l1-1-1.dll
api-ms-win-core-kernel32-legacy-l1-1-0.dll
api-ms-win-core-kernel32-legacy-l1-1-1.dll
api-ms-win-core-libraryloader-l1-2-0.dll
api-ms-win-core-localization-l1-2-0.dll
api-ms-win-core-localregistry-l1-1-0.dll
api-ms-win-core-memory-l1-1-0.dll
api-ms-win-core-path-l1-1-0.dll
api-ms-win-core-processenvironment-l1-1-0.dll
api-ms-win-core-processthreads-l1-1-0.dll
api-ms-win-core-processthreads-l1-1-1.dll
api-ms-win-core-processthreads-l1-1-3.dll
api-ms-win-core-profile-l1-1-0.dll
api-ms-win-core-psapi-l1-1-0.dll
api-ms-win-core-quirks-l1-1-0.dll
api-ms-win-core-realtime-l1-1-0.dll
api-ms-win-core-registry-l1-1-0.dll
api-ms-win-core-registry-l1-1-1.dll
api-ms-win-core-registry-l2-1-0.dll
api-ms-win-core-rtlsupport-l1-1-0.dll
api-ms-win-core-shlwapi-legacy-l1-1-0.dll
api-ms-win-core-shlwapi-obsolete-l1-1-0.dll
api-ms-win-core-string-l1-1-0.dll
api-ms-win-core-string-obsolete-l1-1-0.dll
api-ms-win-core-synch-l1-1-0.dll
api-ms-win-core-synch-l1-2-0.dll
api-ms-win-core-synch-l1-2-1.dll
api-ms-win-core-sysinfo-l1-1-0.dll
api-ms-win-core-sysinfo-l1-2-0.dll
api-ms-win-core-threadpool-l1-2-0.dll
api-ms-win-core-timezone-l1-1-0.dll
api-ms-win-core-url-l1-1-0.dll
api-ms-win-core-version-l1-1-0.dll
api-ms-win-core-windowserrorreporting-l1-1-1.dll
api-ms-win-core-winrt-error-l1-1-0.dll
api-ms-win-core-winrt-error-l1-1-1.dll
api-ms-win-core-winrt-l1-1-0.dll
api-ms-win-core-winrt-string-l1-1-0.dll
api-ms-win-core-wow64-l1-1-1.dll
api-ms-win-crt-math-l1-1-0.dll
api-ms-win-crt-private-l1-1-0.dll
api-ms-win-crt-runtime-l1-1-0.dll
api-ms-win-crt-string-l1-1-0.dll
api-ms-win-eventing-classicprovider-l1-1-0.dll
api-ms-win-eventing-provider-l1-1-0.dll
api-ms-win-eventing-tdh-l1-1-0.dll
api-ms-win-security-base-l1-1-0.dll
api-ms-win-security-capability-l1-1-0.dll
api-ms-win-security-lsalookup-l1-1-0.dll
api-ms-win-security-lsalookup-l2-1-0.dll
api-ms-win-security-provider-l1-1-0.dll
api-ms-win-security-sddl-l1-1-0.dll
api-ms-win-service-core-l1-1-0.dll
api-ms-win-service-core-l1-1-1.dll
api-ms-win-service-management-l1-1-0.dll
api-ms-win-service-management-l2-1-0.dll
api-ms-win-service-private-l1-1-0.dll
api-ms-win-service-winsvc-l1-1-0.dll
api-ms-win-shcore-stream-l1-1-0.dll
api-ms-win-shcore-sysinfo-l1-1-0.dll
api-ms-win-shcore-taskpool-l1-1-0.dll
api-ms-win-stateseparation-helpers-l1-1-0.dll
ApiSetQueryApiSetPresence
AppActivationManagerFailedToActivate
AppCategory
appContainer
AppData
AppDataVolume
Append %ws
AppendString %ws
AppendString %ws %ws
AppendString1
AppendString1 %ws
AppendString2
AppendString2 %ws
AppExecutionAlias
AppExecutionAliasUser
AppExtension
AppExtensionHost
AppExtensionName
AppId
AppInstaller
AppInstallerUpdater
Applicability state is Installable because at least one user does not yet have the package installed
Applicability state is Installable because no users with installed packages were found, and the architecture check passed
Applicability state is Installed because some users were found, and every one of them has the package Installed
Applicability state is not installable because the current profile is special, but special deployments are disallowed by policy
Applicability state is NotInstallable
Applicability state is NotInstallable because the architecture is incompatible with the system
Applicability state is NotInstallable because the package is incompatible with the system by policy
Applicability state is RequiresReinstall because at least one user requires a reinstall
Applicability4 results
ApplicabilityBlob
ApplicabilityState
applicabilityState
ApplicabilityState
applicabilityState
ApplicabilityStateEnumMap
Applicable Package is not yet indexed in package repository, so it is installable
Applicable resource package set is not a subset of Installed resource package set, so it is Installable because a package needs to be added.
Applicable resource package set is not a subset of Staged resource package set, so it is Installable because a package needs to be added.
application
Application
application/octet-stream
application/vnd.ms-appx.blockmap+xml
application/vnd.ms-appx.bundlemanifest+xml
application/vnd.ms-appx.manifest+xml
application/vnd.ms-appx.signature
application/vnd.ms-appx.streammap+xml
application/vnd.ms-pkiseccat
ApplicationBackgroundTask
ApplicationContentUriRule
ApplicationCount
ApplicationExtension
ApplicationId
ApplicationIdentity
applicationIdentity
ApplicationIdentity
ApplicationIdentityId
applicationIdentityId
ApplicationIdentityId
applicationIdentityId
ApplicationIdentityId
ApplicationIndex
ApplicationManagement
ApplicationProperty
Applications
ApplicationUserModelId
applicationUserModelId
ApplicationUserModelId
applicationUserModelId
ApplicationUserModelId
applicationUserModelId
ApplicationUserModelId
applicationUserModelId
AppliedACLs
AppListEntry
ApplyBlockCache
APPLYDATA_DEH_KEYWORD
ApplyDeltaW
ApplyExceptions %u
ApplyInPlace
ApplyInplaceUpdate
ApplyRegistryACLs %u
ApplyRegistrySubKeyACLs
ApplyStrongProtection
ApplySystemAppDataBaseKeyACLs
ApplyUpdatePayloadFiles
appManagementSystem
APPMODEL_RUNTIME_DMR_KEYWORD
AppModelDeploymentNotifications
AppModelPackageRepository
AppModelRoot
appOSVersion
AppReadiness
AppReadinessDirectory
AppService
APPSERVICE_DEH_KEYWORD
APPSYNC_DEH_KEYWORD
AppUriHandler
AppUriHandlerGroup
AppX Deployment Server DLL
APPX_BASE_DEH_KEYWORD
AppxAllUserStore
AppXAllUserStore.dll
AppxApplicabilityEngine.dll
AppXApplyTrustLabelToFolder
AppxBlockMap.xml
appxblockmap.xml
AppxByteCodeQueue
AppxContentGroupMap.xml
AppXdbszz9cysstkgdz6xk17sywkqb7gjj0v
AppXDelta
AppXDeployment.Perftrack.Task.Uninstall
AppXDeployment.Task.Server.AppxAllUserStore
AppXDeployment.Task.Server.Dependency
AppXDeployment.Task.Server.Deployment
AppXDeployment.Task.Server.Deployment.AllowReset
AppXDeployment.Task.Server.Deployment.AllowService
AppXDeployment.Task.Server.Deployment.AllowService2
AppXDeployment.Task.Server.Deployment.AllowUninstall
AppXDeployment.Task.Server.Deployment.BeginJETSession
AppXDeployment.Task.Server.Deployment.BundleProcessor
AppXDeployment.Task.Server.Deployment.CancelRequest
AppXDeployment.Task.Server.Deployment.CleanupManagerPostDeployment
AppXDeployment.Task.Server.Deployment.CleanupManagerPreDeployment
AppXDeployment.Task.Server.Deployment.ClearPackageStatus
AppXDeployment.Task.Server.Deployment.ContainerDeploymentStateHandler
AppXDeployment.Task.Server.Deployment.CreateDatabase
AppXDeployment.Task.Server.Deployment.DataFlushStateHandler
AppXDeployment.Task.Server.Deployment.DeletePackageFiles
AppXDeployment.Task.Server.Deployment.DeStagePackage
AppXDeployment.Task.Server.Deployment.DisablePackage
AppXDeployment.Task.Server.Deployment.EndJETSession
AppXDeployment.Task.Server.Deployment.EvaluateStateHandler
AppXDeployment.Task.Server.Deployment.FileCompressionStat
AppXDeployment.Task.Server.Deployment.FileStat
AppXDeployment.Task.Server.Deployment.FlushMachineRegistration
AppXDeployment.Task.Server.Deployment.FlushUserRegistration
AppXDeployment.Task.Server.Deployment.GetRequestForWNFName
AppXDeployment.Task.Server.Deployment.MRTDataStateHandler
AppXDeployment.Task.Server.Deployment.MutablePackageDirectoryStateHandler
AppXDeployment.Task.Server.Deployment.OptionalDependencyHandler
AppXDeployment.Task.Server.Deployment.OSIMActivate
AppXDeployment.Task.Server.Deployment.OSIMDeactivate
AppXDeployment.Task.Server.Deployment.PackageManagerGetPackageReader
AppXDeployment.Task.Server.Deployment.PackagesInUse
AppXDeployment.Task.Server.Deployment.PackageStateHandler
AppXDeployment.Task.Server.Deployment.PrerequisiteStateHandler
AppXDeployment.Task.Server.Deployment.QueueManagerDequeue
AppXDeployment.Task.Server.Deployment.QueueManagerEnqueue
AppXDeployment.Task.Server.Deployment.QueueManagerGetNext
AppXDeployment.Task.Server.Deployment.ReleaseJETResources
AppXDeployment.Task.Server.Deployment.RepositoryBeginTransaction
AppXDeployment.Task.Server.Deployment.RepositoryCommitTransaction
AppXDeployment.Task.Server.Deployment.RepositoryRollbackTransaction
AppXDeployment.Task.Server.Deployment.RepositoryTerminateSession
AppXDeployment.Task.Server.Deployment.Runtime
AppXDeployment.Task.Server.Deployment.SetPackageState
AppXDeployment.Task.Server.Deployment.SetPackageStatus
AppXDeployment.Task.Server.Deployment.SharedAppsRedirectHandler
AppXDeployment.Task.Server.Deployment.SharedAppsSyncHandler
AppXDeployment.Task.Server.Deployment.SISOptimization
AppXDeployment.Task.Server.Deployment.StagePackage
AppXDeployment.Task.Server.Deployment.StageUserData
AppXDeployment.Task.Server.Deployment.StateRepositoryDownlevel
AppXDeployment.Task.Server.Deployment.StateRepositoryFixIntegrity
AppXDeployment.Task.Server.Deployment.TilesStateHandler
AppXDeployment.Task.Server.Deployment.Trust
AppXDeployment.Task.Server.Deployment.UpdatePackage
AppXDeployment.Task.Server.Deployment.UpdatePackageStatus
AppXDeployment.Task.Server.Deployment.VersionSupercedenceHandler
AppXDeployment.Task.Server.Extensions
AppXDeployment.Task.Server.OSIM
AppXDeployment.Task.Server.Service
AppXDeployment.Task.Server.StagingManager
AppXDeployment.Task.Server.VolumeManager
AppXDeployment.Task.Server.VolumeRequestManager
AppXDeploymentClient.dll
AppxDeploymentFailureBlue
AppXDeploymentServer
AppXDeploymentServer version = 
AppXDeploymentServer.dll
AppxDeploymentServer.dll
AppXDeploymentServer.dll
AppxDeploymentServer.pdb
APPXDEPLOYMENTSERVER_KEYWORD
APPXDEPLOYMENTSERVER_PERF_KEYWORD
AppXDeploymentServer-License-MaxSideloadedPackagesCount
AppxErrorReport
AppxExtension
AppxFileRangesInventoryPopulated
AppxInvestigationFile
AppxManifest
AppxManifest.xml
AppxMetadata\AppxBundleManifest.xml
AppXMetadata\CodeIntegrity.Cat
appxmetadata\codeintegrity.cat
AppxMetadata\CodeIntegrity.cat
AppxMiniRepository
AppxMiniRepositoryAfterAclRepair
AppxMiniRepositoryBeforeAclRepair
AppxNewDeploymentOperation
AppxPackageOriginEnumMap
AppxPackageSidRef
AppxPackageStubStateChanged
AppxPackageVolumes
AppxPolicies
AppxProvisioning.xml
AppxProvisionList
AppxPurgeList
AppXqj98qxeaynz6dv4459ayz6bnqxbyaqcs
AppxRoot
AppXSetTrustLabelOnPackage
appxsignature.p7x
AppxSignature.p7x
AppxSignatureOriginEnumMap
AppxStagingInfo
appxsvc
aquamarine
Architecture
ArchitectureEnumMap
Argument
ARI8D
arm64
ArrayAddString %ls
ART:OnDemandSyncGroup
As %d
Assert
assertVersion
AssertWithArgs
ATAVAWH
ATTACH DATABASE '%s' AS '%s';
Attempting to add an optional package for a main package that's staged from an unsupported scheme %d.
Attempting to add an optional package for a main package that's staged from an unsupported scheme %S
Attribute
AttributeName
AttributeValue
aumid
AutomaticDynamicFileRanges must be populated before calling PrioritizeContentGroups.
AUTOPLAY_DEH_KEYWORD
AXEHAXEFAXEBAXPCAXBMAXCI
AXPCAXCDAXCTAXBMAXCI
azure
b d"f"
B*D*F*
B,H9C,
B0J94
BACKGROUND_TASKS_DEH_KEYWORD
BackgroundColor
BackupRestoreOptOut
bad allocation
bad array new length
Badge
BadgeAndTileText
BadgeLogo
BApplyUpdatePayloadFiles
baseline
baselinePackage
bcrypt.dll
Bcrypt.dll
BCryptCloseAlgorithmProvider
BCryptCreateHash
BCryptDestroyHash
BCryptFinishHash
BCryptGetProperty
BCryptHashData
BCryptOpenAlgorithmProvider
BD$PH
bD9t$htX
BDC_ApplyInfo
BEGIN -> COMMIT;
BEGIN -> ROLLBACK;
BEGIN EXCLUSIVE /*%08X-%04X-%04X-%02X%02X-%02X%02X%02X%02X%02X%02X*/;
beige
BiApplicationStateTransition
BiChangeApplicationStateForPackageName
BinaryCount
BinaryDeltaCompression
BindToObject %ul %ls
bisque
bKE}c
black
blanchedAlmond
blockCacheFileComplete
BlockcacheFileDisappeared
BlockCacheFileIsNotComplete
BlockMap Validation Failed for FilePath: %ws IsEncrypted: %d EABIT: %d UncompressedSize: %I64u
BlockNonAdminUserInstall
blueViolet
BMAP<
bmV2;
Bool1
brown
BrowserChoice_cw5n1h2txyewy
bucketArgument1
bucketArgument2
buffer error
BuildId
BuildSecurityDescriptorFromSid
BuildVersion
Bundle
bundle
Bundle
Bundle is Installable - bundle is not installed but is most recently staged
Bundle is Installable - Main package is a re-install, but bundle wasn't installed
Bundle is not installed for the user, so it is installable
Bundle is NotInstallable - no Installable main packages.
Bundle is NotInstallable - no stub available when stub is preferred.
Bundle processing cost: %I64u ms
Bundle re-install
bundleFullName
BundleFullName
BundleInstalledPackage
BundlePackage
BundlePackageFullName
BundlePackageInstallStateMismatch
BundleResource
burlyWood
BusyCount
BusyDelayBetweenRetries
BusyMaxTimeout
BusyTimeout
BXA9@4t!
ByteCodeGeneration
ByteCodeGeneratorDesktop
ByteCodeGeneratorWinStation
ByteCodeGeneratorWinStation\ByteCodeGeneratorDesktop
C !C0H
c AUAVAWH
C D8U@u
C H!C(H
C'!<'%o
C()x(H
C,H9G,H
C,I9G,
c/stZ$
C:\Program Files\WindowsApps
C@H9CP
C@H9CPt
c_SignalStateChangeForPackage %ws %u
C`#St
C0E8`
C8!CHH
C84>u
C9fD9?u-
C'9FJRd;WW
Cache.Count
Cache.Hits
Cache.Misses
CacheHit
CacheMiss
CacheSpill
CacheUsed
CacheWrite
cadetBlue
callContext
CallContext:[%hs] 
callerModule
CallerPackageFullName
callerReturnAddressOffset
CallingProcess
CallingProcessPackageFullName
CallOrigin
callOrigin
CallOrigin
CancelDeploymentImplementation
CancelIoEx
Cancelling deployment request...
Cancelling request for package for shutdown
CancelStagingBackupDataAsync %ws
CancelSynchronousIo
CancelSynchronousIo failed for idle task
CancelWaitableTimer
cannot start a transaction within a transaction
Capabilities
Capability
CapabilityCheck
CapabilityCount
CapabilitySids
CaptureErroPathInCallBack %ws 0x%0x
Category
CategoryName
CdplIsAppDataProtectionSupported
CdplIsAppDataProtectionSupported %ws, maxVer %llu
CdplIsSupported
CdplProtectFileToLevelWithResult
CdplProtectFileToLevelWithResult %ls level %u protectResult %u %u
ceilf
CertCloseStore
CertCreateCertificateChainEngine
CertFreeCertificateChain
CertFreeCertificateChainEngine
CertFreeCertificateContext
CertGetCertificateChain
CertGetEnhancedKeyUsage
CertGetSubjectCertificateFromStore
CERTIFICATES_DEH_KEYWORD
CertNameToStrW
CertOpenStore
CertVerifyCertificateChainPolicy
changeid_next_value
changeid_next_value() failed
ChangeServiceConfigW
Chars %ws Length %u
chartreuse
Check approval cost: %I64u ms
CheckDriverSoftwareDependenciesSatisfied
CheckIfStateChangeNotificationExists
Checking applicability of app package
Checking if package is required due to intent or installation status.
CheckPackageRestoreEligibility
CheckPackageRestoreEligibility %ws operation %u
Checkpoint
CheckPoint.VPN_cw5n1h2txyewy
CheckpointInterval
CheckpointMaxClockDelta
CheckpointMode
CheckResult
CheckSettingSyncEnabled %ws operation %u
CheckStateLeftFromPreviousUninstall %u
CheckTokenMembership
chocolate
CjF7[
CL9CHwCI
Classes\CLSID\{AA00FB1F-4EC7-4b09-BDC1-E5D88D291440}
CleanupSisPath failed
Clear
CloseDesktop
CloseHandle
ClosePackagesInUse
CloseServiceHandle
CloseState
CloseStateContainer
CloseStateLock
CloseThreadpool
CloseThreadpoolCleanupGroup
CloseThreadpoolCleanupGroupMembers
CloseThreadpoolTimer
CloseThreadpoolWork
CloseWindowStation
CLSID
CLSIDFromString
CmsCloseActivity
CmsCloseContainer
CmsCreateActivity
CmsMapFolderToContainer
CmsOpenContainer
CmsRegisterForContainerNotifications
CmsStartActivityAsync
CoAllocString %ws
CoCreateFreeThreadedMarshaler
CoCreateGuid
CoCreateInstance
CoCreateInstance %ws
CoCreateInstanceFromApp
CoCreateInstanceInSession %ul
CoCreateInstanceInSessionHelper
CoCreateInstanceInSessionHelper %ws
CoDisconnectContext
CoGetApartmentType
CoInitializeEx
CollectionStagingRootPath
COLLECTOREXTENSION_DEH_KEYWORD
Column
ColumnNumber
com1.
com2.
com3.
com4.
com5.
com6.
com7.
com8.
com9.
combase.dll
CombinePaths %ws
commandLine
commit
COMMIT /*%08X-%04X-%04X-%02X%02X-%02X%02X%02X%02X%02X%02X*/;
CommitPublisherTree
CommitPublisherTree %ls
CommitStateDirectoryStructure
CommitStateRegistryStructure
Common::Deployment::MsixvcStagingSession::CalculateUpdateRanges
Common::Deployment::MsixvcStagingSession::CopySignatureFileToMetadataDirectory
Common::Deployment::MsixvcStagingSession::CreateDataSource
Common::Deployment::MsixvcStagingSession::GetAcquisitionEstimate
Common::Deployment::MsixvcStagingSession::GetAcquisitionEstimateImpl
Common::Deployment::MsixvcStagingSession::GetManifestReader
Common::Deployment::MsixvcStagingSession::GetSignatureStream
Common::Deployment::MsixvcStagingSession::MakePackageActivatable
Common::Deployment::MsixvcStagingSession::MakePackageActivatableImpl
Common::Deployment::MsixvcStagingSession::RequestCancel
Common::Deployment::MsixvcStagingSession::RequestCancelImpl
Common::Deployment::MsixvcStagingSession::RollbackMovePackage
Common::Deployment::MsixvcStagingSession::RollbackMovePackageImpl
Common::Deployment::MsixvcStagingSession::StagePackage
Common::Deployment::MsixvcStagingSession::StagePackageDeferred
Common::Deployment::MsixvcStagingSession::StagePackageDeferredImpl
Common::Deployment::MsixvcStagingSession::StagePackageImpl
Common::Deployment::MsixvcStagingSession::UpdatePackage
Common::Deployment::MsixvcStagingSession::UpdatePackageDeferred
Common::Deployment::MsixvcStagingSession::UpdatePackageDeferredImpl
Common::Deployment::MsixvcStagingSession::UpdatePackageImpl
COMMUNICATION_BLOCKING_APP_DEH_KEYWORD
CompanyName
CompareFileTime
CompareStringOrdinal
CompareStringW
Completed
CompleteDeploymentOperation
Component failure code = 0x
compress
Compress(x[,level]) error: Invalid level (%d)
Compress(x[,level]) error: Invalid type for level (%d)
CompressedSizeKB
ComputeAndReportBackupSyncProgress %ws
ConditionalACE
Conecore\admin\appmodel\packagemanager\server\specificvolumehelper.cpp
Config
ConnectedSet
ConnectedSetPackageFamily
console
Container %ls user %ls
Container %ws user %ls
Container crashed
Content
ContentGroup
ContentGroupFile
ContentId
ContentType
Context
ContextCallback %d
contextCallback %d
ContinueRepairIfNeeded
ContractID
ControlService
ConvertSecurityDescriptorToStringSecurityDescriptorW
ConvertSidToString %ls
ConvertSidToString %u
ConvertSidToStringSid
ConvertSidToStringSidW
ConvertStringSecurityDescriptorToSecurityDescriptor %ws
ConvertStringSecurityDescriptorToSecurityDescriptorW
ConvertStringSidToSidW
CopyDirectory %ws
CopyDirectory %ws %ws %ws
CopyFileExW
CopyFileW
CopySid
CopySid %u
CopyStateFile %ws
coral
cornflowerBlue
cornsilk
CoSetProxyBlanket
CoTaskMemAlloc
CoTaskMemFree
CoTaskMemRealloc
Could not delete existing File %ws, which is to be replaced with a hardlink.
Could not delete hardlink temp file %ws, which failed to replace the existing file %ws. Ignore failure
Could not delete hardlink temp file %ws, which failed to set correct ACLs. Ignore failure.
Could not DeleteFile %ws
Could not expire other users' requests. Force flushing this request
Could not find main or optional package for source bundle id %I64d and name %ls.
Could not find StateRepository package for package name %ls.
CouldNotDeletePackageFile
CoUninitialize
Count
count
Count
count
Count
CountFiles %ws root %ws i %u
CountOfErrorsCorrected
CoWaitForMultipleHandles
CP!C`f
CP!C`H
CpmcGetContainerIdForUser
Cpu:%d%s Io:%d%s Mem:%d%s
CpuPriority
Create File Failed: %ws
CreateACFolderIfNecessary %ls
CreateACFolderIfNecessary %ls user %ls package %ls
CreateAppContainerProfile
CreateAppDataFolder %ls user %ls package %ls
CreateAppDataFolder %u
CreateAppHive %ls user %ls package %ls
CreateApplicabilityContext
CreateApplicabilityContextFromString
CreateAppxMetadataProfile
CreateBindCtx
CreateCanonicalPriFileImplementation
CreateDesktopAppXLocalCacheStructure
CreateDesktopAppXTombstoneFile
CreateDesktopW
CreateDirectoryIfNecessary
CreateDirectoryIfNecessary %ws
CreateDirectoryIfNecessary %ws path %ws
CreateDirectoryTree %ls
CreateDirectoryTree %ls, post-fix
CreateDirectoryW
CreateDirectoryW %ls
CreateDirectoryW %ls %ls
CreateDirectoryW %ws path %ws
createDist
CreateEvent
CreateEventExW
CreateEventW
CreateFileMappingW
CreateFileW
CreateFolderAndSetAcl %ls
CreateFromSddlTemplateStringWithTrusteeSidParseToken %ls
CreateFullFileName %ws count %llu
CreateFullFileName from %ws
CreateFullFileName to %ws
CreateHardLinkW
CreateInstance
CreateMutexExW
createOptions
CreatePackagesFolderForVolume %u
CreatePackagesFolderForVolume %ws %u
CreatePrimaryTileUser
CreatePrivateObjectSecurityEx
CreateProcessAsUserW
CreateProgressSink %ws %ws
CreateProgressSink %ws package %ws
CreatePublisherRoot %u
CreatePublisherSubFolder Folder[%u] %ls of %u
CreateRandomAccessStreamOverStream
CreateRestrictedToken
CreateSchemaContext
CreateSecureSystemAppDataFolder
CreateSecureSystemAppDataFolder Root %ls
CreateSemaphoreExW
CreateSemaphoreW
CreateStateContainer
CreateStateContainer %ls
CreateStateLock
CreateStateLockRegistration
CreateStateLockRegistration %u
CreateStateMountedFolders %ls user %ls package %ls
CreateStateMountedFolders Root %ls user %ls package %ls hasCentennial %u
CreateStateRootFolder %ws
CreateStateRootFolderACLs %ws
CreateStateSubcontainer
CreateStructured
CreateSubKey %ws 0x%0x
CreateSubKey 0x%0x
CreateSymbolicLinkW
CreateSystemAppDataFolder %u
CreateSystemAppDataFolder Root %ls
CreateSystemStateRootFolderIfNecessary %ls user %ls %ls
CreateTdlMigrator
CreateTdlMigratorForUser
CreateThreadpool
CreateThreadpoolCleanupGroup
CreateThreadpoolTimer
CreateThreadpoolWork
CreateTilesForAllRegisteredPackages
CreateTilesForAllRegisteredPackagesForUser
CreateUnstructured
CreateUnstructuredStateSubFolder %d root %ls
CreateUnstructuredStateSubFolder LOCALCACHE
CreateUnstructuredStateSubFolder ROAMING
CreateUnstructuredStateSubFolder TEMP
CreateUri
CreateWaitableTimerExW
CreateWellKnownSid
CreateWellKnownSid %u
CreateWindowStationW
CreateWnfStateNameImplementation
CreateWPSystemAndSIDFolders
CreateWPSystemAndSIDFolders %ws
CreatingNewStreamingDeploymentRequest
crimson
Critical
CRYPT32.dll
CryptAcquireContextW
CryptCreateHash
CryptDestroyHash
CryptFindOIDInfo
CryptGetHashParam
CryptHashData
CryptMsgClose
CryptMsgGetParam
CryptQueryObject
CryptReleaseContext
CRYPTSP.dll
currentContextId
currentContextMessage
currentContextName
CurrentDeploymentState
CurrentFilePath
CurrentFileSize
Currently executing item
Currently Installed Related Set
CurrentlyInstalledPackages
currentlyInstalledRelatedSetPackageFamily
CurrentOperation
currentPackage
CurrentPackageFullName
currentStatus
Custom.data
CustomCopyDirectoryIfNecessary %ws
CustomInstall
CustomInstallProcess
CustomInstallProcessUserStatus
CustomInstallWork
CVQO-
cW*q.
cWg^-`
CySE 
D!`(H
D!D$ D
D!d$xH
D!mXL!m
D!t$$H
D"088:
D#CtA
D#CtD
D#GtD
D$ !D$ H
D$ !D$0H
D$ D8}otvL
D$ D8m@
D$ E3
d$ E3
D$ E3
d$ E3
D$ E3
d$ E3
D$ E3
d$ E3
D$ E3
d$ E3
D$ E3
d$ E3
D$ E3
d$ E3
D$ E3
d$ E3
D$ E3
d$ E3
D$ E3
d$ E3
D$ E3
d$ E3
D$ E3
d$ E3
D$ E3
d$ E3
D$ E3
d$ E3
D$ E3
d$ E3
D$ E3
d$ E3
D$ E3
d$ E3
D$ E3
D$ f9(t
D$ fD
D$ H!X
D$ H;
D$ L;
D$ SRD1E3
d$ UAVAWH
D$(!|$ M
D$(@@!
D$(D!t$8H
D$(E3
d$(E3
D$(E3
d$(fI
D$(H9
D$(L!L$ H
D$(L!t$ L
D$@!\$HI
D$@!|$P!|$TH!|$XH!|$`H!|$hf
D$@!D$PH
D$@;E@t
D$@D8
d$@D9|$0t8H
D$@E3
d$@E3
D$@E3
D$@fD
D$@H;
D$@I;
D$@L;
D$@tTL
D$\H;
D$`A3
D$`E3
D$`H;
D$`H+D$XH
d$`L9d$XtMH
D$`M;
D$|H;
D$|L9]
D$0!D$@H
D$0D;@,s)A
D$0E;
D$0E3
d$0E3
D$0H;
D$0H9
D$0J94
D$0L;g8r
d$0M9f
D$49L$8t
D$4A3
D$4D3
D$4H;
D$4L;
D$8A3
D$8D3
d$8D8a
D$8E3
d$8E3
D$8E3
D$8H!\$0L
D$8H;
D$8L;
D$bfD
D$C8\$Gt>
D$DL9\$Hu'
D$DL9\$Hu&
D$e9D$x
D$h!D$h
D$h;D$`u
D$H0u
D$hA3
D$HD3
d$HE3
D$hE3
D$HE3
D$hE3
D$HE3
D$hfE
D$HH;
D$hI;
D$HI;
D$HL;
D$HL9
D$hM;nHr
D$L9D$D
D$lL9\$pu/
D$P@@
D$P9\$XA
D$PA3
D$PD3
D$PD8
d$PD8d$ 
D$PE3
D$pE3
D$PE3
D$pE3
D$PE3
D$pE3
d$PE3
D$PE3
D$pE3
D$PE3
D$pE3
D$PE3
D$pE3
D$PE3
D$pfA
D$pfD9
D$pH!\$x
d$pH;
D$PH;
D$pH9D$`t
D$PH9D$8
D$PH9Pp
D$pHcy
D$PIc
D$PL9
D$pL9`
d$pM;`
D$QD9l$XA
D$qE3
D$t;E
D$T9p
D$TE3
D$TH9|$Xu'
D$X!D$hL
D$x;E
D$x@t^E
D$x0u
D$XA;
D$xA;
D$XA3
d$XD8d$0
D$xE;
D$xE3
D$XE3
D$xE3
D$XE3
D$xE3
D$XE3
D$xE3
D$XE3
D$XfD
D$xH;
d$XH9r0
D$xI;
d$xL;e
D$XM;
D(mgQ
D*}k6
D,E7M<
D:(A; OICI; GA;;; SY)(A; OICI; GR;;; BU)(A; OICI; GR;;; AC)
D:(A;;CC;;;%ls)
D:(A;;CCDCLCSWRPWPDTLOCRSDRCWDWO;;;SY)(A;;0xF0087;;;S-1-2-1406295995-2538229729-1264070048-2919177457)(A;;0xF0087;;;AC)
D:(A;;GA;;;%s)
D:(A;;GA;;;SY)(A;;GA;;;%ls)(A;;GA;;;%ls)
D:(A;;GA;;;SY)(A;;GR;;;BU)(A;;GR;;;AC)
D:(A;CROICI;GA;;;%s)
D:(A;CROICI;GA;;;SY)(A;CROICI;GA;;;%s)(A;CROICI;GA;;;BA)
D:(A;OICI;GA;;;SY)(A;OICI;GR;;;S-1-2-1406295995-2538229729-1264070048-2919177457)(A;OICI;GR;;;AC)
D:(A;OICI;KA;;;CO)(A;OICI;KA;;;SY)(A;OICI;KA;;;%ls)(A;OICI;KA;;;BA)
D:(A;OICIIO;GA;;;SY)(A;NP;0xf037f;;;SY)(A;OICI;0x20022;;;S-1-2-1406295995-2538229729-1264070048-2919177457)(A;OICI;0x20022;;;AC)
D:AI(A;OICI;0x120089;;;AC)(A;OICI;0x120089;;;S-1-15-2-2)(A;OICI;0x120089;;;BU)S:AI
D:AI(A;OICI;0x120089;;;AC)(A;OICI;0x120089;;;S-1-15-2-2)(A;OICI;0x120089;;;BU)S:AI(ML;OICI;NW;;;LW)
D:AI(A;OICI;0x1200A9;;;%s)(A;OICI;0x1200A9;;;BU)
D:AI(A;OICI;0x1200A9;;;AC)(A;OICI;0x1200A9;;;S-1-15-2-2)(A;OICI;0x1200A9;;;BU)
D:AI(A;OICI;0x1200A9;;;AC)(A;OICI;0x1200A9;;;S-1-15-2-2)(A;OICI;0x1200A9;;;BU)S:AI
D:AI(A;OICI;0x1200A9;;;AC)(A;OICI;0x1200A9;;;S-1-15-2-2)(A;OICI;0x1200A9;;;BU)S:AI(ML;OICI;NW;;;LW)
D:AI(A;OICI;GA;;;%s)
D:AI(A;OICI;GA;;;%s)(A;OICI;FA;;;%s)
D:PAI(A;;FA;;;SY)(A;;FA;;;BA)
D:PAI(A;OICI;FA;;;S-1-5-80-956008885-3418522649-1831038044-1853292631-2271478464)(A;OI;0x120089;;;BA)(A;CI;0x120089;;;BA)(A;OICI;0x120089;;;BA)(A;OICI;0x120089;;;LS)(A;OICI;0x120089;;;NS)(A;OICI;FA;;;SY)
D:PAI(A;OICI;FA;;;S-1-5-80-956008885-3418522649-1831038044-1853292631-2271478464)(A;OI;0x1200a9;;;BA)(A;CI;0x1200a9;;;BA)(A;OICI;0x1200a9;;;BA)(A;OICI;0x1200a9;;;LS)(A;OICI;0x1200a9;;;NS)(A;OICI;FA;;;SY)
D:PAI(A;OICI;FA;;;SY)(A;OICI;FA;;;BA)(A;;FRFX;;;BU)(A;;FRFX;;;AU)
D:PAI(A;OICI;FA;;;SY)(A;OICI;FA;;;BA)(A;OICI;FA;;;%s)
D:PAI(A;OICI;GA;;;S-1-5-80-956008885-3418522649-1831038044-1853292631-2271478464)(A;OICI;GRGX;;;S-1-15-3-1024-3635283841-2530182609-996808640-1887759898-3848208603-3313616867-983405619-2501854204)(A;OICI;GA;;;SY)(A;OICI;GA;;;BA)(A;OICI;FRFX;;;LS)(A;OICI;FRFX;;;NS)(A;OICI;FRFX;;;RC)
D;|$h
D;|$X
D;}(r
D;A,sTA
D;B8ubH;
D;d$d
D;D$hr
D;d$X
D;e(r
D;ePt
D;l$L
D;l$T
D;sht
D;T!P
D;t$$
D;t$@
D;t$4
D;t$8
D;t$d
D;t$P@
D;t$pr
D;t$Pt
D+]HE3
D+D$x
D+D$xD
D+MHD
D3}(A
D3D$4A
D3D$PA
D3E(E
D3M8A
D3t$p
D3UHD
D8.u*
D8?u H
D8`hu
D8|$ 
D8|$ t.
D8|$ u
D8|$@t&H
D8|$`
D8|$0
D8|$0t
D8|$1u@H
D8|$8u*H
D8|$Pt
D8|$Pt&H
D8|$Pt'A
D8|$Pu
D8|$x
D8|$Xt#H
D8|$y
D8} uy
D8}gA
D8}gt
D8}gu
D8}Xt
D8}XtWD8}
D8}XuAH
D8~<t
D8=@`
D8a u
D8a!t
D8cht5I
D8d$ 
D8d$ u9I
D8d$@t2H
D8d$@u
D8d$0
D8d$0@
D8d$0t
D8d$0t#
D8d$0t0
D8d$0tLH
D8d$0u
-D8d$0u
D8d$0u%
D8d$0uh
D8d$1
D8d$1tUH
D8d$1tVH
D8d$8t4H
D8d$A
D8d$h
D8d$Kt
D8d$P
D8d$Ptc
D8d$PtHE8
D8d$Pu2
D8d$Qt
D8d$Qt9D
D8d$R
D8d$Rt0
D8d$S
D8d$Tt6
D8E`t
D8e`t%H
D8egtgH
D8eGu
D8eHL
D8eHt
D8eHu
D8ewt
D8ewu/@
D8g tzL
D8g(t
D8hhu
D8hiuQ
D8l$@tS@
D8l$@u
D8L$`
D8l$0
D8l$0A
D8l$0t
D8L$0tB
D8l$0tFH
D8l$0t'H
D8l$0toH
D8l$0u
D8l$0u"
D8l$0uNI
D8l$1t
D8l$1u
D8l$2t
D8L$at
D8L$dt
D8l$lu
D8l$Pt
D8l$pt"H
D8l$Pt&H
D8l$pt&H
D8l$Q
D8l$Rt
D8m@u
D8m@u^A
D8m`t
D8mgtTM
D8mHt
D8mHt7D
D8mHtML
D8mhtzL
D8mHuGH
D8mot
D8mPt"
D8mPu
D8mwu
D8phu
D8sQu
D8sSt:
D8sSt89U
D8sTt,H
D8sUt
D8t$ 
D8t$@
D8t$@tFH
D8t$@uo
D8t$0
D8t$0t
D8t$0t 
D8t$0u5H
D8t$8t)H
D8t$A
D8t$b
D8t$ct6H
D8t$cugL
D8t$hu
D8u(trL
D8u0t
D8ugt
D8uGt^H
D8ugu
D8ugu-H
D8uwt
D8xiA
D8y$t
D8yhtRA
D8yMuK
D9/u4H
D9{ u
D9|$ t
D9|$@
D9|$@|
D9|$@|#H;
D9|$@t
D9|$`
D9|$`t
D9|$`t/
D9|$<u"
D9|$0
D9|$0H
D9|$0t6H
D9|$dt
D9|$H
D9|$ht
D9|$Pt
D9|$T
D9|$X
D9|$Xt
D9}(v+3
D9}8t
D9}8u
D9}8u"
D9}gu
D9}Hu
D9}WwiH
D9~hv@A
D9=Q$
D90v2H
D90v8H
D9axu
D9c u
D9c0u
D9cpu
D9d$ 
D9d$ @
D9d$ t
D9d$ u~
D9d$@
D9d$@t
D9d$0
D9d$0t
D9d$0tR
D9d$0tV
D9d$4
D9d$8t
D9d$8t+A
D9d$8t5E
D9d$8tbA
D9d$8tY
D9d$D
D9d$h
D9d$Ht
D9d$p
D9d$P
D9d$p
D9d$P
D9d$p
D9d$P
D9d$pt
D9d$Pt
D9d$pt
D9d$Pt
D9d$T
D9d$Tug
D9d$Xu
D9e t
D9e@u
D9egt
D9egtSA
D9eguQI
D9eHuLH
D9eHuRH
D9ewu
D9f u
D9g u
D9k t
D9l$@
D9l$@t
D9l$|I
D9l$0
D9l$0t
D9l$0t!A
D9l$0u
D9l$4
D9l$8
D9l$8t
D9l$H
D9l$Ht
D9l$ht
D9l$P
D9l$p
D9l$P
D9l$Pt
D9l$PtTH
D9l$PvVD
D9l$Xt
D9m u
D9m@t
D9mH@
D9mHu
D9mHu{H
D9o8~
D9q(t$I
D9t$$
D9t$@
D9t$`
D9t$`twH
D9t$`uaH
D9t$0
D9t$0t
D9t$8
D9t$8t
D9t$h
D9t$x
D9u0t$H
D9u8v~L
D9ugt
D9uXt
D9x0t
D9x0ud
D9x0uh
D9yLu
DACLCurrent: %p
darkBlue
darkCyan
darkGoldenrod
darkGray
darkGreen
darkKhaki
darkMagenta
darkOliveGreen
darkOrange
darkOrchid
darkRed
darkSalmon
darkSeaGreen
darkSlateBlue
darkSlateGray
darkTurquoise
darkViolet
data error
Data flush cost: %I64u ms
Database
Database.Checkpoint
DatabaseCache.Add
DatabaseCache.Get
DatabaseCache.Lifespan
DatabaseConnection
DatabaseCorruptionFirstDetectedUptime
DatabaseCorruptionFirstDetectedWhen
DatabaseCorruptionLastReported
DatabasePtr
DatabaseStatisticsUpdateInterval
DatabaseStatisticsUpdateMaintenanceTaskInterval
DatabaseStatisticsUpdateMaxClockDelta
DataFlush
DATAPACKAGEHOST_DEH_KEYWORD
DataSourceErrorCode
DataSourceErrorCount
DataSourceErrorFile
DataSourceErrorPhase
DD$8H
DD$HL
ddeexec
DE3@d^
DebugBreak
DecodeInteger %ws
deepPink
deepSkyBlue
default
DefaultApp_cw5n1h2txyewy
DefaultIcon
DefaultSize
DefaultTile
DefaultVolumeKey
DeferredRoamingStatus
DeferRoamingDataAcquisition
DehName
DelayLoadFailureHook
DELETE
DELETE FROM %s WHERE _WorkId=? AND _WorkId<>0;
DELETE FROM Activation WHERE (_ActivationID NOT IN (SELECT Activation FROM ActivationUser)) AND (_ActivationID NOT IN (SELECT Activation FROM Application)) AND (_ActivationID NOT IN (SELECT Activation FROM ApplicationExtension)) AND (_ActivationID NOT IN (SELECT Activation FROM PackageExtension));
DELETE FROM ActivationUser WHERE (Activation>0) AND (Activation NOT IN (SELECT _ActivationID FROM Activation));
DELETE FROM ActivationUser WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM AppExecutionAlias WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
DELETE FROM AppExecutionAlias WHERE _AppExecutionAliasID IN ( SELECT aea._AppExecutionAliasID FROM AppExecutionAlias AS aea INNER JOIN ApplicationExtension AS ae ON ae._ApplicationExtensionID=aea.Extension WHERE ae.Application=? AND aea._WorkId=0 AND ae._WorkId=0);
DELETE FROM AppExecutionAlias WHERE _AppExecutionAliasID IN ( SELECT aea._AppExecutionAliasID FROM AppExecutionAlias AS aea INNER JOIN ApplicationExtension AS ae ON ae._ApplicationExtensionID=aea.Extension WHERE ae.Application=?1 AND (aea._WorkId=0 OR aea._WorkId=?2) AND (ae._WorkId=0 OR ae._WorkId=?2));
DELETE FROM AppExecutionAliasUser WHERE (ApplicationIdentity>0) AND (ApplicationIdentity NOT IN (SELECT _ApplicationIdentityID FROM ApplicationIdentity));
DELETE FROM AppExecutionAliasUser WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM AppExtension WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
DELETE FROM AppExtension WHERE _AppExtensionID IN ( SELECT ape._AppExtensionID FROM AppExtension AS ape INNER JOIN ApplicationExtension AS ae ON ae._ApplicationExtensionID=ape.Extension WHERE ae.Application=? AND ape._WorkId=0 AND ae._WorkId=0);
DELETE FROM AppExtension WHERE _AppExtensionID IN ( SELECT ape._AppExtensionID FROM AppExtension AS ape INNER JOIN ApplicationExtension AS ae ON ae._ApplicationExtensionID=ape.Extension WHERE ae.Application=?1 AND (ape._WorkId=0 OR ape._WorkId=?2) AND (ae._WorkId=0 OR ae._WorkId=?2));
DELETE FROM AppExtensionHost WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
DELETE FROM AppExtensionHost WHERE _AppExtensionHostID IN ( SELECT aeh._AppExtensionHostID FROM AppExtensionHost AS aeh INNER JOIN ApplicationExtension AS ae ON ae._ApplicationExtensionID=aeh.Extension WHERE ae.Application=? AND aeh._WorkId=0 AND ae._WorkId=0);
DELETE FROM AppExtensionHost WHERE _AppExtensionHostID IN ( SELECT aeh._AppExtensionHostID FROM AppExtensionHost AS aeh INNER JOIN ApplicationExtension AS ae ON ae._ApplicationExtensionID=aeh.Extension WHERE ae.Application=?1 AND (aeh._WorkId=0 OR aeh._WorkId=?2) AND (ae._WorkId=0 OR ae._WorkId=?2));
DELETE FROM AppInstaller WHERE (_AppInstallerID NOT IN (SELECT AppInstaller FROM PackageAppInstaller));
DELETE FROM AppInstaller WHERE _AppInstallerID IN ( SELECT ai._AppInstallerID FROM AppInstaller AS ai INNER JOIN PackageAppInstaller AS pai ON ai._AppInstallerID=pai.AppInstaller WHERE pai.Package=? AND pai._WorkId=0);
DELETE FROM AppInstaller WHERE _AppInstallerID IN ( SELECT ai._AppInstallerID FROM AppInstaller AS ai INNER JOIN PackageAppInstaller AS pai ON ai._AppInstallerID=pai.AppInstaller WHERE pai.Package=?1 AND (pai._WorkId=0 OR pai._WorkId=?2));
DELETE FROM Application WHERE (Activation>0) AND (Activation NOT IN (SELECT _ActivationID FROM Activation));
DELETE FROM Application WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM Application WHERE _ApplicationID=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM Application WHERE _ApplicationID=? AND _WorkId=0;
DELETE FROM Application WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM Application WHERE Package=? AND _WorkId=0;
DELETE FROM ApplicationBackgroundTask WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
DELETE FROM ApplicationBackgroundTask WHERE _BackgroundTaskID IN ( SELECT abt._BackgroundTaskID FROM ApplicationBackgroundTask AS abt INNER JOIN ApplicationExtension AS ae ON ae._ApplicationExtensionID=abt.Extension WHERE ae.Application=? AND abt._WorkId=0 AND ae._WorkId=0);
DELETE FROM ApplicationBackgroundTask WHERE _BackgroundTaskID IN ( SELECT abt._BackgroundTaskID FROM ApplicationBackgroundTask AS abt INNER JOIN ApplicationExtension AS ae ON ae._ApplicationExtensionID=abt.Extension WHERE ae.Application=?1 AND (abt._WorkId=0 OR abt._WorkId=?2) AND (ae._WorkId=0 OR ae._WorkId=?2));
DELETE FROM ApplicationContentUriRule WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
DELETE FROM ApplicationContentUriRule WHERE Application=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM ApplicationContentUriRule WHERE Application=? AND _WorkId=0;
DELETE FROM ApplicationExtension WHERE (Activation>0) AND (Activation NOT IN (SELECT _ActivationID FROM Activation));
DELETE FROM ApplicationExtension WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
DELETE FROM ApplicationExtension WHERE Application=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM ApplicationExtension WHERE Application=? AND _WorkId=0;
DELETE FROM ApplicationIdentity WHERE (ApplicationUserModelId NOT IN (SELECT ApplicationUserModelId FROM Application)) AND (_ApplicationIdentityID NOT IN (SELECT ApplicationIdentity FROM AppExecutionAliasUser)) AND (_ApplicationIdentityID NOT IN (SELECT ApplicationIdentity FROM PrimaryTileUser)) AND (_ApplicationIdentityID NOT IN (SELECT ApplicationIdentity FROM SRJournal)) AND (_ApplicationIdentityID NOT IN (SELECT ApplicationIdentity FROM SRJournalArchive)) AND (_ApplicationIdentityID NOT IN (SELECT ApplicationIdentity FROM SecondaryTileUser));
DELETE FROM ApplicationProperty WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
DELETE FROM ApplicationProperty WHERE Application=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM ApplicationProperty WHERE Application=? AND _WorkId=0;
DELETE FROM AppService WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
DELETE FROM AppService WHERE _AppServiceID IN ( SELECT "as"._AppServiceID FROM AppService AS "as" INNER JOIN ApplicationExtension AS ae ON ae._ApplicationExtensionID="as".Extension WHERE ae.Application=? AND "as"._WorkId=0 AND ae._WorkId=0);
DELETE FROM AppService WHERE _AppServiceID IN ( SELECT "as"._AppServiceID FROM AppService AS "as" INNER JOIN ApplicationExtension AS ae ON ae._ApplicationExtensionID="as".Extension WHERE ae.Application=?1 AND ("as"._WorkId=0 OR "as"._WorkId=?2) AND (ae._WorkId=0 OR ae._WorkId=?2));
DELETE FROM AppUriHandler WHERE (AppUriHandlerGroup>0) AND (AppUriHandlerGroup NOT IN (SELECT _AppUriHandlerGroupID FROM AppUriHandlerGroup));
DELETE FROM AppUriHandler WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
DELETE FROM AppUriHandler WHERE _AppUriHandlerID IN ( SELECT auh._AppUriHandlerID FROM AppUriHandler AS auh INNER JOIN ApplicationExtension AS ae ON ae._ApplicationExtensionID=auh.Extension WHERE ae.Application=? AND auh._WorkId=0 AND ae._WorkId=0);
DELETE FROM AppUriHandler WHERE _AppUriHandlerID IN ( SELECT auh._AppUriHandlerID FROM AppUriHandler AS auh INNER JOIN ApplicationExtension AS ae ON ae._ApplicationExtensionID=auh.Extension WHERE ae.Application=?1 AND (auh._WorkId=0 OR auh._WorkId=?2) AND (ae._WorkId=0 OR ae._WorkId=?2));
DELETE FROM AppUriHandlerGroup WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
DELETE FROM AppUriHandlerGroup WHERE _AppUriHandlerGroupID IN ( SELECT auhg._AppUriHandlerGroupID FROM AppUriHandlerGroup AS auhg INNER JOIN ApplicationExtension AS ae ON ae._ApplicationExtensionID=auhg.Extension WHERE ae.Application=? AND auhg._WorkId=0 AND ae._WorkId=0);
DELETE FROM AppUriHandlerGroup WHERE _AppUriHandlerGroupID IN ( SELECT auhg._AppUriHandlerGroupID FROM AppUriHandlerGroup AS auhg INNER JOIN ApplicationExtension AS ae ON ae._ApplicationExtensionID=auhg.Extension WHERE ae.Application=?1 AND (auhg._WorkId=0 OR auhg._WorkId=?2) AND (ae._WorkId=0 OR ae._WorkId=?2));
DELETE FROM AppxExtension WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM AppxExtension WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM AppxExtension WHERE _AppxExtensionID=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM AppxExtension WHERE _AppxExtensionID=? AND _WorkId=0;
DELETE FROM AppxExtension WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM AppxExtension WHERE Package=? AND _WorkId=0;
DELETE FROM AppxManifest WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM AppxManifest WHERE _AppxManifestID=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM AppxManifest WHERE _AppxManifestID=? AND _WorkId=0;
DELETE FROM AppxManifest WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM AppxManifest WHERE Package=? AND _WorkId=0;
DELETE FROM Bundle WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM Bundle WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM Bundle WHERE Package=? AND _WorkId=0;
DELETE FROM BundlePackage WHERE (Bundle>0) AND (Bundle NOT IN (SELECT _BundleID FROM Bundle));
DELETE FROM BundlePackage WHERE Bundle IN (SELECT b._BundleID FROM Bundle AS b WHERE b.Package=?1 AND (_WorkId=0 OR _WorkId=?2));
DELETE FROM BundlePackage WHERE Bundle IN (SELECT b._BundleID FROM Bundle AS b WHERE b.Package=?1 AND _WorkId=0);
DELETE FROM BundleResource WHERE (BundlePackage>0) AND (BundlePackage NOT IN (SELECT _BundlePackageID FROM BundlePackage));
DELETE FROM BundleResource WHERE BundlePackage IN (SELECT bp._BundlePackageID FROM BundlePackage AS bp WHERE bp.Bundle IN (SELECT b._BundleID FROM Bundle AS b WHERE b.Package=?1 AND (_WorkId=0 OR _WorkId=?2)));
DELETE FROM BundleResource WHERE BundlePackage IN (SELECT bp._BundlePackageID FROM BundlePackage AS bp WHERE bp.Bundle IN (SELECT b._BundleID FROM Bundle AS b WHERE b.Package=?1 AND _WorkId=0));
DELETE FROM ConnectedSetPackageFamily WHERE (ConnectedSet>0) AND (ConnectedSet NOT IN (SELECT _ConnectedSetID FROM ConnectedSet));
DELETE FROM ConnectedSetPackageFamily WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
DELETE FROM ContentGroup WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM ContentGroup WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM ContentGroup WHERE Package=? AND _WorkId=0;
DELETE FROM ContentGroupFile WHERE (ContentGroup>0) AND (ContentGroup NOT IN (SELECT _ContentGroupID FROM ContentGroup));
DELETE FROM ContentGroupFile WHERE (File>0) AND (File NOT IN (SELECT _FileID FROM File));
DELETE FROM ContentGroupFile WHERE ContentGroup IN (SELECT _ContentGroupID FROM ContentGroup WHERE Package=?) AND (_WorkId=0 OR _WorkId=?);
DELETE FROM ContentGroupFile WHERE ContentGroup IN (SELECT _ContentGroupID FROM ContentGroup WHERE Package=?) AND _WorkId=0;
DELETE FROM CustomInstall WHERE (PackageExtension>0) AND (PackageExtension NOT IN (SELECT _PackageExtensionID FROM PackageExtension));
DELETE FROM CustomInstall WHERE PackageExtension IN ( SELECT pe._PackageExtensionID FROM PackageExtension AS pe WHERE pe.Package=? AND (_WorkId=0 OR _WorkId=?));
DELETE FROM CustomInstall WHERE PackageExtension IN ( SELECT pe._PackageExtensionID FROM PackageExtension AS pe WHERE pe.Package=? AND _WorkId=0);
DELETE FROM CustomInstallProcess WHERE (CustomInstall>0) AND (CustomInstall NOT IN (SELECT _CustomInstallID FROM CustomInstall));
DELETE FROM CustomInstallProcess WHERE CustomInstall IN ( SELECT ci._CustomInstallID FROM CustomInstall AS ci INNER JOIN PackageExtension AS pe ON pe._PackageExtensionID=ci.PackageExtension WHERE pe.Package=? AND (ci._WorkId=0 OR ci._WorkId=?) AND (pe._WorkId=0 OR pe._WorkId=?));
DELETE FROM CustomInstallProcess WHERE CustomInstall IN ( SELECT ci._CustomInstallID FROM CustomInstall AS ci INNER JOIN PackageExtension AS pe ON pe._PackageExtensionID=ci.PackageExtension WHERE pe.Package=? AND ci._WorkId=0 AND pe._WorkId);
DELETE FROM CustomInstallProcessUserStatus WHERE (CustomInstallProcess>0) AND (CustomInstallProcess NOT IN (SELECT _CustomInstallProcessID FROM CustomInstallProcess));
DELETE FROM CustomInstallProcessUserStatus WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM CustomInstallWork WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM CustomInstallWork WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM CustomInstallWork WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM CustomInstallWork WHERE Package=? AND _WorkId=0;
DELETE FROM DefaultTile WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
DELETE FROM DefaultTile WHERE Application=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM DefaultTile WHERE Application=? AND _WorkId=0;
DELETE FROM Dependency WHERE (DependentPackage>0) AND (DependentPackage NOT IN (SELECT _PackageID FROM Package));
DELETE FROM Dependency WHERE _DependencyID=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM Dependency WHERE _DependencyID=? AND _WorkId=0;
DELETE FROM Dependency WHERE DependentPackage=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM Dependency WHERE DependentPackage=? AND _WorkId=0;
DELETE FROM DependencyGraph WHERE (DependentPackage>0) AND (DependentPackage NOT IN (SELECT _PackageID FROM Package));
DELETE FROM DependencyGraph WHERE (SupplierPackage>0) AND (SupplierPackage NOT IN (SELECT _PackageID FROM Package));
DELETE FROM DependencyGraph WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM DependencyGraph WHERE _DependencyGraphID IN (SELECT _ShadowId FROM DependencyGraph WHERE _WorkId=? AND _WorkId<>0);
DELETE FROM DependencyGraph WHERE _WorkId=? AND _WorkId<>0 AND _IsMarkedForDeletion<>0 AND _ShadowId<>0;
DELETE FROM DependencyGraph WHERE _WorkId=? AND _WorkId<>0;
DELETE FROM DependencyGraph WHERE DependentPackage=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM DependencyGraph WHERE DependentPackage=? AND _WorkId=? AND _ShadowId<>0;
DELETE FROM DependencyGraph WHERE DependentPackage=? AND _WorkId=0;
DELETE FROM DeploymentHistory WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
DELETE FROM DeploymentHistory WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM DynamicAppUriHandler WHERE (DynamicAppUriHandlerGroup>0) AND (DynamicAppUriHandlerGroup NOT IN (SELECT _DynamicAppUriHandlerGroupID FROM DynamicAppUriHandlerGroup));
DELETE FROM DynamicAppUriHandlerGroup WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
DELETE FROM DynamicAppUriHandlerGroup WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM EndOfLifePackage WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
DELETE FROM Enterprise WHERE (_EnterpriseID NOT IN (SELECT Enterprise FROM Package));
DELETE FROM File WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM File WHERE _FileID IN (SELECT _FileID FROM File INNER JOIN (SELECT Package AS P, RelativeFilePath AS R FROM File WHERE _WorkId=? AND _WorkId<>0) WHERE _WorkId=0 AND Package=P AND RelativeFilePath=R);
DELETE FROM File WHERE _FileID=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM File WHERE _FileID=? AND _WorkId=0;
DELETE FROM File WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM File WHERE Package=? AND _WorkId=0;
DELETE FROM FileTypeAssociation WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
DELETE FROM FileTypeAssociation WHERE _FileTypeAssociationID IN ( SELECT fta._FileTypeAssociationID FROM FileTypeAssociation AS fta INNER JOIN ApplicationExtension AS ae ON ae._ApplicationExtensionID=fta.Extension WHERE ae.Application=? AND fta._WorkId=0 AND ae._WorkId=0);
DELETE FROM FileTypeAssociation WHERE _FileTypeAssociationID IN ( SELECT fta._FileTypeAssociationID FROM FileTypeAssociation AS fta INNER JOIN ApplicationExtension AS ae ON ae._ApplicationExtensionID=fta.Extension WHERE ae.Application=?1 AND (fta._WorkId=0 OR fta._WorkId=?2) AND (ae._WorkId=0 OR ae._WorkId=?2));
DELETE FROM HostRuntime WHERE (PackageExtension>0) AND (PackageExtension NOT IN (SELECT _PackageExtensionID FROM PackageExtension));
DELETE FROM HostRuntime WHERE PackageExtension IN ( SELECT pe._PackageExtensionID FROM PackageExtension AS pe WHERE pe.Package=? AND (_WorkId=0 OR _WorkId=?));
DELETE FROM HostRuntime WHERE PackageExtension IN ( SELECT pe._PackageExtensionID FROM PackageExtension AS pe WHERE pe.Package=? AND _WorkId=0);
DELETE FROM MrtApplication WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
DELETE FROM MrtApplication WHERE Application IN (SELECT _ApplicationID FROM Application WHERE Package=?) AND (_WorkId=0 OR _WorkId=?);
DELETE FROM MrtApplication WHERE Application IN (SELECT _ApplicationID FROM Application WHERE Package=?) AND _WorkId=0;
DELETE FROM MrtApplication WHERE Application=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM MrtApplication WHERE Application=? AND _WorkId=0;
DELETE FROM MrtDefaultTile WHERE (DefaultTile>0) AND (DefaultTile NOT IN (SELECT _DefaultTileID FROM DefaultTile));
DELETE FROM MrtDefaultTile WHERE _MrtDefaultTileID IN ( SELECT mdt._MrtDefaultTileID FROM MrtDefaultTile AS mdt INNER JOIN DefaultTile AS dt ON dt._DefaultTileID=mdt.DefaultTile WHERE dt.Application=? AND mdt._WorkId=0 AND dt._WorkId=0);
DELETE FROM MrtDefaultTile WHERE _MrtDefaultTileID IN ( SELECT mdt._MrtDefaultTileID FROM MrtDefaultTile AS mdt INNER JOIN DefaultTile AS dt ON dt._DefaultTileID=mdt.DefaultTile WHERE dt.Application=?1 AND (mdt._WorkId=0 OR mdt._WorkId=?2) AND (dt._WorkId=0 OR dt._WorkId=?2));
DELETE FROM MrtPackage WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM MrtPackage WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM MrtPackage WHERE Package=? AND _WorkId=0;
DELETE FROM MrtSharedPri WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM MrtSharedPri WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM MrtSharedPri WHERE Package=? AND _WorkId=0;
DELETE FROM MrtUserPri WHERE (MrtSharedPri>0) AND (MrtSharedPri NOT IN (SELECT _MrtSharedPriID FROM MrtSharedPri));
DELETE FROM MrtUserPri WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM MrtUserPri WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM MrtUserPri WHERE Package=? AND User=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM MrtUserPri WHERE Package=? AND User=? AND _WorkId=0;
DELETE FROM NamedDependency WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM NamedDependency WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM NamedDependency WHERE Package=? AND _WorkId=0;
DELETE FROM OptionalBundle WHERE (MainBundle>0) AND (MainBundle NOT IN (SELECT _BundleID FROM Bundle));
DELETE FROM OptionalBundle WHERE MainBundle IN (SELECT b._BundleID FROM Bundle AS b WHERE b.Package=? AND (_WorkId=0 OR _WorkId=?));
DELETE FROM OptionalBundle WHERE MainBundle IN (SELECT b._BundleID FROM Bundle AS b WHERE b.Package=? AND _WorkId=0);
DELETE FROM OptionalBundlePackage WHERE (OptionalBundle>0) AND (OptionalBundle NOT IN (SELECT _OptionalBundleID FROM OptionalBundle));
DELETE FROM OptionalBundlePackage WHERE OptionalBundle IN (SELECT ob._OptionalBundleID FROM OptionalBundle AS ob INNER JOIN Bundle AS b ON b._BundleID=ob.MainBundle WHERE b.Package=?1 AND (ob._WorkId=0 OR ob._WorkId=?2) AND (b._WorkId=0 OR b._WorkId=?2));
DELETE FROM OptionalBundlePackage WHERE OptionalBundle IN (SELECT ob._OptionalBundleID FROM OptionalBundle AS ob INNER JOIN Bundle AS b ON b._BundleID=ob.MainBundle WHERE b.Package=?1 AND ob._WorkId=0 AND b._WorkId=0);
DELETE FROM OptionalBundleResource WHERE (OptionalBundlePackage>0) AND (OptionalBundlePackage NOT IN (SELECT _OptionalBundlePackageID FROM OptionalBundlePackage));
DELETE FROM OptionalBundleResource WHERE OptionalBundlePackage IN (SELECT obp._OptionalBundlePackageID FROM OptionalBundlePackage AS obp INNER JOIN OptionalBundle AS ob ON ob._OptionalBundleID=obp.OptionalBundle INNER JOIN Bundle AS b ON b._BundleID=ob.MainBundle WHERE b.Package=?1 AND (obp._WorkId=0 OR obp._WorkId=?2) AND (ob._WorkId=0 OR ob._WorkId=?2) AND (b._WorkId=0 OR b._WorkId=?2));
DELETE FROM OptionalBundleResource WHERE OptionalBundlePackage IN (SELECT obp._OptionalBundlePackageID FROM OptionalBundlePackage AS obp INNER JOIN OptionalBundle AS ob ON ob._OptionalBundleID=obp.OptionalBundle INNER JOIN Bundle AS b ON b._BundleID=ob.MainBundle WHERE b.Package=?1 AND obp._WorkId=0 AND ob._WorkId=0 AND b._WorkId=0);
DELETE FROM Package WHERE (Enterprise>0) AND (Enterprise NOT IN (SELECT _EnterpriseID FROM Enterprise));
DELETE FROM Package WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
DELETE FROM Package WHERE (SourceBundle>0) AND (SourceBundle NOT IN (SELECT _BundleID FROM Bundle));
DELETE FROM Package WHERE (TargetDeviceFamily>0) AND (TargetDeviceFamily NOT IN (SELECT _TargetDeviceFamilyID FROM TargetDeviceFamily));
DELETE FROM Package WHERE _PackageID IN (SELECT p_PackageID FROM (SELECT p_PackageID, EXISTS(SELECT 1 FROM BundlePackage AS bp INNER JOIN Package AS p ON bp.Version=p.Version AND bp.Architecture=p.Architecture AND ((bp.ResourceId=p.ResourceId) OR (bp.ResourceId IS NULL AND p.ResourceId IS NULL)) WHERE bp.PackageType=0 AND bp.Bundle=p_SourceBundle AND p.PackageFamily=p_PackageFamily AND bp._WorkId=0 AND p._WorkId=0 LIMIT 1) AS hasPackages FROM (SELECT p._PackageID AS p_PackageID, p.PackageFamily AS p_PackageFamily, p.SourceBundle AS p_SourceBundle FROM Package AS p WHERE p.PackageType & 8 != 0 AND p.SourceBundle <> 0 AND p._WorkId=0)) WHERE hasPackages=0);
DELETE FROM Package WHERE _PackageID=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM Package WHERE _PackageID=? AND _WorkId=0;
DELETE FROM PackageAppInstaller WHERE (AppInstaller>0) AND (AppInstaller NOT IN (SELECT _AppInstallerID FROM AppInstaller));
DELETE FROM PackageAppInstaller WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM PackageAppInstaller WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM PackageAppInstaller WHERE Package=? AND _WorkId=0;
DELETE FROM PackageExtension WHERE (Activation>0) AND (Activation NOT IN (SELECT _ActivationID FROM Activation));
DELETE FROM PackageExtension WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM PackageExtension WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM PackageExtension WHERE Package=? AND _WorkId=0;
DELETE FROM PackageExternalLocation WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM PackageExternalLocation WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM PackageExternalLocation WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM PackageExternalLocation WHERE Package=? AND _WorkId=0;
DELETE FROM PackageExternalLocation WHERE User=? AND Package=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM PackageExternalLocation WHERE User=? AND Package=? AND _WorkId=0;
DELETE FROM PackageFamily WHERE (_PackageFamilyID NOT IN (SELECT PackageFamily FROM ConnectedSetPackageFamily)) AND (_PackageFamilyID NOT IN (SELECT PackageFamily FROM DynamicAppUriHandlerGroup)) AND (_PackageFamilyID NOT IN (SELECT PackageFamily FROM EndOfLifePackage)) AND (_PackageFamilyID NOT IN (SELECT PackageFamily FROM Package)) AND (_PackageFamilyID NOT IN (SELECT PackageFamily FROM PackageFamilyPolicy)) AND (_PackageFamilyID NOT IN (SELECT PackageFamily FROM PackageFamilyUser)) AND (_PackageFamilyID NOT IN (SELECT PackageFamily FROM PackageIdentity)) AND (_PackageFamilyID NOT IN (SELECT PackageFamily FROM ProvisionedPackageExclude)) AND (_PackageFamilyID NOT IN (SELECT PackageFamily FROM SRJournal)) AND (_PackageFamilyID NOT IN (SELECT PackageFamily FROM SRJournalArchive));
DELETE FROM PackageFamilyPolicy WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
DELETE FROM PackageFamilyPolicy WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM PackageFamilyUser WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
DELETE FROM PackageFamilyUser WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM PackageFamilyUserResource WHERE (PackageFamilyUser>0) AND (PackageFamilyUser NOT IN (SELECT _PackageFamilyUserID FROM PackageFamilyUser));
DELETE FROM PackageIdentity WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
DELETE FROM PackageIdentity WHERE (PackageFullName NOT IN (SELECT PackageFullName FROM Package)) AND (_PackageIdentityID NOT IN (SELECT PackageIdentity FROM DeploymentHistory)) AND (_PackageIdentityID NOT IN (SELECT PackageIdentity FROM PackageMachineStatus)) AND (_PackageIdentityID NOT IN (SELECT PackageIdentity FROM PackageSuperceded)) AND (_PackageIdentityID NOT IN (SELECT PackageIdentity FROM PackageUserStatus)) AND (_PackageIdentityID NOT IN (SELECT PackageIdentity FROM ProvisionedPackage)) AND (_PackageIdentityID NOT IN (SELECT PackageIdentity FROM ProvisionedPackageDeleted)) AND (_PackageIdentityID NOT IN (SELECT PackageIdentity FROM SRJournal)) AND (_PackageIdentityID NOT IN (SELECT PackageIdentity FROM SRJournalArchive));
DELETE FROM PackageLocation WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM PackageLocation WHERE Package IN (SELECT Package FROM PackageLocation WHERE _WorkId=? AND _WorkId<>0) AND _WorkId=0;
DELETE FROM PackageLocation WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM PackageLocation WHERE Package=? AND _WorkId=0;
DELETE FROM PackageMachineStatus WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
DELETE FROM PackagePolicy WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM PackagePolicy WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM PackagePolicy WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM PackagePolicy WHERE Package=? AND _WorkId=0;
DELETE FROM PackageProperty WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM PackageProperty WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM PackageProperty WHERE Package=? AND _WorkId=0;
DELETE FROM PackageSourceUri WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM PackageSourceUri WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM PackageSourceUri WHERE Package=? AND _WorkId=0;
DELETE FROM PackageSuperceded WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
DELETE FROM PackageSuperceded WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM PackageSuperceded WHERE _PackageSupercededID=?;
DELETE FROM PackageUser WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM PackageUser WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM PackageUser WHERE _PackageUserID IN (SELECT _PackageUserID FROM PackageUser INNER JOIN (SELECT User AS U, Package AS P FROM PackageUser WHERE _WorkId=? AND _WorkId<>0) WHERE _WorkId=0 AND User=U AND Package=P);
DELETE FROM PackageUser WHERE _PackageUserID=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM PackageUser WHERE _PackageUserID=? AND _WorkId=0;
DELETE FROM PackageUser WHERE _WorkId=0 AND _PackageUserID IN (SELECT pu._PackageUserID FROM PackageUser AS pu INNER JOIN Package AS p ON p._PackageID=pu.Package WHERE pu.User=?1 AND p.PackageType=1 AND p.PackageFamily=?2 AND pu.Package!=?3 AND pu._WorkId=0 AND p._WorkId=0);
DELETE FROM PackageUser WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM PackageUser WHERE Package=? AND _WorkId=0;
DELETE FROM PackageUser WHERE User=? AND Package=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM PackageUser WHERE User=? AND Package=? AND _WorkId=0;
DELETE FROM PackageUserStatus WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
DELETE FROM PackageUserStatus WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM PrimaryTile WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
DELETE FROM PrimaryTile WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM PrimaryTile WHERE _PrimaryTileID=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM PrimaryTile WHERE _PrimaryTileID=? AND _WorkId=0;
DELETE FROM PrimaryTileUser WHERE (ApplicationIdentity>0) AND (ApplicationIdentity NOT IN (SELECT _ApplicationIdentityID FROM ApplicationIdentity));
DELETE FROM PrimaryTileUser WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM PrimaryTileUser WHERE _PrimaryTileUserId IN (SELECT _PrimaryTileUserId FROM PrimaryTileUser INNER JOIN (SELECT ApplicationIdentity AS ai, User AS usr FROM PrimaryTileUser WHERE _WorkId=? AND _WorkId<>0 ) WHERE _WorkId=0 AND ApplicationIdentity=ai AND User=usr);
DELETE FROM PrimaryTileUser WHERE _PrimaryTileUserID=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM PrimaryTileUser WHERE _PrimaryTileUserID=? AND _WorkId=0;
DELETE FROM PrimaryTileUser WHERE TileUniqueId IN (SELECT TileUniqueId FROM PrimaryTileUser WHERE _WorkId=? AND _WorkId<>0) AND _WorkId=0;
DELETE FROM PrimaryTileUserChangelog WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM Protocol WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
DELETE FROM Protocol WHERE _ProtocolID IN ( SELECT p._ProtocolID FROM Protocol AS p INNER JOIN ApplicationExtension AS ae ON ae._ApplicationExtensionID=p.Extension WHERE ae.Application=? AND p._WorkId=0 AND ae._WorkId=0);
DELETE FROM Protocol WHERE _ProtocolID IN ( SELECT p._ProtocolID FROM Protocol AS p INNER JOIN ApplicationExtension AS ae ON ae._ApplicationExtensionID=p.Extension WHERE ae.Application=?1 AND (p._WorkId=0 OR p._WorkId=?2) AND (ae._WorkId=0 OR ae._WorkId=?2));
DELETE FROM ProvisionedPackage WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
DELETE FROM ProvisionedPackageDeleted WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
DELETE FROM ProvisionedPackageExclude WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
DELETE FROM ProvisionedPackageExclude WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM PublisherCacheFolder WHERE (PackageExtension>0) AND (PackageExtension NOT IN (SELECT _PackageExtensionID FROM PackageExtension));
DELETE FROM PublisherCacheFolder WHERE PackageExtension IN ( SELECT pe._PackageExtensionID FROM PackageExtension AS pe WHERE pe.Package=? AND (_WorkId=0 OR _WorkId=?));
DELETE FROM PublisherCacheFolder WHERE PackageExtension IN ( SELECT pe._PackageExtensionID FROM PackageExtension AS pe WHERE pe.Package=? AND _WorkId=0);
DELETE FROM Resource WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM Resource WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM Resource WHERE Package=? AND _WorkId=0;
DELETE FROM SecondaryTile WHERE _SecondaryTileID IN (SELECT SecondaryTile FROM SecondaryTileUser WHERE _WorkId=0 AND TileUniqueId IN (SELECT TileUniqueId FROM SecondaryTileUser WHERE _WorkId=? AND _WorkId<>0)) AND _WorkId=0;
DELETE FROM SecondaryTile WHERE _SecondaryTileID=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM SecondaryTile WHERE _SecondaryTileID=? AND _WorkId=0;
DELETE FROM SecondaryTile WHERE SecondaryTile._SecondaryTileID NOT IN (SELECT SecondaryTile FROM SecondaryTileUser);
DELETE FROM SecondaryTileUser WHERE (ApplicationIdentity>0) AND (ApplicationIdentity NOT IN (SELECT _ApplicationIdentityID FROM ApplicationIdentity));
DELETE FROM SecondaryTileUser WHERE (SecondaryTile>0) AND (SecondaryTile NOT IN (SELECT _SecondaryTileID FROM SecondaryTile));
DELETE FROM SecondaryTileUser WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM SecondaryTileUser WHERE _SecondaryTileUserID=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM SecondaryTileUser WHERE _SecondaryTileUserID=? AND _WorkId=0;
DELETE FROM SecondaryTileUser WHERE TileUniqueId IN (SELECT TileUniqueId FROM SecondaryTileUser WHERE _WorkId=? AND _WorkId<>0) AND _WorkId=0;
DELETE FROM SecondaryTileUserChangelog WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM SRJournal WHERE (ApplicationIdentity>0) AND (ApplicationIdentity NOT IN (SELECT _ApplicationIdentityID FROM ApplicationIdentity));
DELETE FROM SRJournal WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
DELETE FROM SRJournal WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
DELETE FROM SRJournal WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM SRJournalArchive WHERE (ApplicationIdentity>0) AND (ApplicationIdentity NOT IN (SELECT _ApplicationIdentityID FROM ApplicationIdentity));
DELETE FROM SRJournalArchive WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
DELETE FROM SRJournalArchive WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
DELETE FROM SRJournalArchive WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM TargetDeviceFamily WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM TargetDeviceFamily WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM TargetDeviceFamily WHERE Package=? AND _WorkId=0;
DELETE FROM User WHERE (_UserID NOT IN (SELECT User FROM ActivationUser)) AND (_UserID NOT IN (SELECT User FROM AppExecutionAliasUser)) AND (_UserID NOT IN (SELECT User FROM AppxExtension)) AND (_UserID NOT IN (SELECT User FROM CustomInstallProcessUserStatus)) AND (_UserID NOT IN (SELECT User FROM CustomInstallWork)) AND (_UserID NOT IN (SELECT User FROM DependencyGraph)) AND (_UserID NOT IN (SELECT User FROM DeploymentHistory)) AND (_UserID NOT IN (SELECT User FROM DynamicAppUriHandlerGroup)) AND (_UserID NOT IN (SELECT User FROM MrtUserPri)) AND (_UserID NOT IN (SELECT User FROM PackageExternalLocation)) AND (_UserID NOT IN (SELECT User FROM PackageFamilyPolicy)) AND (_UserID NOT IN (SELECT User FROM PackageFamilyUser)) AND (_UserID NOT IN (SELECT User FROM PackagePolicy)) AND (_UserID NOT IN (SELECT User FROM PackageSuperceded)) AND (_UserID NOT IN (SELECT User FROM PackageUser)) AND (_UserID NOT IN (SELECT User FROM PackageUserStatus)) AND (_UserID NOT IN (SELECT User FROM PrimaryTileUser)) AND (_UserID NOT IN (SELECT User FROM PrimaryTileUserChangelog)) AND (_UserID NOT IN (SELECT User FROM ProvisionedPackageExclude)) AND (_UserID NOT IN (SELECT User FROM SRJournal)) AND (_UserID NOT IN (SELECT User FROM SRJournalArchive)) AND (_UserID NOT IN (SELECT User FROM SecondaryTileUser)) AND (_UserID NOT IN (SELECT User FROM SecondaryTileUserChangelog)) AND (_UserID NOT IN (SELECT User FROM WowDependencyGraph));
DELETE FROM WowDependencyGraph WHERE (DependentPackage>0) AND (DependentPackage NOT IN (SELECT _PackageID FROM Package));
DELETE FROM WowDependencyGraph WHERE (SupplierPackage>0) AND (SupplierPackage NOT IN (SELECT _PackageID FROM Package));
DELETE FROM WowDependencyGraph WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM WowDependencyGraph WHERE _WorkId=? AND _WorkId<>0 AND _IsMarkedForDeletion<>0 AND _ShadowId<>0;
DELETE FROM WowDependencyGraph WHERE _WorkId=?;
DELETE FROM WowDependencyGraph WHERE _WowDependencyGraphID IN (SELECT _ShadowId FROM WowDependencyGraph WHERE _WorkId=? AND _WorkId<>0);
DELETE FROM WowDependencyGraph WHERE DependentPackage=? AND _WorkId=? AND _ShadowId<>0;
DELETE FROM WowDependencyGraph WHERE SupplierPackage=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM WowDependencyGraph WHERE SupplierPackage=? AND _WorkId=0;
DELETE FROM XboxPackage WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM XboxPackage WHERE EditionId IN (SELECT EditionId FROM XboxPackage WHERE _WorkId=? AND _WorkId<>0) AND _WorkId=0;
DELETE FROM XboxPackage WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM XboxPackage WHERE Package=? AND _WorkId=0;
DeleteAce
DeleteAllPackagesFromMainPackageArray
DeleteAllPackagesFromPackageArray
DeleteAppContainerProfile
DeleteAppxMetadataProfile
DeleteContentsInFolderError
DeleteCriticalSection
Deleted
DeletedOldPrimaryTile
DeleteFileError
DeleteFileW
DeletePackageInfo
DeleteStagedCollection
DeleteStagingFolder %u
DeleteUpdatedPackageKey
Deleting expired request for
Dependency
DependencyArchitecture
DependencyGraph
DependencyMinVersion
DependencyName
DependencyPaths
DependencyPublisher
dependencyTarget
DependentPackage
Deployment
Deployment Operation = 
DeploymentDatabase
DeploymentDatabaseAutoCheckpoint
DeploymentDatabaseCheckpointThreshold
DeploymentDatabaseFileChunkSize
DeploymentDatabaseJournalSizeLimit
DeploymentDatabaseOptions
DeploymentDatabasePageSize
DeploymentDatabaseStatisticsLastUpdated
DeploymentHistory
DeploymentOperation
DeploymentOperationEnumMap
DeploymentOptions
DeploymentOptionsBitMap
DeploymentOptionsHighBitMap
DeploymentPath
DeploymentQueueManage: Conflict comparison for next dequeueable package with operation against executing package with operation
DeploymentQueueManager is at maximum allowed thread count. Treating as conflict
DeploymentQueueManager:
DeploymentQueueManager: Dequeue for operation hit conflict in system wide isolation
DeploymentQueueManager: Executing request is not already resolved. Conflict assumed
DeploymentQueueManager: Framework will be modified. Conflict assumed
DeploymentQueueManager: Max concurrent regular deployment request count breached. Conflict assumed
DeploymentQueueManager: Maximum amount of items executing for this user reached. Conflict assumed
DeploymentQueueManager: Skipping because there are restored items in queue and the skipped request has priority lower than InteractiveHigh
DeploymentQueueManager: The currently executing item in conflict with operation
DeploymentQueueManager: This item should run isolated and we can't have multiple types of same per user. Conflict assumed
DeploymentQueueManager: Two non-stage operations happening simultaneously with one bringing dependencies. Conflict assumed
DeploymentQueueManager: User SID already at limit. Conflict assumed
DeploymentQueueManager: Validating deployment request from queue
DeploymentRequestRunningStart
DeploymentState
DeploymentStateHandlerEnumMap
DeploymentTrace
DeploymentTrace*
deque<T> too long
Dequeable Package
Dequeuable package operation
Dequeue delay: %I64u ms
DequeuerCount
Dequeuing a request that requires flushing previously run request.
DeriveAppContainerSidFromAppContainerName
Description
desiredStatus
desktop4:Subsystem
DeStage
DeStageUserData
DeStaging for rollback: unexpected staging action: %d
DeStaging: : unexpected staging action: %d
Destination Path
DestinationFolderPath
DestinationMediaID
DestinationPath
DestroyAllExcept
DestroyPrivateObjectSecurity
DETACH DATABASE '%s';
DetailedMessageInfo
DetectAndFixPrimaryTileUserConstraintUniqueErrors
Developer mode registration package uri is not uri of manifest file.
DevelopmentMode
DEVICEACCESS_DEH_KEYWORD
DeviceAccessVetoReasonMap
DeviceCapabilityHandlerCLSID
DeviceCapabilityName
deviceFamilyName
DeviceId
DeviceIoControl
DeviceName
DIALPROTOCOL_DEH_KEYWORD
DidAppSurviveOSUpgradeForUser
DidAppSurviveOSUpgradeForUser %ws %ws %ws
didRead
dimGray
directlyServicedPackagesList
DirectoryExists %ls
DirectoryExists %ls persist %u
DirectoryExists %ws
DirtyPackages
DisableExternalLocation
DisableTraceLoggingSession
DisplayName
Dk]6#
dodgerBlue
d-oF"
Donecore\admin\appmodel\packagerepository\staterepository\repository.cpp
DontMigrateSecondaryTiles
DownlevelInstalled
DownlevelInstalledKeyAlreadyExists
downlevelInstalledPackage
DownlevelMachineDatabase
DownlevelMachineDatabaseAutoCheckpoint
DownlevelMachineDatabaseCheckpointThreshold
DownlevelMachineDatabaseFileChunkSize
DownlevelMachineDatabaseJournalSizeLimit
DownlevelMachineDatabaseOptions
DownlevelMachineDatabasePageSize
DownlevelMachineDatabaseStatisticsLastUpdated
DOWNLOAD_DEH_KEYWORD
downloadFileCount
DownloadSize
Dq>qn
DropImpersonation
DropImpersonation %ls
DSM_DEH_KEYWORD
DuplicateHandle
DuplicateTileUniqueId
DuplicateToken
DuplicateTokenEx
DurationMS
DVROptOut
'Dxg~v6
DynamicAppUriHandler
DynamicAppUriHandlerGroup
E !E 
E %4C
e Konecore\internal\sdk\inc\wil\opensource\wil\winrt.h
E'!E'f
E(f;0
E(f;0@
E(s$+
E/!E/
E;f(r
E?H!EG
E?H!EGH
E@;0r
E@8E0t/H
E@fD;0
E@H;E
E@H;u
E@H9|$Xu(
e\4=-
E_H9M
E`;0r
e`;uX
E`L9|$H
E`L9l$Hu
E0H9E
E7!E7f
E79Q8I
E8!E8
E8;EH
E8>t,H
E8l$ptZH
E8L9\$pu,
E8oPt
E9,$u
E9V0u
EDGEHTML.dll
EditFlags
EditionId
EfsOpenFileRawFailed
EfsOpenFileRawFailedAttemptingRetry
EfsOpenFileRawFailedAttemptingRetryForWrite
EfsOpenFileRawInternal
EG!EGf
EG!EGH
E'H!E7!E?I
ehD8{8uoH
EHL9\$Hu'
EHL9\$Hu&
eHtuH
Ei7=e
eisgk
EkbId
EL$8E
EL@GN@
Element
ElementName
empty
empty distance tree with lengths
EnableAppAttach
enabled
EnabledFeatureUsage
EnableExternalLocation
EnableExternalVolumes
EnableFileOrFolderEncryption %ws %u
EnablePackageStatusSkipped
encrypted
Encrypted FileName: %ws
EncryptedFilePreallocationFailedIgnoringError
encryptionAlgorithm
EncryptPackagesFolder %ws %u
EncryptPackagesFolderForVolume %ws %u
EndOfLife
EndOfLifePackage
EndOfLifePackageList
endswith
EndsWith(*string*,suffix) error: Invalid type (%d)
EndsWith(string,*suffix*) error: Invalid type (%d)
Enqueue cost: %I64u ms
EnsureACLOnVolumeAppRoot failed
EnsureRootFolderInheritAclsAreSet
EnsureStoreLicenseForPackageActivation
EnsureStoreLicenseForPackageActivation isn't present, store license check is skipped!
EnterCriticalSection
Enterprise
EnterpriseUninstallBlockList
entry.Length
entry.Offset
entry.Tag
entry.Version
EntryPoint
EnumDependentServicesW
EnumDisplayMonitors
EnumerateExtensionNames
EnumPackagesByUserSidInternal
EnumPackagesByUserSidNamePublisherInternal
EnumPackagesByUserSidPackageFamilyNameInternal
EnumProvisionedPackagesInternal
EnumValue %u
EnumVisibilityByPackageFullNameInternal
en-US
eOTFs
EP!E`
EP!EPf
EP8D$a
ePL9\$Hu+
EqualSid
EraVersion
Error
error
Error
error
Error
error
Error
Error in QueryServiceConfig
ErrorCode
ErrorCodeDescription
ErrorContext
ErrorContext1
ErrorContext2
ErrorCount
ErrorDescription
ErrorFileInfo
ErrorMessage
errorString
ErrorString
ErrorText
ETW Event ID = 
EtwEventID
EtwEventRegister
EtwEventUnregister
EtwEventWrite
evaluate
EvaluatedPackageStagingAction
Evaluation cost: %I64u ms
EventActivityIdControl
EventData
EventlogDllFamilyPath
EventProviderEnabled
EventRegister
EventSetInformation
EventUnregister
EventWriteTransfer
EvtClose
EvtExportLog
EvtGetChannelConfigProperty
EvtOpenChannelConfig
Ew@80
EXA9G
Exception
ExceptionCode
EXCLUSIVE
Executable
ExecutableName
Executing Package
Executing package operation
execution_flags
ExecutionFlags
exFAT
existingPackage
ExistingRequestState
ExitCode
ExitingPackageFullname
ExitProcess
EXL9l$Hu
ExpandedSQL
ExpandedSQL=%hs
ExpandEnvironmentStringsW
expectedFileSize
ExtendedData
ExtendedErrorCode
Extension
ExtensionHandler
ExtensionName
ExtensionsCategoryNames
ExternalLocation
ext-ms-onecore-appmodel-staterepository-cache-l1-1-0.dll
ext-ms-onecore-appmodel-tdlmigration-l1-1-0
ext-ms-onecore-appmodel-tdlmigration-l1-1-0.dll
ext-ms-onecore-appmodel-tdlmigration-l1-1-1
ext-ms-onecore-appmodel-tdlmigration-l1-1-1.dll
ext-ms-win32-subsystem-query-l1-1-0
ext-ms-win32-subsystem-query-l1-1-0.dll
ext-ms-win-advapi32-ntmarta-l1-1-0
ext-ms-win-advapi32-ntmarta-l1-1-0.dll
ext-ms-win-appmodel-activation-l1-1-1.dll
ext-ms-win-appmodel-deployment-l1-1-0
ext-ms-win-appmodel-deployment-l1-1-0.dll
ext-ms-win-appmodel-deployment-l1-1-1
ext-ms-win-appmodel-deployment-l1-1-1.dll
ext-ms-win-appmodel-deploymentvolumes-l1-1-0
ext-ms-win-appmodel-deploymentvolumes-l1-1-0.dll
ext-ms-win-appmodel-deploymentvolumes-l1-1-1
ext-ms-win-appmodel-deploymentvolumes-l1-1-1.dll
ext-ms-win-com-ole32-l1-1-1.dll
ext-ms-win-containers-policymanagercli-l1-1-0
ext-ms-win-containers-policymanagercli-l1-1-0.dll
ext-ms-win-core-app-package-registration-l1-1-0
ext-ms-win-core-app-package-registration-l1-1-1
ext-ms-win-core-app-package-registration-l1-1-1.dll
ext-ms-win-core-storelicensing-l1-1-0
ext-ms-win-core-storelicensing-l1-1-0.dll
ext-ms-win-core-storelicensing-l1-2-0
ext-ms-win-desktopappx-l1-1-0
ext-ms-win-desktopappx-l1-1-0.dll
ext-ms-win-desktopappx-l1-1-1
ext-ms-win-desktopappx-l1-1-1.dll
ext-ms-win-desktopappx-l1-1-2
ext-ms-win-desktopappx-l1-1-3
ext-ms-win-desktopappx-l1-1-4
ext-ms-win-desktopappx-l1-1-4.dll
ext-ms-win-desktopappx-l1-1-5
ext-ms-win-desktopappx-l1-1-6
ext-ms-win-devmgmt-policy-l1-1-0
ext-ms-win-devmgmt-policy-l1-1-0.dll
ext-ms-win-devmgmt-policy-l1-1-1
ext-ms-win-devmgmt-policy-l1-1-2
ext-ms-win-devmgmt-policy-l1-1-3
ext-ms-win-newdev-config-l1-1-3.dll
ext-ms-win-ntuser-windowstation-l1-1-0
ext-ms-win-ntuser-windowstation-l1-1-0.dll
ext-ms-win-ntuser-windowstation-l1-1-1
ext-ms-win-ntuser-windowstation-l1-1-2
ext-ms-win-ole32-bindctx-l1-1-0.dll
ext-ms-win-resources-deployment-l1-1-0.dll
ext-ms-win-resources-languageoverlay-l1-1-0
ext-ms-win-resources-languageoverlay-l1-1-0.dll
ext-ms-win-resources-languageoverlay-l1-1-1
ext-ms-win-resources-languageoverlay-l1-1-2
ext-ms-win-resources-languageoverlay-l1-1-3
ext-ms-win-security-efswrt-l1-1-0
ext-ms-win-security-efswrt-l1-1-1
ext-ms-win-security-efswrt-l1-1-2
ext-ms-win-security-efswrt-l1-1-2.dll
ext-ms-win-security-efswrt-l1-1-3
ext-ms-win-session-usermgr-l1-1-0
ext-ms-win-session-usermgr-l1-1-0.dll
ext-ms-win-session-usermgr-l1-2-0
ext-ms-win-session-usertoken-l1-1-0
ext-ms-win-session-usertoken-l1-1-0.dll
ext-ms-win-session-wtsapi32-l1-1-0
ext-ms-win-session-wtsapi32-l1-1-0.dll
ext-ms-win-shell-shell32-l1-2-0
ext-ms-win-shell-shell32-l1-2-1
ext-ms-win-shell-shell32-l1-2-2
ext-ms-win-shell-shell32-l1-2-3
ext-ms-win-shell-shell32-l1-3-0
ext-ms-win-storage-sense-l1-1-0
ext-ms-win-storage-sense-l1-1-0.dll
ext-ms-win-storage-sense-l1-2-0
ext-ms-win-storage-sense-l1-2-1
ext-ms-win-wer-reporting-l1-1-0
ext-ms-win-wer-reporting-l1-1-0.dll
ext-ms-win-wer-reporting-l1-1-1
ext-ms-win-wer-reporting-l1-1-2
ext-ms-win-wer-reporting-l1-1-3
ext-ms-win-wevtapi-eventlog-l1-1-0
ext-ms-win-wevtapi-eventlog-l1-1-0.dll
ext-ms-win-wevtapi-eventlog-l1-1-1
ext-ms-win-wevtapi-eventlog-l1-1-2
ext-ms-win-wevtapi-eventlog-l1-1-3
EXTRA
ExtZL
F H;D$`u
F H9t$x
F L9 
F L9 u5H
F(9A(u
F(H;X
F,D8~<t
f;L$`
F?xb6\
F|FfFTFFF<F
F<}lf-#X
F0!^@
F0D8#ubD8c
F0H9F8u&
f5.vpn.client_cw5n1h2txyewy
F8A!FHI
F8H;F@
F8H9D$Xt)L
f9*uGD
f9,^u
f9,Au
f9,Fu
f9,Gu
f9,Nu
f9,Ou
f9,Pu
f9,Wu
f9,Xu
f9}Hu
f9+t4H
f9<Au
f9<Bu
f9<Cu
f9<Fu
f9<Hu
f9<Ju
f9<Pu
f93trH
f94Au
f94Bu
f94Cu
f94Ju
f94Ku
f94Qu
f9L$Bt
fA9(t
fA9,Cu
fA9,pu
fA9|E
fA9<@u
fA9<Au
fA9<Bu
fA9<Fu
fA9<Hu
fA9<Iu
fA9<Ou
fA9<Pu
fA9<wu
fA94@u
fA94Au
fA94Gu
fA94Pu
fA94Qu
fA94Ru
fA98t
fA99u
fA9l@,u
fA9LE
fA9tM
fA9Z*v$A
Fail to get package from State Repository for ManifestPath %ws
Failed applying DACL from ApplyPackageDataAccessACLs %ls %ls %ls %d %d
Failed applying SACL from ApplyPackageDataAccessSACL %ls %ls %ls %d %d
Failed applying SACL from ApplyPackageDataAccessSACL taken ownership %ls %ls %ls %d %d
Failed component name = 
Failed in RemoveDirectoryTreeSafelyByHandle for folder %ws
Failed in VerifyIfSecureSystemAppDataFolderAlreadyExists()
Failed to apply ACLs for a hardlink from %ws to %ws
Failed to compare file paths %ls, %ls
Failed to convert SID to string
Failed to copy error message from GetAppXError.
Failed to copy error message from GetErrorInfo.
Failed to create a hardlink from %ws to %ws
Failed to create full file name for file %ls
Failed to create full file name for folder %ws
Failed to create full name for %ws and %ws
Failed to create full name for folder %ws
Failed to create handle for %ws
Failed to create hardlink from %ws to %ws
Failed to delete hard linked file %ws
Failed to delete partially created hardlink target placeholder file %ws
Failed to delete stale indicator file %ws
Failed to Expire and Remove Conflicting Lazy Flush Requests on a dequeueable request. Ignored the failure.
Failed to find resume offset by block hash validation for %ws. Ignore the error and download the whole file instead.
Failed to get current timestamp
Failed to get current timestamp due to
Failed to get Error Description
Failed to get file attributes from handle for %ws
Failed to get file attributes from handle for folder %ls
Failed to get file attributes from handle for folder %ws
Failed to get file final path for folder %ls
Failed to get file final path for folder %ws
Failed to get file handle for %ws
Failed to get file handle for file %ls
Failed to get file handle for folder %ws
Failed to get file hardlink information for file %ls
Failed to get final path for folder %ws
Failed to get handle for %ws
Failed to get handle for folder %ls
Failed to get resume offset for baseline file %ws
Failed to get the VAIL container ID for user from Container Policy Manager.
Failed to initialize ResumeFileInfo for file: %ws
Failed to open valid baseline file %ws from old package path %ws. Skip BDC update for this file.
Failed to remove existing folder %ws, before creating a new mounted folder of the same name
Failed to remove mounted folder %ws. Ignore failure.
Failed to rename hardlink temp file %ws to %ws
Failed to reset machine register state in the State Repository database for package %ws
Failed to set file delete disposition for file %ls
Failed to set file delete disposition for file %ws
Failed to set file delete disposition for folder %ws
Failed to set file valid ending for file %ws
Failed to set foldingBundleId for package %ws because parent bundle not yet processed. Parent bundle either does not appear in expandedPackageUris list or appears in the list after this child package
Failed to update existing mounted folder %ws to point to target folder %ws
Failed to update package status. Set online = %d.
Failed to update State Repository Cache
FailedGettingTileUniqueIdFromTDL
FailedMigratingSecondaryTilesFromTDL
FailedOpeningBaselineForceCopy
FailedToAddPrimaryTileUser
FailedToApplyInPlaceUpdateDuringRegisterDueToBlockcacheIncomplete
FailedToCreatePrimaryTiles
FailedToDeleteOldTiles
FailedToQIIApplicationActivationClient2
FailedToRegisterTile
FailedToSetUserActivationInfo
FailFast
FailFastBusySnapshot.StatementInProgress: #%u Index=%u Database=%p Statement=%p SQL=%s
FailFastBusySnapshot: Statements Total=%u Busy=%u Database=%p FirstBusySQL=%hs
FailIfNeedsRemediation
Failure
failureCount
FailureHresult
failureId
failureType
FallbackError
false
Family %ws
Family %ws %ws
FamilyMonikerStringToSid %ls
FamilyName
FAT32
FB&_W
fB9<Bu
fB9<Iu
fB94Bu
fB94Cu
fB94pu
fB9Tv
fC9,Qu
fC9<|u
fC94Bu
fD; u
fD;0@
fD;0u
fD;8u
fD9 t
fD9 t1f
fD9 u!
fD9!A
fD9!t
fD9!u
fD9"t
fD9"u
fD9#t
fD9$^u
fD9$Au
fD9$Bu
fD9$Cu
fD9$Fu
fD9$Gu
fD9$GuEI
fD9$Hu
fD9$iu
fD9$Ju
fD9$Nu
fD9$O
fD9$Ou
fD9$Pu
fD9$Qu
fD9$Wu
fD9$xu
fD9$Xu
fD9$xu
fD9$zu
fD9&t
fD9&u#L
fD9(t
fD9(u
fD9)t
fD9)u
fD9*u
fD9,Au
fD9,Bu
fD9,Fu
fD9,Gu
fD9,Hu
fD9,ju
fD9,Xu
fD9.t
fD9.u
fD9/t
fD9:t%H
fD9:t2
fD9;t
fD9?t
fD9?u
fD9?u$H
fD9|$(t
fD9|$(uXH
fD9<~u
fD9<Au
fD9<Bu
fD9<Cu
fD9<Fu
fD9<Gu
fD9<Hu
fD9<Ou
fD9<Pu
fD9<ru
fD9<Vu
fD9<Wu
fD9<Xu
fD9<yu
fD90t
fD90t,
fD90u
fD91t
fD91t#f
fD92t
fD93t
fD94Au
fD94Bu
fD94Hu
fD94Ju
fD94Qu
fD94Vu
fD94Yu
fD94Zu
fD94zu
fD96t
fD97u
fD98t
fD98u
fD99u
fD99u1H
fD9d]
fD9dO
fD9dU
fD9du
fD9e 
fD9K,I
fD9l}
fD9t]
fD9t}
fD9tE
fD9TH
fD9'u,H
fD9u@u
fD9u0u_H
fE;l$
fe{]{
fE9 A
fE9 u
fE9"t
fE9$@u
fE9$Au
fE9$Bu
fE9$Fu
fE9$Gu
fE9$Hu
fE9$Nu
fE9$Ou
fE9$Pu
fE9$Wu
fE9)t
fE9,@u
fE9,F
fE9,Fu
fE9,Gu
fE9,Hu
fE9,Nu
fE9<Fu
fE9<Hu
fE9<Ju
fE9<Nu
fE9>L
fE91u
fE94$
fE98u
fE99u
fE9t}
featureBaseVersion
FeatureError
featureId
featureStage
FeatureUsage
FeatureVariantUsage
featureVersion
FetchDataFromPolicyCache %ls
fF9$Au
fF9$Ou
fF9$Vu
fF9$vu
fF9$xu
fF9,Bu
fF9<Bu
fF9<Cu
fF9<Ju
fF94Au
fF94Bu
fG9${u
fG9$Nu
fG9,qu
FH!^XH
FhI5+
file error
File hardlink identified in files %ls
File redirection found for %ws and %ws
File redirection identified in files %ls and %ls
File: %ws
file://
file:///
fileAccess
FileCreationTime(UTC): %04hu-%02hu-%02hu %02hu:%02hu:%02hu, LastFileWriteTime(UTC): %04hu-%02hu-%02hu %02hu:%02hu:%02hu, FileSize: %I64u, Attributes: 0x%08lx
FileDescription
FileExists %ls
FileIntegrityStateLessThanFull
FileInUse
FileInUse PFun: %ws, ImageName: %ws, Cmd: %ws, UserSid: %ws, SessionId: %d, PID: %d
FileManager_cw5n1h2txyewy
FileName
fileName
FileName
fileName
FileName
fileName
FileName
fileName
FileName
fileName
Filename
fileName
FileName
fileName
FileName
fileName
FileName
fileName
Filename
FileName
Filename
fileName
Filename
fileName
FileName
fileName
FileName
fileName
FileName
fileName
FileName
fileName
FileName
fileName
FileName
fileName
FileName
filename
fileName
FileName
fileName
filename
FileName
fileName
FileName
filename
FileName
fileName
FileName
fileName
FileName
fileName
FileName
fileName
filename
fileName
FileName
fileName
FileName
fileName
FileName
fileName
FileName
fileName
FileName
fileName
FileName
fileName
FileName
fileName
FileName
fileName
FileName
fileName
FileName
fileName
FileName
fileName
FileName
fileName
FileName
Filename: %ws
filePath
FilePath
filePath
FilePath
filePath
FilePath: %ws
fileRelativePath
Files
FileSize
fileSize
fileSizeValid
FileSystemType
FileTimeToSystemTime
FILETYPE_DEH_KEYWORD
FileTypeAssociation
FileVersion
FilterAttach
FilterConnectCommunicationPort
FilterInstanceClose
FilterInstanceCreate
FilterLoad
FilterSendMessage
Finalize
FinalizeDeploymentPath
FindByPackageAndCategory
FindByPackageExtension
FindClose
FindFirstFile
FindFirstFile %ws
FindFirstFileExW
FindFirstFileNameW
FindFirstFileW
FindFullNameForFamilyNameInAppxAllUserStore
FindNextFile %llu
FindNextFile %ws
FindNextFileNameW
FindNextFileW
FindPackageByUserSidPackageFullNameInternal
FindPackagesByPackageFamily
FindPackagesByPackageFamilyResult
firebrick
FirstBusySQL
FirstLine
Fix database for user %ws
Fix registry for user %ws and package %ws
FixAllCascadingInDeploymentPartition
FixAllCascadingInMachinePartition
FixAppHiveIfNeeded
FixStateLocationsAccess
FixSubFolderAccess %ls
Flags
FlagsHigh
FlC5>@
fLF&B
floralWhite
FLTLIB.DLL
FlushFileBuffers
Flushing and closing files cost: %I64u ms
Flushing request for packager due to an overlapping force-flush operation.
folder
Folder
Folder %ls
Folder %ls isFullTrust %u hasCentennial %u
Folder %ls user %ls package %ls publisher %ls
Folder %ls user %ls package %ls publisher %ls isFullTrust %u
Folder %ls.
FolderPath
Fonecore\admin\appmodel\common\impersonateself.cpp
ForceCopyFileResult
Forced flush has been done for a request in lazy flush queue. Deleting from the list.
ForegroundText
forestGreen
forInPlaceUpdate
FormatApplicationUserModelId
FormatMessageW
ForMove
found
Found a request from a different user that requires force flushing.
Found an expired request in lazy flush queue. Deleting from the list.
Found existing request in queue to attach to for the new request
Found package in related set
FoundApplicationForPrimaryTileRemoval
FoundApplicationForSecondaryTileRemoval
FoundConstraintViolationApplicationIdentity
FoundConstraintViolationTileUniqueId
FoundRemovedApplicationIdentity
FoundState
FoundUnmatchingOptionalBundleVersion
FQCid %ws
FQCid %ws package %ws
FQCid %ws package %ws stageComplete %d consecutiveTimeouts %lu
FqEU3
framework
Framework
FrameworkList
FrameworkPackage
FreeApplicabilityContext
FreeApplicablePackages
FreeLibrary
FreeSid
FreeUserTokensForMultiUserSession
fs"#d/
fuchsia
FullFilePath
FullName
FullTrust
fullValidation
function
FunctionType
FX9G$tQ
FX9G4t;
FXA_A^A]A\_^][
fYV^o
G !G0H
G H;_
G H;D$pu
G H9G
G(H9F(
G(H9F(u
G,H9A,H
G,H9C,u&H
G,I9E,
g@8|$0
G@H9D$ t
G\$@H
g]pO<
g_fonecore\admin\appmodel\stagingmanager\src\faultinjection.cpp
G`fD9$Ht)A
G09F0t
G0D8g@t(H
G0H9G8u H
G6?lYi
G8!GHH
G8H9E
G8I+G0H
g9E?@
gainsboro
Gap: %I64u ms
GCChangelogsInterval
gD8m@uyH
GenerateBytecodeForPackageImplementation
GenerateBytecodeForPackagesImplementation
GenuD
GEOLOCATION_DEH_KEYWORD
get_IsConnectedToInternet %ws
GetAccess %ls
GetAce
GetAce %ls %u
GetACFolderPath
GetActivationStoreFolderPath
GetAddPublisherArray
GetAddPublisherArray %ls
GetAgeRating
GetAllInboxPackages
GetAllNonInboxPackagesFromRegistryStore
GetAllPackagesToBeInstalledForSetupPhase
GetAllUpdatedPackages
GetAppDataFolderPath
GetApplicability called for bundle
GetApplicability5 called
GetApplicability5Implementation
GetApplicabilityEx called
GetApplicabilityFactory
GetApplicabilityForSpecificVersion called
GetApplicabilityImplementation
GetApplicablePackages
GetApplicablePackagesForUserWithAppChosenResources
GetApplicationUserModelIdFromToken
GetAppModelVersion
GetAppxDataRootPath
GetAppXError failed with error
GetAppXLogMessageFromDataFailure
GetAt %u
GetByPackageFullName %ls
GetByteCodeCachePath
GetCallerSessionId
GetCanonicalMergedPriFileNameForPackages
GetCategories
GetCategoryIsGame
GetChanges() called but !db.IsOpen()
GetCurrentProcess
GetCurrentProcessId
GetCurrentThread
GetCurrentThreadId
GetCurrentUserSid %u
GetDeltaInfoW
GetDeploymentError
GetDeploymentVolumeFlagsForPackageRoot
GetDriveTypeW
GetEffectivePackageStatusForUser
GetEffectivePackageStatusForUserSid
GetEncryptedStreamingReader
GetErrorInfo
GetErrorInfo failed with undocumented error
GetErrorInfo reports there is no error object to return
GetExitCodeProcess
GetExtensionProperty
GetFileAttributesExW
GetFileAttributesW
GetFileInformationByHandle
GetFileInformationByHandleEx
GetFileSecurityW
GetFileSizeEx
GetFileTime
GetFileType
GetFileVersionInfoExW
GetFileVersionInfoSizeExW
GetFinalPathNameByHandleW
GetGenericKeyEncryptionHeader
GetHasCentennial
GetHasCentennial %ls user %ls package %ls
GetHasCentennial Root %ls
GetHighestStateVersion
GetHighestStateVersion %ws
GetHintForRoamingDataExists
GetHivePath
GetHivePath %u
GetHivePath %u size %u
GetLastError
GetLastInsertRowID() called but !db.IsOpen()
GetLegacyTargetPlatformInfo
GetLengthSid
GetLocalTime
GetMergedSystemPriEx
GetModuleFileNameA
GetModuleFileNameW
GetModuleHandleExW
GetModuleHandleW
GetNamedSecurityInfoW
GetNonExactManifestReader
GetOptOutOfBackupRestore
GetOptOutOfDVR
GetOptOutOfSD
GetOrCreatePriFileForAvailablePackages
GetOverlappedResult
GetPackageExecutionContextForDeviceFamilyName
GetPackageFilesDiskUsageImplementation
GetPackageFilesDiskUsagePerVolumeImplementation
GetPackageFullName
GetPackageFullNameFromToken
GetPackagesByPackageFamily
GetPackagesRootLocationFromStateRoot
GetPackageStatus
GetPackageStatusForUser
GetPackageStatusForUserSid
GetPackagesThatMayNeedPreinstallPackageStatusMarked
GetPackageTable %ws
GetPackageVolumeSisPath
GetPersistedRegistryLocationW
GetProcAddress
GetProcessHeap
GetProcessMitigationPolicy
GetProcessWindowStation
GetProfileType
GetPropertiesFromThreadToken
GetPropertiesFromThreadTokenFailed
GetPublisher %ls
GetPublisherFolders
GetPublisherFolders %ls
GetPublisherRoot %ls
GetPublisherRootFolder
GetPublisherRootFolder %u
GetRealStateRootPath
GetRealStateRootPath %ws
GetRemoteBackupCollectionIds
GetRemoteRoamingCollectionIds
GetRoamingDataStatusForFamily %ws operation %u
GetScaleFactorForMonitor
GetSchemaContext
GetSchemaContext %ls
GetSecureSystemAppDataFolder
GetSecureSystemAppDataFolderPath
GetSecurityDescriptorDacl
GetSecurityDescriptorDacl %ls
GetSecurityDescriptorOwner
GetSecurityDescriptorSacl
GetSecurityInfo
GetSessionIdsOwnedByUser
GetSessionUserSidQueryTokenFailed
GetSettingCollectionInfo %ws
GetSettingName %ls %u
GetSettingValue %ls %u
GetSetupPhaseForPackage %ws
GetSharedLocalFolder
GetSidFromThreadOrProcessToken %ws
GetSidSubAuthority
GetSidSubAuthorityCount
GetStagedDataCollectionIdFromPackageFamilyName %ws %ws
GetStagedPackageOrigin
GetStagedPackagePathByFullName
GetState %ws
GetStateFolder
GetStateFolderPath %ls persist %u
GetStateFolderPath %u
GetStateRootFolder
GetStateRootFolder %u
GetStateRootPath %ws i %u
GetStateSettingsFolderPath
GetStateSettingsFolderPath %ls
GetStorageDeviceInfo
GetStorageInstanceCount
GetStringValue %ws
GetSystemAppDataFolder
GetSystemAppDataFolder %u
GetSystemAppDataFolderPath
GetSystemAppDataKey
GetSystemAppDataKey %ls
GetSystemDirectoryW
GetSystemInfo
GetSystemMetadataPathForPackage
GetSystemMetadataPathForPackageFamily
GetSystemPreferredUILanguages
GetSystemStateRoot %ls
GetSystemTimeAsFileTime
GetSystemWow64DirectoryW
GetTarget %ls
GetTarget %ls persist %u
GetTempFileNameW
GetTempPathW
GetThirdPartyAppRating
GetThirdPartyAppRatingCount
GetThreadInformation
GetTickCount
GetTickCount64
GetTileUniqueIdFromTDL
Getting Main Package indexed row failed
Getting related set
GetTokenInformation
GetTokenInformation %u
GetTokenInformation %ws %u
GetTokenInformation Impersonation
GetTokenInformation TokenSessionId
GetTotalChanges() called but !db.IsOpen()
GetTraceEnableFlags
GetTraceEnableLevel
GetTraceLoggerHandle
GetUInt32Value %ws
GetUpgradePackageVolumeKey
GetUserProfileFolderPath
GetUserTokensForMultiUserSession
GetVersionExW
GetVersionFromCollectionId %ws
GetVersionFromCollectionId new %ws
GetVolumeFromSubpath
GetVolumeInformationByHandleW
GetVolumeInformationW
GetVolumeMediaId
GetVolumeMountPointForVolume
GetVolumeNameForVolumeMountPointW
GetVolumePathNamesForVolumeNameW
GetVolumePathNameW
GetWindowsDirectoryW
gfD9e
gfffA
ghostWhite
GJ*pz
GKDF1Q
Gl9Clt8H
Global\
GlobalCollection
GNHcK(A
goldenrod
GP!G`f
green
greenYellow
group
Gt3fA9
gU@Mv
GW_y$gk
GxfD9$Ht,A
GXV"F
GZD#+
H !X M
H SUVWATAVAWH
H SVWH
H UATAUAVAWH
H UATAWH
h UAVAWH
H UAVAWH
H USVWAVH
H UVWAUAVH
H UWAUAVAWH
h VWAVH
H WATAUAVAWH
H!:H!{
H!:H;
H!\$ H
H!\$0
H!\$0!\$(
H!\$0H
H!\$0H!\$(H!\$ 3
H!\$83
H!\$8E3
H!\$8H
H!\$h3
H!\$pH
H!]@H!]0H
H!]0H
H!]0I
H!]0L
H!]8H
H!]HL
H!]oH
H!]pH
H!_(H!_0H!_8H!_@I
H!_@3
H!|$@L
H!|$`L
H!|$0
H!|$8H
H!|$HL
H!|$p
H!|$x
H!} I
H!}@E3
H!}0H
H!8!x
H!8H!x
H!D$@2
H!D$X
H!EgH
H!E'H
H!k(H!k0H!k8H
H!k8H!k@H!kHH
H!t$ 3
H!t$@
H!t$@H
H!t$0H
H!t$8H!t$0H!t$(H!t$ 3
H!t$pL
H!t$x
H!uGI
H!uHH
H!uPH
H!uX3
H!uXL
H!X 3
H#L$pH
H#MxH
H#w%3
H,H9K,
H,I9O,
H;\$0r
H;\$H
H;\$hr
H;\$Hr
H;\$hr
H;\$Hr
H;\$hr
H;\$Hr
H;\$hr
H;\$Hr
H;^(r
H;_`r
H;{ r
H;{(r
H;{@r
H;{`r
H;{0r
H;{8r
H;{Hr
H;{hr
H;{Hr
H;{Pr
H;{pr
H;{Pr
H;{pr
H;{Xr
H;|$@r
H;|$0r
H;|$X
H;|$Xr
H;|$Xs,D
H;}`r
H;~`r
H;~0r
H;>t&H
H;D$@u 3
H;E`w
H;Fxv)A
H;G u
H;Ghr
H;H r
H;H`r
H;k8r
H;L$0r
H;N`r
H;n0r
H;n0s
H;O`r
H;Ohr
H;p@r
H;Q0s
H;S(v
H;Spr
H;UPr
H;w r
H;w`r
H;w0r
H;Whr
H;wPr
H;x r
H;x@r
H;X@r
H;Y@r
H?8"Y
h_^[]
h|rdh
H+D$ u
H+D$(H
H+E@H;
H+EPH;
H+FxH
H+L$XH;
H+O0H;
H+T$P
H+T$PA
H+VxH
H+WXH
H>F2>H<22
h5!wE
h5x"N1
H89L$PunH
H8H!\$xH
H9)t0H
H9\$@
H9\$0t
H9\$8t
H9\$H
H9\$Hu0A
H9\$Xt;I
H9]gu
H9_`v,H
H9_`v.H
H9_Ptb8_htHH
H9{(v!H
H9{(v"H
H9{@v!H
H9{0v!H
H9{0v2H
H9{8v"H
H9{8v=H
H9{hv"H
H9{Hv=H
H9{Pv
H9{Pv!H
H9{pv+H
H9{pv2H
H9{Pv2H
H9{Xv!H
H9|$@v%H
H9|$0v
H9|$PA
H9|$xt
H9|$Xu
H9|$Xu/
H9~0t
H9~Pu
H9~Xu
H92tbH+2H
H98uIH
H98veH
H9C r"w
H9D$`
H9D$hA
H9D$Xu
H9E0u
H9Egr
H9EPr
H9G0w'
H9H,r
H9k8v1H
H9l$(t
H9L$@
H9L$8
H9L$H
H9L$Hu
H9L$pt0L
H9L$pt-L
H9l$X@
H9p w
H9p(v
H9p(vIM;l$ H
H9p(vIM;l$@H
H9q(v
H9q(w'H9r@v2L;j@s,H
H9t$0
H9t$0v
H9T$H
H9t$X
H9T$x
H9t$X
H9t/H
H9w8vb
H9x H
H9X v
H9x vbH;x r
H9X w
H9x`v,H
H9Y,r
H9Y,v
H9y0u&H
H9y0v,H
H9y8v>H;y8r
H9yHv:H
hA^A\_^[]
hA_A^_^[]
HA_A^_^[]
HA_A^A]A\_^[]
hA_A^A]A\_^[]
HA_A^A]A\_^[]
hA_A^A]A\_^[]
HA_A^A]A\_^[]
hA_A^A]A\_^][
HA_A^A]A\_^][
hA_A^A]A\_^][
hardlinkCost
HardlinkData File: %ws Hardlink: %ws
HardLinkedCount
HardLinkedSizeKB
Hardlinking evaluation cost: %I64u ms
hasBlockCacheFile
HasCentennial
HasExternalLocation
HasFullTrust
hash_base32
hash_base32() doesn't support double (%d)
HashDigestLength
Hasher.GetDigestAsBase32(text) failed
Hasher.Start() failed
Hasher.Update(integer) failed
Hasher.Update(text) failed
HasSwitchedToStub
HasSyncedInitialPayloads
HasWin32alacarte
HcA$H
HcD$ H
HcI(H
HcK(A
HcK(H
HcO8H
HcQ(H
HcS(fA
Hct$@E
HD8l$xt<I
hDR7}Y_
HeaderAddr
HeapAlloc
HeapFree
Helium
Helium\Cache
HHH;^
HL9|$hu"H
hMZ7y
hnV}+l
honeydew
HostingModel
HostRuntime
HostRuntimePackageFullName
hotPink
HoursBetweenUpdateChecks
hpxR0
hresult
HResult
hresult
HResult
hresult
HResult
hresult
HResult
hresult
HResult
hresult
HResult
hresult
HResult
hresult
HResult
hresult
HRESULT
hresult
HRESULT
hresult
HResult
hresult
HResult
hresult
HResult
hresult
HResult
hresult
HRESULT
hresult
HRESULT
hresult
HResult
hresult
HResult
hresult
HresultCode
hrXlT
hSis+
hsRH;Ohr
Ht$hM
http://schemas.microsoft.com/appx/2013/appxprovisionpackage
HV@k>
i(Lcy H
i,L;IPs
I;^0r
I;~`r
I;~Hr
I;4$u
I;6u5
I;9u+I;
I;N`A
I;n`r
I;N`s
I;NHr
I;Npr
I;vPr
I\$pH
I_QueryTagInformation
I_RpcExceptionFilter
i2?5Z
I9^0v)I;^0r
I9~8t
I94$t
I9E,I
I9G v
I9Npv!I
I9t$ v{E;l$ }t
I9t$@vxA;D$@}q
I9v0vlI
I9vPv A
I9vPw
I9x w
IcI(H
IcK(f
IcK(H
IcQ(A
IcQ(fA
IcQ(L
IcS(fA
ID8}gt
ID9m0t
IdleTaskInProgress
ifexec
Ignore RegistrationStateHandler Error In UserProfileDeletionScenario
ignoredPackageFullName
Ignoring bundle package without main or optional
Ignoring failure in MigrateCustomData as either outdated package or updating package is attached.
Ignoring optional package - did not find an indexed package row
Ignoring optional package - failed to get package row
Ignoring optional package -- unable to get optional package row
Ignoring package because of invalid related set update, picking another package instead
Ignoring paused optional package
Ignoring paused package
Ignoring protection level %u for %ls.
Ignoring unsupported protection level %u for %ls.
iHH;u
IIDFromString
iiW\z
Image
imageName
ImagePath
imageSize
Impersonate %ls %ls
Impersonate %ws
ImpersonateLoggedOnUser
ImpersonateSelf
ImplementsContentRestrictions
InboxApplications
include
incomingPackageFullName
IncomingPackageName
incompatible version
incomplete distance tree
incomplete dynamic bit lengths tree
incomplete literal/length tree
incorrect data check
incorrect header check
IncrementCurrentTicks %llu
IncrementPackageStatusVersion
Index
Index %u %u
INDEXEDDB_DEH_KEYWORD
Indexing cost: %I64u ms
indianRed
indigo
Indirections
indirectlyServicedPackagesList
Information
InfoTip
Ingoring error for CdplProtectFileToLevelWithResult(%ls)
InitialInstallTime
Initialize
Initialize BU %ws operation %u
Initialize RM %ws operation %u
InitializeAcl
InitializeCriticalSectionEx
InitializeFormat %u
InitializeFromString %ws path %ws
InitializeProcThreadAttributeList
InitializeSecurityDescriptor
InitializeSListHead
InitializeSRWLock
InitOnceBeginInitialize
InitOnceComplete
iNLK0
InPlaceFileInfo
InPlaceUpdate
InPlaceUpdatePendingForPackagedService
InPlaceUpdateStatus
inProcessMediaExtension
Insert %ws user %ws
INSERT INTO Activation (_Revision, ActivationKey, Flags, HostId, Executable, Entrypoint, RuntimeType, StartPage, ResourceGroup, _Dictionary) VALUES(?,?,?,?,?,?,?,?,?,?);
INSERT INTO AppExecutionAlias (_Revision, _WorkId, Alias, Extension, Flags, _Dictionary) VALUES(?,?,?,?,?,?);
INSERT INTO AppExtension (_Revision, _WorkId, Name, Id, PublicFolder, DisplayName, Description, Extension, _Dictionary) VALUES(?,?,?,?,?,?,?,?,?);
INSERT INTO AppExtensionHost (_Revision, _WorkId, Extension, Name, _Dictionary) VALUES(?,?,?,?,?);
INSERT INTO AppInstaller (_Revision, Uri, Version, LastChecked, CheckUpdateInterval, Flags, _Dictionary) VALUES(?,?,?,?,?,?,?);
INSERT INTO Application (_Revision, _WorkId, Package, "Index", ApplicationType, Flags, Subsystem, PackageRelativeApplicationId, ApplicationUserModelId, DisplayName, Description, Square150x150Logo, Square44x44Logo, Wide310x150Logo, Square310x310Logo, Square71x71Logo, ForegroundText, BackgroundColor, Activation, HostId, Executable, Entrypoint, StartPage, ResourceGroup, LockScreenNotification, LockScreenBadgeLogo, SplashScreenImage, SplashScreenBackgroundColor, InitialRotationPreference, ApplicationViewMinWidth, AppListEntry, EditionId, VisualGroup, Parameters, _Dictionary) VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?);
INSERT INTO ApplicationBackgroundTask (_Revision, _WorkId, Type, Extension, "Index", _Dictionary) VALUES(?,?,?,?,?,?);
INSERT INTO ApplicationContentUriRule (_Revision, _WorkId, Application, "Index", Uri, Type, WindowsRuntimeAccess, Flags, _Dictionary) VALUES(?,?,?,?,?,?,?,?,?);
INSERT INTO ApplicationExtension (_Revision, _WorkId, Application, "Index", Category, Activation, HostId, Executable, Entrypoint, RuntimeType, StartPage, ResourceGroup, Flags, Subsystem, Parameters, _LocalizedDictionary, _Dictionary) VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?);
INSERT INTO ApplicationProperty (_Revision, _WorkId, Application, "Index", Name, _Dictionary) VALUES(?,?,?,?,?,?);
INSERT INTO AppService (_Revision, _WorkId, Name, Extension, "Index", _Dictionary) VALUES(?,?,?,?,?,?);
INSERT INTO AppUriHandler (_Revision, _WorkId, HostName, Extension, ProgID, AppUriHandlerGroup, _Dictionary) VALUES(?,?,?,?,?,?,?);
INSERT INTO AppUriHandlerGroup (_Revision, _WorkId, Name, Extension, _Dictionary) VALUES(?,?,?,?,?);
INSERT INTO AppxExtension (_Revision, _WorkId, User, Package, Category, KeyString, RegistrationInformation, ExtensionStatus, _Dictionary) VALUES(?,?,?,?,?,?,?,?,?);
INSERT INTO AppxManifest (_Revision, _WorkId, Package, Xml, _Dictionary) VALUES(?,?,?,compress(?),?);
INSERT INTO Bundle (_Revision, _WorkId, Package, UniqueLanguage, UniqueScale, UniqueDXFeatureLevel, _Dictionary) VALUES(?,?,?,?,?,?,?);
INSERT INTO BundlePackage (_Revision, _WorkId, Bundle, PackageType, Version, Architecture, ResourceId, Filename, "Offset", Size, Flags, _Dictionary) VALUES(?,?,?,?,?,?,?,?,?,?,?,?);
INSERT INTO BundleResource (_Revision, _WorkId, BundlePackage, Language, Scale, DXFeatureLevel, _Dictionary) VALUES(?,?,?,?,?,?,?);
INSERT INTO ContentGroup (_Revision, _WorkId, Package, "Index", Name, ContentGroupType, Status, _Dictionary) VALUES(?,?,?,?,?,?,?,?);
INSERT INTO ContentGroupFile (_Revision, _WorkId, ContentGroup, File, _Dictionary) VALUES(?,?,?,?,?);
INSERT INTO DefaultTile (_Revision, _WorkId, Application, UpdateRecurrence, UpdateUriTemplate, ShowNameOnTiles, ShortName, DefaultSize, HoloContentChoice, MixedRealityModel, _Dictionary) VALUES(?,?,?,?,?,?,?,?,?,?,?);
INSERT INTO Dependency (_Revision, _WorkId, DependentPackage, "Index", DependencyType, Name, Publisher, MinVersion, MaxVersion, Flags, _Dictionary) VALUES(?,?,?,?,?,?,?,?,?,?,?);
INSERT INTO DependencyGraph (_Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary) SELECT _Revision, ?2, ?1, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE _DependencyGraphID=?1 AND _ShadowId=0 AND NOT EXISTS(SELECT 1 FROM DependencyGraph WHERE _ShadowId=?1 AND _WorkId<>0 LIMIT 1);
INSERT INTO DependencyGraph (_Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary) VALUES(?1,?2,?3,?4,?5,?6,?7,?8,?9,?10);
INSERT INTO DeploymentHistory (_Revision, _WorkId, PackageIdentity, User, HResult, WhenOccurred, _Dictionary) VALUES(?,?,?,?,?,?,?);
INSERT INTO File (_Revision, _WorkId, Package, RelativeFilePath, Size, Digest, _Dictionary) VALUES(?,?,?,?,?,?,?);
INSERT INTO FileTypeAssociation (_Revision, _WorkId, FileType, ContentType, Extension, "Index", ProgID, _Dictionary) VALUES(?,?,?,?,?,?,?,?);
INSERT INTO HostRuntime (_Revision, _WorkId, HostId, PackageExtension, _Dictionary) VALUES(?,?,?,?,?);
INSERT INTO MrtApplication (_Revision, _WorkId, Application, DisplayNameReference, DescriptionReference, Square150x150LogoReference, Square44x44LogoReference, Wide310x150LogoReference, Square310x310LogoReference, Square71x71LogoReference, StartPageReference, SplashScreenImageReference, VisualGroupReference, _Dictionary) VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?);
INSERT INTO MrtPackage (_Revision, _WorkId, Package, DisplayNameReference, PublisherDisplayNameReference, DescriptionReference, LogoReference, _Dictionary) VALUES(?,?,?,?,?,?,?,?);
INSERT INTO NamedDependency (_Revision, _WorkId, DependencyType, Package, "Index", Name, Version, _Dictionary) VALUES(?,?,?,?,?,?,?,?);
INSERT INTO OptionalBundle (_Revision, _WorkId, MainBundle, Name, Publisher, Version, Filename, _Dictionary) VALUES(?,?,?,?,?,?,?,?);
INSERT INTO OptionalBundlePackage (_Revision, _WorkId, OptionalBundle, PackageType, Version, Architecture, ResourceId, Filename, "Offset", Size, _Dictionary) VALUES(?,?,?,?,?,?,?,?,?,?,?);
INSERT INTO OptionalBundleResource (_Revision, _WorkId, OptionalBundlePackage, Language, Scale, DXFeatureLevel, _Dictionary) VALUES(?,?,?,?,?,?,?);
INSERT INTO Package (_Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary) VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?);
INSERT INTO PackageAppInstaller (_Revision, _WorkId, Package, AppInstaller, _Dictionary) VALUES(?,?,?,?,?);
INSERT INTO PackageExtension (_Revision, _WorkId, Package, "Index", Category, Activation, HostId, Executable, Entrypoint, RuntimeType, StartPage, Flags, Parameters, _Dictionary) VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?);
INSERT INTO PackageExternalLocation (_Revision, _WorkId, User, Package, Path, _Dictionary) VALUES(?,?,?,?,?,?);
INSERT INTO PackageFamily (_Revision, Name, Publisher, PublisherId, PackageFamilyName, PackageSID, _Dictionary) VALUES(?,?,?,?,?,?,?);
INSERT INTO PackageIdentity (_Revision, PackageFamily, PackageFullName, _Dictionary) VALUES(?,?,?,?);
INSERT INTO PackageLocation (_Revision, _WorkId, Package, Volume, InstalledLocation, MutableLink, MutableLocation, _Dictionary) VALUES(?,?,?,?,?,?,?,?);
INSERT INTO PackagePolicy (_Revision, _WorkId, User, Package, Name, "Index", ValueString, ValueNumber, _Dictionary) VALUES(?,?,?,?,?,?,?,?,?);
INSERT INTO PackageProperty (_Revision, _WorkId, Package, "Index", Name, _Dictionary) VALUES(?,?,?,?,?,?);
INSERT INTO PackageSourceUri (_Revision, _WorkId, Package, Uri, Kind, _Dictionary) VALUES(?,?,?,?,?,?);
INSERT INTO PackageSuperceded (_Revision, PackageIdentity, User, _Dictionary) VALUES(?,?,?,?);
INSERT INTO PackageUser (_Revision, _WorkId, Package, User, InstallTime, OSVersionWhenInstalled, WhenRestored, IsExplicitlyInstalled, DeploymentState, AppDataVolume, _Dictionary) VALUES(?,?,?,?,?,?,?,?,?,?,?);
INSERT INTO PackageUser(_Revision, _WorkId, Package, User, InstallTime, IsExplicitlyInstalled, DeploymentState, AppDataVolume)SELECT 1, 0, _PackageID, (SELECT _UserID FROM User WHERE UserSid=X'010100000000000512000000'), now(), 1, 6, 0 FROM Package WHERE _PackageID NOT IN (SELECT Package FROM PackageUser);
INSERT INTO PrimaryTile (_Revision, _WorkId, Application, Package, Flags, TileTemplate, TileId, Arguments, EditionId, _Dictionary) VALUES(?,?,?,?,?,?,?,?,?,?);
INSERT INTO PrimaryTileUser (_Revision, _WorkId, _Created, _Modified, User, ApplicationIdentity, State, TileUniqueId, _Dictionary) VALUES(?,?,?,?,?,?,?,?,?);
INSERT INTO Protocol (_Revision, _WorkId, ProtocolName, ReturnResults, Extension, "Index", ProgID, _Dictionary) VALUES(?,?,?,?,?,?,?,?);
INSERT INTO PublisherCacheFolder (_Revision, _WorkId, PackageExtension, "Index", FolderName, _Dictionary) VALUES(?,?,?,?,?,?);
INSERT INTO Resource (_Revision, _WorkId, Package, "Index", Language, _Dictionary) VALUES(?,?,?,?,?,?);
INSERT INTO SecondaryTile (_Revision, _WorkId, Flags, TileTemplate, TileId, Arguments, EditionId, _Dictionary) VALUES(?,?,?,?,?,?,?,?);
INSERT INTO SecondaryTileUser (_Revision, _WorkId, _Created, _Modified, SecondaryTile, User, ApplicationIdentity, State, TileUniqueId, _Dictionary) VALUES(?,?,?,?,?,?,?,?,?,?);
INSERT INTO Sequence (Id, LastValue) VALUES(?,?);
INSERT INTO SRJournal (_Revision, _WorkId, ObjectType, Action, ObjectId, User, PackageIdentity, ApplicationIdentity, WhenOccurred, SequenceId)SELECT 1, workid(), 14 /*ApplicationUser*/, 1 /*Add*/, pu._PackageUserID, pu.User, pi._PackageIdentityID, ai._ApplicationIdentityID, now(), ?1 AS SequenceId FROM PackageUser AS pu INNER JOIN Package AS p ON p._PackageID=pu.Package INNER JOIN PackageIdentity AS pi ON pi.PackageFullName=p.PackageFullName INNER JOIN Application AS a ON a.Package=p._PackageID INNER JOIN ApplicationIdentity AS ai ON ai.ApplicationUserModelId=a.ApplicationUserModelId WHERE a._ApplicationID=?2 AND (pu._WorkId=0 OR pu._WorkId=?3) AND (p._WorkId=0 OR p._WorkId=?3) AND (a._WorkId=0 OR a._WorkId=?3);
INSERT INTO SRJournal (_Revision, _WorkId, ObjectType, Action, ObjectId, User, PackageIdentity, ApplicationIdentity, WhenOccurred, SequenceId)SELECT 1, workid(), 14 /*ApplicationUser*/, 1 /*Add*/, pu._PackageUserID, pu.User, pi._PackageIdentityID, ai._ApplicationIdentityID, now(), ?1 AS SequenceId FROM PackageUser AS pu INNER JOIN Package AS p ON p._PackageID=pu.Package INNER JOIN PackageIdentity AS pi ON pi.PackageFullName=p.PackageFullName INNER JOIN Application AS a ON a.Package=p._PackageID INNER JOIN ApplicationIdentity AS ai ON ai.ApplicationUserModelId=a.ApplicationUserModelId WHERE a._ApplicationID=?2 AND pu._WorkId=0 AND p._WorkId=0 AND a._WorkId=0;
INSERT INTO TargetDeviceFamily (_Revision, _WorkId, Package, "Index", Name, MinVersion, MaxVersion, _Dictionary) VALUES(?,?,?,?,?,?,?,?);
INSERT INTO User (_Revision, UserSid, _Dictionary) VALUES(?,?,?);
INSERT INTO WowDependencyGraph (_Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary) SELECT _Revision, ?2, ?1, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE _WowDependencyGraphID=?1 AND _ShadowId=0 AND NOT EXISTS(SELECT 1 FROM WowDependencyGraph WHERE _ShadowId=?1 AND _WorkId<>0 LIMIT 1);
INSERT INTO WowDependencyGraph (_Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary) VALUES(?1,?2,?3,?4,?5,?6,?7,?8,?9,?10);
INSERT INTO XboxPackage (_Revision, _WorkId, Package, EditionId, BuildId, DeviceId, BuildVersion, ContentId, ProductId, MediaId, PackageSize, TitleId, PrimaryServiceConfigId, EraVersion, EscrowedKeyBlobId, _Dictionary) VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?);
INSERT OR IGNORE INTO User(_Revision, UserSid, _Dictionary)VALUES(1, X'010100000000000512000000', NULL);
Installed main package found, bundle is reinstall
Installed resource package set is not a subset of the combined user and system applicable resource package sets, so it is Installable because a package needs to be removed.
InstalledPackagedAppsRevision
installedPackageFullName
InstallPackageList
insufficient memory
IntegrityLevel
integrityResult
integrityState
IntentPackageFamilyOrFullName
intentPackageFamilyOrFullName
intentPackageFullName
InterfaceIdentifier
InterlockedPopEntrySList
InterlockedPushEntrySList
InternalName
invalid bit length repeat
invalid block type
invalid distance code
invalid hash bucket count
invalid literal/length code
Invalid operation
invalid stored block lengths
invalid string position
invalid vector<T> subscript
invalid window size
IoPriority
iot2:Subsystem
IPhA]
is_srjournal_enabled
is_triggers_enabled
IsAppx
isCacheFileTailBlockResult
IsCancelled %ws package %ws
IsCentennial
IsCleanupTaskComplete
isCoServicedSet
IsDebuggerPresent
IsDeveloperModeEnabled
isDiffusionEnabled
isEncrypted
IsEncrypted %ws
IsErrorFatal 0x%0x %ls
IsEvtExportLogPresent = 
isForSpecificUser
IsFQCidHigherVersion %u fQCid %ws
IsImpersonating
IsInAutoCommitMode() called but !db.IsOpen()
IsInboxPackage
IsInPlaceUpdate
IsInRelatedSet
IsInstalled
IsLOBApp
IsLocalExperiencePackReadyForRemoval
IsMain
isMigration
IsMounted %ls
IsMounted %ls persist %u
IsNonInboxAllUserPackage
IsNonInboxAllUserPackageSpecificPackage
isOnSystemVolume
IsOptional
IsPackageDowngrade
IsPackageEncrypted
IsPackageEndOfLife
IsPackageInDownlevelInstalledKey
IsPackageInEndOfLifeKey
IsPackageInStagedKey
IsPackageInstalledInternal
IsPackageInUpgradeKey
IsPackageOnPreinstalledVolume
isPackageRequired
IsPackageStatePresent %ws %ws %ws
IsPackageUnregisteredForRoaming %ws
IsPackageUnregisteredForRoaming: bad packageFamilyName
IsPackageUsingBDC
IsPreThresholdDesktop
IsPreThresholdPhone
IsProcessorFeaturePresent
IsQueueEmpty
isRequired
isSessionLocked
IsSideloadingEnabled
IsStreamingPackage
IsStubApp
IsTest
IsValidSecurityDescriptor
IsValidSecurityDescriptor %ws
IsValidSid
IsWellKnownSid
IsWPTestEkuSigningAllowed
IsXAP
ivory
ixCm9%
IZ&FrrP
J$(4&
-j)}:W
-J:,#
J|^ZhX
jau3b
jb0hf
jdDs=
JE8'tBL
jOAtB
journal_mode
journal_size_limit
JuniperNetworks.JunosPulseVpn_cw5n1h2txyewy
K L9I
K SUVWH
K SVWH
k VWATAVAWH
K VWATAVAWH
k VWAVH
k,L;KPs
k~&ka!
K32EnumProcesses
kea[2%C
kernelbase.dll
Kernel-OneCore-VailGuest
Key %ls index %u
keyId
KeyID
keyIdSize
KeyName
KfD9u0uvH
KH!{0H!{8H
khaki
klt%H
kug<A
KXL9KPt
L!|$0A
L!1L;
L!d$pH
L!eXH
L!L$ 3
L!mXH
L!t$@H
L!t$p
L!u@H
L!uHH
L#5F#
l$ E3
L$ E3
l$ E3
L$ E3
l$ E3
L$ E3
l$ E3
L$ E3
l$ E3
L$ E3
l$ E3
L$ E3
l$ E3
L$ E3
l$ E3
L$ E3
l$ E3
L$ E3
l$ E3
L$ E3
l$ E3
L$ E3
l$ E3
L$ E3
l$ E3
L$ E3
l$ E3
L$ E3
l$ E3
L$ E3
l$ E3
L$ E3
l$ E3
L$ E3
L$ SUVWH
L$ SVWH
L$ SWH
L$ UH
L$ USVWAVAWH
L$ UVWATAUAVAWH
L$ UVWAVAWH
L$ UWATAVAWH
l$ VWATAUAVAW
l$ VWATAVAW
l$ VWATAVAWH
l$ VWAUAVAWH
l$ VWAVH
L$ VWAVH
l$ VWAVH
L$ VWAWH
L$ WH
l$ WH
L$(E3
l$(E3
L$(I;
L$)D+
L$@9L$ t
l$@D9|$0
L$@E3
L$@H;
L$@H3
l$@Hc
L$@I+
l$@M;
L$\H;
L$`!\$(H
L$`D;
l$`E3
L$`E3
L$`H3
L$`H9A
L$0E;
L$0E3
l$0E3
L$0E3
l$0E3
L$0E3
L$0H;
L$0H3
L$0H9
L$1D+
l$2D8m`u
L$4A+
L$4A3
L$4E3
L$8A3
L$8E3
L$8H3
L$8L;
L$DA8
l$DM9o
l$fD8t$gt
L$hD!d$8E
l$hD3
L$hE3
L$HE3
l$HE3
L$hE3
L$HE3
L$hE3
L$HE3
L$HfH
L$HH;
l$hH;}
L$hH3
L$HH3
L$hH3
L$HH3
L$hH3
L$HH3
L$hH3
L$HH3
L$hH3
L$hL+
L$hL9\$pu4
L$HL9\$PuA
l$HsqL
L$lL9\$pu,
L$P!E
L$P8Uo
L$PA;
l$PA_A^A]A\_^
L$PA+
L$PA3
l$PD;l$H
L$PD9
L$pE2
L$PE3
L$pE3
L$PE3
L$pE3
L$PE3
l$PE3
L$PE3
L$pE3
L$PE3
l$pfD
L$pH;
L$PH;
L$pH3
L$PH3
L$pH3
L$PH3
L$pH3
L$PH3
L$pH3
L$PH3
L$pH3
L$PH3
L$pH3
L$PH3
L$pH3
L$PH3
L$pH3
L$PH3
L$pH3
L$PH3
L$pH3
L$PH3
L$pH3
L$PH3
L$pH3
L$PH3
L$pH9]
L$PL+
L$pL9y
L$rLK
L$TA3
L$tI;
L$x;M
L$XA3
L$XD!d$4E
L$XE3
L$xE3
L$XE3
L$xE3
L$XE3
L$xE3
L$XE3
L$xE3
L$XE3
L$xE3
L$XH;
L$xH;
L$XH+
L$XH3
L$xH3
L$XH3
L$xH3
L$XH3
L$xI;
l$XL!t$`H
L$XL;
l$xL;l$X
L$xL9]
L$xM;
L;` r
L;~`r
L;c r
L;d$`
L;d$`r
L;d$X
L;g8r
L;kHu
L;KHu
L;KHu"H
L;l$h
L;nHu$H
L;uoL
L;v`r
L;w0r
L`)kOA
L`n9S
L{W.rQ
L9 t"H
L9 t+
L9#t2H
L9/u2H
L9\$Hu1
L9\$pu
L9\$pu'
L9\$pu&
L9\$Pu*
L9\$pu.
L9\$pu:
L9\$pu3
L9\$Pu3
L9\$pu7
L9\$PufA
L9] u
L9]`u
L9]pu
L9]Xu
L9` v:I
L9` vSI
L9`@vBL;`@r
L9``vDI
L9``vPI
L9|$@
L9|$@t
L9|$0tPH
L9|$8t8D8|$Pt'I
L9|$H
L9|$h
L9|$H
L9|$ht
L9|$Ht+
L9|$Hu
L9|$Hu,
L9|$Hv
L9|$hv
L9|$P
L9|$pt
L9|$Pw
L9|$xt5D8}
L9|$Xt8D8|$pt'I
L9}wt,H
L9~ H
L9=nw
L90u,L
L9c`v,H
L9Cpv/3
L9d$`u!f
L9d$0v
L9d$0v&I
L9d$8
L9d$8t
L9d$h
L9d$ht
L9d$Pt
L9d$pt
L9d$pt%H
L9d$pu
L9d$Pu
L9d$Xt
L9e(t
L9eot
L9f`v(H
L9fhw
L9g v(H
L9g0u'H
L9ipu
L9k0v7H
L9l$ t
L9l$@
L9l$@u"H
L9l$`
L9l$8s
L9l$p
L9l$ptlD8m
L9l$pu
L9l$x
L9l$Xt
L9m@u&A
L9ohtiH
L9ohv'E
L9t$0t
L9t$Pt
L9T/@t
L9uwu
L9w`H
L9w`u)
L9x w
L9x@vD
L9y w
L9y(t
L9y`vIH
L9y0u%H
L9z t
L9z(H
Landscape
LandscapeFlipped
lastError
LastLine
LastOrphanBackupManifestCleanupTime
LastOrphanPackageCleanupTime
lastState
lavender
lavenderBlush
lawnGreen
LazyFlushQueueLength
LcD$0E
LCMapStringEx
Lct$$H
LD8egu%3
LeaveCriticalSection
LegalCopyright
lemonChiffon
Level %u for %ls.
LICENSING_DEH_KEYWORD
lightBlue
lightCoral
lightCyan
lightGoldenrodYellow
lightGray
lightGreen
lightPink
lightSalmon
lightSeaGreen
lightSkyBlue
lightSlateGray
lightSteelBlue
lightYellow
limeGreen
linen
lineNumber
LineNumber
lineNumber
LineNumber
lineNumber
LineNumber
LinkDestinationPath
LinkTargetIsPartOfAutomaticContentGroup
list<T> too long
LoadCategoryNameTable
LoadExtensionRegistrationTable
LoadLibraryExW
Local AppData
Local Settings\Software\Microsoft\Windows\CurrentVersion\AppModel\Repository\Packages
Local Settings\Software\Microsoft\Windows\CurrentVersion\AppModel\Repository\Packages\
Local\SM0:%d:%d:%hs
LocalAlloc
LocalExperiencePackage
LocalFree
Locality %d state %d
Locality %u
Locality %u path %ls
Locality %u size %u copiedSize %u fromPath %ls toPath %ls
Locality %u size %u copiedSize %u path %ls
Locality %u size %u path %ls
Location
locking_mode
LogFileInUse Telemetry failed: No valid tag.
Logging data because access was denied for file: 
LogHr
LogIfAccessDenied
logoOnly
LookasideHitPeak
LookasideMissFullPeak
LookasideMissSizePeak
LookasideUsed
LookasideUsedPeak
lookingFor
LookupAccountSidW
LookupPrivilegeValueW
lpacAppExperience
lpt1.
lpt2.
lpt3.
lpt4.
lpt5.
lpt6.
lpt7.
lpt8.
lpt9.
LsaLookupClose
LsaLookupFreeMemory
LsaLookupGetDomainInfo
LsaLookupOpenLocalPolicy
lstd::exception: %hs
lstrcmpiW
lstrcmpW
lUonecore\admin\appmodel\StagingManager\Inc\StagingSession.hpp
LWX9-
LXP_DEH_KEYWORD
LyncMXE2ETool-0ee8b9d7-73ed-477e-9624-4c7f903dec5b_t84ne4vpwezv8
lZn7RA
M 3}$L
M 3U$L
M D3M$L
M D3U$L
M D3u$L
m D9u
M H1E
m:AppxProvisionList
m:AppxProvisionList/m:EndOfLife/m:Package/@FamilyName
m:AppxProvisionList/m:Provisioned/m:Package/@FullName
m:EndOfLife
m:EndOfLife/m:Package
m:Package
m:Provisioned
m:Provisioned/m:Package
m:VisualElements/@Logo | *[local-name()='VisualElements']/@Square150x150Logo
m:VisualElements/@SmallLogo | m2:VisualElements/@Square30x30Logo | *[local-name()='VisualElements']/@Square44x44Logo
m:VisualElements/m:DefaultTile/@WideLogo | *[local-name()='VisualElements']/*[local-name()='DefaultTile']/@Wide310x150Logo
m:XboxLive | mx:XboxLive
M;~Hr
M;fPrxE3
M;u`r
M;w8r
M0!E@
M0H9M
m2:VisualElements/m2:DefaultTile/@Square70x70Logo | *[local-name()='VisualElements']/*[local-name()='DefaultTile']/@Square71x71Logo
m4H+L$(H
M7D9G,u
M9!tME8a
M9,$t*A
M9.u)
M94$uTL
M9f`t
M9w8vZ
Machine
Machine register cost: %I64u ms
MACHINE\
MachineArchitecture
MachineDatabase
MachineDatabaseAutoCheckpoint
MachineDatabaseCheckpointThreshold
MachineDatabaseFileChunkSize
MachineDatabaseJournalSizeLimit
MachineDatabaseOptions
MachineDatabasePageSize
MachineDatabaseStatisticsLastUpdated
MachineRegisterAdd
magenta
Main or Optional Package could not be found!
Main or Optional Package is installed and in a good package status
main package
Main package is already installed.  Applicability blob contains bundle payload information so it's not necessary to update the bundle.
MainBundle
MainOrOptionalPackageFullName1
MainOrOptionalPackageFullName2
MainOrOptionalPausedPackage
mainPackage
MainPackageFamilyName
MainPackageFullName
MainPackageMoniker
MainParameter
MaintainProcessorArchitectureOnUpdate
MaintenanceInterval
MaintenanceMaxClockDelta
Make %u
make_unique_nothrow
MakeAndInitialize %d
MakeSelfRelativeSD
MallocCount
MallocCountPeak
MallocSizePeak
Managed.App.Settings
ManifestCacheOptions
ManifestLogo
ManifestPath
ManifestPath %ws
ManifestReaderFound
ManifestSmallLogo
ManifestWideLogo
map/set<T> too long
MapViewOfFile
MarkStatusOfMainPackageForUser
maroon
Match
MaxConcurrentStageCountForCoServicingPackages
MaxCount
MaxDynamicBatchSize
MaxInstallOrder
MaxVersion
MediaID
MediaId
MediaID
mediumAquamarine
mediumBlue
mediumIL
mediumOrchid
mediumPurple
mediumSeaGreen
mediumSlateBlue
mediumSpringGreen
mediumTurquoise
mediumVioletRed
memcmp
memcpy
memmove
MEMORY
MemoryPriority
MemoryUsed
MemoryUsedPeak
memset
MergedPriFileCreationError
MergeRelatedPriFiles
MergeSystemResourceFilesImplementation
message
Message
message
Message
message
Message
message
Message
message
Message
message
metadataStageCost
MgL;nHu!H
Mh!ExH
MHCx+gF
MHH!}
mHH9|$Xu,
MHH9Q,
mhL9h
Microsoft
Microsoft Corporation
Microsoft Enhanced RSA and AES Cryptographic Provider
Microsoft.AAD.BrokerPlugin_cw5n1h2txyewy
Microsoft.CloudExperienceHost_8wekyb3d8bbwe
Microsoft.LyncMX_8wekyb3d8bbwe
Microsoft.MicrosoftEdge_8wekyb3d8bbwe
Microsoft.MicrosoftEdgeBeta_8wekyb3d8bbwe
Microsoft.MicrosoftEdgeDevToolsClient_8wekyb3d8bbwe
Microsoft.MoCamera_cw5n1h2txyewy
microsoft.system.package.metadata
microsoft.system.package.metadata\
microsoft.system.package.metadata\blockcache
Microsoft.VCLibs.110.00.Debug_8wekyb3d8bbwe
Microsoft.VCLibs.110.00_8wekyb3d8bbwe
Microsoft.VCLibs.120.00.Debug_8wekyb3d8bbwe
Microsoft.VCLibs.120.00_8wekyb3d8bbwe
Microsoft.VCLibs.140.00.CP_8wekyb3d8bbwe
Microsoft.VCLibs.140.00.Debug.CP_8wekyb3d8bbwe
Microsoft.VCLibs.140.00.Debug.Preview_8wekyb3d8bbwe
Microsoft.VCLibs.140.00.Preview_8wekyb3d8bbwe
Microsoft.Windows.ApplicationModel.DesktopAppx
Microsoft.Windows.AppModel.Tiles
Microsoft.Windows.AppxDeploymentFallback
Microsoft.Windows.AppXDeploymentServer
Microsoft.Windows.CloudExperienceHost_cw5n1h2txyewy
Microsoft.Windows.ContentDeliveryManager_cw5n1h2txyewy!App
Microsoft.Windows.Cortana_cw5n1h2txyewy!CortanaUI
Microsoft.Windows.ShellExperienceHost_cw5n1h2txyewy!App
Microsoft.Windows.StateRepository.Core
Microsoft.Windows.StateRepository.Service
Microsoft.Windows.Wil.FeatureLogging
Microsoft.WindowsReadingList_8wekyb3d8bbwe
Microsoft.WindowsStore_8wekyb3d8bbwe
Microsoft.WinJS.2.0_8wekyb3d8bbwe
Microsoft.XboxIdentityProvider_8wekyb3d8bbwe
Microsoft.ZDebugMenu_wmyngzxja4wtg
Microsoft.zMicrosoftEdge_8wekyb3d8bbwe
Microsoft\Windows\CurrentVersion\Appx\AppxAllUserStore\
Microsoft-Windows-AppModel-State
Microsoft-Windows-AppReadiness/Admin
Microsoft-Windows-AppReadiness/Operational
Microsoft-Windows-AppXDeployment-Server
Microsoft-Windows-AppXDeploymentServer/Debug
Microsoft-Windows-AppXDeploymentServer/Diagnostic
Microsoft-Windows-AppXDeploymentServer/Operational
Microsoft-Windows-AppXDeploymentServer/Restricted
Microsoft-Windows-AppXPackaging/Operational
Microsoft-Windows-SettingSync/Debug
Microsoft-Windows-SettingSync/Operational
Microsoft-Windows-StateRepository/Operational
Microsoft-Windows-Store/Operational
Microsoft-Windows-WindowsUpdateClient/Operational
midnightBlue
MigratedSecondaryTilesFromTDL
MigrateSecondaryTile
MigrateSecondaryTilesFromTdl
MigrateSecondaryTilesFromTDL
MigrateSecondaryTilesFromTdl
MigrateSecondaryTilesFromTDL
MigrationRequired
MigratorPatch
MinimumDaysBeforeForceUpdate
mintCream
MinWidth
MissingPackageFamily
MissingParameter
mistyRose
MkParseDisplayName
moccasin
MOCOM_HELPER_KEYWORD
ModifiedFile
module
ModuleCollection
MofFile
monecore\admin\appmodel\deploymentmanager\src\destageuserdatastatehandler.cpp
MountPoint
MoveAndShrink
MovedPackages
MoveFile %ls %ls
MoveFileExW
MoveFileW
MoveStateData %ws root %ws i %u
mp8U`uKH
MPDj>
mpI!]
MpI;E0
MrmCoreR.dll
mrmdeploy.dll
MRT_DEH_KEYWORD
MrtApplication
MRTDataHandlerPopulate
MRTDataHandlerRemove
MrtDefaultTile
MrtPackage
MrtSharedPri
MrtUserPri
ms:CriticalData
ms:Measures
ms:ReservedKeyword44
ms:Telemetry
MSAC_SIGNOUT_DEH_KEYWORD
msdelta.dll
Msg:[%ws] 
MSIXInBundle
MsixvcSignature.p7
msvcp_win.dll
ms-xbl-%08x
MultiByteToWideChar
multiple
Multiple frameworks with same version found, choosing not yet installed package
Multiple intent package full names not supported.
Mutable
MutableBackup
MutablePackageDirectory
mutablePackageDirectory
MutablePackageDirectoryAddProcessing
MutablePackageDirectoryEnabled
MutablePackageDirectoryMoveProcessing
MutablePackageDirectoryProcessAdd
MutablePackageDirectoryRemoveProcessing
MutablePackageDirectoryRepairProcessing
MutablePackageDirectoryStateHandler
MutablePackageDirectoryUpdateProcessing
MutablePackagesOnline
m'w8Z
m-wonecore\admin\appmodel\packagemanager\server\resetsingleparameterprocessor.cpp
mx:Rating
MXH!uX3
N ,N4
n I;^
N@D8d$0ueH
N@H9NPt
N=+-TY
N6Eh0
n90bs
nA[Xx
NamedDependency
navajoWhite
ncacn_hvsocket
ncalrpc
ND8ePu
nD8l$0tLE
Ndr64AsyncServerCallAll
NdrAsyncServerCall
NdrClientCall3
NdrServerCall2
NdrServerCallAll
NDZe"
need dictionary
needsTrimming
neutral
new %u
new LOCAL %u
new LOCALCACHE %u
New request enqueued
new ROAMING %u
new TEMP %u
newFilePointer
NewMainPackageFullName
newMutablePackageDirectory
newPackage
newPackageFullName
newPackageRoot
NewParser
NextDeploymentState
NextVolumeIndex
NMpn$
No Applicable TargetPlatform
No matching main package found, bundle is not reinstall
NoContentGroupMapForPackage
Non-Encrypted FileName: %ws
Non-fatal, webplat storage server fails to detach databases.
NoReRegisterOnUpgrade
NORMAL
not empty
not in
Notification
NotificationSemaphores
NotifyObject
NotifyPrelaunchServce
NotifyServiceStatusChangeW
NoUIEntryPoints
NoUIEntryPoints-DesignMode
NtAccessCheck
NtClose
NtCompareSigningLevels
NtCreateFile
NtCreateSection
NtCreateWnfStateName
NtDeleteWnfStateName
ntdll.dll
ntelA
NtFsControlFile
NtGetCachedSigningLevel
NtMapViewOfSection
NTMARTA.dll
NtOpenDirectoryObject
NtOpenFile
NtQueryInformationFile
NtQueryInformationProcess
NtQueryInformationThread
NtQueryInformationToken
NtQueryLicenseValue
NtQuerySecurityObject
NtQuerySystemInformation
NtQueryWnfStateData
NtSetInformationFile
NtSetInformationThread
NtSetInformationVirtualMemory
NtSetSecurityObject
NTStatus
NtUnmapViewOfSection
NtUpdateWnfStateData
numAttempts
NumberOfFiles
NumberOfPagesCheckpointed
nXL9nPt4A
NZ\p'
o%-GQ:
O(D8y
O:BAG:BAD:(A;;0x1;;;SY)(A;;0x1;;;BA)
O:BAG:BAD:(A;;0x1;;;SY)(A;;0x1;;;BA)(A;;0x1;;;LS)
O:S-1-5-80-956008885-3418522649-1831038044-1853292631-2271478464D:PAI(A;OICI;GA;;;S-1-5-80-956008885-3418522649-1831038044-1853292631-2271478464)(A;OICI;GRGX;;;S-1-15-3-1024-3635283841-2530182609-996808640-1887759898-3848208603-3313616867-983405619-2501854204)(A;OICI;GA;;;SY)(A;OICI;FRFX;;;LS)(A;OICI;FRFX;;;NS)(A;OICI;FRFX;;;RC)
O:SYD:(A;OICI;GA;;;BA)
O:SYG:SYD:P(A;OICI;KA;;;SY)(A;OICI;KRKX;;;BA)(A;OICI;KRKX;;;%s)
o\$PH
o}4Ic
o<rg^
O0D8a
O89)t
ObjectLength
ObjectNum
ObjectUuid
ObjectUuid %ws %u
ObtainedTileUniqueIdFromTDL
oD$ f
Offset
oL$0f
OldApplicationId
oldLace
OldMainPackageFullName
oldMutablePackageDirectory
oldPackage
oldPackageFullName
oldPackageRoot
OldPrimaryTileNotFound
oldRoot
OldRoot %ws
OldRoot %ws user %ws newRoot %ws
OLEAUT32.dll
olive
oliveDrab
OnDemandRegisterPackageFound
OnDemandRegisterPackageNotFound
onecore\admin\appmodel\applicability\applicabilitybundlemanifestreader.cpp
onecore\admin\appmodel\applicability\applicabilitybundlepackageid.cpp
onecore\admin\appmodel\applicability\applicabilitybundlepackageinfo.cpp
onecore\admin\appmodel\applicability\ApplicabilityEnumerator.hpp
onecore\admin\appmodel\appxsignatureorigin\appxsignatureorigin.cpp
onecore\admin\appmodel\cleanupmanager\cleanupmanager.cpp
onecore\admin\appmodel\common\accesshelpers.cpp
onecore\admin\appmodel\common\actionlist.cpp
onecore\admin\appmodel\common\admincheck.cpp
onecore\admin\appmodel\common\alluserstorepaths.cpp
onecore\admin\appmodel\common\alluserstoresetupphase.cpp
onecore\admin\appmodel\common\applicabilityhelper.cpp
onecore\admin\appmodel\common\appxdeletefile.cpp
onecore\admin\appmodel\common\centennial.cpp
onecore\admin\appmodel\common\configuration.cpp
onecore\admin\appmodel\Common\ContainerUserToken.hpp
onecore\admin\appmodel\common\contentgrouphelpers.cpp
onecore\admin\appmodel\common\deferappdataacquisition.cpp
onecore\admin\appmodel\common\directoryacls.cpp
onecore\admin\appmodel\common\directorypaths.cpp
onecore\admin\appmodel\common\downlevelhelper.cpp
onecore\admin\appmodel\common\encryption.cpp
onecore\admin\appmodel\common\FileInUseTelemetry.hpp
onecore\admin\appmodel\common\fspolicy.cpp
onecore\admin\appmodel\common\fulltrust.cpp
onecore\admin\appmodel\common\hardlinkdirectorytree.cpp
onecore\admin\appmodel\common\hardlinkingacls.cpp
onecore\admin\appmodel\common\HardlinkingACLs.hpp
onecore\admin\appmodel\common\HardLinkingACLs.hpp
onecore\admin\appmodel\common\logfileinformation.cpp
onecore\admin\appmodel\common\ManifestCache.hpp
onecore\admin\appmodel\common\manifestreader.cpp
onecore\admin\appmodel\common\mergedpricreator.cpp
onecore\admin\appmodel\common\metadata.cpp
onecore\admin\appmodel\common\mountedfolder.cpp
onecore\admin\appmodel\common\mrthelper.cpp
onecore\admin\appmodel\common\multiuser.cpp
onecore\admin\appmodel\common\mutabledirectoryhelper.cpp
onecore\admin\appmodel\common\optionalpackagehelper.cpp
onecore\admin\appmodel\common\packagefullnameutilities.cpp
onecore\admin\appmodel\Common\PackageID.inl
onecore\admin\appmodel\common\packageinfo.cpp
onecore\admin\appmodel\common\packageprocess.cpp
onecore\admin\appmodel\common\prefetchfile.cpp
onecore\admin\appmodel\common\privilege.cpp
onecore\admin\appmodel\Common\ProgID.hpp
onecore\admin\appmodel\common\removeregistrytree.cpp
onecore\admin\appmodel\common\scheduledtaskhelper.cpp
onecore\admin\appmodel\common\securitydescriptorbuilder.cpp
onecore\admin\appmodel\common\sessionutilities.cpp
onecore\admin\appmodel\common\signaturetools.cpp
onecore\admin\appmodel\common\statepaths.cpp
onecore\admin\appmodel\common\takeownership.cpp
onecore\admin\appmodel\common\targetplatformutilities.cpp
onecore\admin\appmodel\common\threadpriority.cpp
onecore\admin\appmodel\common\urihelper.cpp
onecore\admin\appmodel\common\utilities.cpp
onecore\admin\appmodel\Common\Utilities.hpp
onecore\admin\appmodel\common\Utilities.hpp
onecore\admin\appmodel\common\volume.cpp
onecore\admin\appmodel\common\volumemanager.cpp
onecore\admin\appmodel\common\win32alacarte.cpp
onecore\admin\appmodel\common\xmltools.cpp
onecore\admin\appmodel\datasource\filedatasource\src\fileappxrangerequestjob.cpp
onecore\admin\appmodel\dependencymanager\bundleactionlists.cpp
onecore\admin\appmodel\dependencymanager\dependencylist.cpp
onecore\admin\appmodel\dependencymanager\dependencymanager.cpp
onecore\admin\appmodel\dependencymanager\dependencyresolver.cpp
onecore\admin\appmodel\dependencymanager\dependencyrules.cpp
onecore\admin\appmodel\dependencymanager\dependencyutilities.cpp
onecore\admin\appmodel\DeploymentManager\Inc\ExceptionAwareHelpers.hpp
onecore\admin\appmodel\deploymentmanager\src\aclexternallocationstatehandler.cpp
onecore\admin\appmodel\deploymentmanager\src\actionlistutilities.cpp
onecore\admin\appmodel\deploymentmanager\src\approvalstatehandler.cpp
onecore\admin\appmodel\deploymentmanager\src\bundledataloader.cpp
onecore\admin\appmodel\deploymentmanager\src\bundleprocessor.cpp
onecore\admin\appmodel\deploymentmanager\src\commonregistration.cpp
onecore\admin\appmodel\deploymentmanager\src\containerdeploymentstatehandler.cpp
onecore\admin\appmodel\deploymentmanager\src\dataflushingstatehandler.cpp
onecore\admin\appmodel\deploymentmanager\src\deindexingstatehandler.cpp
onecore\admin\appmodel\deploymentmanager\src\deploymentmanager.cpp
onecore\admin\appmodel\deploymentmanager\src\deploymentoptionsconverter.cpp
onecore\admin\appmodel\deploymentmanager\src\destagingstatehandler.cpp
onecore\admin\appmodel\deploymentmanager\src\evaluatestatehandler.cpp
onecore\admin\appmodel\deploymentmanager\src\exceptionawarehelpers.cpp
onecore\admin\appmodel\deploymentmanager\src\indexingstatehandler.cpp
onecore\admin\appmodel\deploymentmanager\src\ipackagepolicydataparameters.cpp
onecore\admin\appmodel\deploymentmanager\src\machineregistrationstatehandler.cpp
onecore\admin\appmodel\deploymentmanager\src\mrtdatastatehandler.cpp
onecore\admin\appmodel\deploymentmanager\src\mutablepackagedirectorystatehandler.cpp
onecore\admin\appmodel\deploymentmanager\src\ondemandregisterhandler.cpp
onecore\admin\appmodel\deploymentmanager\src\optionaldependencyhandler.cpp
onecore\admin\appmodel\deploymentmanager\src\packagepolicydataparametersviaapplicability.cpp
onecore\admin\appmodel\deploymentmanager\src\packagepolicydataparametersviastaterepository.cpp
onecore\admin\appmodel\deploymentmanager\src\packagepolicyhelpers.cpp
onecore\admin\appmodel\deploymentmanager\src\packagesinusehandler.cpp
onecore\admin\appmodel\deploymentmanager\src\pipeline.cpp
onecore\admin\appmodel\deploymentmanager\src\plmsessioninfo.cpp
onecore\admin\appmodel\deploymentmanager\src\preapprovalhelper.cpp
onecore\admin\appmodel\deploymentmanager\src\prerequisitestatehandler.cpp
onecore\admin\appmodel\deploymentmanager\src\registerpackageonlogonhandler.cpp
onecore\admin\appmodel\deploymentmanager\src\registrationstatehandler.cpp
onecore\admin\appmodel\deploymentmanager\src\restartpackagesinusehandler.cpp
onecore\admin\appmodel\deploymentmanager\src\sessionutil.cpp
onecore\admin\appmodel\deploymentmanager\src\sharedappsredirecthandler.cpp
onecore\admin\appmodel\deploymentmanager\src\sharedappssynchandler.cpp
onecore\admin\appmodel\deploymentmanager\src\singletonregistrationstatehandler.cpp
onecore\admin\appmodel\deploymentmanager\src\stageuserdatastatehandler.cpp
onecore\admin\appmodel\deploymentmanager\src\stagingstatehandler.cpp
onecore\admin\appmodel\deploymentmanager\src\tilesstatehandler.cpp
onecore\admin\appmodel\deploymentmanager\src\versionsupercedencehandler.cpp
onecore\admin\appmodel\deploymentmanager\src\xboxdatastatehandler.cpp
onecore\admin\AppModel\EnterpriseModernAppManagement\Inc\MaintainProcessorArchitectureOnUpdate.h
onecore\admin\appmodel\fixintegrity\lib\fixintegrity.cpp
onecore\admin\appmodel\fixintegrity\lib\fixmorethanonemainpackageperuser.cpp
onecore\admin\appmodel\lifetimemanagers\servicelifetimemanager.cpp
onecore\admin\appmodel\loosefilestreaming\appxloosefile.cpp
onecore\admin\appmodel\loosefilestreaming\appxloosefilebundlestreamingreader.cpp
onecore\admin\appmodel\loosefilestreaming\appxloosefilehelper.cpp
onecore\admin\appmodel\loosefilestreaming\appxloosefilepackagestreamingreader.cpp
onecore\admin\appmodel\loosefilestreaming\appxloosefilerawdatareceiver.cpp
onecore\admin\appmodel\loosefilestreaming\appxloosefilerequesthandler.cpp
onecore\admin\appmodel\loosefilestreaming\appxloosefilesenumerator.cpp
onecore\admin\appmodel\osim\src\deh\appx\common\extensionbundle.cpp
onecore\admin\appmodel\OSIM\Src\DEH\Appx\Common\LongfilePath.hpp
onecore\admin\appmodel\osim\src\deh\appx\common\package.cpp
onecore\admin\appmodel\osim\src\deh\appx\common\tools.cpp
onecore\admin\appmodel\osim\src\deh\winrt\collector\activationcatalogverifier.cpp
onecore\admin\appmodel\osim\src\deh\winrt\collector\collectors.cpp
onecore\admin\appmodel\osim\src\deh\winrt\collector\extensioncatalogcollector.cpp
onecore\admin\appmodel\osim\src\deh\winrt\collector\ExtensionCatalogCollector.hpp
onecore\admin\appmodel\osim\src\deh\winrt\collector\packagedcomregistration.cpp
onecore\admin\appmodel\osim\src\host\appxosimextensiondlls.cpp
onecore\admin\appmodel\osim\src\host\host.cpp
onecore\admin\appmodel\osim\src\host\host.hpp
onecore\admin\appmodel\osim\src\host\osimrequest.cpp
onecore\admin\appmodel\packagemanager\logging\appxlog.cpp
onecore\admin\appmodel\packagemanager\rpcinterface\packagemanagerrpc.cpp
onecore\admin\appmodel\packagemanager\server\addparameterprocessor.cpp
onecore\admin\appmodel\packagemanager\server\addvolumerequest.cpp
onecore\admin\appmodel\packagemanager\server\appinstallerprocessor.cpp
onecore\admin\appmodel\packagemanager\server\argumenthelpers.cpp
onecore\admin\appmodel\PackageManager\Server\ArgumentHelpers.hpp
onecore\admin\appmodel\packagemanager\server\commandprocessor.cpp
onecore\admin\appmodel\packagemanager\server\deletepackagefilesparameterprocessor.cpp
onecore\admin\appmodel\packagemanager\server\deletevolumerequest.cpp
onecore\admin\appmodel\packagemanager\server\dependentrequesttracker.cpp
onecore\admin\appmodel\packagemanager\server\deploymentnotification.cpp
onecore\admin\appmodel\packagemanager\server\deploymentoperationparameterprocessor.cpp
onecore\admin\appmodel\packagemanager\server\deploymentqueuemanager.cpp
onecore\admin\appmodel\packagemanager\server\deploymentqueuestore.cpp
onecore\admin\appmodel\PackageManager\Server\DeploymentQueueStore.inl
onecore\admin\appmodel\packagemanager\server\deploymentqueuestorereader.cpp
onecore\admin\appmodel\packagemanager\server\deploymentqueuestorewriter.cpp
onecore\admin\appmodel\PackageManager\Server\DeploymentQueueStoreWriter.inl
onecore\admin\appmodel\packagemanager\server\deploymentrequest.cpp
onecore\admin\appmodel\PackageManager\Server\DeploymentRequest.hpp
onecore\admin\appmodel\packagemanager\server\enumpackagesbypackagevolumekey.cpp
onecore\admin\appmodel\packagemanager\server\enumpackagesbyusersidfilter.cpp
onecore\admin\appmodel\packagemanager\server\enumpackagesbyusersidnamepublisherfilter.cpp
onecore\admin\appmodel\packagemanager\server\enumprovisionedpackagesfilter.cpp
onecore\admin\appmodel\packagemanager\server\errorhelpers.cpp
onecore\admin\appmodel\packagemanager\server\faultinjection.cpp
onecore\admin\appmodel\packagemanager\server\generatepreinstalledprifiles.cpp
onecore\admin\appmodel\packagemanager\server\helpers.cpp
onecore\admin\appmodel\PackageManager\Server\IEnumPackagesFilter.hpp
onecore\admin\appmodel\packagemanager\server\inventoryhelpers.cpp
onecore\admin\appmodel\packagemanager\server\moveparameterprocessor.cpp
onecore\admin\appmodel\packagemanager\server\ondemandregisterparameterprocessor.cpp
onecore\admin\appmodel\packagemanager\server\packageapplicability.cpp
onecore\admin\appmodel\packagemanager\server\packageinventory.cpp
onecore\admin\appmodel\packagemanager\server\packageoperation.cpp
onecore\admin\appmodel\packagemanager\server\prioritypolicy.cpp
onecore\admin\appmodel\packagemanager\server\provisionpackageparameterprocessor.cpp
onecore\admin\appmodel\packagemanager\server\removeparameterprocessor.cpp
onecore\admin\appmodel\PackageManager\Server\RpcMemoryManagement.inl
onecore\admin\appmodel\packagemanager\server\serversiderpc.cpp
onecore\admin\appmodel\packagemanager\server\service.cpp
onecore\admin\appmodel\packagemanager\server\stageuserdataparameterprocessor.cpp
onecore\admin\appmodel\packagemanager\server\statelocations.cpp
onecore\admin\appmodel\packagemanager\server\syncvolumerequest.cpp
onecore\admin\appmodel\packagemanager\server\tilesrequest.cpp
onecore\admin\appmodel\packagemanager\server\tilesstorepreviewtile.cpp
onecore\admin\appmodel\packagemanager\server\volumerequestbase.cpp
onecore\admin\appmodel\packagemanager\server\volumerequestmanager.cpp
onecore\admin\appmodel\packagemanager\server\wnfpublisherstatename.cpp
onecore\admin\appmodel\packagemanager\server\wnfpublisherstatenamecache.cpp
onecore\admin\appmodel\packagemanager\server\xupdatesessionmanager.cpp
onecore\admin\appmodel\packagemanager\server\xupdatesessionmanagerrpc.cpp
onecore\admin\appmodel\packagerepository\common\applicationextras.cpp
onecore\admin\appmodel\packagerepository\common\extensions.cpp
onecore\admin\appmodel\packagerepository\common\localizationdictionary.cpp
onecore\admin\appmodel\packagerepository\common\packageextras.cpp
onecore\admin\appmodel\packagerepository\common\packagerow.cpp
onecore\admin\appmodel\packagerepository\common\tools.cpp
onecore\admin\appmodel\packagerepository\common\visibilityrow.cpp
onecore\admin\appmodel\PackageRepository\Inc\External\ITable.hpp
onecore\admin\appmodel\packagerepository\staterepository\applicationtable.cpp
onecore\admin\appmodel\packagerepository\staterepository\dependencygraphtable.cpp
onecore\admin\appmodel\packagerepository\staterepository\dependencytable.cpp
onecore\admin\appmodel\packagerepository\staterepository\extensiontable.cpp
onecore\admin\appmodel\packagerepository\staterepository\filetable.cpp
onecore\admin\appmodel\packagerepository\staterepository\packagetable.cpp
onecore\admin\appmodel\packagerepository\staterepository\repositorysession.cpp
onecore\admin\appmodel\packagerepository\staterepository\staterepositoryhelper.cpp
onecore\admin\appmodel\packagerepository\staterepository\tablehelper.cpp
onecore\admin\appmodel\packagerepository\staterepository\visibilitytable.cpp
onecore\admin\appmodel\packagerepository\staterepository\wowdependencygraphtable.cpp
onecore\admin\appmodel\precompilation\bytecodequeuemanager\bytecodequeuemanager.cpp
onecore\admin\appmodel\precompilation\client\bytecodegenerationengine.cpp
onecore\admin\appmodel\precompilation\client\bytecodegenerationrequest.cpp
onecore\admin\appmodel\precompilation\client\rpcserverhelper.cpp
onecore\admin\appmodel\recovery\recovery.cpp
onecore\admin\appmodel\StagingManager\Inc\MsixvcStagingSession.hpp
onecore\admin\appmodel\StagingManager\Inc\StagingManagerFaultInjection.hpp
onecore\admin\appmodel\stagingmanager\src\applyinplaceupdate.cpp
onecore\admin\appmodel\stagingmanager\src\appxbundlestagingsession.cpp
onecore\admin\appmodel\stagingmanager\src\appxcustominstallhandler.cpp
onecore\admin\appmodel\stagingmanager\src\appxdatareceiver.cpp
onecore\admin\appmodel\stagingmanager\src\appxdynamicfilerangecollection.cpp
onecore\admin\appmodel\stagingmanager\src\appxloosefilebundlestagingsession.cpp
onecore\admin\appmodel\stagingmanager\src\appxloosefilepackagestagingsession.cpp
onecore\admin\appmodel\stagingmanager\src\appxmountedfolderconfiguration.cpp
onecore\admin\appmodel\stagingmanager\src\appxpackagestagingsession.cpp
onecore\admin\appmodel\stagingmanager\src\appxpayloadduplicatefinder.cpp
onecore\admin\appmodel\stagingmanager\src\appxpayloadfilehasher.cpp
onecore\admin\appmodel\stagingmanager\src\appxrequestfilerangesinventory.cpp
onecore\admin\appmodel\stagingmanager\src\contentgroupstaginghelpers.cpp
onecore\admin\appmodel\stagingmanager\src\destagingsession.cpp
onecore\admin\appmodel\stagingmanager\src\fileinfo.cpp
onecore\admin\appmodel\stagingmanager\src\mountedfolderhelper.cpp
onecore\admin\appmodel\stagingmanager\src\msixvcstagingsession.cpp
onecore\admin\appmodel\stagingmanager\src\resumefileinfo.cpp
onecore\admin\appmodel\stagingmanager\src\staginghelpers.cpp
onecore\admin\appmodel\stagingmanager\src\stagingmanager.cpp
onecore\admin\appmodel\stagingmanager\src\stagingsession.cpp
onecore\admin\appmodel\statecreation\lib\statecreation.cpp
onecore\admin\appmodel\telemetry\deploymentsession.cpp
onecore\admin\appmodel\Telemetry\DeploymentSession.hpp
onecore\admin\appmodel\telemetry\sqmhelpers.cpp
onecore\admin\appmodel\telemetry\traceloggingsession.cpp
onecore\admin\appmodel\trust\filevalidationhelper.cpp
onecore\admin\appmodel\trust\trusthelper.cpp
onecore\admin\appmodel\trust\walktreetrusthelpers.cpp
onecore\base\appmodel\appxminirepository\lib\appxminirepository.cpp
onecore\base\appmodel\appxprovisionpackage\src\appxprovisionpackage.cpp
onecore\base\appmodel\appxprovisionpackage\src\appxprovisionpackageenumerator.cpp
onecore\base\appmodel\appxprovisionpackage\src\appxprovisionreader.cpp
onecore\base\appmodel\appxprovisionpackage\src\appxprovisionwriter.cpp
onecore\base\appmodel\appxprovisionpackage\src\commonhelpers.cpp
onecore\base\appmodel\common\appxuninstallblocklist.cpp
onecore\base\appmodel\common\autocotaskmemstring.cpp
onecore\base\appmodel\common\autostring.cpp
onecore\base\appmodel\common\base32encoding.cpp
onecore\base\appmodel\common\cryptoprovider.cpp
onecore\base\appmodel\common\fileutils.cpp
onecore\base\appmodel\common\guid.cpp
onecore\base\appmodel\common\impersonationcontext.cpp
onecore\base\appmodel\common\pathhelpers.cpp
onecore\base\appmodel\common\registrykey.cpp
onecore\base\appmodel\common\sid.cpp
onecore\base\appmodel\common\stateschema.cpp
onecore\base\appmodel\common\stateseparation.cpp
onecore\base\appmodel\common\stringbuilder.cpp
onecore\base\appmodel\common\stringset.cpp
onecore\base\appmodel\common\userprofile.cpp
onecore\base\appmodel\common\widestring.cpp
onecore\base\appmodel\package\packagesid.cpp
onecore\base\appmodel\packageacquisitioninfo\packageacquisitioninfo.cpp
onecore\base\appmodel\packageinuse\packageinusehelper.cpp
onecore\base\appmodel\runtime\src\monikerinternal.cpp
onecore\base\appmodel\runtime\src\packagestatusinternal.cpp
onecore\base\appmodel\StateRepository\Common\Inc\Security.hpp
onecore\base\appmodel\staterepository\dataaccesslayer\blob.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\changetracking.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\database.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\databasecache.cpp
onecore\base\appmodel\StateRepository\DataAccessLayer\DatabaseCache.hpp
onecore\base\appmodel\staterepository\dataaccesslayer\databasecachesingleton.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\datatype-hasher.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\datatype-progid.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\dictionaryreader.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\dictionaryserialization.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\dictionarywinrtreader.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\dictionarywinrtwriter.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\dictionarywriter.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\dictionaryxmlwriter.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entities-partitions.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-activation.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-activation-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-activationuser.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appexecutionalias.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appexecutionalias-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appexecutionaliasuser.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appextension.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appextension-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appextensionhost.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appextensionhost-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appinstaller.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appinstaller-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-application.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-applicationbackgroundtask.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-applicationbackgroundtask-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-applicationcontenturirule.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-applicationcontenturirule-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-application-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-applicationextension.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-applicationextension-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-applicationidentity.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-applicationidentity-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-applicationproperty.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-applicationproperty-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appservice.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appservice-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appurihandler.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appurihandler-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appurihandlergroup.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appurihandlergroup-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appxextension.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appxextension-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appxmanifest.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appxmanifest-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-bundle.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-bundle-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-bundlepackage.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-bundlepackage-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-bundleresource.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-bundleresource-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-connectedsetpackagefamily.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-contentgroup.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-contentgroup-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-contentgroupfile.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-contentgroupfile-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-custominstall.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-custominstall-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-custominstallprocess.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-custominstallprocess-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-custominstallprocessuserstatus.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-custominstallwork.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-custominstallwork-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-defaulttile.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-defaulttile-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-dependency.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-dependency-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-dependencygraph.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-dependencygraph-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-deploymenthistory.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-deploymenthistory-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-dynamicappurihandler.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-dynamicappurihandlergroup.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-endoflifepackage.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-enterprise.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-file.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-file-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-filetypeassociation.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-filetypeassociation-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-hostruntime.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-hostruntime-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-mrtapplication.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-mrtapplication-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-mrtdefaulttile.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-mrtdefaulttile-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-mrtpackage.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-mrtpackage-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-mrtsharedpri.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-mrtsharedpri-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-mrtuserpri.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-nameddependency.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-nameddependency-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-optionalbundle.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-optionalbundle-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-optionalbundlepackage.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-optionalbundlepackage-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-optionalbundleresource.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-optionalbundleresource-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-package.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packageappinstaller.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packageappinstaller-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-package-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packageextension.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packageextension-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packageexternallocation.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packageexternallocation-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagefamily.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagefamily-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagefamilypolicy.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagefamilyuser.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagefamilyuser-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagefamilyuserresource.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packageidentity.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packageidentity-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagelocation.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagelocation-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagemachinestatus.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagepolicy.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagepolicy-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packageproperty.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packageproperty-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagesourceuri.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagesourceuri-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagesuperceded.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagesuperceded-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packageuser.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packageuser-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packageuserstatus.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-primarytile.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-primarytileuser.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-primarytileuserchangelog.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-primarytileuserchangelog-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-primarytileuser-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-protocol.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-protocol-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-provisionedpackage.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-provisionedpackagedeleted.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-provisionedpackageexclude.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-publishercachefolder.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-publishercachefolder-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-resource.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-resource-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-secondarytile.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-secondarytile-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-secondarytileuser.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-secondarytileuserchangelog.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-secondarytileuserchangelog-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-secondarytileuser-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-secondarytileview.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-sequence.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-sequence-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-srjournal.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-srjournalarchive.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-srjournal-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-targetdevicefamily-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-tilechangelogview-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-tileview-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-user.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-user-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-workinprogress.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-workinprogress-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-wowdependencygraph.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-wowdependencygraph-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-xboxpackage.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-xboxpackage-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\globals.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\logging.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\longrunningtransaction.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\repository.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\resourcepriority.cpp
onecore\base\appmodel\StateRepository\DataAccessLayer\ResourcePriority.hpp
onecore\base\appmodel\staterepository\dataaccesslayer\statement.cpp
onecore\base\appmodel\StateRepository\DataAccessLayer\Statement.hpp
onecore\base\appmodel\staterepository\dataaccesslayer\statementcache.cpp
onecore\base\appmodel\StateRepository\DataAccessLayer\StatementCache.hpp
onecore\base\appmodel\staterepository\dataaccesslayer\text.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\texta.cpp
onecore\base\appmodel\StateRepository\DataAccessLayer\Utf16String.hpp
onecore\base\appmodel\StateRepository\DataAccessLayer\Utf8String.hpp
onecore\base\appmodel\trust\trustlabelacehelpers.cpp
onecore\base\appmodel\trust\trustlabelhelpersbase.cpp
onecore\internal\base\inc\appmodel\common\RegistryKey.hpp
onecore\internal\base\inc\appmodel\package\ProcessorArchitecture.hpp
onecore\internal\base\inc\ContainerPolicyManagerClient.h
onecore\internal\sdk\inc\wil/Staging.h
onecore\internal\sdk\inc\wil\opensource/wil/resource.h
onecore\internal\sdk\inc\wil\opensource/wil/result.h
onecore\internal\sdk\inc\wil\opensource/wil/result_macros.h
onecore\internal\sdk\inc\wil\opensource/wil/token_helpers.h
onecore\internal\sdk\inc\wil\opensource\wil\resource.h
onecore\printscan\AppxPackaging\lib\Core\src\StreamHelper.hpp
onecore\printscan\appxpackaging\lib\crypto\src\appxindirectdatareader.cpp
onecore\printscan\appxpackaging\lib\crypto\src\hashengine.cpp
onecore\printscan\appxpackaging\lib\crypto\src\hashprovider.cpp
onecore\printscan\appxpackaging\lib\crypto\src\signaturecheckhelper.cpp
onecore\private\base\inc\appmodel\common\fileinuse.hpp
onecore\private\base\inc\appmodel\package\PackageMoniker.hpp
onecore\private\base\inc\appmodel\staterepository\cache\SRCache-Context.hpp
onecore\private\base\inc\appmodel\staterepository\cache\srcache-entity-package.hpp
onecore\private\base\inc\appmodel\staterepository\cache\SRCache-Key.hpp
onecore\private\base\inc\appmodel\staterepository\cache\SRCache-Manager.hpp
onecore\private\base\inc\appmodel\staterepository\dal/Database.hpp
onecore\private\base\inc\appmodel\staterepository\dal/ResourcePriority.hpp
onecore\private\base\inc\appmodel\staterepository\dal/Statement.hpp
onecore\private\com\inc\deployment\RegistrationStore.hpp
onecoreuap\base\appmodel\statemanager\helpers\policycache.cpp
onecoreuap\base\appmodel\statemanager\helpers\stateversion.cpp
onecoreuap\base\appmodel\statemanager\roamingrpc\stateapis.cpp
onecoreuap\base\appmodel\statemanager\roamingrpc\stateroamingrpcclient.cpp
onecoreuap\base\appmodel\tiledatarepository\tilesstorehandler\src\appxtileshandler.cpp
onecoreuap\base\appmodel\tiledatarepository\tilesstorehandler\src\appxvisualelementsparser.cpp
onecoreuap\base\appmodel\tiledatarepository\tilesstorehandler\src\staterepositoryutils.cpp
onecoreuap\base\appmodel\tiledatarepository\tilesstorehandler\src\tdlmigrationhelper.cpp
onecoreuap\base\appmodel\tiledatarepository\tilesstorehandler\src\tilesstorehandler.cpp
onecoreuap\base\appmodel\tiledatarepository\tilesstorehandler\src\tilestorepackageinfo.cpp
onecoreuap\base\appmodel\tiledatarepository\tilesstorehandler\src\xmlqueryhelper.cpp
onecoreuap\inetcore\Wwa\AppModelCommon\AutoPtr.hpp
onecoreuap\inetcore\Wwa\AppModelCommon\GenericMap.hpp
onecoreuap\inetcore\wwa\bytecode\lib\automapviewoffilehandle.cpp
onecoreuap\inetcore\wwa\bytecode\lib\bytecodecache.cpp
onecoreuap\internal\base\inc\TdlMigration.h
Online
OOBEApp_cw5n1h2txyewy
OPCOx
Open %ws
OpenCurrentUserLocalSettings
OpenDatabaseFromCache
openError
OpenEventW
OpenIsSafe
OpenProcess
OpenProcess() failed on %u of %u for %hs
OpenProcessToken
OpenRootKey
OpenSCManagerW
OpenSemaphoreW
OpenServiceW
OpenStateExplicit
OpenStateExplicitForUserSid
OpenStateExplicitForUserSidString
OpenStateExplicitForUserSidString %ls
OpenSubKey
OpenThread
OpenThread failed for idle task
OpenThreadToken
Operation
operation
Operation
operation
Operation
Operation %d
Optional
Optional Package %ws not found in related set for %ws .
optionalBundle
OptionalBundle
OptionalBundlePackage
OptionalBundleResource
optionalPackage
optionalPackageFamilyName
OptionalPackageSubtype
options
Options
orange
orangeRed
orchid
OriginalFilename
OriginalUser
originatingBinary
originatingContextId
originatingContextMessage
originatingContextName
originCallerModule
originCallerReturnAddressOffset
originFile
originLineNumber
originModule
originName
oRL")[\e
OSDATA\Software\
OSIM Host
OSIM state = 
OSIM_KEYWORD
OSIMListTypeEnumMap
OsimState
OSIntegration.DEH.ActivationCatalogCollector
OSIntegration.DEH.ActivationCatalogCollectorForUser
OSIntegration.DEH.Collectors
OSIntegration.DEH.ComExeClassRegistration
OSIntegration.DEH.ComExeServerRegistration
OSIntegration.DEH.ComInterfaceRegistration
OSIntegration.DEH.ComProgIdRegistration
OSIntegration.DEH.ComProxyStubRegistration
OSIntegration.DEH.ComServiceClassRegistration
OSIntegration.DEH.ComServiceServerRegistration
OSIntegration.DEH.ComSurrogateClassRegistration
OSIntegration.DEH.ComSurrogateServerRegistration
OSIntegration.DEH.ComTreatAsClassRegistration
OSIntegration.DEH.ComTypeLibRegistration
OSIntegration.DEH.ExtensionCatalogCollector
OSIntegration.DEH.PackagedComCatalogCollector
OSIntegration.DEH.PackagedComCatalogCollectorForUser
OSMaxVersionTested
OSMinVersion
OSName
OSRollbackPackages
OSVersionAppModel
OSVersionBuild
OSVersionMajor
OSVersionMinor
OSVersionRevision
oT$@f
outgoingPackageFromUpdateList
OutgoingPackageName
OutputDebugStringW
Overall time: %I64u ms
OverAllTime
oversubscribed distance tree
oversubscribed dynamic bit lengths tree
oversubscribed literal/length tree
p AWH
p WATAUAVAWH
p WAVAWH
p&SA/A
P(9Q(t*
p*X3A
P:\WindowsApps
P@8ugt
P`:d[
p`hp~*
p`hpx
p`KyrPc.f
P+Fu0(
P3>,R
p6|4)
P6dky
p7FMI'
p8: ^
P8@HPXf*
P8@N*
p8@N*
PA^_]
pA^_]
PA^_]
PA^_^
pA^_^[]
PA^_^[]
pA^_^[]
PA^_^[]
pA^_^[]
pA^_^][
PA^_^][
PA^A\_^]
pA^A]_^]
PA__]
pA__^[]
PA_A]A\_^[]
PA_A^^][
pA_A^_[]
PA_A^_^]
pA_A^_^]
PA_A^_^]
pA_A^_^]
PA_A^_^]
pA_A^_^]
PA_A^_^]
pA_A^_^]
PA_A^_^]
pA_A^_^]
PA_A^_^]
pA_A^_^]
PA_A^_^]
pA_A^_^]
PA_A^_^]
pA_A^A\_^[]
PA_A^A\_^[]
pA_A^A\_^[]
PA_A^A\_^][
PA_A^A]_^][
pA_A^A]_^][
PA_A^A]A\_^]
pA_A^A]A\_^]
PA_A^A]A\_^]
pA_A^A]A\_^]
PA_A^A]A\_^]
pA_A^A]A\_^]
PA_A^A]A\_^]
pA_A^A]A\_^]
PA_A^A]A\_^]
pA_A^A]A\_^]
PA_A^A]A\_^]
pA_A^A]A\_^]
PA_A^A]A\_^]
pA_A^A]A\_^]
PA_A^A]A\_^]
pA_A^A]A\_^]
PA_A^A]A\_^]
pA_A^A]A\_^]
PA_A^A]A\_^]
pA_A^A]A\_^]
PA_A^A]A\_^]
package
Package
package
Package
package
Package
package
Package
package
Package
package
Package
package
Package
Package %ls
Package %ls %ls %ls
Package %ws
Package %ws %u
Package %ws %ws
Package %ws %ws %ws %d
Package does not exist for current user
Package full name = 
Package is end of lifed and is thus not installable
Package is in a bad package status so it requires reinstall
Package is not installable because architecture preservation requirement is not satisfied
Package is not installed for the user, so it is not a reinstall
Package is not required by the specified user, but query is not only for specific user--check to see if it is required for machine.
Package is not yet indexed in package repository, so it is not a reinstall
Package is required because it is already installed for that user.
Package is required because it is Installable for other user that has this package family
Package Manager State = 
Package rows w/no PackageUser references
Package.PackageType=Bundle and Package.SourceBundle=BundlePackage but no other Package rows from Bundle
Package\Data\
Package\Index\PackageFullName\
PackageAppInstaller
PackageArchitecture
packageBaseKey
packageCount
PACKAGED_COM_DEH_KEYWORD
packagedClassicApp
PackagedFullTrustEnabled
PackageExtension
PackageExternalLocation
PackageFamily
PackageFamilyName
packageFamilyName
PackageFamilyName
packageFamilyName
PackageFamilyName
PackageFamilyNameFromFullName
PackageFamilyNameFromId
PackageFamilyPolicy
PackageFamilyUser
PackageFamilyUserResource
PackageFlags
PackageFlags2
PackageFolder
PackageFolderOld
PackageFound
PackageFullName
PackageFullname
PackageFullName
PackageFullname
PackageFullName
PackageFullname
PackageFullName
PackageFullname
PackageFullName
packageFullName
PackageFullName
PackageFullname
PackageFullName
packageFullName
PackageFullName
packageFullName
PackageFullname
PackageFullName
packageFullName
PackageFullName
packageFullName
PackageFullName
packageFullName
PackageFullName
PackageFullname
PackageFullName
packageFullName
PackageFullName
PackageFullname
PackageFullName
packageFullName
PackageFullName
packageFullName
packagefullName
PackageFullName
packageFullName
PackageFullName
packageFullName
PackageFullName
packageFullName
PackageFullName
packageFullName
PackageFullName
packageFullName
PackageFullName
packageFullName
PackageFullName
packageFullName
PackageFullName
packageFullName
PackageFullName
packageFullName
PackageFullName
packageFullName
PackageFullName
packageFullName
PackageFullName
packageFullName
PackageFullName
packageFullName
PackageFullName
packageFullName
PackageFullName
packageFullName
PackageFullName
packageFullName
PackageFullName
packageFullName
PackageFullName
packageFullName
PackageFullName
packagefullName
PackageFullName
packageFullName
PackageFullName
packageFullName
PackageFullName: %ws
PackageFullNameFromId
PackageFullNames
PackageId
packageId
PackageId
packageId
PackageIdentity
PackageIdFromFullName
PackageIndex
packageInplacePending
PackageKey
PackageLocation
PackageMachineStatus
PackageManagerAction
PackageManagerError
PackageManagerMainPackageSuccess
PackageManagerPerfSummary
PackageManagerStartDeployment
PackageManagerState
PackageManagerSuccess
PackageManagerSummaryError
PackageManagerUninstall
PackageMoniker
PackageMoniker2
PackageMoniker3
PackageMonikerNew
PackageMonikerOld
PackageName
PackageNameAndPublisherIdFromFamilyName
PackageNameAndPublisherIdFromFamilyName %ls
PackageNameOne
PackageNameTwo
PackageOrigin
PackagePolicy
PackageProperty
PackageRelativeApplicationId
packageRelativeFilePath
PackageRepair
PackageRepository.edb
PackageRepositoryAllocate
PackageRepositoryFree
PackageRepositoryRoot
PackageRollBackResult
packageRoot
PackageRootFolder
packageRootOld
PackageRow was not initialized with lazy init info. Cannot query external location info.
PackageRow was not initialized with lazy init info. Cannot query IsStub info.
Packages
PackageSID
PackageSid
PackageSID
PackageSidFromFamilyName
PackageSize
PackageSkipped
packageSource
PackageSourceUri
PackageSourceUriProtocol
PackageStaging
PackageState
PackageStatus
packageStatus
PackageStatus
PackageStatusOperationImplementation
PackageStatusUpdateBad_ModifiedPackage
PackagesToBeInstalled
PackageSuperceded
PackageTableRowKey
PackaGetRealStateRootPath
PackageType
PackageUpdateFailed
PackageUpdateFailedAttemptingRestage
PackageUri
PackageUser
PackageUser rows for Bundle but no other Package(s) sourced from the bundle
PackageUser.User has Package(s) with Package.Type!=Bundle but not Package.Type=Bundle
PackageUserStatus
PackageVersion
PackageVersion2
PackageVolumeStatusImplementation
PageCacheOverflow
PageCacheOverflowPeak
PageCachePeak
PageCacheUsed
PageCacheUsedPeak
PAI(A;;0x120089;;;AC)
PAI(A;;0x1200A9;;;AC)
paleGoldenrod
paleGreen
paleTurquoise
paleVioletRed
papayaWhip
ParseApplicationUserModelId
PartA_PrivTags
Partition
Partition %d not supported by GC()
Path %ls
Path %ls level %u.
Path %ws
Path: %ls
Path: %ls -> %ls
Path: %ls hasCentennial %u isFullTrust %u runAsSystem %u user %ls
Path: %ls subDir %ls
Path: %ls subDir %ls isFullTrust %u runAsSystem %u
Path: %ws
PathAllocCanonicalize
PathAllocCombine
PathCchAppend
PathCchCombine
PathCchCombine %ls root %ls size %u
PathCchCombine %ls subDir %ls size %u
PathCchRemoveBackslash
PathCchRemoveFileSpec
PathCchSkipRoot
PathCreateFromUrlW
PathFileExistsW
PathFindFileNameW
PathFindNextComponentW
PathGetDriveNumberW
PathName
PathOne
PathStripPathW
PathTwo
Pause
PausedandInstalledPackage
PauseEvent
PauseOnFailure
peachPuff
Percentage
PerformOperations
PeriodicUpdateRecurrence
PerPackageEntries
PerPackageFamilyEntries
PERSIST
Persist %u
Persist %u folder %ls
PerSystemEntries
pez!Q
Phase
PhaseError
Phone package not installable on desktop
PHONECALLORIGIN_DEH_KEYWORD
Platform.All
PlatformPolicyBlockReasonMap
pOB=<
Policy.Aggressive.ConnectionMaxAge
Policy.Aggressive.ConnectionMaxCount
Policy.Aggressive.ConnectionMinCount
Policy.Aggressive.GCInterval
Policy.Aggressive.StatementMaxAge
Policy.Aggressive.StatementMaxCount
Policy.Aggressive.StatementMinCount
Policy.Normal.ConnectionMaxAge
Policy.Normal.ConnectionMaxCount
Policy.Normal.ConnectionMinCount
Policy.Normal.GCInterval
Policy.Normal.StatementMaxAge
Policy.Normal.StatementMaxCount
Policy.Normal.StatementMinCount
PolicyCache
PolicyCache %ws
PolicyManager_GetPolicyInt
PolicyReason
Portrait
PortraitFlipped
Post DeStage repository commit transaction cost: %I64u ms
PostDeploymentOperationCheck cost: %I64u ms
PostDowngradeVersion
PostFixAllCascadingInMachinePartition
powderBlue
Ppc^/
PPTP00
PPTP00a
PRAGMA %s;
PRAGMA %s=%I64d;
PRAGMA %s=%s;
PRAGMA optimize;
Preallocating file %ws failed. Ignoring the error as the file on disk already has full size %llu bytes
PreDowngradeVersion
Preference
PreferStub
PREINSTALLED_CONFIG_TASK_DEH_KEYWORD
PrepareBindingHandleFailed
PrepareBindingHandleForAppxSvc %ws %u
PrepareDeploymentPath
PreRegisterOptionsBitMap
PreStageClosePackagesInUse
PreviousAppVersion
PrimaryBaseTile
PrimaryServiceConfigId
PrimaryTile
PrimaryTileAlreadyExists
PrimaryTileCreated
PrimaryTileId
PrimaryTileRemoved
PrimaryTileUser
PrimaryTileUserChangelog
PrimaryTileUserCreated
PrimaryTileUserNotFound
PrimaryTileUserRemoved
PrimaryTileUserUpdated
PriPaths
Problem
process
ProcessCount
ProcessDeferredRequestStatesBegin
ProcessDeferredRequestStatesEnd
ProcessId
processId
ProcessId
ProcessIdToSessionId
ProcessIndex
ProcessInformation
ProcessingPackageFullName
ProcessingSQL
ProcessorArchitecture
ProductId
ProductName
ProductVersion
profapi.dll
Profile
ProfileImagePath
Program Files
Program Files\ModifiableWindowsApps
progress
Progress
PropertyId
Protocol
PROTOCOL_DEH_KEYWORD
ProviderDisplayName
Provisioned
ProvisionedPackage
ProvisionedPackageDeleted
ProvisionedPackageExclude
ProvisionForAppInstall
ProvisionSourceIsBundle
PRVAd
PtbD8
PublicFolder
publisher
Publisher
PublisherDisplayName
PublisherFolders
PublisherName
purple
pWY;,2
PX`hpx
q|CenE
q8D+q
QH9|$8t
qj"e#*
-qj*?
qlt&H
qlt(H
QM9t$
qPD+q
QueryActiveSession
QueryCollectionState %ws %ws
QueryFullProcessImageNameW
QueryInterface
QueryPerformanceCounter
QueryServiceConfigW
QueryServiceStatus
QueryServiceStatusEx
QueryUnbiasedInterruptTime
QueryUserToken
QueryWin32SubsystemHost
Queued request is cancelled because it is overridden by higher priority request that has opposite effect. Cancelled queued request operation: %d, priority: %d. Overriding higher priority request operation: %d, priority: %d, target user SID: %ws, package full name: %ws
QueueLength
QueueRegistrationForRepairActivity
QuirkIsEnabledForPackage
R$fA;Z*
r,M;~Hr
r:L;v
r;appxapplicabilityblob.dll
R\@>C}
R]^F=
r0H;~
r0H;X@r
r1H;~
r6H;~
RaiseException
RaiseFailFastException
rap=!
Ratings
RatingsCategory
RDSRecoverRequestsImplementation
re 1'
ReadFile
readFileGLE
readFileResult
readiedInPlaceChanges
ReapplyAcls
reason
ReattemptCount
RecursivelyProtectSubFoldersToLevel %ls level %u
RecursivelyProtectSubFoldersToLevel %ls level %u %u
RedirectMrtResources
RegCloseKey
RegCreateKeyEx
RegCreateKeyExW
RegDeleteKeyExW
RegDeleteTreeW
RegDeleteValueW
RegEnumKeyExW
RegEnumKeyW
RegEnumValueW
RegFlushKey
RegGetKeySecurity
RegGetValueW
RegGetValueW %ws
RegGetValueW %ws size %d type %d
RegisterPackageByFullNameAndOptionalPackagesAsync %ws
RegisterPackageOnLogon packagetype %d is not supported
RegisterPrimaryTilesForUser
RegisterServiceCtrlHandlerExW
RegisterStateChangeNotification
RegisterStateChangeNotification %u
RegisterStateLock
RegisterTraceGuidsW
Registration cost: %I64u ms
RegistryKeyName
RegistrySubKeyName
RegLoadAppKeyW
RegOpenCurrentUser
RegOpenCurrentUser %ws
RegOpenCurrentUserLocalSettings
RegOpenKeyEx
RegOpenKeyEx %ws
RegOpenKeyEx PSR
RegOpenKeyEx SCHEMAS
RegOpenKeyExW
RegOpenUserClassesRoot
RegQueryInfoKeyW
RegQueryValueExW
RegSetKeySecurity
RegSetKeyValue %d
RegSetKeyValueW
RegSetValueExW
reI|*r
ReIndexTilesForPackage
RelatedSetsPresentForPackagedService
ReleaseMutex
ReleaseSemaphore
ReleaseSRWLockExclusive
ReleaseSRWLockShared
ReleaseStateLock
Remaining cost: %I64u ms
RemediationFromInplaceUpdate
RemoveDeprovisionedPackageMarking
RemoveDesktopAppXMetadataForFolder
RemoveDirectory
RemoveDirectoryTree
RemoveDirectoryTree %ws
RemoveDirectoryTree %ws path %ws
RemoveDirectoryTree %ws staging %ws
RemoveDirectoryTreeExcept %ls
RemoveDirectoryTreeExcept %ws newRoot %ws
RemoveDirectoryW
RemoveDownlevelInstalledPackagesFromRegistryStore
RemoveExtensionProgIds
RemoveFromContainer
RemoveInboxInstalledStatusOfPackageForUser
RemoveOrphanedDeletedFolderIfNeeded %ws
RemovePackageFromFamilyXref
RemovePackageFromRegistryStore
RemovePackageStatus
RemovePIIfromPath
RemovePrimaryTileForUser
RemovePrimaryTileForUserAndApplicationIdentity
RemovePrimaryTilesForPackage
RemovePrimaryTilesForUserAndPackage
RemovePublisherFolder Folder[%u]%ls of %u
RemoveSecondaryTilesForUser
RemoveSecondaryTilesForUserAndApplicationIdentity
RemoveSecondaryTilesForUserAndPackage
RemoveStageOnlyPackagesFromAddList
RemoveStatusOfMainPackageForAllUsers
RemoveTilesForRemovedApplicationsForUser
RemoveTilesForRemovedApplicationsForUserAndPackage
RemoveUpgradePackagesFromRegistryStore
RepairAppDataACLForPackage
RepairGhostMinimumAgeForDeletion
Repairing registration of package 
RepairPackageRegistration
RepairResourcesPriAclsImplementation
ReplacedOutgoingPackage
ReportBackupSyncProgress %llu
ReportFileCopied %ws
ReportFileCopied %ws newRoot %ws
ReportFileCopied%ws
ReportProgress %llu
ReportProgress BU %ws
ReportProgress BU %ws %ws %ws
ReportProgress RM %ws
ReportProgress RM %ws %u
ReportProgress RM %ws %ws %ws
ReportProgress RM %ws package %ws
Repository commit transaction cost: %I64u ms
request
RequestCount
Requested
RequestedPackageFullName
RequestedVersionAppModel
RequestedVersionBuild
RequestedVersionMajor
RequestedVersionMinor
RequestedVersionRevision
RequestPackageOperationImplementation
Required
Required configuration data not found: %ws
RequiredFileNotYetComplete
Reset of dev mode package %ws isn't supported
ResetEvent
ResiliencyCurrentState
ResiliencyFilePath
ResiliencyRecoverRequestExpiredOnExternalVolume
ResiliencyRecoverRequestFailed
Resolve %d
Resolve dependency cost: %I64u ms
ResolveAppInstallerUri
ResolveDeferredRegistrations
ResolveDelayLoadedAPI
Resource
resource
ResourceGroup
ResourceId
ResourceName
ResourcePackage
Resources
resources.pri
RestartEvent
RestartHandlerEnableStatus
RestartHandlerFinishedServicing
RestartPackagesInUseSkipped
RestartStatus
RestrictAppDataToSystemVolume
RestrictAppToSystemVolume
RESTRICTED_LAUNCH_DEH_KEYWORD
RestrictedToSystemVolume
Result
result
Result
result
Result code = 0x
ResumeThread
returnCode
ReturnHr
ReturnResults
ReturnVal
ReturnValue
returnValue
ReturnValue
RevertToSelf
r'H;_
r'H;~
RichU
rjfA9TH
rMfD9?w
RoActivateInstance
RoamingDataStatus
RoGetActivationFactory
RoGetAgileReference
RoGetAgileReference %d
RoGetMatchingRestrictedErrorInfo
RoInitialize
ROLLBACK /*%08X-%04X-%04X-%02X%02X-%02X%02X%02X%02X%02X%02X*/;
RollbackRequest
RoOriginateError
RoOriginateErrorW
RootFolder: %ws
rosyBrown
RoTransformError
RoUninitialize
royalBlue
RpcAsyncCompleteCall
RpcBindingBind
RpcBindingCreateW
RpcBindingFree
RpcBindingFromStringBinding
RpcBindingFromStringBindingW
RpcBindingSetAuthInfoEx %ws
RpcBindingSetAuthInfoExW
RpcBindingVectorFree
RpcEpRegisterW
RpcEpUnregister
RpcImpersonateClient
RpcRaiseException
RpcRevertToSelf
RPCRT4.dll
RpcServerInqBindings
RpcServerInqCallAttributesW
RpcServerRegisterIf3
RpcServerRegisterIfEx
RpcServerUnregisterIf
RpcServerUseProtseqEpW
RpcServerUseProtseqW
RpcStringBindingCompose
RpcStringBindingComposeW
RpcStringFreeW
RSLCH
RSSTt
RSTSI
rtCzk
RtlAcquireSRWLockExclusive
RtlAcquireSRWLockShared
RtlAddAce
RtlAddFunctionTable
RtlAddProcessTrustLabelAce
RtlAllocateAndInitializeSid
RtlAllocateHeap
RtlCaptureContext
RtlCaptureStackBackTrace
RtlCompareUnicodeString
RtlConvertSidToUnicodeString
RtlCopySid
RtlCreateAcl
RtlCreateAndSetSD
RtlCreateSecurityDescriptor
RtlDeleteCriticalSection
RtlDeleteElementGenericTableAvl
RtlDeleteFunctionTable
RtlDeleteSecurityObject
RtlDeriveCapabilitySidsFromName
RtlDetermineDosPathNameType_U
RtlDisownModuleHeapAllocation
RtlDllShutdownInProgress
RtlDosPathNameToNtPathName_U_WithStatus
RtlDosPathNameToRelativeNtPathName_U_WithStatus
RtlDowncaseUnicodeString
RtlEnterCriticalSection
RtlEnumerateGenericTableAvl
RtlEnumerateGenericTableWithoutSplayingAvl
RtlEqualSid
RtlEqualUnicodeString
RtlExpandEnvironmentStrings
RtlFindAceByType
RtlFreeHeap
RtlFreeSid
RtlFreeUnicodeString
RtlGetAppContainerNamedObjectPath
RtlGetDeviceFamilyInfoEnum
RtlGetPersistedStateLocation
RtlInitializeCriticalSection
RtlInitializeGenericTableAvl
RtlInitUnicodeString
RtlInitUnicodeStringEx
RtlInsertElementGenericTableAvl
RtlIsGenericTableEmptyAvl
RtlIsMultiSessionSku
RtlIsMultiUsersInSessionSku
RtlIsStateSeparationEnabled
RtlLeaveCriticalSection
RtlLengthSid
RtlLookupElementGenericTableAvl
RtlLookupFunctionEntry
RtlNotifyFeatureUsage
RtlNtPathNameToDosPathName
RtlNtStatusToDosError
RtlNtStatusToDosErrorNoTeb
RtlNumberGenericTableElementsAvl
RtlpEnsureBufferSize
RtlPublishWnfStateData
RtlQueryFeatureConfiguration
RtlQueryPackageClaims
RtlQueryWnfStateData
RtlRegisterFeatureConfigurationChangeNotification
RtlReleaseRelativeName
RtlReleaseSRWLockExclusive
RtlReleaseSRWLockShared
RtlReportException
RtlSetSaclSecurityDescriptor
RtlStringCchLengthW
RtlStringCchPrintfW
RtlSubscribeWnfStateChangeNotification
RtlUnregisterFeatureConfigurationChangeNotification
RtlUnsubscribeWnfNotificationWaitForCompletion
RtlUpcaseUnicodeChar
RtlValidSid
RtlVirtualUnwind
RtlWaitForWnfMetaNotification
RtlWow64IsWowGuestMachineSupported
RunAsSystem
runFullTrust
runningAppsList
RUNTIME_DEH_KEYWORD
RuntimeType
RVB:@
rXH;n0r
rYa=#s3@
s AWH
s M;^
s M;Z
s WATAUAVAWH
s WAVAWH
s#M;\$
s)\D.
S:(ML;OICI;NW;;;LW)D:(A;OICI;GA;;;S-1-1-0)(A;OICI;FA;;;%ls)
S:PAI
S:PAI(ML;OICI;NW;;;LW)
s@H9>u9H
S}"Yb
S-1-1-0
S-1-2-1406295995-2538229729-1264070048-2919177457
S-1-5-18
saddleBrown
salmon
sandyBrown
Sanity limit is hit
Sanity limit reached %ls!
Schemas
SchemaUsed
ScratchOverflow
ScratchOverflowPeak
ScratchSizePeak
ScratchUsed
ScratchUsedPeak
SDDLString
seaGreen
SEARCHINDEXER_EXTENSION_KEYWORD
SearchString
seaShell
SecondaryTile
SecondaryTileId
SecondaryTileMigrated
SecondaryTileRemoved
SecondaryTileUser
SecondaryTileUser.SecondaryTile->SecondaryTile.rowid
SecondaryTileUserChangelog
Section
SELECT _ActivationID, _Revision, ActivationKey, Flags, HostId, Executable, Entrypoint, RuntimeType, StartPage, ResourceGroup, _Dictionary FROM Activation WHERE ActivationKey IS ?;
SELECT _AppInstallerID, _Revision, Uri, Version, LastChecked, CheckUpdateInterval, Flags, _Dictionary FROM AppInstaller WHERE Uri=?;
SELECT _AppInstallerID, _Revision, Uri, Version, LastChecked, CheckUpdateInterval, Flags, _Dictionary FROM AppInstaller;
SELECT _ApplicationExtensionID, _Revision, _WorkId, Application, "Index", Category, Activation, HostId, Executable, Entrypoint, RuntimeType, StartPage, ResourceGroup, Flags, Subsystem, Parameters, _LocalizedDictionary, _Dictionary FROM ApplicationExtension WHERE Application=? AND Category=? AND (_WorkId=0 OR _WorkId=?);
SELECT _ApplicationExtensionID, _Revision, _WorkId, Application, "Index", Category, Activation, HostId, Executable, Entrypoint, RuntimeType, StartPage, ResourceGroup, Flags, Subsystem, Parameters, _LocalizedDictionary, _Dictionary FROM ApplicationExtension WHERE Application=? AND Category=? AND _WorkId=0;
SELECT _ApplicationID, _Revision, _WorkId, Package, "Index", ApplicationType, Flags, Subsystem, PackageRelativeApplicationId, ApplicationUserModelId, DisplayName, Description, Square150x150Logo, Square44x44Logo, Wide310x150Logo, Square310x310Logo, Square71x71Logo, ForegroundText, BackgroundColor, Activation, HostId, Executable, Entrypoint, StartPage, ResourceGroup, LockScreenNotification, LockScreenBadgeLogo, SplashScreenImage, SplashScreenBackgroundColor, InitialRotationPreference, ApplicationViewMinWidth, AppListEntry, EditionId, VisualGroup, Parameters, _Dictionary FROM Application WHERE (_WorkId=0 OR _WorkId=?);
SELECT _ApplicationID, _Revision, _WorkId, Package, "Index", ApplicationType, Flags, Subsystem, PackageRelativeApplicationId, ApplicationUserModelId, DisplayName, Description, Square150x150Logo, Square44x44Logo, Wide310x150Logo, Square310x310Logo, Square71x71Logo, ForegroundText, BackgroundColor, Activation, HostId, Executable, Entrypoint, StartPage, ResourceGroup, LockScreenNotification, LockScreenBadgeLogo, SplashScreenImage, SplashScreenBackgroundColor, InitialRotationPreference, ApplicationViewMinWidth, AppListEntry, EditionId, VisualGroup, Parameters, _Dictionary FROM Application WHERE _WorkId=0;
SELECT _ApplicationID, _Revision, _WorkId, Package, "Index", ApplicationType, Flags, Subsystem, PackageRelativeApplicationId, ApplicationUserModelId, DisplayName, Description, Square150x150Logo, Square44x44Logo, Wide310x150Logo, Square310x310Logo, Square71x71Logo, ForegroundText, BackgroundColor, Activation, HostId, Executable, Entrypoint, StartPage, ResourceGroup, LockScreenNotification, LockScreenBadgeLogo, SplashScreenImage, SplashScreenBackgroundColor, InitialRotationPreference, ApplicationViewMinWidth, AppListEntry, EditionId, VisualGroup, Parameters, _Dictionary FROM Application WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
SELECT _ApplicationID, _Revision, _WorkId, Package, "Index", ApplicationType, Flags, Subsystem, PackageRelativeApplicationId, ApplicationUserModelId, DisplayName, Description, Square150x150Logo, Square44x44Logo, Wide310x150Logo, Square310x310Logo, Square71x71Logo, ForegroundText, BackgroundColor, Activation, HostId, Executable, Entrypoint, StartPage, ResourceGroup, LockScreenNotification, LockScreenBadgeLogo, SplashScreenImage, SplashScreenBackgroundColor, InitialRotationPreference, ApplicationViewMinWidth, AppListEntry, EditionId, VisualGroup, Parameters, _Dictionary FROM Application WHERE Package=? AND _WorkId=0;
SELECT _ApplicationID, _Revision, _WorkId, Package, "Index", ApplicationType, Flags, Subsystem, PackageRelativeApplicationId, ApplicationUserModelId, DisplayName, Description, Square150x150Logo, Square44x44Logo, Wide310x150Logo, Square310x310Logo, Square71x71Logo, ForegroundText, BackgroundColor, Activation, HostId, Executable, Entrypoint, StartPage, ResourceGroup, LockScreenNotification, LockScreenBadgeLogo, SplashScreenImage, SplashScreenBackgroundColor, InitialRotationPreference, ApplicationViewMinWidth, AppListEntry, EditionId, VisualGroup, Parameters, _Dictionary FROM Application WHERE Package=? AND PackageRelativeApplicationId=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _ApplicationID, _Revision, _WorkId, Package, "Index", ApplicationType, Flags, Subsystem, PackageRelativeApplicationId, ApplicationUserModelId, DisplayName, Description, Square150x150Logo, Square44x44Logo, Wide310x150Logo, Square310x310Logo, Square71x71Logo, ForegroundText, BackgroundColor, Activation, HostId, Executable, Entrypoint, StartPage, ResourceGroup, LockScreenNotification, LockScreenBadgeLogo, SplashScreenImage, SplashScreenBackgroundColor, InitialRotationPreference, ApplicationViewMinWidth, AppListEntry, EditionId, VisualGroup, Parameters, _Dictionary FROM Application WHERE Package=? AND PackageRelativeApplicationId=? AND _WorkId=0;
SELECT _ApplicationIdentityID FROM ApplicationIdentity WHERE ApplicationUserModelId=?
SELECT _ApplicationIdentityID, _Revision, ApplicationUserModelId, _Dictionary FROM ApplicationIdentity WHERE ApplicationUserModelId=?;
SELECT _AppxExtensionID, _Revision, _WorkId, User, Package, Category, KeyString, RegistrationInformation, ExtensionStatus, _Dictionary FROM AppxExtension WHERE (_WorkId=0 OR _WorkId=?);
SELECT _AppxExtensionID, _Revision, _WorkId, User, Package, Category, KeyString, RegistrationInformation, ExtensionStatus, _Dictionary FROM AppxExtension WHERE _WorkId=0;
SELECT _AppxExtensionID, _Revision, _WorkId, User, Package, Category, KeyString, RegistrationInformation, ExtensionStatus, _Dictionary FROM AppxExtension WHERE User=? AND Category=? AND KeyString IS ? AND (_WorkId=0 OR _WorkId=?);
SELECT _AppxExtensionID, _Revision, _WorkId, User, Package, Category, KeyString, RegistrationInformation, ExtensionStatus, _Dictionary FROM AppxExtension WHERE User=? AND Category=? AND KeyString IS ? AND _WorkId=0;
SELECT _AppxExtensionID, _Revision, _WorkId, User, Package, Category, KeyString, RegistrationInformation, ExtensionStatus, _Dictionary FROM AppxExtension WHERE User=? AND Package=? AND (_WorkId=0 OR _WorkId=?);
SELECT _AppxExtensionID, _Revision, _WorkId, User, Package, Category, KeyString, RegistrationInformation, ExtensionStatus, _Dictionary FROM AppxExtension WHERE User=? AND Package=? AND _WorkId=0;
SELECT _AppxExtensionID, _Revision, _WorkId, User, Package, Category, KeyString, RegistrationInformation, ExtensionStatus, _Dictionary FROM AppxExtension WHERE User=? AND Package=? AND Category=? AND (_WorkId=0 OR _WorkId=?);
SELECT _AppxExtensionID, _Revision, _WorkId, User, Package, Category, KeyString, RegistrationInformation, ExtensionStatus, _Dictionary FROM AppxExtension WHERE User=? AND Package=? AND Category=? AND _WorkId=0;
SELECT _AppxExtensionID, _Revision, _WorkId, User, Package, Category, KeyString, RegistrationInformation, ExtensionStatus, _Dictionary FROM AppxExtension WHERE User=? AND Package=? AND Category=? AND KeyString IS ? AND (_WorkId=0 OR _WorkId=?);
SELECT _AppxExtensionID, _Revision, _WorkId, User, Package, Category, KeyString, RegistrationInformation, ExtensionStatus, _Dictionary FROM AppxExtension WHERE User=? AND Package=? AND Category=? AND KeyString IS ? AND _WorkId=0;
SELECT _AppxExtensionID, _Revision, _WorkId, User, Package, Category, KeyString, RegistrationInformation, ExtensionStatus, _Dictionary FROM AppxExtension WHERE User=? AND Package=? AND Category=? AND KeyString IS ? AND RegistrationInformation=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _AppxExtensionID, _Revision, _WorkId, User, Package, Category, KeyString, RegistrationInformation, ExtensionStatus, _Dictionary FROM AppxExtension WHERE User=? AND Package=? AND Category=? AND KeyString IS ? AND RegistrationInformation=? AND _WorkId=0;
SELECT _AppxManifestID, _Revision, _WorkId, Package, uncompress(Xml), _Dictionary FROM AppxManifest WHERE Package=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _AppxManifestID, _Revision, _WorkId, Package, uncompress(Xml), _Dictionary FROM AppxManifest WHERE Package=? AND _WorkId=0;
SELECT _BundlePackageID, _Revision, _WorkId, Bundle, PackageType, Version, Architecture, ResourceId, Filename, "Offset", Size, Flags, _Dictionary FROM BundlePackage WHERE Bundle=? AND (_WorkId=0 OR _WorkId=?);
SELECT _BundlePackageID, _Revision, _WorkId, Bundle, PackageType, Version, Architecture, ResourceId, Filename, "Offset", Size, Flags, _Dictionary FROM BundlePackage WHERE Bundle=? AND _WorkId=0;
SELECT _BundlePackageID, _Revision, _WorkId, Bundle, PackageType, Version, Architecture, ResourceId, Filename, "Offset", Size, Flags, _Dictionary FROM BundlePackage WHERE Bundle=? AND Version=? AND Architecture=? AND ResourceId IS ? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _BundlePackageID, _Revision, _WorkId, Bundle, PackageType, Version, Architecture, ResourceId, Filename, "Offset", Size, Flags, _Dictionary FROM BundlePackage WHERE Bundle=? AND Version=? AND Architecture=? AND ResourceId IS ? AND _WorkId=0;
SELECT _ContentGroupFileID, _Revision, _WorkId, ContentGroup, File, _Dictionary FROM ContentGroupFile WHERE File=? AND (_WorkId=0 OR _WorkId=?);
SELECT _ContentGroupFileID, _Revision, _WorkId, ContentGroup, File, _Dictionary FROM ContentGroupFile WHERE File=? AND _WorkId=0;
SELECT _ContentGroupID, _Revision, _WorkId, Package, "Index", Name, ContentGroupType, Status, _Dictionary FROM ContentGroup WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
SELECT _ContentGroupID, _Revision, _WorkId, Package, "Index", Name, ContentGroupType, Status, _Dictionary FROM ContentGroup WHERE Package=? AND _WorkId=0;
SELECT _ContentGroupID, _Revision, _WorkId, Package, "Index", Name, ContentGroupType, Status, _Dictionary FROM ContentGroup WHERE Package=? AND Name=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _ContentGroupID, _Revision, _WorkId, Package, "Index", Name, ContentGroupType, Status, _Dictionary FROM ContentGroup WHERE Package=? AND Name=? AND _WorkId=0;
SELECT _DependencyGraphID FROM DependencyGraph WHERE _ShadowId=? AND _WorkId=? AND _WorkId<>0;
SELECT _DependencyGraphID FROM DependencyGraph WHERE DependentPackage=?1 AND DependencyType=?2 AND "User"=?3 AND _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE DependentPackage=?1 AND DependencyType=?2 AND "User"=?3 AND _WorkId=?4)
SELECT _DependencyGraphID FROM DependencyGraph WHERE SupplierPackage=?1 AND "User"=?2 AND _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE SupplierPackage=?1 AND "User"=?2 AND _WorkId=?3)
SELECT _DependencyGraphID, _Revision, _ShadowId FROM DependencyGraph WHERE _ShadowId=? AND _WorkId=? AND _WorkId<>0;
SELECT _DependencyGraphID, _Revision, _ShadowId, _IsMarkedForDeletion FROM DependencyGraph WHERE User=? AND DependentPackage=? AND SupplierPackage=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE (_DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE _WorkId=?1) OR _DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE _WorkId=?1))) AND _IsMarkedForDeletion=0;
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE (_DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE SupplierPackage=?1 AND _WorkId=?2) OR _DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE SupplierPackage=?1 AND _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE SupplierPackage=?1 AND _WorkId=?2))) AND _IsMarkedForDeletion=0;
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE (_DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND _WorkId=?3) OR _DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND _WorkId=?3))) AND _IsMarkedForDeletion=0 ORDER BY "Index";
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE (_DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND DependencyType=?3 AND _WorkId=?4) OR _DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND DependencyType=?3 AND _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND DependencyType=?3 AND _WorkId=?4))) AND _IsMarkedForDeletion=0;
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE (_DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND SupplierPackage=?3 AND _WorkId=?4) OR _DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND SupplierPackage=?3 AND _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND SupplierPackage=?3 AND _WorkId=?4))) AND _IsMarkedForDeletion=0 ORDER BY _WorkId DESC;
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE (_DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=?3) OR _DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=?3))) AND _IsMarkedForDeletion=0;
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE _WorkId=0;
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE SupplierPackage=?1 AND _WorkId=0;
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND _WorkId=0 ORDER BY "Index";
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND DependencyType=?3 AND _WorkId=0;
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND SupplierPackage=?3 AND _WorkId=0;
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=0;
SELECT _DependencyID, _Revision, _WorkId, DependentPackage, "Index", DependencyType, Name, Publisher, MinVersion, MaxVersion, Flags, _Dictionary FROM Dependency WHERE (_WorkId=0 OR _WorkId=?);
SELECT _DependencyID, _Revision, _WorkId, DependentPackage, "Index", DependencyType, Name, Publisher, MinVersion, MaxVersion, Flags, _Dictionary FROM Dependency WHERE _WorkId=0;
SELECT _DependencyID, _Revision, _WorkId, DependentPackage, "Index", DependencyType, Name, Publisher, MinVersion, MaxVersion, Flags, _Dictionary FROM Dependency WHERE DependentPackage=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC, "Index";
SELECT _DependencyID, _Revision, _WorkId, DependentPackage, "Index", DependencyType, Name, Publisher, MinVersion, MaxVersion, Flags, _Dictionary FROM Dependency WHERE DependentPackage=? AND (_WorkId=0 OR _WorkId=?);
SELECT _DependencyID, _Revision, _WorkId, DependentPackage, "Index", DependencyType, Name, Publisher, MinVersion, MaxVersion, Flags, _Dictionary FROM Dependency WHERE DependentPackage=? AND _WorkId=0 ORDER BY "Index";
SELECT _DependencyID, _Revision, _WorkId, DependentPackage, "Index", DependencyType, Name, Publisher, MinVersion, MaxVersion, Flags, _Dictionary FROM Dependency WHERE DependentPackage=? AND _WorkId=0;
SELECT _DependencyID, _Revision, _WorkId, DependentPackage, "Index", DependencyType, Name, Publisher, MinVersion, MaxVersion, Flags, _Dictionary FROM Dependency WHERE DependentPackage=? AND Name=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _DependencyID, _Revision, _WorkId, DependentPackage, "Index", DependencyType, Name, Publisher, MinVersion, MaxVersion, Flags, _Dictionary FROM Dependency WHERE DependentPackage=? AND Name=? AND _WorkId=0;
SELECT _FileID, _Revision, _WorkId, Package, RelativeFilePath, Size, Digest, _Dictionary FROM File WHERE (_WorkId=0 OR _WorkId=?);
SELECT _FileID, _Revision, _WorkId, Package, RelativeFilePath, Size, Digest, _Dictionary FROM File WHERE (_WorkId=0 OR _WorkId=?1) AND Digest IN (SELECT Digest FROM File WHERE (_WorkId=0 OR _WorkId=?1) GROUP BY Digest HAVING (COUNT(*) > 1)) ORDER BY Size;
SELECT _FileID, _Revision, _WorkId, Package, RelativeFilePath, Size, Digest, _Dictionary FROM File WHERE _WorkId=0 AND Digest IN (SELECT Digest FROM File WHERE _WorkId=0 GROUP BY Digest HAVING (COUNT(*) > 1)) ORDER BY Size;
SELECT _FileID, _Revision, _WorkId, Package, RelativeFilePath, Size, Digest, _Dictionary FROM File WHERE _WorkId=0;
SELECT _FileID, _Revision, _WorkId, Package, RelativeFilePath, Size, Digest, _Dictionary FROM File WHERE Digest=? AND (_WorkId=0 OR _WorkId=?);
SELECT _FileID, _Revision, _WorkId, Package, RelativeFilePath, Size, Digest, _Dictionary FROM File WHERE Digest=? AND _WorkId=0;
SELECT _FileID, _Revision, _WorkId, Package, RelativeFilePath, Size, Digest, _Dictionary FROM File WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
SELECT _FileID, _Revision, _WorkId, Package, RelativeFilePath, Size, Digest, _Dictionary FROM File WHERE Package=? AND _WorkId=0;
SELECT _FileID, _Revision, _WorkId, Package, RelativeFilePath, Size, Digest, _Dictionary FROM File WHERE Package=? AND RelativeFilePath=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _FileID, _Revision, _WorkId, Package, RelativeFilePath, Size, Digest, _Dictionary FROM File WHERE Package=? AND RelativeFilePath=? AND _WorkId=0;
SELECT _MrtApplicationID, _Revision, _WorkId, Application, DisplayNameReference, DescriptionReference, Square150x150LogoReference, Square44x44LogoReference, Wide310x150LogoReference, Square310x310LogoReference, Square71x71LogoReference, StartPageReference, SplashScreenImageReference, VisualGroupReference, _Dictionary FROM MrtApplication WHERE Application=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _MrtApplicationID, _Revision, _WorkId, Application, DisplayNameReference, DescriptionReference, Square150x150LogoReference, Square44x44LogoReference, Wide310x150LogoReference, Square310x310LogoReference, Square71x71LogoReference, StartPageReference, SplashScreenImageReference, VisualGroupReference, _Dictionary FROM MrtApplication WHERE Application=? AND _WorkId=0;
SELECT _MrtPackageID, _Revision, _WorkId, Package, DisplayNameReference, PublisherDisplayNameReference, DescriptionReference, LogoReference, _Dictionary FROM MrtPackage WHERE Package=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _MrtPackageID, _Revision, _WorkId, Package, DisplayNameReference, PublisherDisplayNameReference, DescriptionReference, LogoReference, _Dictionary FROM MrtPackage WHERE Package=? AND _WorkId=0;
SELECT _OptionalBundleID, _Revision, _WorkId, MainBundle, Name, Publisher, Version, Filename, _Dictionary FROM OptionalBundle WHERE MainBundle=? AND (_WorkId=0 OR _WorkId=?);
SELECT _OptionalBundleID, _Revision, _WorkId, MainBundle, Name, Publisher, Version, Filename, _Dictionary FROM OptionalBundle WHERE MainBundle=? AND _WorkId=0;
SELECT _OptionalBundleID, _Revision, _WorkId, MainBundle, Name, Publisher, Version, Filename, _Dictionary FROM OptionalBundle WHERE MainBundle=? AND Name=? AND (_WorkId=0 OR _WorkId=?);
SELECT _OptionalBundleID, _Revision, _WorkId, MainBundle, Name, Publisher, Version, Filename, _Dictionary FROM OptionalBundle WHERE MainBundle=? AND Name=? AND _WorkId=0;
SELECT _OptionalBundleID, _Revision, _WorkId, MainBundle, Name, Publisher, Version, Filename, _Dictionary FROM OptionalBundle WHERE MainBundle=? AND Name=? AND Publisher=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _OptionalBundleID, _Revision, _WorkId, MainBundle, Name, Publisher, Version, Filename, _Dictionary FROM OptionalBundle WHERE MainBundle=? AND Name=? AND Publisher=? AND _WorkId=0;
SELECT _OptionalBundleID, _Revision, _WorkId, MainBundle, Name, Publisher, Version, Filename, _Dictionary FROM OptionalBundle WHERE Name=? AND (_WorkId=0 OR _WorkId=?);
SELECT _OptionalBundleID, _Revision, _WorkId, MainBundle, Name, Publisher, Version, Filename, _Dictionary FROM OptionalBundle WHERE Name=? AND _WorkId=0;
SELECT _OptionalBundleID, _Revision, _WorkId, MainBundle, Name, Publisher, Version, Filename, _Dictionary FROM OptionalBundle WHERE Name=? AND Publisher=? AND (_WorkId=0 OR _WorkId=?);
SELECT _OptionalBundleID, _Revision, _WorkId, MainBundle, Name, Publisher, Version, Filename, _Dictionary FROM OptionalBundle WHERE Name=? AND Publisher=? AND _WorkId=0;
SELECT _OptionalBundlePackageID, _Revision, _WorkId, OptionalBundle, PackageType, Version, Architecture, ResourceId, Filename, "Offset", Size, _Dictionary FROM OptionalBundlePackage WHERE OptionalBundle=? AND (_WorkId=0 OR _WorkId=?);
SELECT _OptionalBundlePackageID, _Revision, _WorkId, OptionalBundle, PackageType, Version, Architecture, ResourceId, Filename, "Offset", Size, _Dictionary FROM OptionalBundlePackage WHERE OptionalBundle=? AND _WorkId=0;
SELECT _OptionalBundlePackageID, _Revision, _WorkId, OptionalBundle, PackageType, Version, Architecture, ResourceId, Filename, "Offset", Size, _Dictionary FROM OptionalBundlePackage WHERE OptionalBundle=? AND Version=? AND Architecture=? AND ResourceId IS ? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _OptionalBundlePackageID, _Revision, _WorkId, OptionalBundle, PackageType, Version, Architecture, ResourceId, Filename, "Offset", Size, _Dictionary FROM OptionalBundlePackage WHERE OptionalBundle=? AND Version=? AND Architecture=? AND ResourceId IS ? AND _WorkId=0;
SELECT _PackageAppInstallerID, _Revision, _WorkId, Package, AppInstaller, _Dictionary FROM PackageAppInstaller WHERE AppInstaller=? AND (_WorkId=0 OR _WorkId=?);
SELECT _PackageAppInstallerID, _Revision, _WorkId, Package, AppInstaller, _Dictionary FROM PackageAppInstaller WHERE AppInstaller=? AND _WorkId=0;
SELECT _PackageAppInstallerID, _Revision, _WorkId, Package, AppInstaller, _Dictionary FROM PackageAppInstaller WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
SELECT _PackageAppInstallerID, _Revision, _WorkId, Package, AppInstaller, _Dictionary FROM PackageAppInstaller WHERE Package=? AND _WorkId=0;
SELECT _PackageExtensionID, _Revision, _WorkId, Package, "Index", Category, Activation, HostId, Executable, Entrypoint, RuntimeType, StartPage, Flags, Parameters, _Dictionary FROM PackageExtension WHERE Category=? AND (_WorkId=0 OR _WorkId=?);
SELECT _PackageExtensionID, _Revision, _WorkId, Package, "Index", Category, Activation, HostId, Executable, Entrypoint, RuntimeType, StartPage, Flags, Parameters, _Dictionary FROM PackageExtension WHERE Category=? AND _WorkId=0;
SELECT _PackageExtensionID, _Revision, _WorkId, Package, "Index", Category, Activation, HostId, Executable, Entrypoint, RuntimeType, StartPage, Flags, Parameters, _Dictionary FROM PackageExtension WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
SELECT _PackageExtensionID, _Revision, _WorkId, Package, "Index", Category, Activation, HostId, Executable, Entrypoint, RuntimeType, StartPage, Flags, Parameters, _Dictionary FROM PackageExtension WHERE Package=? AND _WorkId=0;
SELECT _PackageExtensionID, _Revision, _WorkId, Package, "Index", Category, Activation, HostId, Executable, Entrypoint, RuntimeType, StartPage, Flags, Parameters, _Dictionary FROM PackageExtension WHERE Package=? AND Category=? AND (_WorkId=0 OR _WorkId=?);
SELECT _PackageExtensionID, _Revision, _WorkId, Package, "Index", Category, Activation, HostId, Executable, Entrypoint, RuntimeType, StartPage, Flags, Parameters, _Dictionary FROM PackageExtension WHERE Package=? AND Category=? AND _WorkId=0;
SELECT _PackageExternalLocationID, _Revision, _WorkId, User, Package, Path, _Dictionary FROM PackageExternalLocation WHERE (User=0 OR User=?) AND Package=? AND (_WorkId=0 OR _WorkId=?) ORDER BY User DESC, _WorkId DESC;
SELECT _PackageExternalLocationID, _Revision, _WorkId, User, Package, Path, _Dictionary FROM PackageExternalLocation WHERE (User=0 OR User=?) AND Package=? AND _WorkId=0 ORDER BY User DESC;
SELECT _PackageExternalLocationID, _Revision, _WorkId, User, Package, Path, _Dictionary FROM PackageExternalLocation WHERE User=? AND Package=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _PackageExternalLocationID, _Revision, _WorkId, User, Package, Path, _Dictionary FROM PackageExternalLocation WHERE User=? AND Package=? AND _WorkId=0;
SELECT _PackageFamilyID, _Revision, Name, Publisher, PublisherId, PackageFamilyName, PackageSID, _Dictionary FROM PackageFamily WHERE Name=? AND PublisherId=?;
SELECT _PackageFamilyID, _Revision, Name, Publisher, PublisherId, PackageFamilyName, PackageSID, _Dictionary FROM PackageFamily WHERE PackageFamilyName=?;
SELECT _PackageFamilyUserResourceID, _Revision, PackageFamilyUser, ResourceId, _Dictionary FROM PackageFamilyUserResource WHERE PackageFamilyUser=?;
SELECT _PackageID FROM Package WHERE PackageFullName=? AND (_WorkId=0 OR _WorkId=?);
SELECT _PackageID FROM Package WHERE PackageFullName=? AND _WorkId=0;
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE (_WorkId=0 OR _WorkId=?);
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE _PackageID=?
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE _WorkId=0;
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE PackageFamily=? AND (_WorkId=0 OR _WorkId=?);
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE PackageFamily=? AND _WorkId=0;
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE PackageFamily=? AND PackageType & ? !=0 AND (_WorkId=0 OR _WorkId=?);
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE PackageFamily=? AND PackageType & ? !=0 AND _WorkId=0;
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE PackageFamily=? AND PackageType & ? !=0 AND ResourceId IS ? AND (_WorkId=0 OR _WorkId=?);
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE PackageFamily=? AND PackageType & ? !=0 AND ResourceId IS ? AND _WorkId=0;
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE PackageFamily=? AND ResourceId IS ? AND (_WorkId=0 OR _WorkId=?);
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE PackageFamily=? AND ResourceId IS ? AND _WorkId=0;
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE PackageFamily=? AND ResourceId IS ? AND Architecture=? AND (_WorkId=0 OR _WorkId=?);
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE PackageFamily=? AND ResourceId IS ? AND Architecture=? AND _WorkId=0;
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE PackageFamily=? AND ResourceId IS ? AND Architecture=? AND Version=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE PackageFamily=? AND ResourceId IS ? AND Architecture=? AND Version=? AND _WorkId=0;
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE PackageFullName=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE PackageFullName=? AND _WorkId=0;
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE SourceBundle<>0 AND SourceBundle NOT IN (SELECT _BundleID FROM Bundle WHERE (_WorkId=0 OR _WorkId=?1)) AND (_WorkId=0 OR _WorkId=?1)
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE SourceBundle<>0 AND SourceBundle NOT IN (SELECT _BundleID FROM Bundle WHERE _WorkId=0) AND _WorkId=0
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE SourceBundle=? AND (_WorkId=0 OR _WorkId=?);
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE SourceBundle=? AND _WorkId=0;
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE SourceBundle=? AND PackageType & ? !=0 AND (_WorkId=0 OR _WorkId=?);
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE SourceBundle=? AND PackageType & ? !=0 AND _WorkId=0;
SELECT _PackageIdentityID FROM PackageIdentity AS pi INNER JOIN Package AS p ON p.PackageFullName=pi.PackageFullName WHERE p._PackageID=? AND (p._WorkId=0 OR p._WorkId=?);
SELECT _PackageIdentityID FROM PackageIdentity AS pi INNER JOIN Package AS p ON p.PackageFullName=pi.PackageFullName WHERE p._PackageID=? AND p._WorkId=0;
SELECT _PackageIdentityID, _Revision, PackageFamily, PackageFullName, _Dictionary FROM PackageIdentity WHERE PackageFullName=?;
SELECT _PackageLocationID, _Revision, _WorkId, Package, Volume, InstalledLocation, MutableLink, MutableLocation, _Dictionary FROM PackageLocation WHERE Package=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _PackageLocationID, _Revision, _WorkId, Package, Volume, InstalledLocation, MutableLink, MutableLocation, _Dictionary FROM PackageLocation WHERE Package=? AND _WorkId=0;
SELECT _PackagePolicyID, _Revision, _WorkId, User, Package, Name, "Index", ValueString, ValueNumber, _Dictionary FROM PackagePolicy WHERE Package=? AND Name=? AND "Index"=? AND (_WorkId=0 OR _WorkId=?);
SELECT _PackagePolicyID, _Revision, _WorkId, User, Package, Name, "Index", ValueString, ValueNumber, _Dictionary FROM PackagePolicy WHERE Package=? AND Name=? AND "Index"=? AND _WorkId=0;
SELECT _PackagePolicyID, _Revision, _WorkId, User, Package, Name, "Index", ValueString, ValueNumber, _Dictionary FROM PackagePolicy WHERE Package=? AND Name=? AND (_WorkId=0 OR _WorkId=?);
SELECT _PackagePolicyID, _Revision, _WorkId, User, Package, Name, "Index", ValueString, ValueNumber, _Dictionary FROM PackagePolicy WHERE Package=? AND Name=? AND _WorkId=0;
SELECT _PackagePolicyID, _Revision, _WorkId, User, Package, Name, "Index", ValueString, ValueNumber, _Dictionary FROM PackagePolicy WHERE User=? AND Package=? AND Name=? AND (_WorkId=0 OR _WorkId=?);
SELECT _PackagePolicyID, _Revision, _WorkId, User, Package, Name, "Index", ValueString, ValueNumber, _Dictionary FROM PackagePolicy WHERE User=? AND Package=? AND Name=? AND _WorkId=0;
SELECT _PackageSourceUriID, _Revision, _WorkId, Package, Uri, Kind, _Dictionary FROM PackageSourceUri WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
SELECT _PackageSourceUriID, _Revision, _WorkId, Package, Uri, Kind, _Dictionary FROM PackageSourceUri WHERE Package=? AND _WorkId=0;
SELECT _PackageSourceUriID, _Revision, _WorkId, Package, Uri, Kind, _Dictionary FROM PackageSourceUri WHERE Package=? AND Kind=? AND (_WorkId=0 OR _WorkId=?);
SELECT _PackageSourceUriID, _Revision, _WorkId, Package, Uri, Kind, _Dictionary FROM PackageSourceUri WHERE Package=? AND Kind=? AND _WorkId=0;
SELECT _PackageUserID, _Revision, _WorkId, Package, User, InstallTime, OSVersionWhenInstalled, WhenRestored, IsExplicitlyInstalled, DeploymentState, AppDataVolume, _Dictionary FROM PackageUser WHERE (_WorkId=0 OR _WorkId=?);
SELECT _PackageUserID, _Revision, _WorkId, Package, User, InstallTime, OSVersionWhenInstalled, WhenRestored, IsExplicitlyInstalled, DeploymentState, AppDataVolume, _Dictionary FROM PackageUser WHERE _WorkId=0;
SELECT _PackageUserID, _Revision, _WorkId, Package, User, InstallTime, OSVersionWhenInstalled, WhenRestored, IsExplicitlyInstalled, DeploymentState, AppDataVolume, _Dictionary FROM PackageUser WHERE AppDataVolume=? AND (_WorkId=0 OR _WorkId=?);
SELECT _PackageUserID, _Revision, _WorkId, Package, User, InstallTime, OSVersionWhenInstalled, WhenRestored, IsExplicitlyInstalled, DeploymentState, AppDataVolume, _Dictionary FROM PackageUser WHERE AppDataVolume=? AND _WorkId=0;
SELECT _PackageUserID, _Revision, _WorkId, Package, User, InstallTime, OSVersionWhenInstalled, WhenRestored, IsExplicitlyInstalled, DeploymentState, AppDataVolume, _Dictionary FROM PackageUser WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
SELECT _PackageUserID, _Revision, _WorkId, Package, User, InstallTime, OSVersionWhenInstalled, WhenRestored, IsExplicitlyInstalled, DeploymentState, AppDataVolume, _Dictionary FROM PackageUser WHERE Package=? AND _WorkId=0;
SELECT _PackageUserID, _Revision, _WorkId, Package, User, InstallTime, OSVersionWhenInstalled, WhenRestored, IsExplicitlyInstalled, DeploymentState, AppDataVolume, _Dictionary FROM PackageUser WHERE User=? AND (_WorkId=0 OR _WorkId=?);
SELECT _PackageUserID, _Revision, _WorkId, Package, User, InstallTime, OSVersionWhenInstalled, WhenRestored, IsExplicitlyInstalled, DeploymentState, AppDataVolume, _Dictionary FROM PackageUser WHERE User=? AND _WorkId=0;
SELECT _PackageUserID, _Revision, _WorkId, Package, User, InstallTime, OSVersionWhenInstalled, WhenRestored, IsExplicitlyInstalled, DeploymentState, AppDataVolume, _Dictionary FROM PackageUser WHERE User=? AND Package=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _PackageUserID, _Revision, _WorkId, Package, User, InstallTime, OSVersionWhenInstalled, WhenRestored, IsExplicitlyInstalled, DeploymentState, AppDataVolume, _Dictionary FROM PackageUser WHERE User=? AND Package=? AND _WorkId=0;
SELECT _PrimaryTileID, _Revision, _WorkId, Application, Package, Flags, TileTemplate, TileId, Arguments, EditionId, _Dictionary FROM PrimaryTile WHERE Application=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _PrimaryTileID, _Revision, _WorkId, Application, Package, Flags, TileTemplate, TileId, Arguments, EditionId, _Dictionary FROM PrimaryTile WHERE Application=? AND _WorkId=0;
SELECT _PrimaryTileID, _Revision, _WorkId, Application, Package, Flags, TileTemplate, TileId, Arguments, EditionId, _Dictionary FROM PrimaryTile WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
SELECT _PrimaryTileID, _Revision, _WorkId, Application, Package, Flags, TileTemplate, TileId, Arguments, EditionId, _Dictionary FROM PrimaryTile WHERE Package=? AND _WorkId=0;
SELECT _PrimaryTileUserID, _Revision, _WorkId, _Created, _Modified, User, ApplicationIdentity, State, TileUniqueId, _Dictionary FROM PrimaryTileUser WHERE TileUniqueId=? AND (_WorkId=0 OR _WorkId=?);
SELECT _PrimaryTileUserID, _Revision, _WorkId, _Created, _Modified, User, ApplicationIdentity, State, TileUniqueId, _Dictionary FROM PrimaryTileUser WHERE TileUniqueId=? AND _WorkId=0;
SELECT _PrimaryTileUserID, _Revision, _WorkId, _Created, _Modified, User, ApplicationIdentity, State, TileUniqueId, _Dictionary FROM PrimaryTileUser WHERE User=? AND ApplicationIdentity=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _PrimaryTileUserID, _Revision, _WorkId, _Created, _Modified, User, ApplicationIdentity, State, TileUniqueId, _Dictionary FROM PrimaryTileUser WHERE User=? AND ApplicationIdentity=? AND (_WorkId=0 OR _WorkId=?);
SELECT _PrimaryTileUserID, _Revision, _WorkId, _Created, _Modified, User, ApplicationIdentity, State, TileUniqueId, _Dictionary FROM PrimaryTileUser WHERE User=? AND ApplicationIdentity=? AND _WorkId=0;
SELECT _PublisherCacheFolderID, _Revision, _WorkId, PackageExtension, "Index", FolderName, _Dictionary FROM PublisherCacheFolder WHERE FolderName IS ? AND (_WorkId=0 OR _WorkId=?);
SELECT _PublisherCacheFolderID, _Revision, _WorkId, PackageExtension, "Index", FolderName, _Dictionary FROM PublisherCacheFolder WHERE FolderName IS ? AND _WorkId=0;
SELECT _PublisherCacheFolderID, _Revision, _WorkId, PackageExtension, "Index", FolderName, _Dictionary FROM PublisherCacheFolder WHERE PackageExtension=? AND (_WorkId=0 OR _WorkId=?);
SELECT _PublisherCacheFolderID, _Revision, _WorkId, PackageExtension, "Index", FolderName, _Dictionary FROM PublisherCacheFolder WHERE PackageExtension=? AND _WorkId=0;
SELECT _Revision, _WorkId, Application, "Index", Category, Activation, HostId, Executable, Entrypoint, RuntimeType, StartPage, ResourceGroup, Flags, Subsystem, Parameters, _LocalizedDictionary, _Dictionary FROM ApplicationExtension WHERE _ApplicationExtensionID=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _Revision, _WorkId, Application, "Index", Category, Activation, HostId, Executable, Entrypoint, RuntimeType, StartPage, ResourceGroup, Flags, Subsystem, Parameters, _LocalizedDictionary, _Dictionary FROM ApplicationExtension WHERE _ApplicationExtensionID=? AND _WorkId=0;
SELECT _Revision, _WorkId, OptionalBundle, PackageType, Version, Architecture, ResourceId, Filename, "Offset", Size, _Dictionary FROM OptionalBundlePackage WHERE _OptionalBundlePackageID=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _Revision, _WorkId, OptionalBundle, PackageType, Version, Architecture, ResourceId, Filename, "Offset", Size, _Dictionary FROM OptionalBundlePackage WHERE _OptionalBundlePackageID=? AND _WorkId=0;
SELECT _Revision, _WorkId, Package, "Index", ApplicationType, Flags, Subsystem, PackageRelativeApplicationId, ApplicationUserModelId, DisplayName, Description, Square150x150Logo, Square44x44Logo, Wide310x150Logo, Square310x310Logo, Square71x71Logo, ForegroundText, BackgroundColor, Activation, HostId, Executable, Entrypoint, StartPage, ResourceGroup, LockScreenNotification, LockScreenBadgeLogo, SplashScreenImage, SplashScreenBackgroundColor, InitialRotationPreference, ApplicationViewMinWidth, AppListEntry, EditionId, VisualGroup, Parameters, _Dictionary FROM Application WHERE _ApplicationID=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _Revision, _WorkId, Package, "Index", ApplicationType, Flags, Subsystem, PackageRelativeApplicationId, ApplicationUserModelId, DisplayName, Description, Square150x150Logo, Square44x44Logo, Wide310x150Logo, Square310x310Logo, Square71x71Logo, ForegroundText, BackgroundColor, Activation, HostId, Executable, Entrypoint, StartPage, ResourceGroup, LockScreenNotification, LockScreenBadgeLogo, SplashScreenImage, SplashScreenBackgroundColor, InitialRotationPreference, ApplicationViewMinWidth, AppListEntry, EditionId, VisualGroup, Parameters, _Dictionary FROM Application WHERE _ApplicationID=? AND _WorkId=0;
SELECT _Revision, _WorkId, Package, "Index", Category, Activation, HostId, Executable, Entrypoint, RuntimeType, StartPage, Flags, Parameters, _Dictionary FROM PackageExtension WHERE _PackageExtensionID=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _Revision, _WorkId, Package, "Index", Category, Activation, HostId, Executable, Entrypoint, RuntimeType, StartPage, Flags, Parameters, _Dictionary FROM PackageExtension WHERE _PackageExtensionID=? AND _WorkId=0;
SELECT _Revision, _WorkId, Package, "Index", Name, MinVersion, MaxVersion, _Dictionary FROM TargetDeviceFamily WHERE _TargetDeviceFamilyID=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _Revision, _WorkId, Package, "Index", Name, MinVersion, MaxVersion, _Dictionary FROM TargetDeviceFamily WHERE _TargetDeviceFamilyID=? AND _WorkId=0;
SELECT _Revision, _WorkId, Package, RelativeFilePath, Size, Digest, _Dictionary FROM File WHERE _FileID=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _Revision, _WorkId, Package, RelativeFilePath, Size, Digest, _Dictionary FROM File WHERE _FileID=? AND _WorkId=0;
SELECT _Revision, _WorkId, Package, UniqueLanguage, UniqueScale, UniqueDXFeatureLevel, _Dictionary FROM Bundle WHERE _BundleID=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _Revision, _WorkId, Package, UniqueLanguage, UniqueScale, UniqueDXFeatureLevel, _Dictionary FROM Bundle WHERE _BundleID=? AND _WorkId=0;
SELECT _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE _PackageID=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE _PackageID=? AND _WorkId=0;
SELECT _Revision, Name, Publisher, PublisherId, PackageFamilyName, PackageSID, _Dictionary FROM PackageFamily WHERE _PackageFamilyID=?;
SELECT _Revision, PackageFamily, PackageFullName, _Dictionary FROM PackageIdentity WHERE _PackageIdentityID=?;
SELECT _Revision, UserSid, _Dictionary FROM User WHERE _UserID=?;
SELECT _SecondaryTileUserID, _Revision, _WorkId, _Created, _Modified, SecondaryTile, User, ApplicationIdentity, State, TileUniqueId, _Dictionary FROM SecondaryTileUser WHERE User=? AND ApplicationIdentity=? AND (_WorkId=0 OR _WorkId=?);
SELECT _SecondaryTileUserID, _Revision, _WorkId, _Created, _Modified, SecondaryTile, User, ApplicationIdentity, State, TileUniqueId, _Dictionary FROM SecondaryTileUser WHERE User=? AND ApplicationIdentity=? AND _WorkId=0;
SELECT _UserID FROM User WHERE UserSid=?;
SELECT _UserID, _Revision, UserSid, _Dictionary FROM User WHERE UserSid=?;
SELECT _UserID, _Revision, UserSid, _Dictionary FROM User;
SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE _ShadowId=? AND _WorkId=? AND _WorkId<>0;
SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE SupplierPackage=?1 AND "User"=?2 AND _WorkId=0 AND _WowDependencyGraphID NOT IN (SELECT _ShadowId FROM WowDependencyGraph WHERE SupplierPackage=?1 AND "User"=?2 AND _WorkId=?3)
SELECT _WowDependencyGraphID, _Revision, _ShadowId FROM WowDependencyGraph WHERE _ShadowId=? AND _WorkId=? AND _WorkId<>0;
SELECT _WowDependencyGraphID, _Revision, _ShadowId, _IsMarkedForDeletion FROM WowDependencyGraph WHERE User=? AND DependentPackage=? AND SupplierPackage=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _WowDependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE (_WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE _WorkId=?1) OR _WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE _WorkId=0 AND _WowDependencyGraphID NOT IN (SELECT _ShadowId FROM WowDependencyGraph WHERE _WorkId=?1))) AND _IsMarkedForDeletion=0;
SELECT _WowDependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE (_WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE SupplierPackage=?1 AND _WorkId=?2) OR _WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE SupplierPackage=?1 AND _WorkId=0 AND _WowDependencyGraphID NOT IN (SELECT _ShadowId FROM WowDependencyGraph WHERE SupplierPackage=?1 AND _WorkId=?2))) AND _IsMarkedForDeletion=0;
SELECT _WowDependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE (_WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE User=?1 AND DependentPackage=?2 AND _WorkId=?3) OR _WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE User=?1 AND DependentPackage=?2 AND _WorkId=0 AND _WowDependencyGraphID NOT IN (SELECT _ShadowId FROM WowDependencyGraph WHERE User=?1 AND DependentPackage=?2 AND _WorkId=?3))) AND _IsMarkedForDeletion=0;
SELECT _WowDependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE (_WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE User=?1 AND DependentPackage=?2 AND DependencyType=?3 AND _WorkId=?4) OR _WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE User=?1 AND DependentPackage=?2 AND DependencyType=?3 AND _WorkId=0 AND _WowDependencyGraphID NOT IN (SELECT _ShadowId FROM WowDependencyGraph WHERE User=?1 AND DependentPackage=?2 AND DependencyType=?3 AND _WorkId=?4))) AND _IsMarkedForDeletion=0;
SELECT _WowDependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE (_WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE User=?1 AND DependentPackage=?2 AND SupplierPackage=?3 AND _WorkId=?4) OR _WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE User=?1 AND DependentPackage=?2 AND SupplierPackage=?3 AND _WorkId=0 AND _WowDependencyGraphID NOT IN (SELECT _ShadowId FROM WowDependencyGraph WHERE User=?1 AND DependentPackage=?2 AND SupplierPackage=?3 AND _WorkId=?4))) AND _IsMarkedForDeletion=0 ORDER BY _WorkId DESC;
SELECT _WowDependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE (_WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=?3) OR _WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=0 AND _WowDependencyGraphID NOT IN (SELECT _ShadowId FROM WowDependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=?3))) AND _IsMarkedForDeletion=0;
SELECT _WowDependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE _WorkId=0;
SELECT _WowDependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE SupplierPackage IN (SELECT DISTINCT SupplierPackage FROM WowDependencyGraph WHERE User=? AND DependentPackage=? AND DependencyType=?) and _WorkId=0;
SELECT _WowDependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE SupplierPackage=?1 AND _WorkId=0;
SELECT _WowDependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE User=?1 AND DependentPackage=?2 AND _WorkId=0;
SELECT _WowDependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE User=?1 AND DependentPackage=?2 AND DependencyType=?3 AND _WorkId=0;
SELECT _WowDependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE User=?1 AND DependentPackage=?2 AND SupplierPackage=?3 AND _WorkId=0;
SELECT _WowDependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=0;
SELECT _XboxPackageID, _Revision, _WorkId, Package, EditionId, BuildId, DeviceId, BuildVersion, ContentId, ProductId, MediaId, PackageSize, TitleId, PrimaryServiceConfigId, EraVersion, EscrowedKeyBlobId, _Dictionary FROM XboxPackage WHERE EditionId=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _XboxPackageID, _Revision, _WorkId, Package, EditionId, BuildId, DeviceId, BuildVersion, ContentId, ProductId, MediaId, PackageSize, TitleId, PrimaryServiceConfigId, EraVersion, EscrowedKeyBlobId, _Dictionary FROM XboxPackage WHERE EditionId=? AND _WorkId=0;
SELECT _XboxPackageID, _Revision, _WorkId, Package, EditionId, BuildId, DeviceId, BuildVersion, ContentId, ProductId, MediaId, PackageSize, TitleId, PrimaryServiceConfigId, EraVersion, EscrowedKeyBlobId, _Dictionary FROM XboxPackage WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
SELECT _XboxPackageID, _Revision, _WorkId, Package, EditionId, BuildId, DeviceId, BuildVersion, ContentId, ProductId, MediaId, PackageSize, TitleId, PrimaryServiceConfigId, EraVersion, EscrowedKeyBlobId, _Dictionary FROM XboxPackage WHERE Package=? AND _WorkId=0;
SELECT a._ApplicationID FROM Application AS a WHERE a.Package=? AND (a._WorkId=0 OR a._WorkId=?);
SELECT a._ApplicationID FROM Application AS a WHERE a.Package=? AND a._WorkId=0;
SELECT a._ApplicationID, a._Revision, a._WorkId, a.Package, a."Index", a.ApplicationType, a.Flags, a.Subsystem, a.PackageRelativeApplicationId, a.ApplicationUserModelId, a.DisplayName, a.Description, a.Square150x150Logo, a.Square44x44Logo, a.Wide310x150Logo, a.Square310x310Logo, a.Square71x71Logo, a.ForegroundText, a.BackgroundColor, a.Activation, a.HostId, a.Executable, a.Entrypoint, a.StartPage, a.ResourceGroup, a.LockScreenNotification, a.LockScreenBadgeLogo, a.SplashScreenImage, a.SplashScreenBackgroundColor, a.InitialRotationPreference, a.ApplicationViewMinWidth, a.AppListEntry, a.EditionId, a.VisualGroup, a.Parameters, a._Dictionary FROM Application AS a INNER JOIN Package AS p ON p._PackageID=a.Package WHERE a.PackageRelativeApplicationId=?2 AND p.PackageFullName=?1 AND (a._WorkId=0 OR a._WorkId=?3) AND (p._WorkId=0 OR p._WorkId=?3);
SELECT a._ApplicationID, a._Revision, a._WorkId, a.Package, a."Index", a.ApplicationType, a.Flags, a.Subsystem, a.PackageRelativeApplicationId, a.ApplicationUserModelId, a.DisplayName, a.Description, a.Square150x150Logo, a.Square44x44Logo, a.Wide310x150Logo, a.Square310x310Logo, a.Square71x71Logo, a.ForegroundText, a.BackgroundColor, a.Activation, a.HostId, a.Executable, a.Entrypoint, a.StartPage, a.ResourceGroup, a.LockScreenNotification, a.LockScreenBadgeLogo, a.SplashScreenImage, a.SplashScreenBackgroundColor, a.InitialRotationPreference, a.ApplicationViewMinWidth, a.AppListEntry, a.EditionId, a.VisualGroup, a.Parameters, a._Dictionary FROM Application AS a INNER JOIN Package AS p ON p._PackageID=a.Package WHERE a.PackageRelativeApplicationId=?2 AND p.PackageFullName=?1 AND a._WorkId=0 AND p._WorkId=0;
SELECT a._ApplicationID, a._Revision, a._WorkId, a.Package, a."Index", a.ApplicationType, a.Flags, a.Subsystem, a.PackageRelativeApplicationId, a.ApplicationUserModelId, a.DisplayName, a.Description, a.Square150x150Logo, a.Square44x44Logo, a.Wide310x150Logo, a.Square310x310Logo, a.Square71x71Logo, a.ForegroundText, a.BackgroundColor, a.Activation, a.HostId, a.Executable, a.Entrypoint, a.StartPage, a.ResourceGroup, a.LockScreenNotification, a.LockScreenBadgeLogo, a.SplashScreenImage, a.SplashScreenBackgroundColor, a.InitialRotationPreference, a.ApplicationViewMinWidth, a.AppListEntry, a.EditionId, a.VisualGroup, a.Parameters, a._Dictionary FROM Application AS a INNER JOIN Package AS p ON p._PackageID=a.Package WHERE p.PackageFullName=? AND (a._WorkId=0 OR a._WorkId=?2) AND (p._WorkId=0 OR p._WorkId=?2);
SELECT a._ApplicationID, a._Revision, a._WorkId, a.Package, a."Index", a.ApplicationType, a.Flags, a.Subsystem, a.PackageRelativeApplicationId, a.ApplicationUserModelId, a.DisplayName, a.Description, a.Square150x150Logo, a.Square44x44Logo, a.Wide310x150Logo, a.Square310x310Logo, a.Square71x71Logo, a.ForegroundText, a.BackgroundColor, a.Activation, a.HostId, a.Executable, a.Entrypoint, a.StartPage, a.ResourceGroup, a.LockScreenNotification, a.LockScreenBadgeLogo, a.SplashScreenImage, a.SplashScreenBackgroundColor, a.InitialRotationPreference, a.ApplicationViewMinWidth, a.AppListEntry, a.EditionId, a.VisualGroup, a.Parameters, a._Dictionary FROM Application AS a INNER JOIN Package AS p ON p._PackageID=a.Package WHERE p.PackageFullName=? AND a._WorkId=0 AND p._WorkId=0;
SELECT ae._AppExtensionID, ae._Revision, ae._WorkId, ae.Name, ae.Id, ae.PublicFolder, ae.DisplayName, ae.Description, ae.Extension, ae._Dictionary FROM AppExtension AS ae INNER JOIN ApplicationExtension AS ae2 ON ae2._ApplicationExtensionID=ae.Extension INNER JOIN Application AS a ON a._ApplicationID=ae2.Application INNER JOIN Package AS p ON p._PackageID=a.Package WHERE p._PackageID=?1 AND (ae._WorkId=0 OR ae._WorkId=?2) AND (ae2._WorkId=0 OR ae._WorkId=?2) AND (a._WorkId=0 OR a._WorkId=?2) AND (p._WorkId=0 OR p._WorkId=?2)
SELECT ae._AppExtensionID, ae._Revision, ae._WorkId, ae.Name, ae.Id, ae.PublicFolder, ae.DisplayName, ae.Description, ae.Extension, ae._Dictionary FROM AppExtension AS ae INNER JOIN ApplicationExtension AS ae2 ON ae2._ApplicationExtensionID=ae.Extension INNER JOIN Application AS a ON a._ApplicationID=ae2.Application INNER JOIN Package AS p ON p._PackageID=a.Package WHERE p._PackageID=?1 AND ae._WorkId=0 AND ae2._WorkId=0 AND a._WorkId=0 AND p._WorkId=0
SELECT ae._ApplicationExtensionID, ae._Revision, ae._WorkId, ae.Application, ae."Index", ae.Category, ae.Activation, ae.HostId, ae.Executable, ae.Entrypoint, ae.RuntimeType, ae.StartPage, ae.ResourceGroup, ae.Flags, ae.Subsystem, ae.Parameters, ae._LocalizedDictionary, ae._Dictionary FROM ApplicationExtension AS ae INNER JOIN Application AS a ON a._ApplicationID=ae.Application WHERE ae.Flags & ?2 != 0 AND a.ApplicationUserModelId=?1 AND (ae._WorkId=0 OR ae._WorkId=?3) AND (a._WorkId=0 OR a._WorkId=?3);
SELECT ae._ApplicationExtensionID, ae._Revision, ae._WorkId, ae.Application, ae."Index", ae.Category, ae.Activation, ae.HostId, ae.Executable, ae.Entrypoint, ae.RuntimeType, ae.StartPage, ae.ResourceGroup, ae.Flags, ae.Subsystem, ae.Parameters, ae._LocalizedDictionary, ae._Dictionary FROM ApplicationExtension AS ae INNER JOIN Application AS a ON a._ApplicationID=ae.Application WHERE ae.Flags & ?2 != 0 AND a.ApplicationUserModelId=?1 AND ae._WorkId=0 AND a._WorkId=0;
SELECT ai._AppInstallerID, ai._Revision, ai.Uri, ai.Version, ai.LastChecked, ai.CheckUpdateInterval, ai.Flags, ai._Dictionary FROM AppInstaller AS ai INNER JOIN PackageAppInstaller AS pai ON pai.AppInstaller=ai._AppInstallerID WHERE pai.Package=? AND pai._WorkId=0;
SELECT ai._AppInstallerID, ai._Revision, ai.Uri, ai.Version, ai.LastChecked, ai.CheckUpdateInterval, ai.Flags, ai._Dictionary FROM AppInstaller AS ai INNER JOIN PackageAppInstaller AS pai ON pai.AppInstaller=ai._AppInstallerID WHERE pai.Package=?1 AND (pai._WorkId=0 OR pai._WorkId=?2);
SELECT ai._ApplicationIdentityID, ai._Revision, ai.ApplicationUserModelId, ai._Dictionary FROM ApplicationIdentity AS ai INNER JOIN PackageFamily AS pf ON ai.ApplicationUserModelId LIKE pf.PackageFamilyName || '!%' INNER JOIN Package AS p ON p.PackageFamily=pf._PackageFamilyID AND p._PackageID=?2 WHERE (p._WorkId=0 OR p._WorkId=?3) AND ai._ApplicationIdentityID NOT IN ( SELECT ai._ApplicationIdentityID FROM ApplicationIdentity AS ai INNER JOIN Application AS a ON ai.ApplicationUserModelId=a.ApplicationUserModelId INNER JOIN PackageUser AS pu ON a.Package=pu.Package AND pu.User=?1 WHERE (a._WorkId=0 OR a._WorkId=?3) AND (pu._WorkId=0 OR pu._WorkId=?3));
SELECT ai._ApplicationIdentityID, ai._Revision, ai.ApplicationUserModelId, ai._Dictionary FROM ApplicationIdentity AS ai INNER JOIN PackageFamily AS pf ON ai.ApplicationUserModelId LIKE pf.PackageFamilyName || '!%' INNER JOIN Package AS p ON p.PackageFamily=pf._PackageFamilyID AND p._PackageID=?2 WHERE p._WorkId=0 AND ai._ApplicationIdentityID NOT IN ( SELECT ai._ApplicationIdentityID FROM ApplicationIdentity AS ai INNER JOIN Application AS a ON ai.ApplicationUserModelId=a.ApplicationUserModelId INNER JOIN PackageUser AS pu ON a.Package=pu.Package AND pu.User=?1 WHERE a._WorkId=0 AND pu._WorkId=0);
SELECT b._BundleID, b._Revision, b._WorkId, b.Package, b.UniqueLanguage, b.UniqueScale, b.UniqueDXFeatureLevel, b._Dictionary FROM Bundle AS b INNER JOIN Package AS p ON p.SourceBundle=b._BundleID WHERE p.PackageFullName=?1 AND (b._WorkId=0 OR b._WorkId=?2) AND (p._WorkId=0 OR p._WorkId=?2);
SELECT b._BundleID, b._Revision, b._WorkId, b.Package, b.UniqueLanguage, b.UniqueScale, b.UniqueDXFeatureLevel, b._Dictionary FROM Bundle AS b INNER JOIN Package AS p ON p.SourceBundle=b._BundleID WHERE p.PackageFullName=?1 AND b._WorkId=0 AND p._WorkId=0;
SELECT COUNT(*) FROM Application WHERE (_WorkId=0 OR _WorkId=?);
SELECT COUNT(*) FROM Application WHERE _WorkId=0;
SELECT COUNT(*) FROM AppxExtension WHERE (_WorkId=0 OR _WorkId=?);
SELECT COUNT(*) FROM AppxExtension WHERE _WorkId=0;
SELECT COUNT(*) FROM Dependency WHERE (_WorkId=0 OR _WorkId=?);
SELECT COUNT(*) FROM Dependency WHERE _WorkId=0;
SELECT COUNT(*) FROM DependencyGraph WHERE (_DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE _WorkId=?1) OR _DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE _WorkId=?1))) AND _IsMarkedForDeletion=0;
SELECT COUNT(*) FROM DependencyGraph WHERE (_DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=?3) OR _DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=?3))) AND _IsMarkedForDeletion=0;
SELECT COUNT(*) FROM DependencyGraph WHERE _WorkId=0;
SELECT COUNT(*) FROM DependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=0;
SELECT COUNT(*) FROM File WHERE (_WorkId=0 OR _WorkId=?);
SELECT COUNT(*) FROM File WHERE _WorkId=0;
SELECT COUNT(*) FROM Package WHERE (_WorkId=0 OR _WorkId=?);
SELECT COUNT(*) FROM Package WHERE _WorkId=0;
SELECT COUNT(*) FROM Package WHERE PackageFamily=? AND (_WorkId=0 OR _WorkId=?);
SELECT COUNT(*) FROM Package WHERE PackageFamily=? AND _WorkId=0;
SELECT COUNT(*) FROM PackagePolicy WHERE User=? AND Package=? AND Name=? AND (_WorkId=0 OR _WorkId=?);
SELECT COUNT(*) FROM PackagePolicy WHERE User=? AND Package=? AND Name=? AND _WorkId=0;
SELECT COUNT(*) FROM PackageUser AS pu INNER JOIN Package AS p ON p._PackageID=pu.Package WHERE p.PackageFullName=?1 AND pu.DeploymentState=?2 AND (pu._WorkId=0 OR pu._WorkId=?3) AND (p._WorkId=0 OR p._WorkId=?3);
SELECT COUNT(*) FROM PackageUser AS pu INNER JOIN Package AS p ON p._PackageID=pu.Package WHERE p.PackageFullName=?1 AND pu.DeploymentState=?2 AND pu._WorkId=0 AND p._WorkId=0;
SELECT COUNT(*) FROM PackageUser WHERE (_WorkId=0 OR _WorkId=?);
SELECT COUNT(*) FROM PackageUser WHERE _WorkId=0;
SELECT COUNT(*) FROM WowDependencyGraph WHERE (_WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE _WorkId=?1) OR _WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE _WorkId=0 AND _WowDependencyGraphID NOT IN (SELECT _ShadowId FROM WowDependencyGraph WHERE _WorkId=?1))) AND _IsMarkedForDeletion=0;
SELECT COUNT(*) FROM WowDependencyGraph WHERE (_WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=?3) OR _WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=0 AND _WowDependencyGraphID NOT IN (SELECT _ShadowId FROM WowDependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=?3))) AND _IsMarkedForDeletion=0;
SELECT COUNT(*) FROM WowDependencyGraph WHERE _WorkId=0;
SELECT COUNT(*) FROM WowDependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=0;
SELECT COUNT(DISTINCT(dh.WhenOccurred / ?4)) FROM DeploymentHistory AS dh INNER JOIN PackageIdentity AS pi ON pi._PackageIdentityID=dh.PackageIdentity INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=pi.PackageFamily WHERE dh.User=?1   AND pf.PackageFamilyName=?2   AND dh.HResult=?3   AND dh.WhenOccurred > (SELECT IFNULL(MAX(dh.WhenOccurred), 0) FROM DeploymentHistory AS dh INNER JOIN PackageIdentity AS pi ON pi._PackageIdentityID=dh.PackageIdentity INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=pi.PackageFamily WHERE dh.User=?1 AND pf.PackageFamilyName=?2 AND dh.HResult>=0 AND (dh._WorkId=0 OR dh._WorkId=?5))   AND (dh._WorkId=0 OR dh._WorkId=?5);
SELECT COUNT(DISTINCT(dh.WhenOccurred / ?4)) FROM DeploymentHistory AS dh INNER JOIN PackageIdentity AS pi ON pi._PackageIdentityID=dh.PackageIdentity INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=pi.PackageFamily WHERE dh.User=?1   AND pf.PackageFamilyName=?2   AND dh.HResult=?3   AND dh.WhenOccurred > (SELECT IFNULL(MAX(dh.WhenOccurred), 0) FROM DeploymentHistory AS dh INNER JOIN PackageIdentity AS pi ON pi._PackageIdentityID=dh.PackageIdentity INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=pi.PackageFamily WHERE dh.User=?1 AND pf.PackageFamilyName=?2 AND dh.HResult>=0 AND dh._WorkId=0)   AND dh._WorkId=0;
SELECT d._DependencyID, d._Revision, d._WorkId, d.DependentPackage, d."Index", d.DependencyType, d.Name, d.Publisher, d.MinVersion, d.MaxVersion, d.Flags, d._Dictionary FROM Dependency as d INNER JOIN PackageUser AS pu ON pu.Package=d.DependentPackage WHERE pu.DeploymentState=? AND d._WorkId=0 AND pu._WorkId=0;
SELECT d._DependencyID, d._Revision, d._WorkId, d.DependentPackage, d."Index", d.DependencyType, d.Name, d.Publisher, d.MinVersion, d.MaxVersion, d.Flags, d._Dictionary FROM Dependency as d INNER JOIN PackageUser AS pu ON pu.Package=d.DependentPackage WHERE pu.DeploymentState=?1 AND (d._WorkId=0 OR d._WorkId=?2) AND (pu._WorkId=0 OR pu._WorkId=?2);
SELECT DISTINCT DependentPackage FROM DependencyGraph WHERE (_DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE SupplierPackage=?1 AND DependencyType=?2 AND _WorkId=?3) OR _DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE SupplierPackage=?1 AND DependencyType=?2 AND _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE SupplierPackage=?1 AND DependencyType=?2 AND _WorkId=?3))) AND _IsMarkedForDeletion=0;
SELECT DISTINCT DependentPackage FROM DependencyGraph WHERE SupplierPackage=?1 AND DependencyType=?2 AND _WorkId=0;
SELECT DISTINCT Name FROM AppExtension WHERE (_WorkId=0 OR _WorkId=?3) AND Extension IN ( SELECT _ApplicationExtensionID FROM ApplicationExtension AS ae INNER JOIN Application AS a ON a._ApplicationID=ae.Application INNER JOIN PackageUser AS pu ON pu.Package=a.Package INNER JOIN Package AS p ON p._PackageID=a.Package WHERE pu.User=?1 AND p.PackageFullName=?2 AND (a._WorkId=0 OR a._WorkId=?3) AND (ae._WorkId=0 OR ae._WorkId=?3) AND (pu._WorkId=0 OR pu._WorkId=?3) AND (p._WorkId=0 OR p._WorkId=?3))
SELECT DISTINCT Name FROM AppExtension WHERE _WorkId=0 AND Extension IN ( SELECT _ApplicationExtensionID FROM ApplicationExtension AS ae INNER JOIN Application AS a ON a._ApplicationID=ae.Application INNER JOIN PackageUser AS pu ON pu.Package=a.Package INNER JOIN Package AS p ON p._PackageID=a.Package WHERE pu.User=?1 AND p.PackageFullName=?2 AND a._WorkId=0 AND ae._WorkId=0 AND pu._WorkId=0 AND p._WorkId=0)
SELECT DISTINCT SupplierPackage FROM DependencyGraph WHERE (_DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE DependentPackage=?1 AND DependencyType=?2 AND _WorkId=?3) OR _DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE DependentPackage=?1 AND DependencyType=?2 AND _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE DependentPackage=?1 AND DependencyType=?2 AND _WorkId=?3))) AND _IsMarkedForDeletion=0;
SELECT DISTINCT SupplierPackage FROM DependencyGraph WHERE DependentPackage=?1 AND DependencyType=?2 AND _WorkId=0;
SELECT EXISTS( SELECT 1 FROM PackageUser AS pu INNER JOIN Package AS p ON p._PackageID=pu.Package INNER JOIN User AS u ON u._UserID=pu.User INNER JOIN PackageFamily AS pf ON p.PackageFamily=pf._PackageFamilyID WHERE pf.PackageFamilyName=?1 AND pu.DeploymentState=?2 AND u.UserSid!=?3 AND (pu._WorkId=0 OR pu._WorkId=?4) AND (p._WorkId=0 OR p._WorkId=?4)  LIMIT 1);
SELECT EXISTS( SELECT 1 FROM PackageUser AS pu INNER JOIN Package AS p ON p._PackageID=pu.Package INNER JOIN User AS u ON u._UserID=pu.User INNER JOIN PackageFamily AS pf ON p.PackageFamily=pf._PackageFamilyID WHERE pf.PackageFamilyName=?1 AND pu.DeploymentState=?2 AND u.UserSid!=?3 AND pu._WorkId=0 AND p._WorkId=0  LIMIT 1);
SELECT EXISTS( SELECT 1 FROM PackageUser AS pu INNER JOIN Package AS p ON p._PackageID=pu.Package INNER JOIN User AS u ON u._UserID=pu.User WHERE u.UserSid=?1 AND p.PackageFullName=?2 AND pu.DeploymentState=?3 AND (pu._WorkId=0 OR pu._WorkId=?4) AND (p._WorkId=0 OR p._WorkId=?4)  LIMIT 1);
SELECT EXISTS( SELECT 1 FROM PackageUser AS pu INNER JOIN Package AS p ON p._PackageID=pu.Package INNER JOIN User AS u ON u._UserID=pu.User WHERE u.UserSid=?1 AND p.PackageFullName=?2 AND pu.DeploymentState=?3 AND pu._WorkId=0 AND p._WorkId=0  LIMIT 1);
SELECT EXISTS( SELECT 1 FROM PackageUser AS pu INNER JOIN Package AS p ON p._PackageID=pu.Package WHERE p.PackageFullName=?1 AND pu.DeploymentState=?2 AND (pu._WorkId=0 OR pu._WorkId=?3) AND (p._WorkId=0 OR p._WorkId=?3) LIMIT 1);
SELECT EXISTS( SELECT 1 FROM PackageUser AS pu INNER JOIN Package AS p ON p._PackageID=pu.Package WHERE p.PackageFullName=?1 AND pu.DeploymentState=?2 AND pu._WorkId=0 AND p._WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM AppExtension WHERE _AppExtensionID=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM AppExtension WHERE _AppExtensionID=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM AppInstaller WHERE _AppInstallerID=? LIMIT 1);
SELECT EXISTS(SELECT 1 FROM ApplicationExtension AS ae INNER JOIN Application AS a ON a._ApplicationID=ae.Application INNER JOIN Package AS p ON p._PackageID=a.Package WHERE p._PackageID=?1 AND ae.Category=?2 AND (ae._WorkId=0 OR ae._WorkId=?3) AND (a._WorkId=0 OR a._WorkId=?3) AND (p._WorkId=0 OR p._WorkId=?3) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM ApplicationExtension AS ae INNER JOIN Application AS a ON a._ApplicationID=ae.Application INNER JOIN Package AS p ON p._PackageID=a.Package WHERE p._PackageID=?1 AND ae.Category=?2 AND ae._WorkId=0 AND a._WorkId=0 AND p._WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM ApplicationExtension WHERE _ApplicationExtensionID=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM ApplicationExtension WHERE _ApplicationExtensionID=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM ApplicationExtension WHERE Application=? AND Category=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM ApplicationExtension WHERE Application=? AND Category=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM AppxManifest WHERE _AppxManifestID=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM AppxManifest WHERE _AppxManifestID=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM AppxManifest WHERE Package=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM AppxManifest WHERE Package=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM BundlePackage WHERE Bundle=? AND Version=? AND Architecture=? AND ResourceId IS ? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM BundlePackage WHERE Bundle=? AND Version=? AND Architecture=? AND ResourceId IS ? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM ContentGroup AS cg INNER JOIN ContentGroupFile AS cgf ON cgf.ContentGroup=cg._ContentGroupID WHERE cgf.File=?1 AND cg.ContentGroupType=2 AND (cg._WorkId=0 OR cg._WorkId=?2) AND (cgf._WorkId=0 OR cgf._WorkId=?2) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM ContentGroup AS cg INNER JOIN ContentGroupFile AS cgf ON cgf.ContentGroup=cg._ContentGroupID WHERE cgf.File=?1 AND cg.ContentGroupType=2 AND cg._WorkId=0 AND cgf._WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM ContentGroup AS cg INNER JOIN ContentGroupFile AS cgf ON cgf.ContentGroup=cg._ContentGroupID WHERE cgf.File=?1 AND cg.Status=3 AND (cg._WorkId=0 OR cg._WorkId=?2) AND (cgf._WorkId=0 OR cgf._WorkId=?2) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM ContentGroup AS cg INNER JOIN ContentGroupFile AS cgf ON cgf.ContentGroup=cg._ContentGroupID WHERE cgf.File=?1 AND cg.Status=3 AND cg._WorkId=0 AND cgf._WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM ContentGroup AS cg WHERE Package=? AND cg.ContentGroupType=2 AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM ContentGroup AS cg WHERE Package=? AND cg.ContentGroupType=2 AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM ContentGroup AS cg WHERE Package=? AND cg.Status<>3 AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM ContentGroup AS cg WHERE Package=? AND cg.Status<>3 AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM ContentGroup WHERE _ContentGroupID=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM ContentGroup WHERE _ContentGroupID=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM DefaultTile WHERE Application=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM DefaultTile WHERE Application=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM DependencyGraph WHERE (_DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=?3) OR _DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=?3))) AND _IsMarkedForDeletion=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM DependencyGraph WHERE _DependencyGraphID=?1 AND (_WorkId=?2 OR (_WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE _WorkId=?2))) AND _IsMarkedForDeletion=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM DependencyGraph WHERE _DependencyGraphID=?1 AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM DependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM HostRuntime WHERE PackageExtension=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM HostRuntime WHERE PackageExtension=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM OptionalBundle WHERE Name=? AND Publisher=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM OptionalBundle WHERE Name=? AND Publisher=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM OptionalBundlePackage WHERE OptionalBundle=? AND Version=? AND Architecture=? AND ResourceId IS ? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM OptionalBundlePackage WHERE OptionalBundle=? AND Version=? AND Architecture=? AND ResourceId IS ? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pf.PackageFamilyName=?2 AND p.PackageType & ?3 !=0 AND pu.User=?1 AND (p._WorkId=0 OR p._WorkId=?4)  AND (pu._WorkId=0 OR pu._WorkId=?4) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pf.PackageFamilyName=?2 AND p.PackageType & ?3 !=0 AND pu.User=?1 AND p._WorkId=0  AND pu._WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pf.PackageFamilyName=?2 AND pu.User=?1 AND (p._WorkId=0 OR p._WorkId=?3)  AND (pu._WorkId=0 OR pu._WorkId=?3) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pf.PackageFamilyName=?2 AND pu.User=?1 AND p._WorkId=0  AND pu._WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE pf.PackageFamilyName=?1 AND (p._WorkId=0 OR p._WorkId=?3)  LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE pf.PackageFamilyName=?1 AND p._WorkId=0  LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE pf.PackageFamilyName=?1 AND p.PackageType & ?2 !=0 AND (p._WorkId=0 OR p._WorkId=?3)  LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE pf.PackageFamilyName=?1 AND p.PackageType & ?2 !=0 AND p._WorkId=0  LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Package WHERE _PackageID=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Package WHERE _PackageID=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Package WHERE PackageFullName=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Package WHERE PackageFullName=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Package WHERE PackageFullName=? LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageAppInstaller WHERE _PackageAppInstallerID=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageAppInstaller WHERE _PackageAppInstallerID=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageExternalLocation WHERE User=? AND Package=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageExternalLocation WHERE User=? AND Package=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageLocation WHERE _PackageLocationID=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageLocation WHERE _PackageLocationID=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackagePolicy WHERE _PackagePolicyID=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackagePolicy WHERE _PackagePolicyID=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackagePolicy WHERE User=? AND Package=? AND Name=? AND ValueNumber=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackagePolicy WHERE User=? AND Package=? AND Name=? AND ValueNumber=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackagePolicy WHERE User=? AND Package=? AND Name=? AND ValueString IS ? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackagePolicy WHERE User=? AND Package=? AND Name=? AND ValueString IS ? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageSourceUri WHERE Package=? AND Kind=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageSourceUri WHERE Package=? AND Kind=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageSuperceded AS ps INNER JOIN PackageIdentity AS pi ON ps.PackageIdentity=pi._PackageIdentityID WHERE pi.PackageFullName=? LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageSuperceded AS ps INNER JOIN PackageIdentity AS pi ON ps.PackageIdentity=pi._PackageIdentityID WHERE ps.User=? AND pi.PackageFamily=? LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageUser AS pu INNER JOIN Package AS p ON p._PackageID=pu.Package INNER JOIN PackageFamily AS pf ON p.PackageFamily=pf._PackageFamilyID WHERE pu.User=?1 AND pf.PackageFamilyName=?2 AND p.PackageType & ?3 !=0 AND (pu._WorkId=0 OR pu._WorkId=?4) AND (p._WorkId=0 OR p._WorkId=?4) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageUser AS pu INNER JOIN Package AS p ON p._PackageID=pu.Package INNER JOIN PackageFamily AS pf ON p.PackageFamily=pf._PackageFamilyID WHERE pu.User=?1 AND pf.PackageFamilyName=?2 AND p.PackageType & ?3 !=0 AND pu._WorkId=0 AND p._WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageUser AS pu INNER JOIN Package AS p ON p._PackageID=pu.Package WHERE p.PackageFullName=?1 AND (pu._WorkId=0 OR pu._WorkId=?2) AND (p._WorkId=0 OR p._WorkId=?2) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageUser AS pu INNER JOIN Package AS p ON p._PackageID=pu.Package WHERE p.PackageFullName=?1 AND pu._WorkId=0 AND p._WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageUser AS pu INNER JOIN Package AS p ON p._PackageID=pu.Package WHERE pu.User=?1 AND p.PackageFullName=?2 AND (pu._WorkId=0 OR pu._WorkId=?3) AND (p._WorkId=0 OR p._WorkId=?3) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageUser AS pu INNER JOIN Package AS p ON p._PackageID=pu.Package WHERE pu.User=?1 AND p.PackageFullName=?2 AND pu._WorkId=0 AND p._WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageUser AS pu INNER JOIN User AS u ON pu.User=u._UserID WHERE pu.Package=? AND u.UserSid NOT IN (?,?) AND (pu._WorkId=0 OR pu._WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageUser AS pu INNER JOIN User AS u ON pu.User=u._UserID WHERE pu.Package=? AND u.UserSid NOT IN (?,?) AND pu._WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageUser WHERE _PackageUserID=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageUser WHERE _PackageUserID=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageUser WHERE User=? AND Package=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageUser WHERE User=? AND Package=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageUser WHERE User=? AND Package=? AND DeploymentState=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageUser WHERE User=? AND Package=? AND DeploymentState=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PrimaryTile WHERE Application=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PrimaryTile WHERE Application=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PrimaryTile WHERE Package=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PrimaryTile WHERE Package=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PrimaryTileUser WHERE _PrimaryTileUserID=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PrimaryTileUser WHERE _PrimaryTileUserID=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PrimaryTileUser WHERE TileUniqueId=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PrimaryTileUser WHERE TileUniqueId=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM SecondaryTileView WHERE User=? AND Application=? AND TileId=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM SecondaryTileView WHERE User=? AND Application=? AND TileId=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM User WHERE UserSid=? LIMIT 1);
SELECT EXISTS(SELECT 1 FROM WowDependencyGraph WHERE (_WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=?3) OR _WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=0 AND _WowDependencyGraphID NOT IN (SELECT _ShadowId FROM WowDependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=?3))) AND _IsMarkedForDeletion=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM WowDependencyGraph WHERE _WowDependencyGraphID=?1 AND (_WorkId=?2 OR (_WorkId=0 AND _WowDependencyGraphID NOT IN (SELECT _ShadowId FROM WowDependencyGraph WHERE _WorkId=?2))) AND _IsMarkedForDeletion=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM WowDependencyGraph WHERE _WowDependencyGraphID=?1 AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM WowDependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM XboxPackage WHERE _XboxPackageID=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM XboxPackage WHERE _XboxPackageID=? AND _WorkId=0 LIMIT 1);
SELECT Flags, Subsystem, HostId, Executable, Entrypoint, StartPage, ResourceGroup FROM Application WHERE _ApplicationID=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT Flags, Subsystem, HostId, Executable, Entrypoint, StartPage, ResourceGroup FROM Application WHERE _ApplicationID=? AND _WorkId=0;
SELECT LastValue FROM Sequence WHERE Id=?;
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN Application AS a ON p._PackageID=a.Package WHERE a.ApplicationUserModelId=? AND p._WorkId=0 AND a._WorkId=0 AND pu._WorkId=0;
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN Application AS a ON p._PackageID=a.Package WHERE a.ApplicationUserModelId=?1 AND (p._WorkId=0 OR p._WorkId=?2) AND (a._WorkId=0 OR a._WorkId=?2);
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN DependencyGraph AS dg ON p._PackageID=dg.SupplierPackage INNER JOIN User AS u ON dg.User=u._UserID INNER JOIN Package AS p2 ON dg.DependentPackage=p2._PackageID INNER JOIN PackageFamily AS pf ON p2.PackageFamily=pf._PackageFamilyID WHERE dg.DependencyType=3 AND pf.PackageFamilyName=?1 AND u.UserSid=?2 AND (p._WorkId=0 OR p._WorkId=?3) AND (dg._WorkId=0 OR dg._WorkId=?3) AND (p2._WorkId=0 OR p2._WorkId=?3)
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN DependencyGraph AS dg ON p._PackageID=dg.SupplierPackage INNER JOIN User AS u ON dg.User=u._UserID INNER JOIN Package AS p2 ON dg.DependentPackage=p2._PackageID INNER JOIN PackageFamily AS pf ON p2.PackageFamily=pf._PackageFamilyID WHERE dg.DependencyType=3 AND pf.PackageFamilyName=?1 AND u.UserSid=?2 AND p._WorkId=0 AND dg._WorkId=0 AND p2._WorkId=0
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageFamily AS pf ON p.PackageFamily=pf._PackageFamilyID WHERE p.PackageType & 0x29 !=0 AND p.Flags & 0x400 !=0 AND pf.PackageFamilyName=?1 AND (p._WorkId=0 OR p._WorkId=?2) 
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageFamily AS pf ON p.PackageFamily=pf._PackageFamilyID WHERE p.PackageType & 0x29 !=0 AND p.Flags & 0x400 !=0 AND pf.PackageFamilyName=?1 AND p._WorkId=0 
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pf.PackageFamilyName=?2 AND p.PackageType & ?3 !=0 AND pu.User=?1 AND (p._WorkId=0 OR p._WorkId=?4)  AND (pu._WorkId=0 OR pu._WorkId=?4);
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pf.PackageFamilyName=?2 AND p.PackageType & ?3 !=0 AND pu.User=?1 AND p._WorkId=0  AND pu._WorkId=0;
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pf.PackageFamilyName=?2 AND pu.User=?1 AND (p._WorkId=0 OR p._WorkId=?3)  AND (pu._WorkId=0 OR pu._WorkId=?3);
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pf.PackageFamilyName=?2 AND pu.User=?1 AND p._WorkId=0  AND pu._WorkId=0;
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE p.PackageFamily=?1 AND p.PackageType & ?2 !=0 AND (p._WorkId=0 OR p._WorkId=?3)  ORDER BY pf.Name, pf.PublisherId, p.ResourceId, p.Version;
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE p.PackageFamily=?1 AND p.PackageType & ?2 !=0 AND p._WorkId=0  ORDER BY pf.Name, pf.PublisherId, p.ResourceId, p.Version;
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE pf.Name=?1 AND (p._WorkId=0 OR p._WorkId=?2);
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE pf.Name=?1 AND p._WorkId=0;
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE pf.PackageFamilyName=?1 AND p.PackageType & ?2 !=0 AND (p._WorkId=0 OR p._WorkId=?3);
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE pf.PackageFamilyName=?1 AND p.PackageType & ?2 !=0 AND p._WorkId=0;
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE pf.PublisherId=?1 AND (p._WorkId=0 OR p._WorkId=?3);
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE pf.PublisherId=?1 AND p._WorkId=0;
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageLocation AS pl ON pl.Package=p._PackageID WHERE pl.InstalledLocation=?1 AND (p._WorkId=0 OR p._WorkId=?2) AND (pl._WorkId=0 OR pl._WorkId=?2);
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageLocation AS pl ON pl.Package=p._PackageID WHERE pl.InstalledLocation=?1 AND p._WorkId=0 AND pl._WorkId=0;
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageLocation AS pl ON pl.Package=p._PackageID WHERE pl.Volume=?1 AND (p._WorkId=0 OR p._WorkId=?2) AND (pl._WorkId=0 OR pl._WorkId=?2);
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageLocation AS pl ON pl.Package=p._PackageID WHERE pl.Volume=?1 AND p._WorkId=0 AND pl._WorkId=0;
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE p.PackageFamily=?2 AND p.PackageType & ?3 !=0 AND pu.User=?1 AND (p._WorkId=0 OR p._WorkId=?4) AND (pu._WorkId=0 OR pu._WorkId=?4);
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE p.PackageFamily=?2 AND p.PackageType & ?3 !=0 AND pu.User=?1 AND p._WorkId=0 AND pu._WorkId=0;
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1 AND (p._WorkId=0 OR p._WorkId=?2) AND (pu._WorkId=0 OR pu._WorkId=?2);
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1 AND p._WorkId=0 AND pu._WorkId=0;
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1 AND pu.DeploymentState=?2  AND p.PackageType & ?3 !=0 AND p.PackageOrigin!=?4  AND ?5 > pu.OSVersionWhenInstalled AND p.OSMaxVersionTested > CASE WHEN pu.OSVersionWhenInstalled > 0 THEN pu.OSVersionWhenInstalled ELSE ?6 END AND (p._WorkId=0 OR p._WorkId=?7) AND (pu._WorkId=0 OR pu._WorkId=?7);
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1 AND pu.DeploymentState=?2  AND p.PackageType & ?3 !=0 AND p.PackageOrigin!=?4  AND ?5 > pu.OSVersionWhenInstalled AND p.OSMaxVersionTested > CASE WHEN pu.OSVersionWhenInstalled > 0 THEN pu.OSVersionWhenInstalled ELSE ?6 END AND p._WorkId=0 AND pu._WorkId=0;
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p WHERE p.PackageType & ?1 !=0 AND p.PackageOrigin!=?2 AND ?3 > p.OSVersionWhenIndexed AND p.OSMaxVersionTested > CASE WHEN p.OSVersionWhenIndexed > 0 THEN p.OSVersionWhenIndexed ELSE ?4 END AND (p._WorkId=0 OR p._WorkId=?5);
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p WHERE p.PackageType & ?1 !=0 AND p.PackageOrigin!=?2 AND ?3 > p.OSVersionWhenIndexed AND p.OSMaxVersionTested > CASE WHEN p.OSVersionWhenIndexed > 0 THEN p.OSVersionWhenIndexed ELSE ?4 END AND p._WorkId=0;
SELECT p._PackageID, p.PackageFullName, MAX(p.Version) FROM PackageUser AS pu INNER JOIN Package AS p ON p._PackageID=pu.Package WHERE pu.User=?1 AND p.PackageFamily=?2 AND p.PackageType=1 AND pu._WorkId=0 AND p._WorkId=0;
SELECT p._PackageID, pf.PackageFamilyName FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE p.PackageOrigin=?1 AND (p._WorkId=0 OR p._WorkId=?2);
SELECT p._PackageID, pf.PackageFamilyName FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE p.PackageOrigin=?1 AND p._WorkId=0;
SELECT p.PackageFullName, p.Version FROM Package AS p INNER JOIN PackageFamily AS pf ON p.PackageFamily=pf._PackageFamilyID INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID INNER JOIN User AS u ON u._UserID=pu.User WHERE p.PackageType & 0x21 !=0 AND u.UserSid=?1 AND pf.PackageFamilyName=?2 AND (p._WorkId=0 OR p._WorkId=?3)   AND (pu._WorkId=0 OR pu._WorkId=?3)   ORDER BY p.Version ASC LIMIT 1;
SELECT p.PackageFullName, p.Version FROM Package AS p INNER JOIN PackageFamily AS pf ON p.PackageFamily=pf._PackageFamilyID INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID INNER JOIN User AS u ON u._UserID=pu.User WHERE p.PackageType & 0x21 !=0 AND u.UserSid=?1 AND pf.PackageFamilyName=?2 AND p._WorkId=0  AND pu._WorkId=0  ORDER BY p.Version ASC LIMIT 1;
SELECT p.PackageFullName, p.Version FROM Package AS p INNER JOIN PackageFamily AS pf ON p.PackageFamily=pf._PackageFamilyID INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID INNER JOIN User AS u ON u._UserID=pu.User WHERE p.PackageType & 0x21 !=0 AND u.UserSid=?1 AND pf.PackageFamilyName=?2 AND pu.DeploymentState=?3 AND (p._WorkId=0 OR p._WorkId=?4)   AND (pu._WorkId=0 OR pu._WorkId=?4)   ORDER BY p.Version ASC LIMIT 1;
SELECT p.PackageFullName, p.Version FROM Package AS p INNER JOIN PackageFamily AS pf ON p.PackageFamily=pf._PackageFamilyID INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID INNER JOIN User AS u ON u._UserID=pu.User WHERE p.PackageType & 0x21 !=0 AND u.UserSid=?1 AND pf.PackageFamilyName=?2 AND pu.DeploymentState=?3 AND p._WorkId=0  AND pu._WorkId=0  ORDER BY p.Version ASC LIMIT 1;
SELECT p.PackageFullName, p.Version FROM Package AS p INNER JOIN PackageFamily AS pf ON p.PackageFamily=pf._PackageFamilyID WHERE p.PackageType=1 AND pf.PackageFamilyName=?2 AND p.IsInbox=1 AND (p._WorkId=0 OR p._WorkId=?3)  UNION ALL SELECT p.PackageFullName, p.Version FROM Package AS p INNER JOIN PackageFamily AS pf ON p.PackageFamily=pf._PackageFamilyID WHERE p.PackageType & 0x21 !=0 AND pf.PackageFamilyName=?2 AND p.IsInbox=0 AND (p._WorkId=0 OR p._WorkId=?3)  AND p.SourceBundle IN (SELECT SourceBundle FROM Package WHERE PackageFullName=?1) ORDER BY p.Version DESC LIMIT 1;
SELECT p.PackageFullName, p.Version FROM Package AS p INNER JOIN PackageFamily AS pf ON p.PackageFamily=pf._PackageFamilyID WHERE p.PackageType=1 AND pf.PackageFamilyName=?2 AND p.IsInbox=1 AND p._WorkId=0  UNION ALL SELECT p.PackageFullName, p.Version FROM Package AS p INNER JOIN PackageFamily AS pf ON p.PackageFamily=pf._PackageFamilyID WHERE p.PackageType & 0x21 !=0 AND pf.PackageFamilyName=?2 AND p.IsInbox=0 AND p._WorkId=0  AND p.SourceBundle IN (SELECT SourceBundle FROM Package WHERE PackageFullName=?1) ORDER BY p.Version DESC LIMIT 1;
SELECT PackageOrigin FROM Package WHERE _PackageID=? AND (_WorkId=0 OR _WorkId=?);
SELECT PackageOrigin FROM Package WHERE _PackageID=? AND _WorkId=0;
SELECT pel._PackageExternalLocationID, pel._Revision, pel._WorkId, pel.User, pel.Package, pel.Path, pel._Dictionary FROM PackageExternalLocation AS pel INNER JOIN PackageUser AS pu ON pu.Package=pel.Package INNER JOIN User AS u ON u._UserID=pu.User WHERE u.UserSid=?1 AND pel.Package=?2 AND (pel._WorkId=0 OR pel._WorkId=?3) AND (pu._WorkId=0 OR pu._WorkId=?3) ORDER BY pel._WorkId DESC;
SELECT pel._PackageExternalLocationID, pel._Revision, pel._WorkId, pel.User, pel.Package, pel.Path, pel._Dictionary FROM PackageExternalLocation AS pel INNER JOIN PackageUser AS pu ON pu.Package=pel.Package INNER JOIN User AS u ON u._UserID=pu.User WHERE u.UserSid=?1 AND pel.Package=?2 AND pel._WorkId=0 AND pu._WorkId=?3;
SELECT pfu._PackageFamilyUserID, pfu._Revision, pfu.PackageFamily, pfu.User, pfu.WhenInstalled, pfu._Dictionary FROM PackageFamilyUser AS pfu INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=pfu.PackageFamily WHERE pfu.User=?1 AND pf.PackageFamilyName=?2;
SELECT ps._PackageSupercededID, ps._Revision, ps.PackageIdentity, ps.User, ps._Dictionary FROM PackageSuperceded AS ps INNER JOIN PackageIdentity AS pi ON ps.PackageIdentity=pi._PackageIdentityID INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=pi.PackageFamily INNER JOIN User AS u ON u._UserID=ps.User WHERE u.UserSid=? AND pf.PackageFamilyName=?;
SELECT ptu._PrimaryTileUserID, ptu._Revision, ptu._WorkId, ptu._Created, ptu._Modified, ptu.User, ptu.ApplicationIdentity, ptu.State, ptu.TileUniqueId, ptu._Dictionary FROM PrimaryTileUser AS ptu INNER JOIN ApplicationIdentity AS ai ON ptu.ApplicationIdentity=ai._ApplicationIdentityID WHERE ptu.User=?1 AND ai.ApplicationUserModelId=?2 AND (ptu._WorkId=0 OR ptu._WorkId=?3) ORDER BY ptu._WorkId DESC;
SELECT ptu._PrimaryTileUserID, ptu._Revision, ptu._WorkId, ptu._Created, ptu._Modified, ptu.User, ptu.ApplicationIdentity, ptu.State, ptu.TileUniqueId, ptu._Dictionary FROM PrimaryTileUser AS ptu INNER JOIN ApplicationIdentity AS ai ON ptu.ApplicationIdentity=ai._ApplicationIdentityID WHERE ptu.User=?1 AND ai.ApplicationUserModelId=?2 AND ptu._WorkId=0;
SELECT pu._PackageUserID, pu._Revision, pu._WorkId, pu.Package, pu.User, pu.InstallTime, pu.OSVersionWhenInstalled, pu.WhenRestored, pu.IsExplicitlyInstalled, pu.DeploymentState, pu.AppDataVolume, pu._Dictionary FROM PackageUser AS pu INNER JOIN Package AS p ON p._PackageID=pu.Package INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE pf.PackageFamilyName=?1 AND p.PackageType & ?2 !=0 AND (pu._WorkId=0 OR pu._WorkId=?3) AND (p._WorkId=0 OR p._WorkId=?3) ;
SELECT pu._PackageUserID, pu._Revision, pu._WorkId, pu.Package, pu.User, pu.InstallTime, pu.OSVersionWhenInstalled, pu.WhenRestored, pu.IsExplicitlyInstalled, pu.DeploymentState, pu.AppDataVolume, pu._Dictionary FROM PackageUser AS pu INNER JOIN Package AS p ON p._PackageID=pu.Package INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE pf.PackageFamilyName=?1 AND p.PackageType & ?2 !=0 AND pu._WorkId=0 AND p._WorkId=0 ;
SELECT pu._PackageUserID, pu._Revision, pu._WorkId, pu.Package, pu.User, pu.InstallTime, pu.OSVersionWhenInstalled, pu.WhenRestored, pu.IsExplicitlyInstalled, pu.DeploymentState, pu.AppDataVolume, pu._Dictionary FROM PackageUser AS pu INNER JOIN Package AS p ON p._PackageID=pu.Package INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE pu.User=?1 AND pf.PackageFamilyName=?2 AND (pu._WorkId=0 OR pu._WorkId=?3) AND (p._WorkId=0 OR p._WorkId=?3) ;
SELECT pu._PackageUserID, pu._Revision, pu._WorkId, pu.Package, pu.User, pu.InstallTime, pu.OSVersionWhenInstalled, pu.WhenRestored, pu.IsExplicitlyInstalled, pu.DeploymentState, pu.AppDataVolume, pu._Dictionary FROM PackageUser AS pu INNER JOIN Package AS p ON p._PackageID=pu.Package INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE pu.User=?1 AND pf.PackageFamilyName=?2 AND p.PackageType & ?3 !=0 AND (pu._WorkId=0 OR pu._WorkId=?4) AND (p._WorkId=0 OR p._WorkId=?4) ;
SELECT pu._PackageUserID, pu._Revision, pu._WorkId, pu.Package, pu.User, pu.InstallTime, pu.OSVersionWhenInstalled, pu.WhenRestored, pu.IsExplicitlyInstalled, pu.DeploymentState, pu.AppDataVolume, pu._Dictionary FROM PackageUser AS pu INNER JOIN Package AS p ON p._PackageID=pu.Package INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE pu.User=?1 AND pf.PackageFamilyName=?2 AND p.PackageType & ?3 !=0 AND pu._WorkId=0 AND p._WorkId=0 ;
SELECT pu._PackageUserID, pu._Revision, pu._WorkId, pu.Package, pu.User, pu.InstallTime, pu.OSVersionWhenInstalled, pu.WhenRestored, pu.IsExplicitlyInstalled, pu.DeploymentState, pu.AppDataVolume, pu._Dictionary FROM PackageUser AS pu INNER JOIN Package AS p ON p._PackageID=pu.Package INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE pu.User=?1 AND pf.PackageFamilyName=?2 AND pu._WorkId=0 AND p._WorkId=0 ;
SELECT pu._PackageUserID, pu._Revision, pu._WorkId, pu.Package, pu.User, pu.InstallTime, pu.OSVersionWhenInstalled, pu.WhenRestored, pu.IsExplicitlyInstalled, pu.DeploymentState, pu.AppDataVolume, pu._Dictionary FROM PackageUser AS pu INNER JOIN Package AS p ON p._PackageID=pu.Package WHERE p.PackageFullName=?1 AND (pu._WorkId=0 OR pu._WorkId=?2) AND (p._WorkId=0 OR p._WorkId=?2);
SELECT pu._PackageUserID, pu._Revision, pu._WorkId, pu.Package, pu.User, pu.InstallTime, pu.OSVersionWhenInstalled, pu.WhenRestored, pu.IsExplicitlyInstalled, pu.DeploymentState, pu.AppDataVolume, pu._Dictionary FROM PackageUser AS pu INNER JOIN Package AS p ON p._PackageID=pu.Package WHERE p.PackageFullName=?1 AND pu._WorkId=0 AND p._WorkId=0;
SELECT pu._PackageUserID, pu._Revision, pu._WorkId, pu.Package, pu.User, pu.InstallTime, pu.OSVersionWhenInstalled, pu.WhenRestored, pu.IsExplicitlyInstalled, pu.DeploymentState, pu.AppDataVolume, pu._Dictionary FROM PackageUser AS pu INNER JOIN Package AS p ON p._PackageID=pu.Package WHERE pu.User=?1 AND p.PackageFullName=?2 AND (pu._WorkId=0 OR pu._WorkId=?3) AND (p._WorkId=0 OR p._WorkId=?3) ORDER BY pu._WorkId DESC;
SELECT pu._PackageUserID, pu._Revision, pu._WorkId, pu.Package, pu.User, pu.InstallTime, pu.OSVersionWhenInstalled, pu.WhenRestored, pu.IsExplicitlyInstalled, pu.DeploymentState, pu.AppDataVolume, pu._Dictionary FROM PackageUser AS pu INNER JOIN Package AS p ON p._PackageID=pu.Package WHERE pu.User=?1 AND p.PackageFullName=?2 AND p._WorkId=0 AND pu._WorkId=0;
SELECT pu.User, p.PackageFamily FROM PackageUser AS pu INNER JOIN Package AS p ON p._PackageID=pu.Package INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily INNER JOIN User AS u ON u._UserID=pu.User WHERE u.UserSid=? AND p.PackageType=1 AND pu._WorkId=0 AND p._WorkId=0   GROUP BY p.PackageFamily HAVING COUNT(*)>1;
SELECT UserSid FROM User AS u WHERE u._UserID IN (SELECT ptu.User FROM PrimaryTileUser AS ptu WHERE _WorkId=?1 UNION ALL SELECT stu.User FROM SecondaryTileUser AS stu WHERE _WorkId=?1 LIMIT 1) LIMIT 1;
SELECT UserSid FROM User AS u WHERE u._UserID IN (SELECT ptuc.User FROM PrimaryTileUserChangelog AS ptuc WHERE _WorkId=?1 UNION ALL SELECT stuc.User FROM SecondaryTileUserChangelog AS stuc WHERE _WorkId=?1 LIMIT 1) LIMIT 1;
SELECT ValueNumber FROM PackagePolicy WHERE User=? AND Package=? AND Name=? AND "Index"=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT ValueNumber FROM PackagePolicy WHERE User=? AND Package=? AND Name=? AND "Index"=? AND _WorkId=0;
SelectedUpdateBaseline
SelectionNamespaces
SeLoadDriverPrivilege
Serive Control flags
SERVER_EXTENSION_KEYWORD
ServerCore
Server-Gui-Shell
ServerName
ServerSideRepairPackageFileAclsImplementation
ServerSideRequestContentGroupsImplementation
Service
ServiceIdleTimeout
ServiceMain
ServiceStatus
ServiceWaitHintInterval
Session:%d!clsid:%s
session\
sessionId
SessionId
sessionId
SessionId
SessionKey
Set CPU priority failed for idle task
Set IO priority failed for idle task
SeTakeOwnershipPrivilege
SetContentGroupState
SetDeferredRoamingStatus %ws
SetDeploymentError
SetDesktopAppXMetadataForFolder
SetDesktopAppXMetadataForPackage
SetEndOfFile
SetEntriesInAclW
SetEvent
SetExtensionProperty
SetFileAttributesW
SetFileInformationByHandle
SetFileIntegrityInfoFailed
SetFilePointer
SetFilePointerEx
setFilePointerGLE
setFilePointerResult
SetFolderDataProtectionLevelIfNeeded %ls.
SetFolderDataProtectionLevelIfNeeded %u %ls.
SetFolderDataProtectionToLevel %ls level %u %u.
SetLastError
SetNamedSecurityInfoW
SetNamedSecurityInfoW %ws path %ws
SetPackageFullName
SetPackageFullName %ls
SetPackageStatusBlockingForUserImplementation
SetPackageStatusBlockingImplementation
SetProcessWindowStation
SetProtocolProperty
SetPublisherFolders
SetPublisherFolders %ls
SetRestrictedErrorInfo
SetRoamingDataStatusForFamily
SetRoamingDataStatusForFamily %ws operation %u
SetRoamingDataStatusForFamily 0x%0x
SetSecurityAccessMask
SetSecurityDescriptorControl
SetSecurityDescriptorDacl
SetSecurityDescriptorGroup
SetSecurityDescriptorOwner
SetSecurityInfo
SetSecurityInfo %ls
SetServiceStatus
SetStateSchema
SetThreadInformation
SetThreadpoolThreadMaximum
SetThreadpoolThreadMinimum
SetThreadpoolTimer
SetThreadPriority
SetThreadToken
Setting %ls %ls %u
SettingName
settingName is empty
Settings
SettingsApp_cw5n1h2txyewy
SettingSyncEnabled
SettingValue
SetTokenInformation
SetUnhandledExceptionFilter
SetupMutualAuthentication %ws
SetupMutualAuthenticationFailed
SetupPhase
SetValue %ls
SetValueFromString %ls
SetValueFromString %ls %ls
SetValueFromString %u %ws
SetValueFromString %ws
SetValueFromString %ws user %ws
SetWaitableTimer
sH;w0r
SHA256
shareAccess
SharedAppsBlockedByPolicy
SharedAppsEnabled
SharedLocalIsEnabled
SHCORE.dll
SHCreateMemStream
SHCreateStreamOnFileEx
ShortName
ShouldCreatePackageRootMetadata
ShowPrompt
SHTaskPoolQueueTask
shutdown
Sid %ws %ws %u
sidType %u
sienna
SignalProgress %d
SignatureOrigin
signatureOrigin
SignatureOrigin
silver
SimilarPackageFullName
single
SingletonRegisterAdd
SisPath
Size %u
Size %u publisherRoot %ls
SizeInPages
SizeKB
sizeof(entry)
SkipDestageForInbox
SkipDestageForResourcePack
Skipping per-machine registration mode for pre-register operation because package: %ws is Paused.
SkippingDeferredStaging
SkipRollbackOfUserProfileRemoval
skyBlue
slateBlue
slateGray
Sleep
SLMAllowUninstallActivity
SLMGetActiveAumidsInPackageActivity
SLMGetBlockingAumidsActivity
SLMTerminateApplicationsActivity
SLMTerminateServicesInPackageActivity
SLMTerminateSingleServiceActivity
SmallLogo
Software
SOFTWARE
Software\
Software\Classes\Local Settings
Software\Classes\Local Settings\Software\Microsoft\Windows\CurrentVersion\AppModel
Software\Classes\Local Settings\Software\Microsoft\Windows\CurrentVersion\AppModel\Deployment
Software\Classes\Local Settings\Software\Microsoft\Windows\CurrentVersion\AppModel\PackageRepository
Software\Classes\Local Settings\Software\Microsoft\Windows\CurrentVersion\AppModel\Repository
Software\Classes\Local Settings\Software\Microsoft\Windows\CurrentVersion\AppModel\Repository\Families
Software\Classes\Local Settings\Software\Microsoft\Windows\CurrentVersion\AppModel\Repository\Families\%s\%s
Software\Classes\Local Settings\Software\Microsoft\Windows\CurrentVersion\AppModel\Repository\Packages
Software\Classes\Local Settings\Software\Microsoft\Windows\CurrentVersion\AppModel\SystemAppData
Software\Classes\Local Settings\Software\Microsoft\Windows\CurrentVersion\AppModel\SystemAppData\
Software\Microsoft\SQMClient
Software\Microsoft\Windows NT\CurrentVersion\ProfileList
SOFTWARE\Microsoft\Windows NT\CurrentVersion\Server\ServerLevels
Software\Microsoft\Windows NT\CurrentVersion\SoftwareProtectionPlatform
SOFTWARE\Microsoft\Windows NT\CurrentVersion\TileDataModel\Migration
Software\Microsoft\Windows\CurrentVersion\Appmodel
Software\Microsoft\Windows\CurrentVersion\AppModel
Software\Microsoft\Windows\CurrentVersion\AppModel\StagingInfo
SOFTWARE\Microsoft\Windows\CurrentVersion\AppModel\StateRepository
Software\Microsoft\Windows\CurrentVersion\AppModel\StateRepositoryStatus
Software\Microsoft\Windows\CurrentVersion\AppModel\SystemAppData\
Software\Microsoft\Windows\CurrentVersion\AppReadiness
SOFTWARE\Microsoft\Windows\CurrentVersion\Appx
Software\Microsoft\Windows\CurrentVersion\Appx
Software\Microsoft\Windows\CurrentVersion\Appx\AppxAllUserStore
Software\Microsoft\Windows\CurrentVersion\Appx\ByteCodeQueue
SOFTWARE\Microsoft\Windows\CurrentVersion\Appx\DeploymentExtensionModules
Software\Microsoft\Windows\CurrentVersion\Appx\NewDeploymentOperation
Software\Microsoft\Windows\CurrentVersion\Appx\PackageSidRef
Software\Microsoft\Windows\CurrentVersion\Appx\PackageVolumes
Software\Microsoft\Windows\CurrentVersion\Appx\PurgeList
Software\Microsoft\Windows\CurrentVersion\Explorer\User Shell Folders
Software\Microsoft\Windows\CurrentVersion\Mrt
Software\Microsoft\Windows\CurrentVersion\Policies\AppX\Deployment\OSIntegration
Software\Microsoft\Windows\CurrentVersion\Policies\AppX\Deployment\PackageManager
Software\Microsoft\Windows\CurrentVersion\Policies\AppX\Deployment\StagingManager\FaultInjection
Software\Microsoft\Windows\CurrentVersion\Search
Software\Microsoft\Windows\CurrentVersion\SettingSync\SyncData
Software\Microsoft\Windows\CurrentVersion\SettingSync\SyncData\CollectionStaging
Software\Microsoft\Windows\CurrentVersion\Store\ContentId
Software\Policies\Microsoft\Windows\Appx
Sonecore\admin\appmodel\packagemanager\server\appxdownloadprogresshandler.cpp
SonicWALL.MobileConnect_cw5n1h2txyewy
Source Path
SourceBundle
sourceFilePath
SourceFilePath
SourceFileSize
SourceFolderPath
SourceMediaID
SourcePath
Specific version applicability called for all users is not supported
springGreen
SQLite.AutoIndexWarning
sqlite3_bind_blob
sqlite3_bind_int
sqlite3_bind_int64
sqlite3_bind_null
sqlite3_bind_text16
sqlite3_busy_timeout
sqlite3_changes
sqlite3_clear_bindings
sqlite3_close
sqlite3_column_blob
sqlite3_column_bytes
sqlite3_column_int
sqlite3_column_int64
sqlite3_column_text
sqlite3_column_text16
sqlite3_column_type
sqlite3_config
sqlite3_create_function_v2
sqlite3_db_config
sqlite3_db_filename
sqlite3_db_handle
sqlite3_db_status
sqlite3_enable_shared_cache
sqlite3_errcode
sqlite3_errmsg
sqlite3_exec
sqlite3_expanded_sql
sqlite3_extended_errcode
sqlite3_extended_result_codes
sqlite3_file_control
sqlite3_finalize
sqlite3_free
sqlite3_get_autocommit
sqlite3_initialize
sqlite3_last_insert_rowid
sqlite3_log
sqlite3_malloc
sqlite3_next_stmt
sqlite3_open_v2
sqlite3_prepare_v2
sqlite3_profile
sqlite3_reset
sqlite3_result_blob
sqlite3_result_error_code
sqlite3_result_error_nomem
sqlite3_result_error16
sqlite3_result_int
sqlite3_result_int64
sqlite3_result_text16
sqlite3_shutdown
sqlite3_snprintf
sqlite3_sql
sqlite3_status
sqlite3_step
sqlite3_stmt_busy
sqlite3_total_changes
sqlite3_trace
sqlite3_user_data
sqlite3_value_blob
sqlite3_value_bytes
sqlite3_value_int
sqlite3_value_int64
sqlite3_value_text16
sqlite3_value_type
sqlite3_vfs_find
sqlite3_vfs_register
sqlite3_vfs_unregister
sqlite3_wal_autocheckpoint
sqlite3_wal_checkpoint_v2
sqlite3_wal_checkpoint_v2(): Mode:%d EffectiveMode:%d Size:%d Pages:%d
Square150x150Logo
square150x150Logo
Square310x310Logo
Square44x44Logo
Square71x71Logo
SRCache_AllocStringBuffer
SRCache_Free
SRCacheContext_Close
SRCacheContext_EnumerateData
SRCacheContext_GetField_UInt32
SRCacheContext_Open
SRCacheManager_Close
SRCacheManager_Open
SRD1t
SRJournal
SRJournalArchive
sroptions
srpapi.dll
SrpIsAllowed
Stage required cost: %I64u ms
Stage user data cost: %I64u ms
StageBackupData %ws %ws
stageCost
Staged
StageData %d
StageDataForPackage %ws
StageForInPlace
StageInplaceUpdate
StageRequired
StageRoamingData %ws %ws
StageRoamingData %ws path %ws
StageUpdatePayloadFiles
StageUserData
StageUserDataStateHandler
Staging
Staging PackageSourceUri not found for package %ws in order to stage %ws .
Staging PackageSourceUri not found for package %ws.
stagingAction
StagingHelpers::AreStreamsEqual() failed.
StagingSessionsReadyForContentGroupReorderingEventSet
StagingStateHandlerStagePackage
StartDeploymentImplementation
StartDeploymentOperation
StartDeploymentOperationForRemove
StartDeploymentOperationForResume
StartPage
StartServiceW
StartStagingBackupDataAsync %ws %ws
StartStagingRoamingDataAsync %ws %ws
State
state
State repository CommitTransaction cost: %I64u ms
STATE_DEH_KEYWORD
STATE_LEFT_FROM_LAST_UNINSTALL
StateCreation
StateHandler
StateMachine
StatementCache.Count
StatementCache.Hits
StatementCache.Lifespan
StatementCache.Misses
StatementCount
StatementPtr
StatementUsed
StatePaths
StateRepository*
StateRepository.Core.dll
StateRepository.Database.Statistics
StateRepository.DatabaseCache.Statistics
StateRepository.FailFastBusySnapshot
StateRepository.FailFastBusySnapshot.BusyCount
StateRepository.FailFastBusySnapshot.DatabasePtr
StateRepository.FailFastBusySnapshot.FirstBusySQL
StateRepository.FailFastBusySnapshot.Statement#%u.ExpandedSQL
StateRepository.FailFastBusySnapshot.Statement#%u.Ptr
StateRepository.FailFastBusySnapshot.Statement#%u.SQL
StateRepository.FailFastBusySnapshot.StatementCount
StateRepository.FailFastBusySnapshot.StatementInProgress
StateRepository.log
StateRepository.ResourcePriority.Inadequate
StateRepositoryDownlevelReadFailed
StateRepositoryStatus
StateSchema
static_cast<DWORD>(integrityState)
static_cast<DWORD>(origin)
STATUS
StatusToClear
statusToClear
StatusToClear
StatusToSet
statusToSet
StatusToSet
steelBlue
stopping service
StorageId
StoreName
StoreSvc
strchr
strcmp
stream end
stream error
StreamingDataSourcePrefetchCanceled
StreamingDeploymentRequestFound
StreamingDeploymentRequestNotFoundExitingGracefully
StreamingRequestPackageMoniker
StreamingStatusGetFileSizeError
StreamingStatusUnavailableForLinkTarget
String
string too long
String1
String2
String3
StringCchCat
StringCchCat %ws
StringCchCat APPDATA
StringCchCat APPDATA_LOCAL
StringCchCat LOCAL
StringCchCopy
StringCchCopy %u fQCid %ws
StringCchCopyN %u root %ls
StringCchCopyN %u systemStateRoot %ls
StringCchLength %ls
StringCchLength %u
StringCchLength %u len %u
StringCchLength %ws
StringCchLength %ws len %u
StringCchPrintf
StringCchPrintf %ls %u
StringCchPrintf %ls size %u
StringCchPrintf %u
StringCchPrintf %ws %ws
StringCchPrintf candidateFQCid
StringCchPrintf fQCidFilter
StringCchPrintf LOCAL %u
StringCchPrintf LOCALCACHE %u
StringCchPrintf ROAMING %u
StringCchPrintf TEMP %u
StringFileInfo
StringFromCLSID
StringFromGUID2
StrRChr %ws
StrRChrW
StrStrIW
Stub preference doesn't match currently installed package.  Allowing force update from any version.
StubPreference
SubDir %ls
SubDir %ls user %ls
SubDir %ls user %ls package %ls publisher %ls
SubDir %ls user %ls package %ls publisher %ls path %ls
Subkey
Subkey %ls
Subkey %ls path %ls
SubmitThreadpoolWork
SuccessfullyConvertedCentennialTokenToUserToken
Summary
SummaryError
SupplierPackage
SupportedExternalFSTypes
SupportedInternalFSTypes
SupportedUsers
supportsEAIntegrity
SUVWATAUAVAWH
SUVWAVH
SUVWAWH
svchost.exe
SvchostPushServiceGlobals
SVWATAUAVAWH
SVWAVAWH
SVWAVH
sYfD9!H
synchronous
SyncRoamingDataAndWait %u
Sysmain
System
SYSTEM\Setup
SYSTEM\Setup\Upgrade\Appx\Applications
SystemAppData
SystemTimeToFileTime
SystemVolume
T -!qb
t D9Y
t fD9(t
T JT~PT4J
T tyL
T V"X"
t!fA9u
t!fD9(t
t!fD98t
t!H!|$ E3
t"D8=
t"D8a
t"fA9<$t
t#E9V0t
t$ !t$(H
t$ D+
t$ E3
T$ E3
t$ E3
T$ E3
t$ E3
T$ E3
t$ E3
T$ E3
t$ E3
T$ E3
t$ E3
T$ E3
t$ E3
t$ H!t$(3
T$ H;
T$ H;W
T$ H9
t$ UATAUAVAWH
t$ UAVAWH
t$ UH
t$ UWATAUAVH
t$ UWATAVAWH
t$ UWAUAVAWH
t$ UWAVH
t$ UWAWH
t$ WATAUAVAWD
t$ WATAUAVAWH
t$ WATAVH
t$ WAVAWH
t$ WH
T$$D!t$ H
t$(!t$ !t$03
t$(A_A^
t$(E3
T$(E3
t$(H!\$ A
t$@D9|$0t5H
t$@D9d$Ht
T$@E3
t$@E8
T$@L;
t$@M;
t$@t%H
T$\E3
t$`D9l$0t
t$`E3
T$`fA;
t$`H;
T$`H;
T$`I;
T$`M;J
t$0D;l$L
T$0E3
t$0E3
T$0E3
t$0E3
T$0E3
t$0E3
T$0H!u
T$0L+
t$1E3
t$3E3
t$8E3
T$8E3
t$8E3
T$8H!\$8
t$8Hc
t$8Lc
t$8tS
t$D8m@u
t$DE3
T$dfD
t$fD9 t
t$gD8t$etLI
T$HE3
t$hE3
t$HE3
T$hE3
t$HE3
T$hE3
t$HfE;~
T$HH!D$H
t$hH;t$`t4H
t$HH9
t$hI9
T$hL9\$p
T$hM;
T$LL9\$Pu?
T$p;T$t
t$P9T$0A
T$pA+
T$PD9\$Hv&
T$PD9\$Hv*
T$pD9\$hv.
T$PD9\$Hv.
T$pD9\$hv0
T$pD9t$t
T$PE3
t$PE3
t$pE3
t$pfD
T$PH;
t$pH;
t$PI;
T$PL;
T$pM+
t$s(I
T$x+U
T$XD!d$4D
t$XD8
T$XE3
t$XE3
t$XfD9n
t$xH9t$X
T$xI;
t%D8wiu
t&@8|$Xu
t&9t$@t 
t(D89t#H
t(D8o@u
t)@8q
t)Lc@
t*H;N
t,D8e
t,D8m
t;H;\$hr
t;H;_
t;I;u
t?fA9(t9H
t?H;\$hr
t-@8q
t@D8m
t\H!\$8H
t]D8|$pu
t]D9p
t_L9h
t`D8m
t{D9:v
t{M9U
t}@8u
t+@8t$Ht
t+=D{
t+H;_0r
t+H;{
t<@8}
t<D8m
t<D8q
t>@8}
t0D8}
t0D8e
t0D8m
t0D8u
t0H;_
t0H;n0r
t0H;w
t0I9^(t*H
t1@8t$8t"H
t1D8}
t1D8m
t2>B"(4
t2D8e
t2H;w
t2I;n
t3D8d$8t#I
t4fD9/t.I;
t4H;_
t4M;u
t5H;A
t6D8q
t6D9Y u
t79p$t2H
t7D8l$ht(H
t7D8q
t7L;eXu1H
t8@8}
t8@8u
t8H;~
t9D8`
t9D8}
tAD8d$2t:L
tAD8m
tAD8q
Target
Target MaxVersion lower than 10.0.14000.0 Not Applicable on Xbox
TargetDeviceFamily
TargetFilePath
TargetFileSize
targetInBaseline
TargetPackageFullName
TargetPlatform
TargetPlatformEnumMap
targetSize
TASKH$
tB@8}
tC@8u
tcfE9!t]H
td@8=
t-D8q
tDH!\$0D
tdh.dll
TdhEnumerateProviderFieldInformation
TdhFormatProperty
TdhGetEventInformation
TdhGetEventMapInformation
tE9\$`t?
TelemetryAssert
TelemetryAssertDiagTrack
TEMP 
TEMP$
TEMP(
TEMP,
TEMP.xml
TEMP@
TEMP\
temp_store
TEMP`
TEMP|
TEMP<
TEMP0
TEMP4
TEMP8
TEMPD
TEMPd
TEMPD
TEMPH
TEMPh
TEMPH
TEMPL
TEMPl
TEMPP
TEMPp
TEMPP
TEMPp
TEMPt
TEMPT
TEMPt
TEMPT
TEMPt
TEMPT
TEMPt
TEMPT
TEMPt
TEMPT
TEMPt
TEMPT
TEMPX
TEMPx
TEMPX
TerminateProcess
terminateService
text()
tF9oHtAH
tFH;s
tG9oHtBH
tGD8m
tgf9+tbH
tGfA98tAI
tGfD99tAL
tgI;~0r
TgMd`
t'H!D$(H
The container policy manager APIs are not available.
The number of installed resource packages is less than the known user applicable resource packages, so it is installable
The package to be staged has already been staged before with a different StageInPlace option. Please destage the existing package then try again. Package full name: %ws. Current request has StageInPlace option: %d. Existing package was staged with StageInPlace option: %d.
The uri [%ws] is not found in data source cache
tHH;_
tHH;w
ThirdPartyRatingLevel
ThirdPartyRatingSystem
This should never occur
This user has insufficient rights to enqueue this request
thistle
tHL9a
Thread Id
threadId
tI@8}HuCH
tiD8l$0u
tifD9&tcH
tIH;C
TileAlreadyExists
tileCount
TileId
tileId
TileId
TilesHandlerExecute
TilesStore
TileStore
TileUniqueId
tileUniqueId
TileUniqueId
timestamp
TitleId
tJ!\$8H
TJ9Wa
tKD8e
tKH;~
TlsAlloc
TlsFree
TlsGetValue
TlsSetValue
t-M;~Hr
tmfD9"tgH
tN@8}
tNH;^
To Be Installed Related Set
toBeInstalledRelatedSetPackageFullName
TOC8I
tOH;w
tomato
too many length or distance symbols
topic
Total estimated footprint size must not be 0
totalChangedSize
totalFileSize
totalHits
tPD9u
tpH!|$0H!|$8
tqI;}
tQvg8
Trace
TraceMessage
trackServiceHR
TrackServicingTerminatedAppFailed
TransactionCallerID
Translation
transparent
trD8u0teL
TreeResetNamedSecurityInfoW
trH;^
trL9y w
TRUNCATE
TRUST_DEH_KEYWORD
TrustedAppRoot
TryGetByPackageFullName %ws
TryGetPackageRow %ws
Trying to DPL-protect encrypted %ls?
TrySubmitThreadpoolCallback
tsfD9 tmH
tTD8i
tTM;A
tUH9r v!H;J s
turquoise
tVH;w
twD9m
tXH;s
tYH;_
tZI;^pr
u!H9s`u
u#D9R
u#H9<
u%qi>
u(D9|$p|
U(f9:u
u(H!GHH
u)H9L$H
u*@8u
u/9t$@u)H
u@L+u@I;
u`H;_
u}H9A
u~f;i
u+H!D$(H
u=A9Olu7H
U=kZ#3
u>H;w0r
u0D9} t
u0D9e t
u18]Pu,H
u1y9D}K
u5E8n,u/A
U6!!`(
U8;Q(u
u8D9R
U8H!}
uap7:Name
uap8:AllowOverride
UATAUAVAWH
UATAUH
UATAVH
UATAWH
UAUAVH
UAVAWH
ubD9}hu\8
uBH;_
uCH9s`u=
UD8m@u
UD9|$Pt
ueH;{
uEH9A
ugH!U
uGH;^
uH;u@u
UH9P(
uHD8u
uHH9A
uHI9^
UInt32Value
UInt64Add %llu ticksUsed %llu
UInt64Mult %llu
UMgrEnumerateSessionUsers
UMgrFreeSessionUsers
UMgrQueryDefaultAccountToken
UMgrQuerySessionUserToken
UMgrQueryUserContext
UMgrQueryUserToken
uMH9A
Unable to stage pending writes to activation catalog.
uncompress
UncompressedSizeKB
Unexpected: optional package %ws has %llu main packages and is in a related set
UnhandledExceptionFilter
UninstallSuccess
UniqueConstraintCollisionRepairUnsuccessful
UniqueKey
Universal TargetDeviceFamily Not Applicable on Xbox
unknown
unknown compression method
Unknown error
Unknown exception
Unknown operation %d
Unknown RuntimeBehavior
Unknown SQLite datatype %d
Unknown TrustLevel
UnknownUser
UnmapViewOfFile
UnregisteredForProfileRoaming
UnregisterRoaming %u
UnregisterStateChangeNotification
UnregisterStateLock
UnregisterTraceGuids
Unsigned packages must be Main packages
Unsupported
Unsupported package type: %i
UPDATE %s SET _Created=changeid_next_value() WHERE _Created=-2 AND _WorkId=?;
UPDATE %s SET _Deleted=changeid_next_value() WHERE _WorkId=?;
UPDATE %s SET _Modified=changeid_next_value() WHERE _Modified=-2 AND _WorkId=?;
UPDATE %s SET _WorkId=0 WHERE _WorkId=? AND _WorkId<>0;
UPDATE %s SET _WorkId=0, _ShadowId=0 WHERE _WorkId=? AND _WorkId<>0;
UPDATE AppExtension SET _Revision=?, _WorkId=?, Name=?, Id=?, PublicFolder=?, DisplayName=?, Description=?, Extension=?, _Dictionary=? WHERE _AppExtensionID=? AND _Revision=? AND (_WorkId=0 OR _WorkId=?);
UPDATE AppExtension SET _Revision=?, _WorkId=?, Name=?, Id=?, PublicFolder=?, DisplayName=?, Description=?, Extension=?, _Dictionary=? WHERE _AppExtensionID=? AND _Revision=? AND _WorkId=0;
UPDATE AppInstaller SET _Revision=?, Uri=?, Version=?, LastChecked=?, CheckUpdateInterval=?, Flags=?, _Dictionary=? WHERE _AppInstallerID=? AND _Revision=?;
UPDATE ApplicationExtension SET _Revision=?, _WorkId=?, Application=?, "Index"=?, Category=?, Activation=?, HostId=?, Executable=?, Entrypoint=?, RuntimeType=?, StartPage=?, ResourceGroup=?, Flags=?, Subsystem=?, Parameters=?, _LocalizedDictionary=?, _Dictionary=? WHERE _ApplicationExtensionID=? AND _Revision=? AND (_WorkId=0 OR _WorkId=?);
UPDATE ApplicationExtension SET _Revision=?, _WorkId=?, Application=?, "Index"=?, Category=?, Activation=?, HostId=?, Executable=?, Entrypoint=?, RuntimeType=?, StartPage=?, ResourceGroup=?, Flags=?, Subsystem=?, Parameters=?, _LocalizedDictionary=?, _Dictionary=? WHERE _ApplicationExtensionID=? AND _Revision=? AND _WorkId=0;
UPDATE AppxManifest SET _Revision=?, _WorkId=?, Package=?, Xml=compress(?), _Dictionary=? WHERE _AppxManifestID=? AND _Revision=? AND (_WorkId=0 OR _WorkId=?);
UPDATE AppxManifest SET _Revision=?, _WorkId=?, Package=?, Xml=compress(?), _Dictionary=? WHERE _AppxManifestID=? AND _Revision=? AND _WorkId=0;
UPDATE Bundle SET Package=? WHERE _BundleID=? AND _WorkId=?;
UPDATE ContentGroup SET _Revision=?, _WorkId=?, Package=?, "Index"=?, Name=?, ContentGroupType=?, Status=?, _Dictionary=? WHERE _ContentGroupID=? AND _Revision=? AND (_WorkId=0 OR _WorkId=?);
UPDATE ContentGroup SET _Revision=?, _WorkId=?, Package=?, "Index"=?, Name=?, ContentGroupType=?, Status=?, _Dictionary=? WHERE _ContentGroupID=? AND _Revision=? AND _WorkId=0;
UPDATE DependencyGraph SET _IsMarkedForDeletion=0 WHERE _DependencyGraphID=? AND _WorkId=? AND _WorkId<>0 AND _IsMarkedForDeletion<>0 AND _ShadowId<>0;
UPDATE DependencyGraph SET _IsMarkedForDeletion=1 WHERE _DependencyGraphID=? AND _IsMarkedForDeletion=0 AND _WorkId=?;
UPDATE DependencyGraph SET _Revision=?1, _WorkId=?2, _ShadowId=?3, _IsMarkedForDeletion=?4, User=?5, DependentPackage=?6, "Index"=?7, SupplierPackage=?8, DependencyType=?9, _Dictionary=?10 WHERE (_DependencyGraphID=?11 AND _Revision=?12) AND _IsMarkedForDeletion=0 AND _WorkId=?13;
UPDATE DependencyGraph SET DependentPackage=? WHERE DependentPackage=? AND DependencyType=? AND "User"=? AND _WorkId=?;
UPDATE DependencyGraph SET SupplierPackage=? WHERE SupplierPackage=? AND "User"=? AND _WorkId=?;
UPDATE File SET Size=? WHERE _FileID=? AND (_WorkId=0 OR _WorkId=?);
UPDATE File SET Size=? WHERE _FileID=? AND _WorkId=0;
UPDATE Package SET _Revision=?, _WorkId=?, PackageFamily=?, ResourceId=?, Architecture=?, Version=?, PackageFullName=?, IsInbox=?, PackageType=?, Flags=?, Flags2=?, DisplayName=?, PublisherDisplayName=?, Description=?, Logo=?, OSMinVersion=?, OSMaxVersionTested=?, TargetDeviceFamily=?, Capabilities=?, SupportedUsers=?, SignatureOrigin=?, PackageOrigin=?, Enterprise=?, SourceBundle=?, EditionId=?, OSVersionWhenIndexed=?, InPlaceUpdateBaseline=?, _Dictionary=? WHERE _PackageID=? AND _Revision=? AND (_WorkId=0 OR _WorkId=?);
UPDATE Package SET _Revision=?, _WorkId=?, PackageFamily=?, ResourceId=?, Architecture=?, Version=?, PackageFullName=?, IsInbox=?, PackageType=?, Flags=?, Flags2=?, DisplayName=?, PublisherDisplayName=?, Description=?, Logo=?, OSMinVersion=?, OSMaxVersionTested=?, TargetDeviceFamily=?, Capabilities=?, SupportedUsers=?, SignatureOrigin=?, PackageOrigin=?, Enterprise=?, SourceBundle=?, EditionId=?, OSVersionWhenIndexed=?, InPlaceUpdateBaseline=?, _Dictionary=? WHERE _PackageID=? AND _Revision=? AND _WorkId=0;
UPDATE Package SET Flags=((Flags & ~?) | ?) WHERE _PackageID=? AND (_WorkId=0 OR _WorkId=?);
UPDATE Package SET Flags=((Flags & ~?) | ?) WHERE _PackageID=? AND _WorkId=0;
UPDATE Package SET Flags=~0x20000&Flags WHERE _PackageID=? AND (_WorkId=0 OR _WorkId=?);
UPDATE Package SET Flags=~0x20000&Flags WHERE _PackageID=? AND _WorkId=0;
UPDATE Package SET Flags=~0x80&Flags WHERE _PackageID=? AND (_WorkId=0 OR _WorkId=?);
UPDATE Package SET Flags=~0x80&Flags WHERE _PackageID=? AND _WorkId=0;
UPDATE Package SET FLAGS=~4096&FLAGS WHERE _PackageID=? AND (_WorkId=0 OR _WorkId=?);
UPDATE Package SET FLAGS=~4096&FLAGS WHERE _PackageID=? AND _WorkId=0;
UPDATE Package SET FLAGS=~8&FLAGS WHERE _PackageID=? AND (_WorkId=0 OR _WorkId=?);
UPDATE Package SET FLAGS=~8&FLAGS WHERE _PackageID=? AND _WorkId=0;
UPDATE Package SET Flags=~8&Flags WHERE PackageFullName=? AND (_WorkId=0 OR _WorkId=?);
UPDATE Package SET Flags=~8&Flags WHERE PackageFullName=? AND _WorkId=0;
UPDATE Package SET Flags=0x20000|Flags WHERE _PackageID=? AND (_WorkId=0 OR _WorkId=?);
UPDATE Package SET Flags=0x20000|Flags WHERE _PackageID=? AND _WorkId=0;
UPDATE Package SET Flags=0x80|Flags WHERE _PackageID=? AND (_WorkId=0 OR _WorkId=?);
UPDATE Package SET Flags=0x80|Flags WHERE _PackageID=? AND _WorkId=0;
UPDATE Package SET FLAGS=4096|FLAGS WHERE _PackageID=? AND (_WorkId=0 OR _WorkId=?);
UPDATE Package SET FLAGS=4096|FLAGS WHERE _PackageID=? AND _WorkId=0;
UPDATE Package SET FLAGS=8|FLAGS WHERE _PackageID=? AND (_WorkId=0 OR _WorkId=?);
UPDATE Package SET FLAGS=8|FLAGS WHERE _PackageID=? AND _WorkId=0;
UPDATE Package SET Flags=Flags&~0x400 WHERE (PackageType & 0x29!=0) AND _PackageID IN (SELECT _PackageID FROM PACKAGE WHERE PackageFamily IN (SELECT PackageFamily FROM Package WHERE (PackageType & 0x29!=0) AND _PackageID IN (SELECT Package FROM PackageUser WHERE _WorkId=?1 AND DeploymentState!=6 AND DeploymentState!=5)) AND _WorkId=0);
UPDATE Package SET Flags=Flags&~0x400 WHERE (PackageType&0x29!= 0) AND PackageFamily=? AND _WorkId=0;
UPDATE Package SET Flags2=((Flags2 & ~?) | ?) WHERE _PackageID=? AND (_WorkId=0 OR _WorkId=?);
UPDATE Package SET Flags2=((Flags2 & ~?) | ?) WHERE _PackageID=? AND _WorkId=0;
UPDATE Package SET InPlaceUpdateBaseline=? WHERE _PackageID=? AND (_WorkId=0 OR _WorkId=?);
UPDATE Package SET InPlaceUpdateBaseline=? WHERE _PackageID=? AND _WorkId=0;
UPDATE Package SET IsInbox=? WHERE _PackageID=? AND (_WorkId=0 OR _WorkId=?);
UPDATE Package SET IsInbox=? WHERE _PackageID=? AND _WorkId=0;
UPDATE Package SET OSMinVersion=?, OSMaxVersionTested=? WHERE _PackageID=? AND (_WorkId=0 OR _WorkId=?);
UPDATE Package SET OSMinVersion=?, OSMaxVersionTested=? WHERE _PackageID=? AND _WorkId=0;
UPDATE Package SET OSVersionWhenIndexed=? WHERE _PackageID=? AND (_WorkId=0 OR _WorkId=?);
UPDATE Package SET OSVersionWhenIndexed=? WHERE _PackageID=? AND _WorkId=0;
UPDATE Package SET SignatureOrigin=?, PackageOrigin=? WHERE _PackageID=? AND (_WorkId=0 OR _WorkId=?);
UPDATE Package SET SignatureOrigin=?, PackageOrigin=? WHERE _PackageID=? AND _WorkId=0;
UPDATE Package SET SourceBundle=? WHERE _PackageID=? AND (_WorkId=0 OR _WorkId=?);
UPDATE Package SET SupportedUsers=? WHERE _PackageID=? AND (_WorkId=0 OR _WorkId=?);
UPDATE Package SET SupportedUsers=? WHERE _PackageID=? AND _WorkId=0;
UPDATE Package SET TargetDeviceFamily=? WHERE _PackageID=? AND (_WorkId=0 OR _WorkId=?);
Update package status for user %ws and package %ws
UPDATE PackageAppInstaller SET _Revision=?, _WorkId=?, Package=?, AppInstaller=?, _Dictionary=? WHERE _PackageAppInstallerID=? AND _Revision=? AND (_WorkId=0 OR _WorkId=?);
UPDATE PackageAppInstaller SET _Revision=?, _WorkId=?, Package=?, AppInstaller=?, _Dictionary=? WHERE _PackageAppInstallerID=? AND _Revision=? AND _WorkId=0;
UPDATE PackageLocation SET _Revision=?, _WorkId=?, Package=?, Volume=?, InstalledLocation=?, MutableLink=?, MutableLocation=?, _Dictionary=? WHERE _PackageLocationID=? AND _Revision=? AND (_WorkId=0 OR _WorkId=?);
UPDATE PackageLocation SET _Revision=?, _WorkId=?, Package=?, Volume=?, InstalledLocation=?, MutableLink=?, MutableLocation=?, _Dictionary=? WHERE _PackageLocationID=? AND _Revision=? AND _WorkId=0;
UPDATE PackagePolicy SET _Revision=?, _WorkId=?, User=?, Package=?, Name=?, "Index"=?, ValueString=?, ValueNumber=?, _Dictionary=? WHERE _PackagePolicyID=? AND _Revision=? AND (_WorkId=0 OR _WorkId=?);
UPDATE PackagePolicy SET _Revision=?, _WorkId=?, User=?, Package=?, Name=?, "Index"=?, ValueString=?, ValueNumber=?, _Dictionary=? WHERE _PackagePolicyID=? AND _Revision=? AND _WorkId=0;
UPDATE PackageUser SET _Revision=?, _WorkId=?, Package=?, User=?, InstallTime=?, OSVersionWhenInstalled=?, WhenRestored=?, IsExplicitlyInstalled=?, DeploymentState=?, AppDataVolume=?, _Dictionary=? WHERE _PackageUserID=? AND _Revision=? AND (_WorkId=0 OR _WorkId=?);
UPDATE PackageUser SET _Revision=?, _WorkId=?, Package=?, User=?, InstallTime=?, OSVersionWhenInstalled=?, WhenRestored=?, IsExplicitlyInstalled=?, DeploymentState=?, AppDataVolume=?, _Dictionary=? WHERE _PackageUserID=? AND _Revision=? AND _WorkId=0;
UPDATE PackageUser SET AppDataVolume=? WHERE _PackageUserID=? AND (_WorkId=0 OR _WorkId=?);
UPDATE PackageUser SET AppDataVolume=? WHERE _PackageUserID=? AND _WorkId=0;
UPDATE PackageUser SET DeploymentState=? WHERE User=? AND _PackageUserID=? AND (_WorkId=0 OR _WorkId=?);
UPDATE PackageUser SET DeploymentState=? WHERE User=? AND _PackageUserID=? AND _WorkId=0;
UPDATE PackageUser SET DeploymentState=?1 WHERE DeploymentState IN ( SELECT pu.DeploymentState FROM PackageUser as pu INNER JOIN Package as p ON p._PackageID=pu.Package WHERE p.PackageFullName=?2  AND p.PackageType=1 AND pu.DeploymentState=?3 AND (pu._WorkId=0 OR pu._WorkId=?4) AND (p._WorkId=0 OR p._WorkId=?4) UNION ALL SELECT pu.DeploymentState FROM PackageUser as pu INNER JOIN Package as p ON p._PackageID=pu.Package WHERE p.SourceBundle IN (SELECT SourceBundle FROM Package WHERE PackageFullName=?2 AND PackageType=8) AND pu.DeploymentState=?3 AND (pu._WorkId=0 OR pu._WorkId=?4) AND (p._WorkId=0 OR p._WorkId=?4));
UPDATE PackageUser SET DeploymentState=?1 WHERE DeploymentState IN (SELECT pu.DeploymentState FROM PackageUser as pu INNER JOIN Package as p ON p._PackageID=pu.Package WHERE p.PackageFullName=?2 AND p.PackageType=1 AND pu.DeploymentState=?3 AND pu._WorkId=0 AND p._WorkId=0 UNION ALL SELECT pu.DeploymentState FROM PackageUser as pu INNER JOIN Package as p ON p._PackageID=pu.Package WHERE p.SourceBundle IN (SELECT SourceBundle FROM Package WHERE PackageFullName=?2 AND PackageType=8) AND pu.DeploymentState=?3 AND pu._WorkId=0 AND p._WorkId=0);
UPDATE PackageUser SET OSVersionWhenInstalled=? WHERE _PackageUserID=? AND (_WorkId=0 OR _WorkId=?);
UPDATE PackageUser SET OSVersionWhenInstalled=? WHERE _PackageUserID=? AND _WorkId=0;
UPDATE PrimaryTileUser SET _Revision=?, _WorkId=?, _Created=?, _Modified=?, User=?, ApplicationIdentity=?, State=?, TileUniqueId=?, _Dictionary=? WHERE _PrimaryTileUserID=? AND _Revision=? AND (_WorkId=0 OR _WorkId=?);
UPDATE PrimaryTileUser SET _Revision=?, _WorkId=?, _Created=?, _Modified=?, User=?, ApplicationIdentity=?, State=?, TileUniqueId=?, _Dictionary=? WHERE _PrimaryTileUserID=? AND _Revision=? AND _WorkId=0;
UPDATE Sequence SET LastValue=? WHERE Id=?;
UPDATE WowDependencyGraph SET _IsMarkedForDeletion=0 WHERE _WowDependencyGraphID=? AND _WorkId=? AND _WorkId<>0 AND _IsMarkedForDeletion<>0 AND _ShadowId<>0;
UPDATE WowDependencyGraph SET _IsMarkedForDeletion=1 WHERE _WowDependencyGraphID=? AND _IsMarkedForDeletion=0 AND _WorkId=?;
UPDATE WowDependencyGraph SET _Revision=?1, _WorkId=?2, _ShadowId=?3, _IsMarkedForDeletion=?4, User=?5, DependentPackage=?6, "Index"=?7, SupplierPackage=?8, DependencyType=?9, _Dictionary=?10 WHERE (_WowDependencyGraphID=?11 AND _Revision=?12) AND _IsMarkedForDeletion=0 AND _WorkId=?13;
UPDATE WowDependencyGraph SET SupplierPackage=? WHERE SupplierPackage=? AND "User"=? AND _WorkId=?;
UPDATE XboxPackage SET _Revision=?, _WorkId=?, Package=?, EditionId=?, BuildId=?, DeviceId=?, BuildVersion=?, ContentId=?, ProductId=?, MediaId=?, PackageSize=?, TitleId=?, PrimaryServiceConfigId=?, EraVersion=?, EscrowedKeyBlobId=?, _Dictionary=? WHERE _XboxPackageID=? AND _Revision=? AND (_WorkId=0 OR _WorkId=?);
UPDATE XboxPackage SET _Revision=?, _WorkId=?, Package=?, EditionId=?, BuildId=?, DeviceId=?, BuildVersion=?, ContentId=?, ProductId=?, MediaId=?, PackageSize=?, TitleId=?, PrimaryServiceConfigId=?, EraVersion=?, EscrowedKeyBlobId=?, _Dictionary=? WHERE _XboxPackageID=? AND _Revision=? AND _WorkId=0;
UPDATE_MIGRATION_TASK_DEH_KEYWORD
UpdateBlocksActivation
updateCost
UpdateCost
UpdateOperationBasedOnExistingState %ws %ws
UpdatePackageInRegistryStore
UpdatePackageStatus
UpdatePackageStatusForUser
UpdatePackageStatusForUserSid
UpdatePrimaryTileUser
UpdateProcThreadAttribute
UpdateSize
UpdateStatistics
UpdateUpgradePackageInRegistryStore
Upgrade
uPH;u
uPL+uPI;
UpstreamDependentPackageFullName
UpstreamDependentPackageKey
UrlCreateFromPathW
urlmon.dll
User %ls 0x%0x
User %ws
User %ws 0x%0x
User has no package installed and no stub can be installed, falling back to full app
user_version
user32.dll
USERDATAACCESS_EXTENSION_KEYWORD
UserDatabaseStatisticsLastUpdated
UserDomain
USERENV.dll
UserId
userId
UserId
userId
UserId
userId
UserName
USERS\
UserSid
UserSID
UserSid
userSid
UserSid
userSid
UserSid
userSid
UserSID
UserSid
userSid
UserSid
userSid
UserSid
UserSid %ws
userSidString
UseSystemMetadataPath
USVATAUAVAWH
USVWATAUAVAWH
USVWATAUAVH
USVWATAVAWH
USVWAUAVAWH
USVWAVH
UuidCreate
UuidFromStringW
uuidString
UuidToStringW
UVATAVAWH
UVAUAVAWH
UVAVH
UVWATAUAVAWH
UVWATAVH
UVWATAWH
UVWAUAVH
UVWAUAWH
UVWAVAWH
UWATAUAVH
UWATAUAWH
UWATAVAWH
UWAUAVAWH
UWAVH
UWAWH
uwE8whu
uWH9_
uX@8}Ht
uX@8uPtXI
uXH9_
uXM!0E3
uyD8\$ptnL
uYH98uTH
uzH9A
V,;V,r
V,L;FPs
v.I;H
v@8t$0uUH
v+H;X
v1L;w
V8I;^
VAILCentennialEnabled
ValidateFile
Value
Value %ls
ValueName
ValueValue
VarFileInfo
variant
variantKind
VATAUAVAWH
vD8t$ 
VD9d$8t/
vdH;s
vector<T> too long
vEH;]
Verbose
VerifyIfAppDataFolderAlreadyExists %u
VerifyIfSecureSystemAppDataFolderAlreadyExists
VerifyIfStateChangeNotificationExists
VerifyIfStateLockExists %u
VerifyIfStateRootsAlreadyExist %u
VerifyIfSystemAppDataFolderAlreadyExists %u
VerifyIfSystemAppDataKeyAlreadyExists
VerifyPackageFamilyName
VerifyPackageFullName
VerifyPackagePublisher
VerifyVersionInfoW
VerQueryValueW
VerSetConditionMask
version
Version
version="1.0" encoding="utf-8"
VetoReason
v-H;_
v-H;X
violet
VirtualAlloc
VirtualFree
VirtualProtect
VISUALELEMENTS_EXTENSION_KEYWORD
vKL;u
VMAP$
VMAP,
VMAP<
VMAP4
VMAPD
VMAPL
VolumeID
VolumeKey
VolumeMediaID
VolumeMountPoint
VolumeName
vonecore\admin\appmodel\packagemanager\server\setvolumestaterequest.cpp
vR+`4%P
vRuf2j
VS_VERSION_INFO
VuiAlm
VuiPron
vUM;w
VWATAUAVH
VWATAVAWH
VWAUAVAWH
VWAVH
VWAWH
vwR<3
vyTa?
w%7z$7
W*.t$
W3^+`x
WaitForMultipleObjects
WaitForRequestsInUseTimeout
WaitForSingleObject
WaitForSingleObjectEx
WaitForThreadpoolTimerCallbacks
WaitOnAddress
waitResult
WakeByAddressAll
WalkDirectoryTree %ls %u
WalkDirectoryTree %ls %u %u
WalkDirectoryTree %ls path %ls %u
WalkDirectoryTree %ws count %llu
WalkTreeCallbackForRepairHardlinkFileAcls failed to process file: %ws, isHardLinked: %u
Warning
WATAUAVAWH
WATAVH
WATAWH
WAVAWH
wcifs
wcifs Instance
wcifs Outer Instance
wcschr
wcscmp
wcsncmp
wcsrchr
wcsstr
WEB_ACCOUNT_PROVIDER_DEH_KEYWORD
WerRegisterCustomMetadata
WerReportAddFile
WerReportCloseHandle
WerReportCreate
WerReportSetParameter
WerReportSubmit
WEVT_TEMPLATE
wH2=R
wheat
white
whiteSmoke
wide310x150Logo
Wide310x150Logo
WideCharToMultiByte
WideLogo
wideLogoOnly
width320
width500
wilActivity
WilError_03
wilResult
WilStaging_02
win:Error
win:Info
win:Informational
win:ResponseTime
win:Start
win:Stop
win:Verbose
win:Warning
win32
Win32alacarteEnabled
win32App
win32-longpath
win32-noimpersonation
win8xappx
Windows.7067329
Windows.8828080
windows.activatableClass
windows.aowApp
windows.appExecutionAlias
windows.appExtension
windows.appExtensionHost
windows.appService
windows.appUriHandler
windows.autoPlayHandler
windows.backgroundTasks
windows.barcodeScannerProvider
windows.comInterface
windows.comServer
Windows.Core
Windows.Desktop
Windows.DesktopServer
windows.devicesflow_cw5n1h2txyewy
Windows.DockingController_cw5n1h2txyewy
windows.fileTypeAssociation
Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<Guid, OSIntegration.DEH.IComClassRegistration>>
Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<Guid, OSIntegration.DEH.IComInterfaceRegistration>>
Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<Guid, OSIntegration.DEH.IComProxyStubRegistration>>
Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<Guid, OSIntegration.DEH.IComTreatAsClassRegistration>>
Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<OSIntegration.DEH.Internal.ContractIdActivatableClassIdPair, Object>>
Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<String, Object>>
Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<String, OSIntegration.DEH.IComProgIdRegistration>>
Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<String, OSIntegration.DEH.IComTypeLibRegistration>>
Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<UInt32, OSIntegration.DEH.IComServerRegistration>>
Windows.Foundation.Collections.IIterator`1<String>
Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<Guid, OSIntegration.DEH.IComClassRegistration>>
Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<Guid, OSIntegration.DEH.IComInterfaceRegistration>>
Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<Guid, OSIntegration.DEH.IComProxyStubRegistration>>
Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<Guid, OSIntegration.DEH.IComTreatAsClassRegistration>>
Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<OSIntegration.DEH.Internal.ContractIdActivatableClassIdPair, Object>>
Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<String, Object>>
Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<String, OSIntegration.DEH.IComProgIdRegistration>>
Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<String, OSIntegration.DEH.IComTypeLibRegistration>>
Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<UInt32, OSIntegration.DEH.IComServerRegistration>>
Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Uri>
Windows.Foundation.Collections.IIterator`1<Windows.Internal.Security.SmartScreen.IAppxPackage>
Windows.Foundation.Collections.IKeyValuePair`2<Guid, OSIntegration.DEH.IComClassRegistration>
Windows.Foundation.Collections.IKeyValuePair`2<Guid, OSIntegration.DEH.IComInterfaceRegistration>
Windows.Foundation.Collections.IKeyValuePair`2<Guid, OSIntegration.DEH.IComProxyStubRegistration>
Windows.Foundation.Collections.IKeyValuePair`2<Guid, OSIntegration.DEH.IComTreatAsClassRegistration>
Windows.Foundation.Collections.IKeyValuePair`2<OSIntegration.DEH.Internal.ContractIdActivatableClassIdPair, Object>
Windows.Foundation.Collections.IKeyValuePair`2<String, Object>
Windows.Foundation.Collections.IKeyValuePair`2<String, OSIntegration.DEH.IComProgIdRegistration>
Windows.Foundation.Collections.IKeyValuePair`2<String, OSIntegration.DEH.IComTypeLibRegistration>
Windows.Foundation.Collections.IKeyValuePair`2<UInt32, OSIntegration.DEH.IComServerRegistration>
Windows.Foundation.Collections.IMap`2<Guid, OSIntegration.DEH.IComClassRegistration>
Windows.Foundation.Collections.IMap`2<Guid, OSIntegration.DEH.IComInterfaceRegistration>
Windows.Foundation.Collections.IMap`2<Guid, OSIntegration.DEH.IComProxyStubRegistration>
Windows.Foundation.Collections.IMap`2<Guid, OSIntegration.DEH.IComTreatAsClassRegistration>
Windows.Foundation.Collections.IMap`2<OSIntegration.DEH.Internal.ContractIdActivatableClassIdPair, Object>
Windows.Foundation.Collections.IMap`2<String, Object>
Windows.Foundation.Collections.IMap`2<String, OSIntegration.DEH.IComProgIdRegistration>
Windows.Foundation.Collections.IMap`2<String, OSIntegration.DEH.IComTypeLibRegistration>
Windows.Foundation.Collections.IMap`2<UInt32, OSIntegration.DEH.IComServerRegistration>
Windows.Foundation.Collections.IMapView`2<Guid, OSIntegration.DEH.IComClassRegistration>
Windows.Foundation.Collections.IMapView`2<Guid, OSIntegration.DEH.IComInterfaceRegistration>
Windows.Foundation.Collections.IMapView`2<Guid, OSIntegration.DEH.IComProxyStubRegistration>
Windows.Foundation.Collections.IMapView`2<Guid, OSIntegration.DEH.IComTreatAsClassRegistration>
Windows.Foundation.Collections.IMapView`2<OSIntegration.DEH.Internal.ContractIdActivatableClassIdPair, Object>
Windows.Foundation.Collections.IMapView`2<String, Object>
Windows.Foundation.Collections.IMapView`2<String, OSIntegration.DEH.IComProgIdRegistration>
Windows.Foundation.Collections.IMapView`2<String, OSIntegration.DEH.IComTypeLibRegistration>
Windows.Foundation.Collections.IMapView`2<UInt32, OSIntegration.DEH.IComServerRegistration>
Windows.Foundation.Collections.IVector`1<String>
Windows.Foundation.Collections.IVector`1<Windows.Foundation.Uri>
Windows.Foundation.Collections.IVector`1<Windows.Internal.Security.SmartScreen.IAppxPackage>
Windows.Foundation.Collections.IVectorView`1<String>
Windows.Foundation.Collections.IVectorView`1<Windows.Foundation.Uri>
Windows.Foundation.Collections.IVectorView`1<Windows.Internal.Security.SmartScreen.IAppxPackage>
Windows.Foundation.Collections.PropertySet
Windows.Foundation.PropertyValue
Windows.Foundation.Uri
Windows.FullTrustApplication
Windows.Holographic
windows.hostRuntime
windows.immersivecontrolpanel_cw5n1h2txyewy
Windows.Internal.Security.SmartScreen.AppReputationService
Windows.Internal.Security.SmartScreen.IAppxPackage
Windows.Internal.Security.SmartScreen.IWindow
Windows.Internal.SecurityMitigationsBroker
Windows.Internal.StateRepository.Management.RepositoryManager
Windows.Internal.StateRepository.Package
Windows.Internal.StateRepository.PrimaryTileUserNotificationChannel
Windows.IoT
Windows.IoTHeadless
windows.localExperiencePack
Windows.Management.Deployment.Internal.PackageManagerInternal
Windows.Management.Deployment.PackageManager
Windows.MiracastView_cw5n1h2txyewy
Windows.Mobile
Windows.MtcUvc_cw5n1h2txyewy
windows.mutablePackageDirectories
Windows.PartialTrustApplication
windows.preInstalledConfigTask
Windows.PrintDialog_cw5n1h2txyewy
Windows.PrintDialog3D_cw5n1h2txyewy
windows.protocol
windows.publisherCacheFolders
windows.searchFilterHandler
windows.searchProtocolHandler
Windows.Server
windows.service
Windows.Team
Windows.Universal
windows.updateTask
windows.webAccountProvider
Windows.Windows8x
Windows.Xbox
Windows.XboxERA
Windows.XboxSRA
windowsApp
WindowsApps
WindowsCompareStringOrdinal
WindowsConcatString
WindowsCreateString
WindowsCreateStringReference
WindowsDeleteString
WindowsDeleteStringBuffer
WindowsDuplicateString
WindowsGetStringLen
WindowsGetStringRawBuffer
WindowsPreallocateStringBuffer
WindowsPromoteStringBuffer
WindowsRuntimeAccess
WindowsStringHasEmbeddedNull
WindowsUpdate*
WINERROR
wintrust.dll
WINTRUST.dll
WintrustGetRegPolicyFlags
WinVerifyTrust
WITH BundleInfo(_PackageID, PackageType, BundleId, _PackageUserID, UserId, DeploymentState) AS(SELECT p._PackageID, p.PackageType, p.SourceBundle AS BundleId, pu._PackageUserID, pu.User, pu.DeploymentState FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE p.SourceBundle>0)INSERT OR IGNORE INTO PackageUser  (_Revision, _WorkId, Package, User, InstallTime, WhenRestored, IsExplicitlyInstalled, DeploymentState, AppDataVolume, _Dictionary)SELECT 1, 0, p._PackageID, UserId, now(), 0, 1, DeploymentState, 0, NULL  FROM Package AS p INNER JOIN (   SELECT BundleId, UserId, DeploymentState FROM BundleInfo AS t    WHERE BundleId NOT IN (        SELECT b.BundleId FROM BundleInfo AS b         WHERE b.PackageType=8           AND b.UserId=t.UserId       )   ) AS b ON b.BundleId=p.SourceBundle AND p.PackageType=8;
WITH BundleInfo(_PackageID, PackageType, BundleId, PackageUserId, UserId, DeploymentState) AS(SELECT p._PackageID, p.PackageType, p.SourceBundle AS BundleId, pu._PackageUserID, pu.User, pu.DeploymentState FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE p.SourceBundle>0)DELETE FROM PackageUser WHERE _PackageUserID IN (    SELECT PackageUserId FROM BundleInfo AS t     WHERE t.PackageType=8       AND NOT EXISTS(            SELECT 1 FROM Package AS p             INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID             WHERE pu.User=t.UserId AND p.SourceBundle=t.BundleId AND p.PackageType<>8           ));
Wldp.dll
WldpIsAppApprovedByPolicy
WMIPROVIDER_EXTENSION_KEYWORD
WofShouldCompressBinaries
wofutil.dll
Wonecore\admin\appmodel\common\packagestatus.cpp
wonecore\private\com\inc\deployment\RegistrationStoreApiTypes.hpp
workId
WorkId
workid
workId
WorkId
workId
WorkId
WowDependencyGraph
wp8xappx
WPDeveloperAppAllowed
WriteFile
WritePrimaryTiles
WriteStateContainerValue
WriteStateContainerValue %ls %ls %u
WriteStateContainerValue %ls (empty) %u
WTSEnumerateSessionsW
WTSFreeMemory
WTSQuerySessionInformationW
WTSQueryUserToken
WWZ!&onecore\admin\appmodel\packagemanager\server\iasyncrequest.cpp
x  u`3
x ATAUAVAW3
x ATAVAWH
x AUAVAWD
x AVAWI
x AVH
x AW3
x AWH
x UATAUAVAWH
x UATAVH
x UAVAWH
X UVWATAUAVAWH
X"$ ,
x"D8d$pt
x%@8uwu
x&LXJ$
x(D8m@t+E
x*D8ewt$
X*V&N*
x.D8m
x;D8uw
x?@8uH
x?D8eHt
x_^[]
X_^][
x`9t$0uBL
x+D8m@t.M
x38\$@t-A
x3H;s
x6":"
x86a64
x8D8eHu
x'9\$@u
XA_A^_^[]
xA_A^_^[]
xA_A^A]A\_^[]
XA_A^A]A\_^[]
xA_A^A]A\_^[]
XA_A^A]A\_^][
xAD9mHt;H
XapState
Xbox.DisplayTroubleshooter_cw5n1h2txyewy
Xbox.KinectTuner_cw5n1h2txyewy
xbox.live
xbox.live.
Xbox.NetworkTroubleshooter_cw5n1h2txyewy
Xbox.Oobe_cw5n1h2txyewy
Xbox.SystemUpdate_cw5n1h2txyewy
Xbox\PackageRegistration\
Xbox\UWAKeyIds\
XboxPackage
XbVS>
xDD8}
xDH;_
xeD8t$ u
xeI9](t_
xF8\$0u
xFD8ewu@D
xG8\$0u
XhH;w0r
xjD8|$ u
xl tz
xMD8|$P
xmlns:m="http://schemas.microsoft.com/appx/2013/appxprovisionpackage"
xmM;l$@sfI
xpD8k<t
xpM;l$ siI
xqD8e@
xqI;_
xrD8t$ u
xu@8uHufH
x-updateagent://%s:%s:%I64u
xWD8ugtQH
x-windowsupdate
xY8]g
y"D8sRu
y$RSTS
Y\f9(t
y<FQ1
Y00Hk;D
Yd+=@
yE9>taL9
yellow
yellowGreen
YfotO
yonecore\admin\appmodel\stagingmanager\src\appxdeltahandler.cpp
yPL9g0w
yvGA3
Z.^(V"j
z/nqGl
z@]<R
Z+$|$E
ZHH!|$ L
ZJ>.-
zKQw^
zlbjJ
zltXL
zmmV6
zRJCo
ZwFlushBuffersFileEx
zZtwG
