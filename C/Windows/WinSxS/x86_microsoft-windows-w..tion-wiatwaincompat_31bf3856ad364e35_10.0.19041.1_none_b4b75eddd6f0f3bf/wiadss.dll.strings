 Microsoft Corporation. All rights reserved.
 Operating System
 PWj 
 QWj 
 Windows
!This program cannot be run in DOS mode.
%hs!%p: 
%hs(%d) tid(%x) %08X %ws
%hs(%u)\%hs!%p: 
&PWSV
(%d) Private Capability ID reported = %x
(caller: %p) 
(Transitioning From TWAIN STATE %d to TWAIN STATE %d)
.00cfg
.CRT$XCA
.CRT$XCU
.CRT$XCZ
.CRT$XIA
.CRT$XIAA
.CRT$XIZ
.data
.data$brc
.edata
.gfids
.giats
.idata
.idata$2
.idata$3
.idata$4
.idata$5
.idata$6
.jRich
.rdata
.rdata$brc
.rdata$sxdata
.rdata$zETW0
.rdata$zETW1
.rdata$zETW2
.rdata$zETW9
.rdata$zzzdbg
.rsrc$01
.rsrc$02
.text
.text$di
.text$mn
.text$yd
.xdata$x
:#:0:
:%;,;9;M;W;h;
:,:;:M:a:s:
:.:;:D:M:V:_:z:
:.:I:e:
:=;F;P;Y;c;l;
:1;>;w;
:2:I:
:3:D:h:w:
:8:B:V:d:x:
:e;y;
; ;(;,;4;8;@;D;L;P;X;\;d;h;
;";5;O;U;
;%<J<
;^;r;
;3;@;`;m;};
;D;e;
;G;o;
;L<]<
;N$w=
? ?.?M?w?
?!?@?^?l?
?$?-?}?
?.?N?n?
?0?8?B?g?
?0P0z0
?1?>?O?i?
?3?V?
?O?i?
@.reloc
@.rsrc
@SVWh
@VhtV
@VhXV
[%hs(%hs)]
[%hs]
[%ws] Sent to TWAIN Source, DG = %X, DT = %X, MSG = %X
_^[Y]
__dllonexit
_amsg_exit
_callnewh
_except_handler4_common
_ftol2_sse
_initterm
_lock
_onexit
_purecall
_strcmpi
_unlock
_vsnprintf
_vsnwprintf
_WhPs
_XcptFilter
`.data
|$HWj@
|$pu6A;
|SVWh
~@9~4t_9~8tZ
~09~4t
~49~8t
~89~<t
+0^0g0
< <$<(<,<0<4<8<<<Q<q<
<!<_<q<
<"=2=
<#<*<8<
<&=0=A=G=K=P=V=Z=e=v=
<;<C<O<\<l<v<
<;<H<g<
<?<P<z<
<-<<<P<^<r<
<1<=<O<o<}<
<8<S<n<
<Shp8
<SVWh
<SVWh<v
<SVWhH5
<SVWhHI
<SVWhl'
<Vhlx
<Vhx5
<VWh8Y
=!=_=s=
="=D=c=
=$>7>H>[>i>3?D?X?
=&=7=E=O=\=
=(=3=:=G=b=k=r=y=
=/=C=d=u=
=/>;>N>
=:=H=
=<=T=x=
== Private TWAIN_CAPABILITY data Header ==
== Processing MSG_GET, MSG_GETCURRENT, or MSG_GETDEFAULT Capability Message ==
== Processing MSG_SET or MSG_RESET Capability Message ==
== Returned TWAIN_CAPABILITY data Header from WIA device ==
===============================================================================
='>W>e>u>
=8=|=
=N=b=}=
> >4>S>r>
>,>F>O>y>
>:?L?{?
><>b>
><>y>
>>>Y>h>
>0>E>^>r>
>7>K>o>
>C>L>e>
>W>h>
0 0$0(0,0004080<0@0D0H0L0P0T0X0\0`0d0h0l0p0t0x0|0
0 1`1
0"0g0
0*0r0
001H1R1p1
030D0V0g0y0
040904B0
080R0g0t0
0A0l0
0A1q1
0e0k0
0n0~0
0VVVV
1 1$1(1,1014181<1@1D1H1L1P1T1X1\1`1d1h1l1p1t1x1|1
1 141`1
1!1;1N1S1Y1m1r1~1
1"2L2p2
1$1K1_1
1)1R1m1
1,2F2R2
1.141\1
1/1P1
1:2G2X2_2l2
1?2J2V2^2m2u2~2
10.0.19041.1
10.0.19041.1 (WinBuild.160101.0800)
1-2O2X2^2o2
141I1P1V1_1p1
1Phx,
2 2$2(2,2024282<2@2D2H2L2P2T2X2\2`2d2h2l2p2t2x2|2
2!252l2v2
2#2'2+2/23272;2?2C2G2K2X2n2
2%3E3Y3
2(2:2L2
2)2O2V2}3
2/2A2f2
2_2|2
2+2Z2
203M3
2-2?2f2t2
2'2>2c2
2'232U2l2
26 June 2000
2k3}3
3 3$3(3,3034383<3@3D3H3L3P3T3X3\3`3d3h3l3p3t3x3|3
3$3(363R3V3\3`3f3j3r3v3
3&4<4N4z4
3)3]3o3
3)383I3V3g3t3
3)3A3J3X3b3
3,464Q4
3<3S3b3{3
324;4q4
3b3q3
3I3y3
3R3p3
3U4n4
4%4,4
4(5:5N5y5
4(5:6
4)4M4X4j4
4,4<4^4k4s4{4
4+4F4L4
414P4p4w4
425F5
464I4l4
475U5_5s5
4B4N4b4m4
4H4L4P4T4X4\4`4d4p4
5 6/6<6X6u6
5!505?5M5
5"565D5X5f5z5
5%6;6}6
5%6U6_6
5&5,52585>5D5K5R5Y5`5g5n5u5}5
5)5U5g5
5<5J5r5
5-595E5M5n5
5'6.6?6k6}6
596S6
5I6t6
5J5`5
5O6j6~6
6 6$6(6,6064686o6}6
6 6H6
6!626F6W6d6u6
6&7I7`7n7
6)7=7L7]7l7}7
6.6F6
6+696J6R6h6p6
676U6
6A6~6
6C7a7e7i7m7q7u7y7}7
6c7p7
6F6T6
6N6\6l6
7 8@8
7#8+81868?8W8_8e8
7%7@7[7v7
7%777D7S7
7(737L7W7`7i7o7t7
7*787w7
7*797]7u7
7,7@7
7,8U8
7;8e8u8
7>7]7y7
718\8
7E7c7
7x7}7
8"838B8T8h8
8$838<8F8O8Y8b8y8
8$9)9.959:9A9F9M9R9Y9^9e9j9q9v9
8%878T8Z8`8|8
8)8=8J8^8k8
8.8;8M8Z8l8y8
8.9D9U9l9
808G8n8x8
868S8z8
8E9|9
8G8t8
8I8O8
8N9x9
8SVWh
8SWh48
8Vhx&
8VWh\Y
8VWhDV
8VWhP'
9"9r9w9
9$:6:{:
9%9/9<9_9y9
9-:3:9:?:R:j:o:
9~(s,j
9<:O:
979]9{9
9-9D9X9o9
9B:I:_:f:}:
9I9i9
9N:X:
AcquireSRWLockExclusive
AcquireSRWLockShared
ADVAPI32.dll
Application sent this Enumeration to be set:
Application wanted to set (%d) as the value.
AQWWWW
BasicInfo.FeederCaps  = %d
BasicInfo.Size        = %d
BasicInfo.xBedSize    = %d
BasicInfo.xOpticalRes = %d
BasicInfo.yBedSize    = %d
BasicInfo.yOpticalRes = %d
BitsPerPixel    = %d
BitsPerSample   = [%d],[%d],[%d],[%d],[%d],[%d],[%d],[%d]
Bj Y+
callContext
CallContext:[%hs] 
CCap::Debug_DumpEnumerationValues
CCap::Debug_DumpEnumerationValues(), Enumeration Value debug dump
CCap::GetCurrent
CCap::GetCurrent(), Extracting %d index from TWON_ENUMERATION
CCap::Set
CCap::Set(TW_CAPABILITY *ptwCap) -> TWON_ENUMERATION
CCap::Set(TW_CAPABILITY *ptwCap) -> TWON_ONEVALUE
CCap::Set(TW_CAPABILITY *ptwCap) -> TWON_RANGE
CloseFindContext
CloseFindContext - CoUnIntialize()
CloseHandle
CloseThreadpoolTimer
CoCreateInstance
CoInitialize
COMCTL32.dll
CompanyName
comparing Device ID [in] = %ws, to Device ID [read] = %ws
Compression     = %d
Container data was successfully copied, we are processing a MSG_SET
Copying %d into m_pImage (m_hImage = 0x%X, m_pImage = 0x%X) buffer
CoRegisterMessageFilter
CoTaskMemAlloc
CoTaskMemFree
could not allocate memory for private capability array of %d items (%d bytes - this includes padding)
could not allocate memory for private capability IN buffer
could not allocate memory for private capability OUT buffer
Could not CoCreateInstance for IID_IWiaProgressDialog (latest operating system version)
could not copy private capability buffer into TWAIN container data
could not copy TWAIN container data into private capability IN buffer
Could not find Item %d!
Could not get common progress dialog from shared UI, CoCreateInstance(CLSID_WiaDefaultUi) failed hr = %x
could not get TWAIN capability from TWAIN message
Could not lock down m_hImage memory block
Couldn't find the CCap object for CAP ID %x in TWAIN Compat layer CAP list, try WIA driver's private TWAIN cap list
CoUninitialize
CProgressDlg::DoModeless
CreateFileA
CreateMutexExW
CreateSemaphoreExW
CreateThreadpoolTimer
currentContextId
currentContextMessage
currentContextName
CurrentIndex = %d
CWiaCameraDS::EnableDS
CWiaCameraDS::EnableDS(), ARRAY MODE
CWiaCameraDS::EnableDS(), could not find CAP_XFERCOUNT in supported CAP list
CWiaCameraDS::EnableDS(), RANGE MODE
CWiaCameraDS::EnableDS(), TWAIN UI MODE
CWiaCameraDS::EnableDS(), TWAIN UI-LESS MODE
CWiaCameraDS::OnImageInfoMsg
CWiaCameraDS::OnImageInfoMsg(), could not get CAP_THUMBNAILSENABLED capabilty settings
CWiaCameraDS::OnImageInfoMsg(), Reported Image Information from data source
CWiaCameraDS::OnImageInfoMsg(), Reporting Thumbnail image information
CWiaCameraDS::OnPendingXfersMsg
CWiaCameraDS::OnPendingXfersMsg(), MSG_ENDXFER, %d (more images may be ready to transfer)
CWiaCameraDS::OnPendingXfersMsg(), MSG_ENDXFER, 0 (no more images left to transfer)
CWiaCameraDS::OnPendingXfersMsg(), MSG_ENDXFER, next image index  to acquire = %d
CWiaCameraDS::OnPendingXfersMsg(), MSG_ENDXFER, we are over our allowed ARRAY index
CWiaCameraDS::OnPendingXfersMsg(), MSG_ENDXFER, we are over our allowed RANGE index
CWiaCameraDS::OnPendingXfersMsg(), MSG_GET returning %d
CWiaCameraDS::SetArrayOfImageIndexes
CWiaCameraDS::SetArrayOfImageIndexes(), could not allocate image index array
CWiaCameraDS::SetArrayOfImageIndexes(), could not assign TW_ARRAY pointer to TW_UINT32 pointer
CWiaCameraDS::SetArrayOfImageIndexes(), could not LOCK the array container for write access
CWiaCameraDS::SetArrayOfImageIndexes(), image index copied into index array = %d
CWiaCameraDS::SetArrayOfImageIndexes(), invalid image index container was sent to data source.
CWiaCameraDS::SetArrayOfImageIndexes(), number of selected images to transfer = %d
CWiaCameraDS::SetCapability
CWiaCameraDS::SetCapability(), setting ICAP_IMAGEDATASET to a TW_ARRAY
CWiaCameraDS::SetCapability(), setting ICAP_IMAGEDATASET to a TW_RANGE
CWiaCameraDS::SetCapability(), setting ICAP_IMAGEDATASET to a TWON_ONEVALUE
CWiaCameraDS::SetCapability(), setting ICAP_IMAGEDATASET unknown container type (%d)
CWiaCameraDS::SetRangeOfImageIndexes
CWiaCameraDS::SetRangeOfImageIndexes(), could not assign TW_RANGE pointer to TW_RANGE pointer
CWiaCameraDS::SetRangeOfImageIndexes(), could not LOCK the range container for read access
CWiaCameraDS::SetRangeOfImageIndexes(), invalid image index container was sent to data source.
CWiaCameraDS::SetRangeOfImageIndexes(), Set to the following Range Values
CWiaDataCallback::BandedDataCallback
CWiaDataCallback::BandedDataCallback(), adjusting MemBlockSize to %d
CWiaDataCallback::BandedDataCallback(), IT_MSG_DATA_HEADER Reports
CWiaDataCallback::BandedDataCallback(), The transfer failed
CWiaDataCallback::BandedDataCallback(), The user pressed cancel
CWiaDataCallback::GetImage
CWiaDataCallback::GetImage(), Returned 0x%X (HANDLE pointer)
CWiaDataCallback::Initialize
CWiaDataSrc::AllocatePrivateCapBuffer()
CWiaDataSrc::CloseDS()
CWiaDataSrc::CopyContainerToPrivateCapBuffer()
CWiaDataSrc::CopyPrivateCapBufferToContainer()
CWiaDataSrc::CreateCapList()
CWiaDataSrc::DestroyCapList()
CWiaDataSrc::DisableDS()
CWiaDataSrc::DSEntry
CWiaDataSrc::DSError()
CWiaDataSrc::GetBitDepths
CWiaDataSrc::GetBitDepths(), failed to read WIA_IPS_DATATYPE attributes
CWiaDataSrc::GetBitDepths(), failed to set IWiaItem for property reading
CWiaDataSrc::GetBitDepths(), ReadPropertyLong(WIA_IPA_DATATYPE) failed
CWiaDataSrc::GetBitDepths(), ReadPropertyLong(WIA_IPA_DEPTH) failed
CWiaDataSrc::GetBitDepths(), WritePropertyLong(WIA_IPA_DATATYPE) failed
CWiaDataSrc::GetCachedImage()
CWiaDataSrc::GetCachedImage(), failed to return cached data
CWiaDataSrc::GetCommonDefaultSettings()
CWiaDataSrc::GetCommonSettings
CWiaDataSrc::GetCommonSettings()
CWiaDataSrc::GetCommonSettings(), failed to set IWiaItem for property writing
CWiaDataSrc::GetCommonSettings(), failed to set TYMED_CALLBACK as a default setting
CWiaDataSrc::GetCommonSettings(), failed to set WiaImgFmt_MEMORYBMP as a default setting
CWiaDataSrc::GetCommonSettings(), GetBitDepths() failed
CWiaDataSrc::GetCommonSettings(), GetCompressionTypes() failed
CWiaDataSrc::GetCommonSettings(), GetImageFileFormats()
CWiaDataSrc::GetCommonSettings(), GetPixelTypes() failed
CWiaDataSrc::GetImageFileFormats
CWiaDataSrc::GetImageFileFormats(), failed to set IWiaItem for property reading
CWiaDataSrc::GetImageFileFormats(), pIWiaDataTransfer->idtEnumWIA_FORMAT_INFO() failed to enumerate supported file formats
CWiaDataSrc::GetImageFileFormats(), QueryInterface(IID_IWiaDataTransfer) failed
CWiaDataSrc::GetPixelTypes
CWiaDataSrc::GetPixelTypes(), failed to allocate Pixel Type Array Memory
CWiaDataSrc::GetPixelTypes(), failed to read WIA_IPS_DATATYPE attributes
CWiaDataSrc::GetPixelTypes(), failed to read WIA_IPS_DATATYPE current value
CWiaDataSrc::GetPixelTypes(), failed to set IWiaItem for property reading
CWiaDataSrc::GetPrivateSupportedCapsFromWIADevice
CWiaDataSrc::GetPrivateSupportedCapsFromWIADevice()
CWiaDataSrc::GetPrivateSupportedCapsFromWIADevice(), m_pDevice is NULL
CWiaDataSrc::GetPrivateSupportedCapsFromWIADevice(), ppCapArray is NULL
CWiaDataSrc::IWiaDataSrc
CWiaDataSrc::IWiaDataSrc(), GetDeviceDesc/Name failed
CWiaDataSrc::IWiaDataSrc(), GetDeviceVendorName failed
CWiaDataSrc::IWiaDataSrc(), WIA Device object Initialize failed
CWiaDataSrc::NotifyCloseReq
CWiaDataSrc::NotifyCloseReq()
CWiaDataSrc::NotifyCloseReq(), could not notify application for MSG_CLOSEDSREQ
CWiaDataSrc::NotifyCloseReq(), MSG_CLOSEDSREQ is sent to application
CWiaDataSrc::NotifyXferReady
CWiaDataSrc::NotifyXferReady()
CWiaDataSrc::NotifyXferReady(), could not notify application for MSG_XFERREADY
CWiaDataSrc::NotifyXferReady(), MSG_XFERREADY is sent to application
CWiaDataSrc::OnCapabilityMsg
CWiaDataSrc::OnCapabilityMsg()
CWiaDataSrc::OnIdentityMsg
CWiaDataSrc::OnIdentityMsg()
CWiaDataSrc::OnIdentityMsg(), Reported TW_IDENTITY from data source
CWiaDataSrc::OnImageFileXferMsg
CWiaDataSrc::OnImageFileXferMsg()
CWiaDataSrc::OnImageFileXferMsg(), TransferToFile() failed
CWiaDataSrc::OnImageInfoMsg
CWiaDataSrc::OnImageInfoMsg()
CWiaDataSrc::OnImageInfoMsg(), new height = %d
CWiaDataSrc::OnImageInfoMsg(), no cached height available, defaulting to -1 (ICAP_UNDEFINEDIMAGESIZE support only)
CWiaDataSrc::OnImageInfoMsg(), Possible unknown length device detected..checking cached height value
CWiaDataSrc::OnImageInfoMsg(), Reported Image Information from data source
CWiaDataSrc::OnImageMemXferMsg
CWiaDataSrc::OnImageMemXferMsg()
CWiaDataSrc::OnImageMemXferMsg(), Transferring (%d) of (%d) total lines of image data.
CWiaDataSrc::OnImageNativeXferMsg
CWiaDataSrc::OnImageNativeXferMsg()
CWiaDataSrc::OnImageNativeXferMsg(), TransferToDIB() failed
CWiaDataSrc::OnPalette8Msg()
CWiaDataSrc::OnPrivateCapabilityMsg
CWiaDataSrc::OnPrivateCapabilityMsg()
CWiaDataSrc::OnSetupFileXferMsg()
CWiaDataSrc::OnSetupMemXferMsg()
CWiaDataSrc::OnStatusMsg()
CWiaDataSrc::OnUserInterfaceMsg()
CWiaDataSrc::OnXferGroupMsg()
CWiaDataSrc::OpenDS()
CWiaDataSrc::ReadTwainRegistryDWORDValue
CWiaDataSrc::ReadTwainRegistryDWORDValue()
CWiaDataSrc::ReadTwainRegistryDWORDValue(), could not open Root TWAIN Registry Key
CWiaDataSrc::ReadTwainRegistryDWORDValue(), Created Root Twain Registry Key
CWiaDataSrc::ReadTwainRegistryDWORDValue(), Error Reading %ws Registry Key Value
CWiaDataSrc::ReadTwainRegistryDWORDValue(), Reading %ws Registry Key Value = %d
CWiaDataSrc::ReadTwainRegistryDWORDValue(), Writing Default Value for %ws Registry Key Value = %d
CWiaDataSrc::ResetMemXfer()
CWiaDataSrc::SetCapability()
CWiaDataSrc::SetCommonSettings
CWiaDataSrc::SetCommonSettings(), An unsupported ICAP_PIXELTYPE (%d) was sent to this data source
CWiaDataSrc::SetCommonSettings(), data source is not setting CAPID = %x to WIA device (it is not needed)
CWiaDataSrc::SetCommonSettings(), failed to set IWiaItem for property reading
CWiaDataSrc::SetCommonSettings(), Setting WIA_IPA_BITDEPTH to %d
CWiaDataSrc::SetCommonSettings(), Setting WIA_IPA_BITDEPTH to %d failed
CWiaDataSrc::SetCommonSettings(), Setting WIA_IPA_COMPRESSION to %d failed
CWiaDataSrc::SetCommonSettings(), Setting WIA_IPA_COMPRESSION to WIA_COMPRESSION_BI_RLE4
CWiaDataSrc::SetCommonSettings(), Setting WIA_IPA_COMPRESSION to WIA_COMPRESSION_BI_RLE8
CWiaDataSrc::SetCommonSettings(), Setting WIA_IPA_COMPRESSION to WIA_COMPRESSION_G3
CWiaDataSrc::SetCommonSettings(), Setting WIA_IPA_COMPRESSION to WIA_COMPRESSION_G4
CWiaDataSrc::SetCommonSettings(), Setting WIA_IPA_COMPRESSION to WIA_COMPRESSION_JPEG
CWiaDataSrc::SetCommonSettings(), Setting WIA_IPA_COMPRESSION to WIA_COMPRESSION_NONE
CWiaDataSrc::SetCommonSettings(), Setting WIA_IPA_DATATYPE to WIA_DATA_COLOR
CWiaDataSrc::SetCommonSettings(), Setting WIA_IPA_DATATYPE to WIA_DATA_COLOR failed
CWiaDataSrc::SetCommonSettings(), Setting WIA_IPA_DATATYPE to WIA_DATA_GRAYSCALE
CWiaDataSrc::SetCommonSettings(), Setting WIA_IPA_DATATYPE to WIA_DATA_GRAYSCALE failed
CWiaDataSrc::SetCommonSettings(), Setting WIA_IPA_DATATYPE to WIA_DATA_THRESHOLD
CWiaDataSrc::SetCommonSettings(), Setting WIA_IPA_DATATYPE to WIA_DATA_THRESHOLD failed
CWiaDataSrc::SetCommonSettings(), Setting WIA_IPA_FORMAT to %d failed
CWiaDataSrc::SetCommonSettings(), Setting WIA_IPA_FORMAT to WiaImgFmt_BMP
CWiaDataSrc::SetCommonSettings(), Setting WIA_IPA_FORMAT to WiaImgFmt_EXIF
CWiaDataSrc::SetCommonSettings(), Setting WIA_IPA_FORMAT to WiaImgFmt_FLASHPIX
CWiaDataSrc::SetCommonSettings(), Setting WIA_IPA_FORMAT to WiaImgFmt_JPEG
CWiaDataSrc::SetCommonSettings(), Setting WIA_IPA_FORMAT to WiaImgFmt_PICT
CWiaDataSrc::SetCommonSettings(), Setting WIA_IPA_FORMAT to WiaImgFmt_PNG
CWiaDataSrc::SetCommonSettings(), Setting WIA_IPA_FORMAT to WiaImgFmt_TIFF
CWiaDataSrc::SetCommonSettings(), Setting WIA_IPA_TYMED to %d failed
CWiaDataSrc::SetCommonSettings(), Setting WIA_IPA_TYMED to TYMED_FILE
CWiaDataSrc::SetCommonSettings(), Setting WIA_IPA_TYMED to TYMED_MULTIPAGE_FILE
CWiaDataSrc::SetCommonSettings(), Settings were successfully sent to WIA device
CWiaDataSrc::SetCommonSettings(), Settings were unsuccessfully sent to WIA device
CWiaDataSrc::SetCommonSettings(ICAP_BITDEPTH)
CWiaDataSrc::SetCommonSettings(ICAP_COMPRESSION)
CWiaDataSrc::SetCommonSettings(ICAP_IMAGEFILEFORMAT)
CWiaDataSrc::SetCommonSettings(ICAP_PIXELTYPE)
CWiaDataSrc::SetTWAINState
CWiaDataSrc::TransferToDIB
CWiaDataSrc::TransferToDIB()
CWiaDataSrc::TransferToDIB(), WIA_ERROR_PAPER_EMPTY returned from source.
CWiaDataSrc::TransferToFile
CWiaDataSrc::TransferToFile()
CWiaDataSrc::TransferToFile(), WIA_ERROR_PAPER_EMPTY returned from source.
CWiaDataSrc::TransferToMemory
CWiaDataSrc::TransferToMemory()
CWiaDataSrc::TransferToMemory(), failed to return data
CWiaDataSrc::TransferToMemory(), WIA_ERROR_PAPER_EMPTY returned from source.
CWiaDataSrc::TransferToThumbnail()
CWiaDevice::AcquireImages
CWiaDevice::AcquireImages()
CWiaDevice::AcquireImages(), called for UI mode Initialization
CWiaDevice::AcquireImages(), called for UI-LESS mode Initialization
CWiaDevice::AcquireImages(),Number of images from DeviceDlg to Transfer = %d
CWiaDevice::Close()
CWiaDevice::CollectImageItems()
CWiaDevice::EnumAcquiredImages()
CWiaDevice::FreeAcquiredImages
CWiaDevice::FreeAcquiredImages()
CWiaDevice::FreeAcquiredImages(), Finished Freeing IWiaItem (%d)
CWiaDevice::FreeAcquiredImages(), Free IWiaItem (%d)
CWiaDevice::FreeAcquiredImages(), Freeing %d IWiaItems
CWiaDevice::GetAcquiredImageList()
CWiaDevice::GetBasicScannerInfo
CWiaDevice::GetBasicScannerInfo(), failed to read WIA_DPS_DOCUMENT_HANDLING_CAPABILITIES
CWiaDevice::GetBasicScannerInfo(), failed to read WIA_DPS_HORIZONTAL_BED_SIZE
CWiaDevice::GetBasicScannerInfo(), failed to read WIA_DPS_HORIZONTAL_SHEET_FEED_SIZE
CWiaDevice::GetBasicScannerInfo(), failed to read WIA_DPS_OPTICAL_XRES
CWiaDevice::GetBasicScannerInfo(), failed to read WIA_DPS_OPTICAL_YRES
CWiaDevice::GetBasicScannerInfo(), failed to read WIA_DPS_VERTICAL_BED_SIZE
CWiaDevice::GetBasicScannerInfo(), failed to read WIA_DPS_VERTICAL_SHEET_FEED_SIZE
CWiaDevice::GetBasicScannerInfo(), failed to set IWiaItem for property reading
CWiaDevice::GetBasicScannerInfo(), WIA_DPS_HORIZONTAL_BED_SIZE property not found
CWiaDevice::GetBasicScannerInfo(), WIA_DPS_VERTICAL_BED_SIZE property not found
CWiaDevice::GetDeviceDesc()
CWiaDevice::GetDeviceName()
CWiaDevice::GetDeviceVendorName()
CWiaDevice::GetImageInfo
CWiaDevice::GetImageInfo()
CWiaDevice::GetImageInfo(), failed to read WIA_IPA_BITS_PER_CHANNEL
CWiaDevice::GetImageInfo(), failed to read WIA_IPA_BYTES_PER_LINE
CWiaDevice::GetImageInfo(), failed to read WIA_IPA_CHANNELS_PER_PIXEL
CWiaDevice::GetImageInfo(), failed to read WIA_IPA_DATATYPE
CWiaDevice::GetImageInfo(), failed to read WIA_IPA_DEPTH
CWiaDevice::GetImageInfo(), failed to read WIA_IPA_FORMAT
CWiaDevice::GetImageInfo(), failed to read WIA_IPA_NUMBER_OF_LINES
CWiaDevice::GetImageInfo(), failed to read WIA_IPA_PIXELS_PER_LINE
CWiaDevice::GetImageInfo(), failed to read WIA_IPA_PLANAR
CWiaDevice::GetImageInfo(), failed to read WIA_IPS_XRES
CWiaDevice::GetImageInfo(), failed to read WIA_IPS_YRES
CWiaDevice::GetImageInfo(), failed to set IWiaItem for property reading
CWiaDevice::GetImageInfo(), S_FALSE was returned from reading X Resolution, defaulting to 300 dpi (dummy value)
CWiaDevice::GetImageInfo(), S_FALSE was returned from reading Y Resolution, defaulting to 300 dpi (dummy value)
CWiaDevice::GetNumAcquiredImages()
CWiaDevice::GetThumbnailImageInfo
CWiaDevice::GetThumbnailImageInfo()
CWiaDevice::GetThumbnailImageInfo(), failed to read WIA_IPC_THUMB_HEIGHT
CWiaDevice::GetThumbnailImageInfo(), failed to read WIA_IPC_THUMB_WIDTH
CWiaDevice::GetThumbnailImageInfo(), failed to set IWiaItem for property reading
CWiaDevice::Initialize
CWiaDevice::Initialize()
CWiaDevice::Initialize(), Reported Device Information from WIA device
CWiaDevice::LoadImage()
CWiaDevice::LoadImage(), failed to (Restoring IMessageFilter) CoRegisterMessageFilter..(Server Busy code fix)
CWiaDevice::LoadImage(), failed to (Saving IMessageFilter) CoRegisterMessageFilter..(Server Busy code fix)
CWiaDevice::LoadImage(), failed to read WIA_IPA_MIN_BUFFER_SIZE, (defaulting to %d)
CWiaDevice::LoadImage(), failed to set IWiaItem for property writing
CWiaDevice::LoadImage(), failed to write WIA_IPA_FORMAT
CWiaDevice::LoadImage(), failed to write WIA_IPA_TYMED
CWiaDevice::LoadImageToDisk
CWiaDevice::LoadImageToDisk()
CWiaDevice::LoadImageToDisk(), cannot allocate memory for the path name, failing with 0x%lx
CWiaDevice::LoadImageToDisk(), failed to (Restoring IMessageFilter) CoRegisterMessageFilter..(Server Busy code fix)
CWiaDevice::LoadImageToDisk(), failed to (Saving IMessageFilter) CoRegisterMessageFilter..(Server Busy code fix)
CWiaDevice::LoadImageToDisk(), failed to set IWiaItem for property writing
CWiaDevice::LoadImageToDisk(), failed to write WIA_IPA_FORMAT
CWiaDevice::LoadImageToDisk(), failed to write WIA_IPA_TYMED
CWiaDevice::LoadImageToDisk(), GetFullPathNameW failed, failing with 0x%lx
CWiaDevice::LoadImageToDisk(), path name too long, failing with 0x%lx
CWiaDevice::LoadImageW
CWiaDevice::LoadThumbnail
CWiaDevice::LoadThumbnail()
CWiaDevice::LoadThumbnail(), failed to set IWiaItem for property writing
CWiaDevice::LoadThumbnail(), finished freeing temporary thumbnail buffer
CWiaDevice::LoadThumbnail(), freeing temporary thumbnail buffer
CWiaDevice::LoadThumbnail(), Reported thumbnail information
CWiaDevice::Open()
CWiaDevice::TwainCapabilityPassThrough
CWiaDevice::TwainCapabilityPassThrough(), failed to read WIA_IPA_ITEM_FLAGS
CWiaDevice::TwainCapabilityPassThrough(), failed to set IWiaItem for property reading
CWiaEventCallback::ImageEventCallback()
CWiaScannerDS::CloseDS()
CWiaScannerDS::EnableDS
CWiaScannerDS::EnableDS()
CWiaScannerDS::EnableDS(), TWAIN UI MODE
CWiaScannerDS::EnableDS(), TWAIN UI-LESS MODE
CWiaScannerDS::GetBitDepths()
CWiaScannerDS::GetCompressionTypes()
CWiaScannerDS::GetImageFileFormats()
CWiaScannerDS::GetImageLayout
CWiaScannerDS::GetImageLayout()
CWiaScannerDS::GetImageLayout(), failed to read WIA_IPS_XEXTENT
CWiaScannerDS::GetImageLayout(), failed to read WIA_IPS_XPOS
CWiaScannerDS::GetImageLayout(), failed to read WIA_IPS_XRES
CWiaScannerDS::GetImageLayout(), failed to read WIA_IPS_YEXTENT
CWiaScannerDS::GetImageLayout(), failed to read WIA_IPS_YPOS
CWiaScannerDS::GetImageLayout(), failed to read WIA_IPS_YRES
CWiaScannerDS::GetImageLayout(), failed to set IWiaItem for property reading
CWiaScannerDS::GetImageLayout(), ImageLayout is does not make since when using a UnknownPageLength Device
CWiaScannerDS::GetImageLayout(), WIA_IPS_XRES returned an invalid value (%d)
CWiaScannerDS::GetImageLayout(), WIA_IPS_YRES returned an invalid value (%d)
CWiaScannerDS::GetMemoryTransferBits()
CWiaScannerDS::GetPixelTypes()
CWiaScannerDS::GetResolutions
CWiaScannerDS::GetResolutions()
CWiaScannerDS::GetResolutions(), failed to allocate optional Y Resolution Array Memory
CWiaScannerDS::GetResolutions(), failed to allocate X Resolution Array Memory
CWiaScannerDS::GetResolutions(), failed to allocate Y Resolution Array Memory
CWiaScannerDS::GetResolutions(), failed to read WIA_IPS_XRES attributes
CWiaScannerDS::GetResolutions(), failed to read WIA_IPS_YRES attributes
CWiaScannerDS::GetResolutions(), failed to read X Resolution current value
CWiaScannerDS::GetResolutions(), failed to read Y Resolution current value
CWiaScannerDS::GetResolutions(), failed to set IWiaItem for property reading
CWiaScannerDS::GetSettings()
CWiaScannerDS::IsFeederEmpty
CWiaScannerDS::IsFeederEmpty()
CWiaScannerDS::IsFeederEmpty(), failed to get ROOT IWiaItem from current IWiaItem
CWiaScannerDS::IsFeederEmpty(), failed to read WIA_DPS_DOCUMENT_HANDLING_STATUS
CWiaScannerDS::IsFeederEmpty(), failed to set IWiaItem for property reading
CWiaScannerDS::IsFeederEmpty(), WIA_DPS_DOCUMENT_HANDLING_STATUS was not found
CWiaScannerDS::IsFeederEnabled
CWiaScannerDS::IsFeederEnabled()
CWiaScannerDS::IsFeederEnabled(), failed to get ROOT IWiaItem from current IWiaItem
CWiaScannerDS::IsFeederEnabled(), failed to read WIA_DPS_DOCUMENT_HANDLING_SELECT
CWiaScannerDS::IsFeederEnabled(), failed to set IWiaItem for property reading
CWiaScannerDS::IsFeederEnabled(), WIA_DPS_DOCUMENT_HANDLING_SELECT was not found...defaulting to FLATBED
CWiaScannerDS::IsUnknownPageLengthDevice
CWiaScannerDS::IsUnknownPageLengthDevice()
CWiaScannerDS::IsUnknownPageLengthDevice(), device is not set to do unknown page length
CWiaScannerDS::IsUnknownPageLengthDevice(), device is set to do unknown page length
CWiaScannerDS::IsUnknownPageLengthDevice(), failed to read WIA_IPS_YEXTENT
CWiaScannerDS::IsUnknownPageLengthDevice(), failed to set IWiaItem for property reading
CWiaScannerDS::OnImageLayoutMsg
CWiaScannerDS::OnImageLayoutMsg()
CWiaScannerDS::OnImageLayoutMsg(), MSG_SET TW_IMAGELAYOUT to set from Application
CWiaScannerDS::OnPendingXfersMsg
CWiaScannerDS::OnPendingXfersMsg()
CWiaScannerDS::OnPendingXfersMsg(), MSG_ENDXFER (unknown page length device detected) MULTI-PAGE enabled
CWiaScannerDS::OnPendingXfersMsg(), MSG_ENDXFER returning 0 (unknown page length device detected)
CWiaScannerDS::OnPendingXfersMsg(), MSG_ENDXFER, -1 or (32767) (feeder may have more documents)
CWiaScannerDS::OnPendingXfersMsg(), MSG_ENDXFER, more pages to transfer
CWiaScannerDS::OnPendingXfersMsg(), MSG_ENDXFER, no more pages to transfer
CWiaScannerDS::OnPendingXfersMsg(), MSG_GET returning %d
CWiaScannerDS::OnPendingXfersMsg(), MSG_GET returning %d (unknown page length device detected) MULTI-PAGE enabled
CWiaScannerDS::OnPendingXfersMsg(), MSG_GET returning 0 (unknown page length device detected)
CWiaScannerDS::OpenDS
CWiaScannerDS::OpenDS()
CWiaScannerDS::OpenDS(), GetBasicScannerInfo() failed
CWiaScannerDS::OpenDS(), Reported Basic Scanner Information from WIA device
CWiaScannerDS::SetCommonSettings()
CWiaScannerDS::SetCommonSettings(CAP_FEEDERENABLED)
CWiaScannerDS::SetCommonSettings(ICAP_BRIGHTNESS)
CWiaScannerDS::SetCommonSettings(ICAP_CONTRAST)
CWiaScannerDS::SetCommonSettings(ICAP_XRESOLUTION)
CWiaScannerDS::SetCommonSettings(ICAP_YRESOLUTION)
CWiaScannerDS::SetImageLayout
CWiaScannerDS::SetImageLayout()
CWiaScannerDS::SetImageLayout(), Current X Extent   = %d
CWiaScannerDS::SetImageLayout(), Current X Position = %d
CWiaScannerDS::SetImageLayout(), Current Y Extent   = %d
CWiaScannerDS::SetImageLayout(), Current Y Position = %d
CWiaScannerDS::SetImageLayout(), failed to read WIA_IPS_XEXTENT
CWiaScannerDS::SetImageLayout(), failed to read WIA_IPS_XPOS
CWiaScannerDS::SetImageLayout(), failed to read WIA_IPS_XRES
CWiaScannerDS::SetImageLayout(), failed to read WIA_IPS_YEXTENT
CWiaScannerDS::SetImageLayout(), failed to read WIA_IPS_YPOS
CWiaScannerDS::SetImageLayout(), failed to read WIA_IPS_YRES
CWiaScannerDS::SetImageLayout(), failed to set IWiaItem for property reading
CWiaScannerDS::SetImageLayout(), failed to write WIA_IPS_XEXTENT
CWiaScannerDS::SetImageLayout(), failed to write WIA_IPS_XPOS
CWiaScannerDS::SetImageLayout(), failed to write WIA_IPS_YEXTENT
CWiaScannerDS::SetImageLayout(), failed to write WIA_IPS_YPOS
CWiaScannerDS::SetImageLayout(), ImageLayout is does not make since when using a UnknownPageLength Device
CWiaScannerDS::SetImageLayout(), New X Extent   = %d
CWiaScannerDS::SetImageLayout(), New X Position = %d
CWiaScannerDS::SetImageLayout(), New Y Extent   = %d
CWiaScannerDS::SetImageLayout(), New Y Position = %d
CWiaScannerDS::SetImageLayout(), some settings could not be set exactly, so return TWRC_CHECKSTATUS
CWiaScannerDS::SetImageLayout(), WIA extents from device at %d dpi(x), %d dpi(y)
CWiaScannerDS::SetImageLayout(),TWAIN extents to convert..
CWiaScannerDS::SetImageLayout(),TWAIN X Extent   = %f
CWiaScannerDS::SetImageLayout(),TWAIN X Position = %f
CWiaScannerDS::SetImageLayout(),TWAIN Y Extent   = %f
CWiaScannerDS::SetImageLayout(),TWAIN Y Position = %f
CWiaScannerDS::SetSettings
CWiaScannerDS::SetSettings()
CWiaScannerDS::SetSettings(), could not find ICAP_PHYSICALHEIGHT capability
CWiaScannerDS::SetSettings(), could not update TWAIN ICAP_PHYSICALHEIGHT settings
CWiaScannerDS::SetSettings(), data source is not setting CAPID = %x to WIA device (it is not needed)
CWiaScannerDS::SetSettings(), failed to read physical sheet feeder size settings
CWiaScannerDS::SetSettings(), failed to set IWiaItem for property reading
CWiaScannerDS::SetSettings(), Setting FEEDER mode
CWiaScannerDS::SetSettings(), Setting FLATBED mode Enabled
CWiaScannerDS::SetSettings(), Setting WIA_IPS_BRIGHTNESS to %d
CWiaScannerDS::SetSettings(), Setting WIA_IPS_CONTRAST to %d
CWiaScannerDS::SetSettings(), Setting X Resolution to %d
CWiaScannerDS::SetSettings(), Setting Y Resolution to %d
CWiaScannerDS::SetSettings(), Settings were successfully sent to WIA device
CWiaScannerDS::SetSettings(), Settings were unsuccessfully sent to WIA device
CWiaScannerDS::TransferToDIB
CWiaScannerDS::TransferToDIB(), Scanner device is set to FEEDER mode for transfer
CWiaScannerDS::TransferToDIB(), Scanner device is set to FLATBED mode for transfer
CWiaScannerDS::TransferToFile
CWiaScannerDS::TransferToFile(), Scanner device is set to FEEDER mode for transfer
CWiaScannerDS::TransferToFile(), Scanner device is set to FLATBED mode for transfer
CWiaScannerDS::TransferToMemory
CWiaScannerDS::TransferToMemory(), Scanner device is set to FEEDER mode for transfer
CWiaScannerDS::TransferToMemory(), Scanner device is set to FLATBED mode for transfer
CWiaVideoDS::EnableDS
CWiaVideoDS::EnableDS(), ARRAY MODE
CWiaVideoDS::EnableDS(), could not find CAP_XFERCOUNT in supported CAP list
CWiaVideoDS::EnableDS(), RANGE MODE
CWiaVideoDS::EnableDS(), TWAIN UI MODE
CWiaVideoDS::EnableDS(), TWAIN UI MODE (FORCING UI MODE TO ON)
CWiaVideoDS::EnableDS(), TWAIN UI-LESS MODE
CWiaVideoDS::OnImageInfoMsg
CWiaVideoDS::OnImageInfoMsg(), could not get CAP_THUMBNAILSENABLED capabilty settings
CWiaVideoDS::OnImageInfoMsg(), Reported Image Information from data source
CWiaVideoDS::OnImageInfoMsg(), Reporting Thumbnail image information
CWiaVideoDS::OnPendingXfersMsg
CWiaVideoDS::OnPendingXfersMsg(), MSG_ENDXFER, %d (more images may be ready to transfer)
CWiaVideoDS::OnPendingXfersMsg(), MSG_ENDXFER, 0 (no more images left to transfer)
CWiaVideoDS::OnPendingXfersMsg(), MSG_ENDXFER, next image index  to acquire = %d
CWiaVideoDS::OnPendingXfersMsg(), MSG_ENDXFER, we are over our allowed ARRAY index
CWiaVideoDS::OnPendingXfersMsg(), MSG_ENDXFER, we are over our allowed RANGE index
CWiaVideoDS::OnPendingXfersMsg(), MSG_GET returning %d
CWiaVideoDS::SetArrayOfImageIndexes
CWiaVideoDS::SetArrayOfImageIndexes(), could not allocate image index array
CWiaVideoDS::SetArrayOfImageIndexes(), could not assign TW_ARRAY pointer to TW_UINT32 pointer
CWiaVideoDS::SetArrayOfImageIndexes(), could not LOCK the array container for write access
CWiaVideoDS::SetArrayOfImageIndexes(), image index copied into index array = %d
CWiaVideoDS::SetArrayOfImageIndexes(), invalid image index container was sent to data source.
CWiaVideoDS::SetArrayOfImageIndexes(), number of selected images to transfer = %d
CWiaVideoDS::SetCapability
CWiaVideoDS::SetCapability(), setting ICAP_IMAGEDATASET to a TW_ARRAY
CWiaVideoDS::SetCapability(), setting ICAP_IMAGEDATASET to a TW_RANGE
CWiaVideoDS::SetCapability(), setting ICAP_IMAGEDATASET to a TWON_ONEVALUE
CWiaVideoDS::SetCapability(), setting ICAP_IMAGEDATASET unknown container type (%d)
CWiaVideoDS::SetRangeOfImageIndexes
CWiaVideoDS::SetRangeOfImageIndexes(), could not assign TW_RANGE pointer to TW_RANGE pointer
CWiaVideoDS::SetRangeOfImageIndexes(), could not LOCK the range container for read access
CWiaVideoDS::SetRangeOfImageIndexes(), invalid image index container was sent to data source.
CWiaVideoDS::SetRangeOfImageIndexes(), Set to the following Range Values
D$ Ph
D$ PQ
D$$Pj
D$$PQQ
D$(PQ
D$0PRQ
D$xPj
Data Size = %d
DebugBreak
DefaultIndex = %d
DeleteCriticalSection
Device Desc        = %ws
Device ID          = %ws
Device Name        = %ws
Device STI Version = 0x%08X
Device Vendor Desc = %ws
DeviceFamily
DeviceId
DeviceName
DeviceVendor
DisableThreadLibraryCalls
DocumentNumber     = %d
DoModeless Failed to create Progress Dialog
DSM_Entry
DSVWh
dSVWh
dSVWhpI
dwActualOutDataSize = %d
dwContainerSize     = %d
dwInDataSize        = %d
dwOutDataSize       = %d
EnableMultiPageScrollFed
EndState
EnterCriticalSection
Enumeration Values:
Enumeration Values: (current internal settings)
en-US
Escape(code = %d, pInData = %p, dwInDataSize = %d, pOutData = %p, dwOutDataSize = %d,dwActualOutDataSize = %d)
Escape(code = %d, pInData = %p, dwInDataSize = %d, pOutData = %p, dwOutDataSize = %d,dwActualOutDataSize = %p)
EventRegister
EventSetInformation
EventUnregister
EventWriteTransfer
Exception
F"Ph@*
F$PhX*
F&Php*
f9>t(h
failed to Create progress dialog, hr = %x
FailFast
failureCount
failureId
failureType
FallbackError
FileDescription
fileName
FileVersion
FindFirstImportDS
FindFirstImportDS - CoInitialize
FindImportDSByDeviceName
FindNextImportDS
FlipDIB
FlipDIB, src height = %d
FormatMessageW
Found Device ID %ws
Found Item %d!
Frame.Bottom.Frac  = %d
Frame.Bottom.Whole = %d
Frame.Bottom.Whole Value (%d) is greater than MAX Bottom value (%d)
Frame.Left.Frac    = %d
Frame.Left.Whole   = %d
Frame.Right.Frac   = %d
Frame.Right.Whole  = %d
Frame.Right.Whole Value (%d) is greater than MAX Right value (%d)
Frame.Top.Frac     = %d
Frame.Top.Whole    = %d
FrameNumber        = %d
FreeLibrary
FreePropVariantArray
function
G(PjB
G,PSWh
GetCurrentProcess
GetCurrentProcessId
GetCurrentThreadId
GetFullPathNameW
GetLastError
GetLoaderStatus
GetModuleFileNameA
GetModuleHandleExW
GetModuleHandleW
GetProcAddress
GetProcessHeap
GetSystemTimeAsFileTime
GetTickCount
GH9GDt
GH9GDt!
GH9GDt7
GlobalAlloc
GlobalFree
GlobalLock
GlobalReAlloc
GlobalSize
GlobalUnlock
HeapAlloc
HeapFree
Height    = %d
hresult
Id            = %d
ImageLength     = %d
ImageWidth      = %d
ImportedDSEntry
incoming TWAIN capability is NULL
InitializeCriticalSectionEx
InitOnceBeginInitialize
InitOnceComplete
InternalName
IsDebuggerPresent
IsLegacyDevice
ItemType     = %d
j hx.
j Pj P
jd[9~0u,j
j'Yj'
KERNEL32.dll
kernelbase.dll
L$ Ph
L$ Qhp
L$$)D$ 
L$(f;D$
L$(Qh$.
L$4^3
L$8VSPP
LeaveCriticalSection
LegalCopyright
lineNumber
LoadImportDS
LoadImportDS - CoInitialize()
LoadLibraryW
LoadStringW
Local\SM0:%d:%d:%hs
LocalAlloc
LocalFree
LogHr
lstrcmpiW
lstrlenW
LSVWh
LSVWhD
LVWh\;
m_twImageRange.CurrentValue = %d
m_twImageRange.DefaultValue = %d
m_twImageRange.ItemType     = %d
m_twImageRange.MaxValue     = %d
m_twImageRange.MinValue     = %d
m_twImageRange.StepSize     = %d
malloc
Manufacturer  = %s
MemBlockSize         = %d
memcmp
memcpy
memcpy_s
memmove_s
memset
message
Microsoft
Microsoft Corporation
Microsoft.Windows.Scan.WiaTwainCompat
module
Msg:[%ws] 
msvcrt.dll
MultiByteToWideChar
No Container data was copied, because we are processing a MSG_RESET
no current item selected for use
No private supported caps reported from WIA device
ntdll.dll
NtQueryWnfStateData
NtUpdateWnfStateData
NumItems     = %d
ole32.dll
OLEAUT32.dll
onecore\internal\sdk\inc\wil\opensource\wil\resource.h
onecore\internal\sdk\inc\wil\Staging.h
OpenSemaphoreW
or...DS needs information for CAPABILITY initialization
OriginalFilename
originatingContextId
originatingContextMessage
originatingContextName
Our List contains:
OUT buffer size (%d) returned from the WIA driver is too small to contain a proper header
OUT buffer size (%d) returned from the WIA driver is too small to contain data
OutputDebugStringW
PageNumber         = %d
PartA_PrivTags
PFVh,
PGWh`F
pHeader->guidFormatID = (unknown)
pHeader->guidFormatID = WiaImgFmt_MEMORYBMP
pHeader->guidFormatID = WiaImgFmt_RAWRGB
pHeader->lBufferSize = %d
pHeader->lCapID    = %x
pHeader->lCC       = %d
pHeader->lConType  = %d
pHeader->lDataSize = %d
pHeader->lMSG      = %d
pHeader->lPageCount  = %d
pHeader->lRC       = %d
pHeader->lSize       = %d
pHeader->lSize     = %d
pIWiaItemExtras->Escape Failed
pIWiaItemExtras->Escape Failed (requesting OUT buffer size)
pIWiaItemExtras->Escape Failed (sending a request for the cability array data)
pIWiaItemExtras->Escape Failed (sending a request for the number of capabilities)
pIWiaItemExtras->Escape Failed (sending passthrough operation)
PixelType       = %d
Planar          = %d
PRh`F
ProductFamily = %s
ProductName
ProductName   = %s
ProductVersion
PropVariantClear
ProtocolMajor = %d
ProtocolMinor = %d
PRSSh
PSh8%
PWh a
PWh(9
PWhPs
QQj"V@P
QSVW3
QSVWj
QueryInterface for IWiaItemExtras Failed
QueryPerformanceCounter
RaiseFailFastException
RegCloseKey
RegCreateKeyExW
RegQueryValueExW
RegSetValueExW
ReleaseMutex
ReleaseSemaphore
ReleaseSRWLockExclusive
ReleaseSRWLockShared
ReturnHr
RtlDisownModuleHeapAllocation
RtlDllShutdownInProgress
RtlNotifyFeatureUsage
RtlNtStatusToDosErrorNoTeb
RtlRegisterFeatureConfigurationChangeNotification
RtlSubscribeWnfStateChangeNotification
RtlUnregisterFeatureConfigurationChangeNotification
RtlUnsubscribeWnfNotificationWaitForCompletion
RVQPW
SamplesPerPixel = %d
Sent to TWAIN Application, DG = %X, DT = %X, MSG = %X, ( TWRC = %X, TWCC = %X)
Set the application's enumeration
SetLastError
SetThreadpoolTimer
Setting feeder enabled to TRUE, because we have a document feeder
Setting feeder loaded to TRUE, because we have a document feeder and assume it is loaded
SetUnhandledExceptionFilter
Sleep
Software\Microsoft\WIA\TwainCompatLayer
SourceSessionEnded
SourceSessionStarted
StartState
StringFileInfo
SupportedGrps = %d
SVWh0
SVWh8F
SVWhL
SVWhlD
SVWj@
t 9^@u
t h| 
t!jgX
t$$h@u
t$(h\u
t$<WP
t$<WW
t$0h$u
T$0QQV
t$4Vhxu
t$pVQ
t:h`}
t0h<p
t3WSh
t5h`m
TerminateProcess
t'hp6
threadId
tMhdp
Transferring %d bit data
Translation
TSVWh
tSVWh B
TSVWh8,
TWAIN -> WIA extent conversion at %d dpi(x), %d dpi(y)
TWAIN Application gave us nothing to work with
TWAIN Application wants to work with a HANDLE
TWAIN Application wants to work with a POINTER
Twain Data Source On WIA
TWAIN_32.DLL
twCap.lCapID    = %x
twCap.lCC       = %d
twCap.lConType  = %d
twCap.lDataSize = %d
twCap.lMSG      = %d
twCap.lRC       = %d
twCap.lSize     = %d
u"hP\
u$WSQ
u1h` 
uhh0(
Unable to get DEV_TYPE, hr = %lx
UnhandledExceptionFilter
UnknownMfg
UnknownProduct
UnloadImportDS
UnloadImportDS - CoUnInitialize()
uNPPV
USER32.dll
uZSW3
V$f;F
VarFileInfo
Ver Country   = %d
Ver Info      = %s
Ver Language  = %d
Ver MajorNum  = %d
Ver MinorNum  = %d
VQPWV
VS_VERSION_INFO
VVVhX9
VWj43
w$9w(|V
WaitForSingleObject
WaitForSingleObjectEx
WaitForThreadpoolTimerCallbacks
We are a natural TWON_ENUMERATION
We are not a natural TWON_ENUMERATION.
What does our new enumeration look like?
What is this container type [%X]???
WIA Data Type (%d) does not MAP to TWAIN a pixel type
WIA device reported %d private TWAIN supported CAPS
WIA driver failed the TWAIN capability request, by returning a TWAIN failure return code in the OUT header.
WIA driver supports %d bit depth
WIA driver supports WIA_DATA_COLOR -> TWPT_RGB
WIA driver supports WIA_DATA_GRAYSCALE -> TWPT_GRAY
WIA driver supports WIA_DATA_THERSHOLD -> TWPT_BW
WIA driver supports WiaImgFmt_BMP -> TWFF_BMP
WIA driver supports WiaImgFmt_EXIF -> TWFF_EXIF
WIA driver supports WiaImgFmt_FLASHPIX -> TWFF_FPX
WIA driver supports WiaImgFmt_JPEG -> TWFF_JFIF
WIA driver supports WiaImgFmt_PICT -> TWFF_PICT
WIA driver supports WiaImgFmt_PNG -> WiaImgFmt_PNG
WIA driver supports WiaImgFmt_TIFF (Multipage) -> TWFF_TIFFMULTI
WIA driver supports WiaImgFmt_TIFF -> TWFF_TIFF
WIA File Format WiaImgFmt_CIFF does not MAP to TWAIN a file format
WIA File Format WiaImgFmt_EMF does not MAP to TWAIN a file format
WIA File Format WiaImgFmt_GIF does not MAP to TWAIN a file format
WIA File Format WiaImgFmt_ICO does not MAP to TWAIN a file format
WIA File Format WiaImgFmt_JPEG2K does not MAP to TWAIN a file format
WIA File Format WiaImgFmt_JPEG2KX does not MAP to TWAIN a file format
WIA File Format WiaImgFmt_PHOTOCD does not MAP to TWAIN a file format
WIA File Format WiaImgFmt_UNDEFINED does not MAP to TWAIN a file format
WIA File Format WiaImgFmt_WMF does not MAP to TWAIN a file format
WIA TWAIN compatibility layer
WIADSS DLL
WIADSS.DLL
wiadss.pdb
WideCharToMultiByte
Width     = %d
WilError_03
wilResult
WilStaging_02
Wj,QV
WriteDIBToFile
WriteDIBToFile, could not create the file %s
WriteDIBToFile, could not write the BITMAPFILEHEADER to file %s
WriteDIBToFile, could not write the BITMAPINFOHEADER, palette, and data to file %s
WriteFile
wYPj@
XResolution     = %d.%d
XSVWh
y%h`B
Y__^[
YPSh(9
YPSh@B
YPShD-
YPShHd
YPShp$
YPVh,
YPVhP
YPWh`F
YPWhd
YPWhxk
YResolution     = %d.%d
YYPSV
YYPVh
