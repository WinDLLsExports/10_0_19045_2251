 Microsoft Corporation. All rights reserved.
 Operating System
 SVW3
 Windows
!( ( ((PSecHandle) (&info->sslCredentialHandle[(UINT)handleType]))->dwLower != ((ULONG_PTR) ((INT_PTR) -1 ))) && ( ((PSecHandle) (&info->sslCredentialHandle[(UINT)handleType]))->dwUpper != ((ULONG_PTR) ((INT_PTR) -1 ))) )
!accessToken.empty() && !_IsCurrentTimePastExpirationTime(expirationTime)
!SecIsValidHandle(&info->sslCredentialHandle[(UINT)handleType])
!This program cannot be run in DOS mode.
!token.empty() && ((nullptr == pCurrentToken) || (token != pCurrentToken))
#$#$#DataStoresLock#$#$#
#D$8PS
$tD9L
$VWP3
%hs!%p: 
%hs(%d) tid(%x) %08X %ws
%hs(%u)\%hs!%p: 
%s %s
%s%s-%d/%u.%u.%u
%s%s%s-%d.txt
%s:%s
%s\%s
%s\%s-%d.txt
%s\Ping %s-%d.txt
%s\SKZ %s.txt
%s\WebAuth\%s
%x - %s
&0:0B0
&client_secret=
&code=
&device_model=
&device_name=
&grant_type=authorization_code
&grant_type=refresh_token
&login_hint=
&PWSV
&redirect_uri=
&refresh_token=
&response_type=
&scope=
( ( 0x10a40000 | 31 ) ) == propertyValues[0].propid
( *pMutexHandle ) != 0
(!!parsed)
((&nameVar)->vt) == VT_BSTR
(((HRESULT)(_IsValidToken(currentToken, &valid))) >= 0) && (0 != valid)
(((HRESULT)(error)) < 0)
(((HRESULT)(hr)) >= 0)
(((HRESULT)(hr)) >= 0) && (info != 0)
(((HRESULT)(hr)) >= 0) && (info != nullptr)
(((HRESULT)(hr)) >= 0) || (((HRESULT)0x85050002) == hr)
(((NTSTATUS)(_ntStatus)) >= 0)
((*pPropNotEmptyFilterIndices)[i] >= 0) && ((*pPropNotEmptyFilterIndices)[i] < c_numGalContactPimProps)
((HRESULT)(50L) <= 0 ? ((HRESULT)(50L)) : ((HRESULT) (((50L) & 0x0000FFFF) | (7 << 16) | 0x80000000))) == hr
((HRESULT)0x80070057L)
((HRESULT)0x80070057L) != hr
(_itow_s((int)expirationTime, conversionBuffer, 10) == 0)
(0 != nSize)
(0 != ret)
(200 == httpStatus)
(accessorType == __uuidof(PopImapAccountAccessor)) || (accessorType == __uuidof(ExternalAccountAccessor)) || (accessorType == __uuidof(ActiveSyncAccountAccessor))
(caller: %p) 
(dwType == ( 4ul ))
(expirationTime == (double)((int)expirationTime))
(nullptr != pAuthTarget) && (L'\0' != *pAuthTarget)
(size > 0)
(StringFromGUID2(accountId, pEnd, (INT)[](size_t num) { INT out = 2147483647; do { HRESULT _hrTemp = Typecheck::CheckChrType(UIntPtrToInt(num, &out)); if ((0,((((HRESULT)(_hrTemp)) < 0)))) { Log_HREvent(_hrTemp, 0, "onecoreuap\\base\\mailcontactscalendarsync\\utils\\syncutil\\lib\\credutil.cpp", 580  ); } } while(0,0); return out; }(countCharsRemaining)) > 0)
(utl::wstring::npos != beginIndex)
)9;u)
*~*~*~*~*~*~*~*~*~*
*pEndToken == 0
*pEndToken == NULL
*ppszMultiByteStr == 0
*ppszMultiByteStr == NULL
*ppwszWideCharStr == 0
*ppwszWideCharStr == NULL
,SVWPj
.00cfg
.050\0
.CRT$XCA
.CRT$XCL
.CRT$XCU
.CRT$XCZ
.CRT$XIA
.CRT$XIAA
.CRT$XIZ
.CRT$XLA
.CRT$XLZ
.data
.data$brc
.didat$2
.didat$3
.didat$4
.didat$5
.didat$6
.didat$7
.edata
.gfids
.giats
.hotmail.com
.idata
.idata$2
.idata$3
.idata$4
.idata$5
.idata$6
.outlook.com
.rdata
.rdata$brc
.rdata$sxdata
.rdata$T$brc
.rdata$zETW0
.rdata$zETW1
.rdata$zETW2
.rdata$zETW9
.rdata$zzzdbg
.rsrc
.rsrc$01
.rsrc$02
.text
.text$di
.text$mn
.text$mn$00
.text$x
.text$yd
.tls$
.tls$ZZZ
.xdata$x
/0?0G0M0S0X0]0c0i0
:!:2:6:<:@:F:J:R:V:\:`:f:j:p:t:z:~:
:":+:R:X:v:
:#;(;X;
:#;j;
:$:[:o:w:
:%:8:@:I:i:s:y:
:&:n:W;];
:):?:
:*:_:
:,:3:j:~:
:,;B;I;k;
:.:[:z:
:.:9:q:{:
:.;F;a;w;
:/;B;J;W;_;
::;N;V;
:':3:S:
:':4:u:
::StringCchCatW(deviceTypeDefault, sizeof(*__countof_helper(deviceTypeDefault)), deviceTypeFamily)
::StringCchCopyW(pwszUserAgent, userAgentLength, userAgent.c_str())
:[:x:q;6<
:+:;:F:[:m:
:>;V;^;
:0:r:~:
:0;:;t;
:1:H:
:2;l;
:6;c;
:A:[:c:
:K;W;c;
:L;q;
:M:a:i:
:T:X:\:`:p:t:x:|:
:V:j:r:
:V:n:v:
:W:k:s:
; ;R;z;
;";/;7;W;d;o;
;#;_;s;{;
;#;0;:;D;V;s;y;
;#<7<?<v<
;$<,<2<{<
;%;+;0;F;a;q;
;&;.;f;l;y;
;&;9;A;N;V;
;&<R<
;(;;;C;P;X;w;
;)<P<s<
;,<3<^<
;:;p;w;
;@<{<
;=;Q;Y;
;=;r;
;1;:;U;j;
;1;l;
;1<P<V<j<
;2;o;u;{;
;4;r;
;6;Q;
;7<\<
;8<T<
;A;{;
;A;h;
;D$<u
;D;\;d;~;
;E;Y;a;
;H<i<
;J;a;y;
;j<-=
;q<W=
;Y<`<y<
? ?Y?
?!?^?
?"?<?Y?
?"?R?q?
?#?0?5?b?
?(?0?g?{?
?)?1?L?Z?p?
?*?l?
?,?@?
?,?4?k?
?,?D?W?h?
?,?M?|?
?/?f?
?:?M?U?b?j?
?;?s?
?access_token=
?client_id=
?E?Y?a?
?I?]?e?
?O?b?j?w?
?terminate@@YAXXZ
@.didat
@.reloc
@f94Bu
@v4j@V
[%02d/%02d/%04d %02d:%02d:%02d.%03d] 
[%hs(%hs)]
[%hs]
[f9\$0t
\$ PR
\$ RP
\MailContactsCalendarSync\LiveDomainList.txt
^SSSSh
_^[Y]
__CxxFrameHandler3
__dllonexit
_amsg_exit
_callnewh
_errno
_except_handler4_common
_ftol2_sse
_GetAADToken
_GetBackendType() == c_pExchangeServiceType
_i64tow_s
_initterm
_IsValidToken(accessToken.GetRawBuffer(nullptr))
_IsValidToken(refreshToken)
_itow_s
_lock
_onexit
_purecall
_statusTemp == 0L
_strnicmp
_TranslateNotFoundErrors(AwaitOperationResult( findAccountOperation.p, &webAccount))
_TranslateNotFoundErrors(AwaitOperationResult( findAccountProviderOperation.p, &webAccountProvider))
_TranslateNotFoundErrors(AwaitOperationResult( getDefaultSignInAccountResultOperation.p, &result))
_unlock
_vsnprintf
_vsnwprintf
_vsnwprintf_s
_wcsicmp
_wcstoui64
_wtoi
_XcptFilter
`.data
{,_^[
{5B04B775-356B-4AA0-AAF8-6491FFEA5614}
|$ PQ
|$$PQQ
|$<YY
|$4YY
~$9~(t
~(9~<t
~,_^]
~<9~8t
~89~,t
+|$(PSW
+0?0G0
<!<-<Q<x<
<!<B<
<!=5=v=
<"=*=7=?=h=s=
<"=_=s={=
<#<:<Y<c<z<
<#=(=o=
<$<,<C<I<]<`=
<$<V<
<$={=
<&<.<e<y<
<&=:=B=
<&=9=f=u=
<*<A<m<
<,=U=f=
</<q<
<?<F<y<
<\<s<
<]<}<
<'<1<;<H<V<`<j<t<~<
<-<4<
<=<W<~<
<'=8=C=L=s=y=
<-=c=
<><R<Z<
<B<^<
<J>]>
<K=d=
<M=f>
<Q=Y=_=y=
--= Protocol logs for PARTNER='%S', CTRLLOG ID=0x%08X =--
=!=,===v=
="=:=]=
="=V=m=
=#=7=
=#=G=Z=a=o=x=
=%>9>A>
=&=0=:=D=N=X=b=o=}=
=(=`=z=
=)>T>^>
=*={=
=;=B=_=l=
=@=g=~=
=_>r>
=+>2>c>x>
=-= Build %d =-=
=-=-=-= Client Request =-=-=-  Timestamp: 
=-=-=-= Server Response =-=-=- Timestamp: 
='=l=
=>=U=
=0>D>L>
=1===B=l=
=2=`=u=
=2>p>
=6=B=I=
=7=K=S=
=A@cr
=D=o=
=g>}>
=h>|>
=H>R>
=L=p=
=M=e=m=
=X=_=n=
> ?.?=?b?h?
>!>/>>>l>
>!>j>p>}>
>">0>|>
>#>(>U>
>$?C?i?
>%?A?i?y?
>%>->m>
>%>7>M>f>}>
>&>?>
>&>C>X>_>e>o>~>
>(>1>>>X>
>(>1>V>k>
>(>6>E>\>
>(>6>X>n>{>
>)?=?E?|?
>,>Q>x>
>.?I?[?~?
>+?a?r?x?
>+>R>g>
><?Y?x?
>0?u?
>3?K?i?
>3>E>g>
>6>>>v>|>
>7>@>j>
>7>Q>j>
>7>T>v>
>8>J>
>9>L>T>a>i>
>B?g?l?
>c>{>
>C>H>Q>v>
>I>P>
>I>T>
>L?S?
>U?m?u?
0 != *pCustomerId
0 != hashValueSize
0 != m_activityRefCount
0 != ppResumeState
0 != pScopeMetadata
0 != pServerName
0 != pSyncPartner
0 != sessionScope
0 != wideCount
0 == (clientSecretSize % sizeof(WCHAR))
0 == sessionScope
0 0$0(0,0004080<0@0D0H0L0P0T0X0\0`0d0h0l0p0t0
0 0$0(0,080<0@0L0t0
0 0$0(0004080<0@0D0H0L0P0T0X0`0d0h0l0p0t0|0
0!0)0`0t0|0
0"0+0P0u0
0#0)0/050G0y0
0#0I0
0%0-0d0x0
0(0J0
0(1H1P1W1z1
0(1X1p1
0)0@0p0
0)1;1Y1^1c1
0*1d1
0.131y1
0.191~1
0.w/X#
0/1[1w1
0:1O1t1
'0;0C0z0
0;1H1a1h1
0@0g0
0+030@0H0
0<1G1e1
0=1o1
00000000-0000-0000-0000-000000000000
000000004011621F
000I0`0
0-0A0{1
031D1k1r1
040904B0
04191T1^1
050S0Z0g0n0
060M0
080L0T0|0
0C0]0|0
0C2M2O3
0D0X0`0
0J0T0^0
0L == lResult
0M0a0i0{0
0M1X1s1~1
0N0b0j0
0N1s1
0R0[0o0
0S0o0
0u1{1
1 1$1(1,1014181<1@1D1H1L1P1T1X1\1`1d1h1l1p1t1x1|1
1 1C1{1
1"171S1`1w1
1"1H1W1z1
1"1Y1m1u1
1"2.272
1"2F2
1&1C1X1^1k1~1
1&1M1U1g1y1
1(1.1>1i1
1(1;1P1
1(181=1h1
1(1N1U1j1
1(2@2H2
1,1F1O1t1
1,1T1x1|1
1.3.6.1.4.1.311.71.1.2
1.3.6.1.5.5.7.3.2
1;1H1S1
1?2b2
1[1u1
1=1Q1Y1
10.0.19041.746
10.0.19041.746 (WinBuild.160101.0800)
10\0g0r0y0
1-2<2G2c2p2{2
151\1
161H1`1
162J2R2
163.com
172_2
181L1T1
1C1K1
1d1:2f2
1f;2u
1L2v2
1o2u2
1Q2i2q2
1W2^2|2
2 2$2(2,2024282<2@2D2H2L2P2T2X2\2`2d2h2l2p2t2x2|2
2 2$2(2,2024282<2@2D2H2L2P2X2\2`2d2h2l2p2t2x2|2
2!2H2u2
2"363>3u3
2%242
2(272
2(3L3U3
2(3u3
2)2h2
2)2l2
2,3c3
2.262o2
2/2|2
2/3C3K3b3h3|3
2:2Q2k2~2
2+3e3
2<2@2P2X2|2
2<2J2
2<2U2[2o2
2=3T3k3
202I2S2g2y2
212<2
212D2S2q2
222k2~2
2'3;3C3z3
232p2
232P2
232U2l2}2
253=3
272B283?3d3|3
293W3c3
2B3O3m3r3
2G2[2c2
2H2u2
2L2j2
2P2d2l2
2UuwarE
2Y2R4
2Z2_2i2
3 3$3(3,3034383<3@3D3H3L3P3T3X3\3`3d3h3l3p3t3x3|3
3 3$3(3,3034383<3@3D3P3h3t3x3|3
3 3$3,30383<3D3H3P3T3\3`3h3l3t3x3
3!343g3n3x3~3
3!4+484j4
3$3<3W3n3{3
3%3=3r3
3(3:3
3)313h3|3
3)404c4h495g5
3)4A4I4
3,4A4
3;4\4
3?3g3
3?4K4^4
3@3T3\3
303S3w3
313k3
334G4O4
363Q3f3
383D3_3
393]3
393]3x3
393W3t3
3A4H4`4
3C3s3
3D3\3d3
3G5b5n5
3h4o4
3I3]3e3
3j4y4
3O4{4
3Ph$F
3T3l3t3
4 4$4(4,4044484<4@4D4H4L4P4T4X4\4`4d4h4l4p4t4x4|4
4"4*4a4u4}4
4"5R5W5
4#4=4z4
4#4k4
4$4U4
4(444X4f4
4(464i4
4\5f5
4_5w5
4+4=4E4d4x4
4=5Q5s5
40484x4
414>4h4u4
425v5
444{4
455I5Q5
455V5
485P5X5
494M4U4
4F5U5l5
4j5~5
4M4W4{4
4P4Y4f4
4R4X4e4
4S4z4
4T6J8
4U5h5r5
5 5$5(5,5054585<5@5D5H5L5P5T5X5\5`5d5h5l5p5t5x5|5
5 6m6
5"5>5[5g5s5
5"6'6B6Y6b6m6t6
5"6E6`6
5#6*646J6Q6[6t6
5$5[5o5w5
5$6W6w6
5%5R5i5
5)5]5q5y5
5.5@5u5{5
5.6]6
5/5]5t5
5/5h5
5/6P6d6
5;6@6z6
5@5G5
5>5D5Q5c5k5
50M0U0s0
516c6
536I6
545F5U5
5-5;5@5d5
565h5|5
595P5r5|5
5A5F5g5n5
5B5o5
5d5s5
5H5h5
5H5m5
5I5]5e5
5i6y6
5K6j6w6
5S5g5o5
5T5l5t5
6 6$6(6,6064686<6@6D6H6L6P6T6X6\6`6d6h6l6p6t6x6|6
6 6@6M6X6
6 636;6H6P6
6 7T7
6!797R7v7
6"6(6,676C6L6c6
6"6B6O6Z6
6"717_7~7
6"777d7
6#646=6k6t6
6$6,6c6w6
6(616=6E6W6
6(6H6h6
6)787e7r7}7
6*6;6J6Q6V6
6*636
6*7w7
6,6Q6p6
6/8y8
6+7L7Q7e8
6<6S6w6
6<7C7
637G7O7
6-636G6
666I6X6v6
6-7]7t7y7
6-7A7I7
6-7P7o7
6C6[6s6
6I6a6i6
6J6`6
6S6k6
6T6h6p6
6V6q6
6W7k7s7
6X6g6r6
7 7,7D7H7L7P7d7l7x7|7
7 8b8
7!717A7G7R7X7d7t7}7
7"7,757?7H7Y7l7~7
7"7b7z7
7"8L8\8w8|8
7$7-7
7$8<8D8
7%7\7p7x7
7&7G7Q7`7f7j7r7x7|7
7*7\7t7
7*737X7
7.8B8J8
7.8t8
7;7I7j7
7?7v7
7\9s9r:
7<7J7p7
7<8Q8
7>7[7
71797t7
728_8x8
757c7k7q7
758_8i8
7B7J7S7w7
7B8W8
7f8z8
7G8\8k8
7J7^7f7
7O7c7k7
7X7r7
8 888<8@8X8\8`8h8x8|8
8!8,8`8x8
8!8,82888C8I8b8h8
8"9H9
8$9T9r9
8%9i9
8&878?8I8c8
8)9R9o9
8,848k8
8,8A8m8
8,9B9
8,9C9c9n9
8.8\8
8.878E8S8d8l8
8:8J8_8
8:8U8a8m8t8
8;9S9
8@8G8
8\8M9R9s9
8<8k8u8|8
808>8M8i8
828X8f8
862726500644-mba83qqf9kq69c5mk9u5h2dn4iocdspq.apps.googleusercontent.com
878i8
878K8S8
878R8p8
8'818c8m8
899e9
8C8W8_8
8H8[8c8p8x8
8h8u8
8I8j8
8J8y8
8J9m9
8m9z9
8O8`8r8
8r8y8
8T9h9p9
8X92:
9 :@:
9 9(9_9s9{9
9!:(:7:
9!:D:
9":::B:l:
9":':J:r:
9"9h9
9$:<:D:
9$9d9|9
9(:[:b:
9(9@9X9p9
9)9?9s9
9)919h9|9
9,:S:~:
9.:]:u:
9;9b9
9?t#V
9\$$|7Q
9]:d:
9]:i:n:
9`9p9
9~(s,j
9<9P9X9
9<9Q9]9
9>9K9y9
90969J9
909C9K9X9`9
909C9y9
909i9}9
90t6jb_W
90u0jz_
92:m:
929:9L9[9k9
929]9
939E9[9s9
939G9f9v9
94:::G:k:
95:M:U:
979F9t9
98:P:g:
9'9Q9j9
9A9a9
9D$ u>
9D$(t
9D:I:
9D9\9d9~9
9D9c9p9
9G9_9g9
9N:]:h:
9N:}:
9O9v9
9Q9e9m9
9t$ u<
A0+A4
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/
access_token
access_type=offline
accessor.CoCreateInstance(__uuidof(ActiveSyncAccountAccessor))
accessor.CoCreateInstance(__uuidof(PopImapAccountAccessor))
accessor.CoCreateInstance(m_accessorType)
account
account->get_WebAccountProvider(&provider)
accountAbsent
accountConfig.CoCreateInstance(__uuidof(ActiveSyncApp))
accountId.reserve(accountIdBufferLength)
accountInternal->get_Id(accountId.GetAddressOf())
accountInternal->get_Properties(&accountProperties)
accountInternal->get_Properties(&properties)
accountProperties->HasKey( HStringReference(AccountAutorityPropertyName).Get(), &hasAuthrority)
accountProperties->Lookup( HStringReference(AccountAutorityPropertyName).Get(), authority.GetAddressOf())
AcquireDataStoreLock
AcquireDataStoreLockEx
AcquireSRWLockExclusive
ActivateInstance( HStringReference(RuntimeClass_Microsoft_PPI_CredentialManagement_PPIDeviceCredentialReader).Get(), &reader)
ActivateInstance( HStringReference(RuntimeClass_Windows_Internal_Security_Authentication_Web_TokenBrokerInternal).Get(), &listener)
ACTIVESYNC_DATASOURCE_EXCHANGE == accountType
ActiveSyncCredential
ActiveSyncCredentialDefaultUser
ActiveSyncCredentialSchema
ActiveSyncUnistoreLockTemplate
added.first != nullptr
AggregateAccountSyncStats
AggregateSessionSyncStats
AirSync:FolderSyncFlags
AirSync:IsSearchResult
AirSync:LongID
AirSync:ParentID
AirSync:ParentServerID
AirSync:PermanentDelete
AirSync:PermanentID
AirSync:SyncOptionsHash
AllowSMIMEEncryptionAlgorithmNegotiation
AllowSMIMESoftCerts
apidata.googleusercontent.com
api-ms-win-core-com-l1-1-0.dll
api-ms-win-core-debug-l1-1-0.dll
api-ms-win-core-delayload-l1-1-0.dll
api-ms-win-core-delayload-l1-1-1.dll
api-ms-win-core-errorhandling-l1-1-0.dll
api-ms-win-core-file-l1-1-0.dll
api-ms-win-core-handle-l1-1-0.dll
api-ms-win-core-heap-l1-1-0.dll
api-ms-win-core-heap-l2-1-0.dll
api-ms-win-core-kernel32-legacy-l1-1-0.dll
api-ms-win-core-libraryloader-l1-2-0.dll
api-ms-win-core-libraryloader-l1-2-1.dll
api-ms-win-core-localization-l1-2-0.dll
api-ms-win-core-path-l1-1-0.dll
api-ms-win-core-processthreads-l1-1-0.dll
api-ms-win-core-profile-l1-1-0.dll
api-ms-win-core-registry-l1-1-0.dll
api-ms-win-core-registry-l2-1-0.dll
api-ms-win-core-string-l1-1-0.dll
api-ms-win-core-string-obsolete-l1-1-0.dll
api-ms-win-core-synch-l1-1-0.dll
api-ms-win-core-synch-l1-2-0.dll
api-ms-win-core-synch-l1-2-1.dll
api-ms-win-core-sysinfo-l1-1-0.dll
api-ms-win-core-sysinfo-l1-2-0.dll
api-ms-win-core-threadpool-l1-2-0.dll
api-ms-win-core-timezone-l1-1-0.dll
api-ms-win-core-url-l1-1-0.dll
api-ms-win-core-winrt-l1-1-0.dll
api-ms-win-core-winrt-string-l1-1-0.dll
api-ms-win-downlevel-shlwapi-l1-1-0.dll
api-ms-win-eventing-provider-l1-1-0.dll
api-ms-win-security-accesshlpr-l1-1-0.dll
api-ms-win-security-base-l1-1-0.dll
api-ms-win-shcore-registry-l1-1-0.dll
APPID
aSPh6&
Assert
ASync3dF[^
ATL$__a
ATL$__m
ATL$__z
authority
Authority
AuthUri
AwaitOperationResult( webTokenRequestResultOperation.p, &result)
backendType == c_pMSAServiceType
Basic
Basic %hs
BytesToDigits
bytesWritten == bytesToCommit
C ;L$
C$Ph0}
C(QPhp}
C@QPh
C<QPh
C8QPh$}
caldav.calendar.yahoo.com
CalendarAgeFilter
callContext
CallContext:[%hs] 
carddav.address.yahoo.com
cbWrite == chunkSize
CEMAPI.dll
CertCompareCertificateName
CertFreeCertificateChain
CertFreeCertificateChainEngine
CertGetCertificateChain
CertGetCertificateContextProperty
CertGetEnhancedKeyUsage
CertGetNameStringW
charsConverted != 0
CHttpTransport_CreateInstance
client_id=
client_id=%s&client_secret=%s&grant_type=refresh_token&refresh_token=%s&scope=%s
client_secret
clientSecret.reserve(clientSecretSize / sizeof(WCHAR))
ClientUnreadToReadCount
CloseDataStoreLock
CloseHandle
CloseHandle ( lockHandle )
CloseThreadpoolTimer
CLSID_MailSyncEngine == sds.engineID
CLSIDFromString
cNames
CoCreateInstance
CoCreateInstanceElevated
code=
CoGetObject
CoGetObject( monikerName.c_str(), &bindOptions, interfaceId, ppInstance)
CoInitializeEx
CommsService
CompanyName
CompareFileTime
componentId
componentName
CompressWhitespaceNW
consumers
Content-Type: application/x-www-form-urlencoded
convertedBufferSize != 0
ConvertVariantTimeToFileTime
ConvertVariantTimeToFileTime(0, &(lastSyncTimeAsDate.date), &lastSyncTime)
CoTaskMemAlloc
CoTaskMemFree
CoUninitialize
CoWaitForMultipleObjects
CreateAuthHandler
CreateDataStoreLock
CreateEventExW
CreateEventW
CreateFileW
CreateMutexExW
CreateMutexW
CreateSemaphoreExW
CreateSyncBufferedStream
CreateThreadpoolTimer
CreateWrapFileStm
credential.assign(password)
credential->get_Password(&securePassword)
credentialUtilities->GetAccessToken( HStringReference(c_scope).Get(), HStringReference(c_defaultResource).Get(), tokenResult.GetAddressOf())
credentialUtilities->GetAccessToken( HStringReference(c_scope).Get(), HStringReference(resource.get()).Get(), tokenResult.GetAddressOf())
CredUtil_UpdatePasswordForAccount
CredVaultDelete
CredVaultRead
CredVaultWrite
CRYPT32.dll
CryptAcquireContextW
CryptAcquireContextW( tlx::replace(provider), 0, 0, 1, 0xF0000000)
CryptBinaryToStringA
CryptBinaryToStringA( pInputBuffer, inputBufferLength, 0x00000001 | 0x40000000, pOutputString, outputStringLength)
CryptBinaryToStringW
CryptBinaryToStringW( pInputBuffer, inputBufferLength, 0x00000001 | 0x40000000, pOutputString, outputStringLength)
CryptCreateHash
CryptCreateHash( provider, ((4 << 13) | (0) | 4), 0, 0, tlx::replace(hash))
CryptDestroyHash
CryptGetHashParam
CryptGetHashParam( hash, 0x0002, hashValue, &hashValueSize, 0)
CryptGetHashParam( hash, 0x0004, (LPBYTE)&hashValueSize, &dwordSize, 0)
CryptHashData
CryptHashData(hash, (LPBYTE)pUserId, (DWORD)[](size_t num) { DWORD out = 0xffffffffUL; do { HRESULT _hrTemp = Typecheck::CheckChrType(UIntPtrToULong(num, &out)); if ((0,((((HRESULT)(_hrTemp)) < 0)))) { Log_HREvent(_hrTemp, 0, "onecoreuap\\base\\mailcontactscalendarsync\\utils\\syncutil\\lib\\asutil.cpp", 524 ); } } while(0,0); return out; }(userIdSize), 0)
CryptReleaseContext
CRYPTSP.dll
CryptStringToBinaryA
CryptStringToBinaryA( pInputString, inputStringLength, 0x00000001, pOutputBuffer, pOutputBufferLength, 0, 0)
CryptStringToBinaryW
CryptStringToBinaryW( pInputString, inputStringLength, 0x00000001, pOutputBuffer, pOutputBufferLength, 0, 0)
currentContextId
currentContextMessage
currentContextName
currRefreshTokenValid
customAuthParams.append(escapedUsername.c_str())
customAuthParams.append(idParams)
customAuthParams.append(L"&")
customAuthParams.append(L"access_type=offline")
customAuthParams.append(L"username=")
D$ 9D$
D$ j@3
D$ Ph
D$ PhdD
D$ Pj
D$ QQ
D$ SV
D$ SVW
D$ YY
D$$;D$(
D$$9D$
D$$PV
D$$PW
D$$SP
D$(9D$
D$(9D$ t
D$(d,
D$(Ph
D$(Pj
D$(SP
D$(SVW
D$(WP
D$,9D$$
D$,9D$$t
D$,Ph
D$@9D$8t
D$\9D$T
D$\9D$Tt
D$\Ph\k
D$`Pj Z
D$`PS
D$`SVW
D$<9D$4t
D$<Q+
D$>Ph0
D$09D$(
D$09D$(t
D$09D$(t3S
D$0Pj
D$0PVV
D$0QP
D$0SVWj@jA
D$49D$,t
D$4CV3
D$4Pj
D$4PW
D$89D$0t
D$d9D$\t
D$D9D$<t
D$DPh\k
D$DPj
D$DS3
D$dSP
D$H9D$@t
D$Hj'PV
D$HPVh
D$L9D$D
D$L9D$Dt
D$LPj
D$P+D$
D$T9D$Lt
D$tj@SP
D$TPj
data.reserve((1024 * 60)+1)
DebugBreak
DefaultLogging
DefaultStoreDirty
DefaultWindowsLiveCid
DelayLoadFailureHook
DeleteAuthCertHash
DeleteCriticalSection
DeleteDataSource
DeletedMailCount
DeleteFileW
DeleteHttpTransport
DeleteInProgress
DeleteOAuthRefreshTokenForPartnership
DeletePwd
Device
device_id=
deviceFamily < 100
DeviceID
deviceID.valid()
deviceModel.assign(values)
deviceName.assign(values)
DeviceNeedsProvisioning
DeviceType
DisablePIIStripping
dj0yJmk9QzFFaHJsUnphMjlnJmQ9WVdrOVZUVk9iMWhCTXpZbWNHbzlNQS0tJnM9Y29uc3VtZXJzZWNyZXQmeD1lYw--
DllCanUnloadNow
DllGetClassObject
DMCfgUtils.dll
DoesServerSupportAutoMoveSentItem
Domain
DuplicateHandle
dwRC == 0L
dwSize == sizeof(DWORD)
E,SVW
E_INVALIDARG != hr
EASAccountId
ej<^V
Elevation:Highest!new:%s
email
Email
EmailAgeFilter
emails
Enabled
EnabledDavFeatures
EnableInProcTracingForProvider
encodedCredentials.reserve(encodedSize)
Engine
EnterCriticalSection
en-US
EOe41.3.6.1.4.1.311.71.1.1
Error
error
Error
errorCode
EscapeURL
EventData
EventRegister
EventSetInformation
EventUnregister
EventWriteTransfer
Exception
Exchange
expirationTime
expires_in
expression
ext-ms-win-ole32-bindctx-l1-1-0.dll
ext-ms-win-shell32-shellfolders-l1-1-0.dll
f&8).
F@+F<
F0+F,
f9\$ u
factory->ActivateInstance(&inspectable)
FAILED(error)
FailFast
failureCount
failureId
FailureTrigger
failureType
FallbackError
FALSE
FileDescription
fileHandle != ((HANDLE)(LONG_PTR)-1)
fileName
filePos
FileTimeToSystemTime
FileVersion
FindErrorCode
fj<[S
FlushInProcTraceSession
Fonecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\sourceinfo.cpp
FormatMessageW
FreeCredentialsHandle
FreeLibrary
FreeProws
FreeTransientObjectSecurityDescriptor
function
functionName
g_hServerReady != 0
gb4{g%L
GetAADToken
GetAccountSyncStats
GetAccountUsernameFromToken
GetActivationFactory( HStringReference(RuntimeClass_Microsoft_PPI_CredentialManagement_DeviceCredentialUtility).Get(), &credentialUtilities)
GetActivationFactory( HStringReference(RuntimeClass_Windows_Foundation_Uri).Get(), &uriFactory)
GetActivationFactory( HStringReference(RuntimeClass_Windows_Internal_Security_Authentication_Web_TokenBrokerInternal).Get(), &tokenBroker)
GetActivationFactory( HStringReference(RuntimeClass_Windows_Security_Authentication_Web_Core_WebAuthenticationCoreManager).Get(), &webAuthCore)
GetActivationFactory( HStringReference(RuntimeClass_Windows_Security_Authentication_Web_Core_WebTokenRequest).Get(), &requestFactory)
GetActivationFactory( HStringReference(RuntimeClass_Windows_Security_Authentication_Web_WebAuthenticationBroker).Get(), &wabBrokerStatics)
GetAuthCertHash
GetAuthCertTargetAndUser
GetAuthority
GetBatterySaverWnfName
GetCurrentProcess
GetCurrentProcessId
GetCurrentSyncStats
GetCurrentSyncStatsForMessage
GetCurrentSyncStatsForStore
GetCurrentThread
GetCurrentThreadId
GetDefaultDeviceType
GetDefaultMsaWebAccountId
GetDefaultStoreDirty
GetDomainFromEmail
GetFileAttributesExW
GetFileSize
GetGalSearchResultsFolderAndPartnerGuidEx
GetGoldenPartnershipId
GetLastError
GetLocalTime
GetMeetingNotificationFromMessage
GetModuleFileNameA
GetModuleFileNameW
GetModuleHandleExW
GetModuleHandleW
GetMonitorDisplayState
GetMsaCustomerId
GetMsgStoreFromMessage
GetOAuthAccessTokenForPartnership
GetOAuthHelperForAccount
GetOAuthHelperForProvider
GetOrCreateNullPowerDependencyCoordinatorManager
GetOutgoingMessageSizeLimit
GetPartnerGUID
GetProcAddress
GetProcessHeap
GetProductInfo
GetProviderUri
GetSessionSyncStats
GetSHA1HashOfString
GetSyncTargetName
GetSyncWorkOnBehalfTicket
GetSystemPowerStatus
GetSystemTime
GetSystemTimeAsFileTime
GetTickCount
GetTickCount64
GetTokenInformation
GetVersionExW
GetWebAccountId
GetWebAccountProvider
GetWebAccountProviderFromProviderId
GetWebTokenSilentlyEx
GetWebTokenTimedOut
Gmail
gmail.com
GO:#cR
GoldenPartnershipId
GoogleDefaultPadding
GoogleOAuthRedirectURI
GoogleOAuthTokenURI
GoogleOAuthURI
GoogleUserInfoURI
gRichkL
gvType == GUID_VALIDATION_GUID || gvType == GUID_VALIDATION_DATASOURCE
H!ZIg\
HasNeverSyncedSuccessfully
HeapAlloc
HeapFree
hr == ((HRESULT)0L)
hr == ((HRESULT)0L) || 0 != rghObjects[1]
hr == ((HRESULT)0L) || hMutex != 0
hr == ((HRESULT)0x85050013)
hr == E_ACCOUNT_NOTFOUND
hr == S_OK
hr == S_OK || hMutex != 0
hr == S_OK || NULL != rghObjects[1]
hrDelete
hresult
HRESULT
HrGetOneProp
hrRewrite
HrSetOneProp
HTMLTruncation
http://
https%3A%2F%2Fmail.google.com
https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fcalendar
https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fcarddav
https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fuserinfo.email
https://
https://login.microsoft.com
https://outlook.office.com
I0e0|0
icloud.com
IeRtUtil.dll
info != nullptr
InitializeCredVault
InitializeCriticalSection
InitializeCriticalSectionEx
InitializeMeContact
InitializeMsaStore
InitializeServerReadyEvents
InitializeSRWLock
InitializeSyncStatus
InitOnceBeginInitialize
InitOnceComplete
initWithWindow->Initialize(callerWindow)
InProcLogger.DLL
InprocLogger.dll
inspectable.As(&initWithWindow)
InternalName
InvalidateOAuthAccessTokenForPartnership
IPM.Schedule.Meeting.Canceled
IPM.Schedule.Meeting.Notification.Forward
IPM.Schedule.Meeting.Request
IPM.Schedule.Meeting.Resp.Neg
IPM.Schedule.Meeting.Resp.Pos
IPM.Schedule.Meeting.Resp.Tent
IsACOn
isalnum
IsDebuggerPresent
IsFirstSyncEver
IsMatchingClientCertificateEx
IsNotSupposedToSync
IsPwdSaved
IsScreenOn
IsValidAADAuthUri
it != m_objectMap.npos()
it == 0
j)[SP
j:j;h
j;j<3
j=Zf;T^
jI_PQ
joBh(C
joBh8n
jPRPj
jPSPQRV
jsonObject->GetNamedString( HStringReference(L"access_token").Get(), accessToken.GetAddressOf())
jxBh@_
kD$(<
kD$8<
kD$H<
kD$X<
kernelbase.dll
L$ HP
L$ Qh
L$ Qh}
L$ Qj
L$$+C\
L$$+C<
L$(+D$
L$(Qhb
L$(Qj
L$,_^[3
L$,SP
L$,SV
L$@Qh{
L$@Qj
L$@Qj7P
L$@QWP
L$\_^[3
L$\hxD
L$`Qj
L$<_^[3
L$<GW
L$0j(QP
L$0Qh|
L$0Qj
L$0Qj,P
L$4+D$$
L$8QWP
L$d_^[3
L$L^[3
L$l_^[3
L$PQhz
L$PQj
L$pQj
L$PQWP
L$t_^[3
LASTATTEMPTTIME
LastSuccessfulHeartbeat
LASTSUCCESSTIME
LastSyncAttempt
LastSyncSuccess
LCMapStringW
LeaveCriticalSection
LegalCopyright
lineNumber
listener->add_AccountAdded(addedHandler.Get(), &addedToken)
listener->add_AccountChanged(changedHandler.Get(), &changedToken)
listener->add_AccountDeleted(deletedHandler.Get(), &deletedToken)
LMNOPQYZ[_`abdemq
LoadHeartbeatValues
LoadLibraryExW
LoadLibraryW
LoadStringW
Local\SM0:%d:%d:%hs
LocalAlloc
LocalFree
LogHr
LogRollOverSize
LogSyncBiweeklySQM
lstrcmpiW
lstrcmpW
M QRSP
m.google.com
m_accountName.assign(L"ServerLog")
m_accountName.assign(pSettings->pAccountName)
m_activityRefCount == 0
m_clientId.assign(pClientId)
m_clientSecret.assign(pClientSecret)
m_completedEvent != 0
m_customAuthParams.assign(pCustomAuthParams)
m_datatypeList.push_back(guidType)
m_datatypeList.reserve(4)
m_endURL.assign(pEndURL)
m_EngineGuid != GUID_INVALID
m_ge.IsInitialized()
m_Name != 0
m_pPdcReference
m_redirectURL.assign(pRedirectURL)
m_refreshURL.assign(pRefreshURL)
m_scopes.assign(pScopes)
m_sources.push_back(mailSourcesList[i])
m_sources.push_back(serverSourcesList[i])
m_startURL.assign(pStartURL)
m_userNameHint.assign(pUsernameHint)
m_watchdogDisabled
M0U0g0y0
mac.com
MailBodyTruncation
MailFileAttachments
MailIncoming
MailOutgoing
MailReceivedCount10kTo20k
MailReceivedCount20kTo40k
MailReceivedCount5kTo10k
MailReceivedCountOver40k
MailReceivedCountUnder5k
MailReceivedKB
mailSourcesList.push_back(guidSource)
mail-x
malloc
MAPIAllocateBuffer
MAPIFreeBuffer
MAPIInitialize
MAPILogonEx
MAPIUninitialize
MarkServerReady
MarkServerShutdown
MarkUserDataAccountAsHidden
MaxAttachmentSize
MaxCalendarAgeFilter
MaxEmailAgeFilter
MaxEmailBodyTruncationSize
MaxEmailHTMLBodyTruncationSize
MCCS\
MCCSPal.dll
me.com
Meeting:AllDay
Meeting:DisallowNewTimeProposal
Meeting:Occurences
Meeting:Reminder
Meeting:Timezone
memcmp
memcpy
memcpy_s
memmove
memset
message
Microsoft
Microsoft Corporation
Microsoft Smart Card Key Storage Provider
Microsoft.PPI.CredentialManagement.DeviceCredentialUtility
Microsoft.PPI.CredentialManagement.PPIDeviceCredentialReader
Microsoft.Windows.OneSync.DiagCritical
Microsoft.Windows.OneSync.DiagError
Microsoft.Windows.OneSync.DiagTrace
Microsoft.Windows.OneSync.DiagWarning
Microsoft.Windows.OneSync.SyncUtil
Microsoft.Windows.Unistack.FailureTrigger
MicrosoftDefaultPadding
MicrosoftOAuthRedirectURI
MicrosoftOAuthTokenURI
MicrosoftOAuthURI
MicrosoftUserInfoURI
Microsoft-Windows-MCCS-SyncUtil
MinutesBetweenFT
mode != Access_Create
module
MSFT-
Msg:[%ws] 
msvcrt.dll
MultiByteToWideChar
name.assign(pName)
ndrPropValues[0].ulPropTag == ((((ULONG)(0x0037))<<16)|((ULONG)(((ULONG) 31))))
ndrPropValues[1].ulPropTag == ((((ULONG)(0x0C1F))<<16)|((ULONG)(((ULONG) 31))))
NetworkHelper.dll
newAccessTokenValid
NextLogNumber
notificationData && (0 != byteCountNotificationData)
ntdll.dll
NULL != ppResumeState
NULL != pScopeMetadata
NULL != pServerName
NULL != pSyncPartner
NULL != sessionScope
NULL == sessionScope
nullptr != m_activationHandle
nullptr != m_pTpTimer
nullptr != pDisplayName
nullptr == buffer.insert( buffer.end(), readBuffer, readBuffer + readCount)
nullptr == m_activationHandle
NumberOfLogs
O PVS
OAuth
OAuthHelper_CreateInstance
OAuthRefreshToken
OG[Rz
OLEAUT32.dll
OMTP11
onecore\internal\sdk\inc\wil\opensource\wil\resource.h
onecoreuap\base\appmodel\UserDataAccess\
onecoreuap\base\MailContactsCalendarSync\
onecoreuap\base\MailContactsCalendarSync\Porting\Inc\AutoVariant.h
onecoreuap\base\MailContactsCalendarSync\Porting\Inc\EntryIdEx.h
onecoreuap\base\MailContactsCalendarSync\PublishedInternal\Idl\objfre\i386\AccountAccessorTypes.h
onecoreuap\base\MailContactsCalendarSync\PublishedInternal\Inc\EnumMAPITable.h
onecoreuap\base\MailContactsCalendarSync\PublishedInternal\Inc\SyncDeadlockWatchDog.h
onecoreuap\base\MailContactsCalendarSync\PublishedInternal\Inc\SyncDeadlockWatchdog.h
onecoreuap\base\MailContactsCalendarSync\PublishedInternal\Inc\SyncPdcReference.h
onecoreuap\base\MailContactsCalendarSync\PublishedInternal\Inc\SyncResettableTimer.h
onecoreuap\base\mailcontactscalendarsync\utils\syncsqm\lib\sqmpartnertype.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\accessorutils.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\accountpropertyutils.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\activesyncsourceinfo.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\asutil.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\authhandler.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\authtargettype.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\base64.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\basicauthhandler.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\comelevation.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\contactsyncutils.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\credutil.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\DelayedDBPropertiesStream.h
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\domutil.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\easaadauthhandler.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\easauthtargettype.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\easheartbeatcontroller.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\enumdatatypereg.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\enumsource.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\enumsourcereg.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\enumsourceregsimple.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\fileutil.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\guidenumerator.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\heartbeatalgorithmbase.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\jsonhelpers.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\liveendpoints.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\mapiutils.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\msautils.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\oauthaccountutil.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\oauthhandler.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\oauthhelper.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\oauthtokenutil.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\password.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\plaintextauthhandler.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\pluginerror.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\policyutil.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\popimapsourceinfo.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\ppiauthhandler.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\radiomanager.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\registryutils.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\serverreadyindictor.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\smtpauthtargettype.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\sourcelock.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\ssoaccountscallbackregistration.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\ssoauthhandler.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\ssoutils.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\syncbufferedstream.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\synccalendaringutils.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\syncds.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\synchttputils.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\synclogger.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\syncpersistentobjectmanager.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\SyncPersistentObjectManager.h
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\syncsessionhelpers.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\syncstatshelpers.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\syncstatusnotification.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\tokenbrokerutils.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\updaterestoreutils.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\webauthhandler.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\webauthsettings.cpp
onecoreuap\internal\base\inc\WRLWinRTHelpers.h
onecoreuap\private\base\inc\CommsPoomHelpers.h
onecoreuap\private\base\inc\HashKeyHelper.h
onecoreuap\private\base\inc\SafeMapiProps.h
onecoreuap\private\base\inc\unistorehelper.h
OneStopFactory
OneSyncError
OPCOT
OpenMimeBufferedStream
OpenMutexW
OpenProcessToken
OpenProviderKey
OpenSemaphoreW
OpenThreadToken
organizations
OriginalFilename
originatingContextId
originatingContextMessage
originatingContextName
originTag.append(timeStamp)
originTag.assign(pOriginTag)
outcome
outlook.at
outlook.be
outlook.ca
outlook.ch
outlook.cl
outlook.cn
outlook.co.id
outlook.co.il
outlook.co.in
outlook.co.jp
outlook.co.kr
outlook.co.nz
outlook.co.th
outlook.co.uk
outlook.co.za
outlook.com
outlook.com.ar
outlook.com.au
outlook.com.br
outlook.com.hk
outlook.com.mx
outlook.com.my
outlook.com.pt
outlook.com.sg
outlook.com.tr
outlook.com.tw
outlook.com.vn
outlook.cz
outlook.de
outlook.dk
outlook.es
outlook.fi
outlook.fr
outlook.gr
outlook.hk
outlook.hu
outlook.ie
outlook.in
outlook.it
outlook.jp
outlook.lt
outlook.lv
outlook.my
outlook.nl
outlook.no
outlook.ph
outlook.rs
outlook.ru
outlook.se
outlook.sg
outlook.sk
outlookApp.CoCreateInstance(__uuidof(Application))
OutputDebugStringW
P1_HexInt32
P1_HResult
P1_Int32
P1_UnicodeString
P2_String
P3_UInt32
pAccessToken->assign(accessToken.GetRawBuffer(nullptr))
pAccount->get_UserName(userName.GetAddressOf())
pAccount->get_WebAccountProvider(&provider)
pAccountId->assign( WindowsGetStringRawBuffer(accountId.Get(), nullptr))
pAcessToken->assign(accessToken.GetRawBuffer(nullptr))
packageName.append(L"!")
packageName.append(storeIdAsString)
packageName.assign(c_emailProductId)
packages\ActiveSync\LocalState\DiagOutputDir
Padding
ParseDelimitedString
PartA_PrivTags
partnerId
PathCchAddBackslash
PathCchAddBackslash(pPath, pathLength)
PathCchCombine
PathCchCombine(pPath, pathLength, localDataPath, pRelativePath)
pBackendServiceType->assign(pServiceType)
pCidTemp.valid()
pCredential->assign(pPassword, passwordLength)
pCredential->get_Domain(&domain)
pCredential->get_Username(&userName)
pCredential->get_UserPrincipalName(&userPrincipalName)
pDeviceId->assign(deviceID)
pDeviceType->assign(deviceTypeDefault)
pdhrResult != 0
pDisplayState != nullptr
pDomain->assign(pszDomainName)
pEndPoint->assign(pStringValue.get())
pEndToken == pToken
pEntryId->assign(tempEntryId)
Performance
pEventData
pGuid != 0
pIdParams->append(L"&device_model=")
pIdParams->append(L"&device_name=")
pIdParams->append(L"device_id=")
PIMPR_DISPLAY_NAME == propertyValues[0].propid
PIMSTORE.dll
pIsTimeoutError
pKey != 0
pKey != NULL
pMsgStore
pName
policyKey.append(L"\\")
policyKey.append(partnerString)
policyKey.append(pPolicyInfo->pwszPolicyKey)
policyKey.append(pPolicyInfo->pwszPolicyName)
position != nullptr
postLocation.assign(m_refreshUri)
POutlookAppManager_CreateInstance
pPeriod != nullptr
PPPPVRP
pProperty->assign( WindowsGetStringRawBuffer(propertyValue.Get(), nullptr))
pProvider->get_Id(providerId.GetAddressOf())
ppSyncStatusNotification
ppTagArray
ppwszPassword
PQQQQ
PreferredBodyType
pRefreshToken->assign(refreshToken.GetRawBuffer(nullptr))
pReportError
pRequest->get_Properties(&requestProperties)
pResult->get_ResponseData(&responseData)
pResult->get_ResponseStatus(&requestStatus)
ProductName
ProductVersion
Prop_AnsiString
Prop_Dword
Prop_FileTime1
Prop_HexInt32
Prop_String
Prop_String1
Prop_String2
Prop_String3
Prop_StringA_1
Prop_StringA_2
properties->HasKey( HStringReference(pPropertyName).Get(), &hasProperty)
properties->Insert( HStringReference(L"client_secret").Get(), HStringReference(pClientSecret).Get(), &replaced)
properties->Insert( HStringReference(parameter.first.c_str()).Get(), HStringReference(parameter.second.c_str()).Get(), &replaced)
properties->Lookup( HStringReference(pPropertyName).Get(), propertyValue.GetAddressOf())
props!=0
props!=NULL
props==0
props==NULL
protocolReturnData.assign(pAuthCodeResponse)
providerErrorText
providerWithAuthotity->get_Authority(authority.GetAddressOf())
PRVAT
pServerName->assign(L"m.google.com")
PSh@j
PSShx
pString->Get(&length, &pStringValue)
pSyncAttemptTime
pSyncSuccessTime
pszMultiByteStr
pszValue
pTags->cValues == (sizeof(*RtlpNumberOf(spta.aulPropTag)))
pTags->cValues == ARRAYSIZE(spta.aulPropTag)
pTargetType == AuthTargetType::GetAuthTargetType(AuthTargetKind::ExchangeActiveSync)
pToken->assign( WindowsGetStringRawBuffer(token.Get(), nullptr))
pTokenExpirationTime->assign(conversionBuffer)
pTokenType->assign(tokenType.GetRawBuffer(nullptr))
pUrlParam->append(escapedUrl.c_str())
pUser->assign(((&userVar)->bstrVal))
pUserName->assign( WindowsGetStringRawBuffer(userName.Get(), nullptr))
pUsername->assign(account.GetRawBuffer(nullptr))
pUsername->assign(hstrAccount.GetRawBuffer(nullptr))
pusOid != 0
pValue == tlx::iwstring_view_ascii(pStringValue, length)
pValue->append(uri, beginIndex, valueLength)
pValue->assign(GetVariantString(&propValue, L""))
PVQh?
PVSh?
PVVh,%
PVVVVC
PWSh?
PWSShh
pwszWideCharStr
Q 9Q(}
q(9>u
Qf99u=h
Qj6Q3
QjaW3
QjbQ3
QjcQ3
QjCQB
QjJh8.
QjkW3
QjlQ3
QjNQ3
QjoW3
QPh\}
QQQQQ
QQSVW
QQSVWhQ&
QQVW3
QQVWh
QQVWQ
QRPh$$
QRPh$%
QRPhD$
QRPhd$
QRPhD%
QRPhd%
QSVW3
QueryPerformanceCounter
QueryTransientObjectSecurityDescriptor
QVh@]
QVh@^
QVh`^
QVht]
QVhXZ
QWh84
QWhXZ
r=VWju_
RadioManager::MarkInterfaceAsActive
RaiseException
RaiseFailFastException
reader->Read(&credential)
ReadFile
ReadOAuthRefreshTokenForPartnership
ReadPasswordForPartnership
reason
ReceivedMailCount
refresh_token
RefreshUri
RefreshWebTokenSilentlyEx
RegCloseKey
RegCreateKeyExW
RegDeleteKeyW
RegDeleteTreeW
RegDeleteValueW
RegEnumKeyExW
RegEnumValueW
RegGetValueW
RegisterSsoAccountsCallback
RegOpenKeyExW
RegQueryInfoKeyW
RegQueryValueExW
RegSetValueExW
ReleaseDataStoreLock
ReleaseMutex
ReleaseSemaphore
ReleaseSRWLockExclusive
REPORT.IPM.Note.NDR
request.append( (OAuthGrantType::Implicit == grantType) ? L"token" : L"code")
request.append(accountInfoURI)
request.append(escapedRedirectUri.c_str())
request.append(escapedUsername.c_str())
request.append(L"&")
request.append(L"&client_secret=")
request.append(L"&code=")
request.append(L"&grant_type=authorization_code")
request.append(L"&grant_type=refresh_token")
request.append(L"&login_hint=")
request.append(L"&redirect_uri=")
request.append(L"&refresh_token=")
request.append(L"&response_type=")
request.append(L"&scope=")
request.append(L"?access_token=")
request.append(L"?client_id=")
request.append(L"client_id=")
request.append(m_clientId)
request.append(m_clientSecret)
request.append(m_customAuthParams)
request.append(m_scopes)
request.append(m_startURL)
request.append(pAccessToken)
request.append(pRefreshToken)
request.append(protocolReturnData, beginIndex, authCodeLength)
request->get_Properties(&properties)
requestFactory->Create( pProvider, HStringReference(pScope).Get(), HStringReference(pClientId).Get(), &request)
requestParameters.emplace(L"authority", pAuthUri).first != nullptr
requestParameters.emplace(L"resource", utl::move(resourceUri)).first != nullptr
requestProperties->Insert( HStringReference(RequestAutorityPropertyName).Get(), authority.Get(), &replaced)
RequiredEncryptionSMIMEAlgorithm
RequiredSignedSMIMEAlgorithm
RequireEncryptedSMIMEMessages
RequireManualSyncWhenRoaming
RequireSignedSMIMEMessages
res == 0L
ResetEvent
ResolveDelayLoadedAPI
resource
resourcesLib.valid()
resourceUri.assign(pResourceUri, uriLength)
ResourceUrl
response->get_Token(token.GetAddressOf())
responseBody.reserve(++wideCount)
responseData->GetAt(0, &response)
result->get_DefaultWebAccount(&account)
ReturnHr
rgName
RoActivateInstance
RoGetActivationFactory
rpmsg.message
RPSToken
RRRRRRhN
RtlCaptureContext
RtlClearThreadWorkOnBehalfTicket
RtlDisownModuleHeapAllocation
RtlDllShutdownInProgress
RtlGetDeviceFamilyInfoEnum
RtlGetThreadWorkOnBehalfTicket
RtlIsCriticalSectionLockedByThread
RtlIsCriticalSectionLockedByThread(&(_pAtlModule->m_csStaticDataInitAndTypeInfo.m_sec))
RtlIsMultiSessionSku
RtlReportException
RtlSetThreadWorkOnBehalfTicket
s!Qh>
s_objectManager != 0
s_objectManager != NULL
SafeCustomerId
SafeCustomerId is: '%S', parsed value: %I64d, end index: %d
SafeLPWSTR
ScheduledSyncPeriod
Scheme
Scope
scopes->append(pProviderInfo->ScopeAccountInfo)
scopes->append(pProviderInfo->ScopeCalendar)
scopes->append(pProviderInfo->ScopeContacts)
scopes->append(pProviderInfo->ScopeMail)
scopes->append(pProviderInfo->ScopeSeperator)
sdct-w
sdpp-w
securePassword->Get(&passwordLength, &pPassword)
SelectionLanguage
SelectionNamespaces
SentMailCount
Server
ServerLog
serverSourcesList.push_back(guidSource)
ServerSync:AttOID
ServerSync:FileURI
ServerSync:FolderName
service::ssl.live.com::MBI_SSL
SetAuthCertHash
SetBatterySaverWnfName
SetConversationId
SetDefaultStoreDirty
SetEvent
SetLastError
SetMonitorDisplayState
SetOutgoingMessageSizeLimit
SetSyncWorkOnBehalfTicket
SetThreadpoolTimer
SetUnhandledExceptionFilter
SHCORE.dll
SHCreateMemStream
SHGetKnownFolderPath
SHGetKnownFolderPath( knownFolderId, KF_FLAG_DONT_VERIFY, nullptr, replace(localDataPath))
ShouldReportAssertionFailure
SHRegGetValueW
sizeof(CEENTRYID) == storeEntryIdPropVal->Value.bin.cb
Sleep
SleepConditionVariableSRW
SMIMEAlwaysEncrypt
SMIMEAlwaysSign
SNProviderAccountName
Software\Microsoft\AccountSettings
Software\Microsoft\ActiveSync
Software\Microsoft\ActiveSync\Environment
Software\Microsoft\ActiveSync\Partners
Software\Microsoft\ActiveSync\Security\Provision
Software\Microsoft\PPI\Settings\DeviceAccount
source != GUID_INVALID
source != GUID_NULL
SPERF_TAG_LOAD_XMLDOM
SPh$I
srcText
SSj P
SsoId
SsoProviderMSA == providerType
SsoTokenTarget
SspiCli.dll
SSQPV
SSShp
StateTransition
Status
StoreId
storeIds[0] != storeIds[1]
StoreType
strcspn
StringCbLengthA(pData, 2147483647 * sizeof(CHAR), &stringSize)
StringCbLengthW( credentialValue, credentialValueMaxLength * sizeof(WCHAR), &pwdSizeInBytes)
StringCchCatW(filePath, (sizeof(*RtlpNumberOf(filePath))), pFileName)
StringCchCatW(pwszBuffer, cchBufferSize, s_ServerTypeTable[type])
StringCchCatW(pwszBuffer, cchBufferSize, wszDataSource)
StringCchCopyExW( target, targetLength, pPrefix, &pEnd, &countCharsRemaining, 0)
StringCchCopyW( m_logPostfix, (sizeof(*RtlpNumberOf(m_logPostfix))), pSettings->logFilePostfix)
StringCchCopyW( m_logPrefix, (sizeof(*RtlpNumberOf(m_logPrefix))), pSettings->logFilePrefix)
StringCchCopyW(lineBuffer + HEX_LINE_CHARS, destinationSize, L"\r\n\0")
StringCchCopyW(pBuffer, bufferLength, value.c_str())
StringCchCopyW(pDestinationFileName, 260, pDefaultName)
StringCchCopyW(pPassword, passwordLen, pTmp)
StringCchCopyW(pwszBuffer, cchBufferSize, wszCredentialName)
StringCchCopyW(pwszPassword, dwPasswordLen, szNoPassword)
StringCchCopyW(retVal, addressLength, pMatchedAddress)
StringCchCopyW(retVal, bufferLength, localUsername.c_str())
StringCchLengthW(pBody, c_maxNDRBodySize, &contentLength)
StringCchLengthW(pMatchedAddress, (2147483647 - 1), &addressLength)
StringCchLengthW(pSubjectFormat, c_maxSubjectSize, &subjectFormatSize)
StringCchLengthW(pwszBuffer, cchBufferSize, &cchTempTargetName)
StringCchLengthW(pwszServer, MAX_SERVER_NAME_LENGTH, &cchServerSize)
StringCchPrintfA( partnerHeader, (sizeof(*RtlpNumberOf(partnerHeader))), c_partnerMapping, partnerGuid, TraceGetPartnerId(m_partner))
StringCchPrintfA(timeStamp, (sizeof(*RtlpNumberOf(timeStamp))), "[%02d/%02d/%04d %02d:%02d:%02d.%03d] \r\n", SystemTime.wDay, SystemTime.wMonth, SystemTime.wYear, SystemTime.wHour, SystemTime.wMinute, SystemTime.wSecond, SystemTime.wMilliseconds)
StringCchPrintfExW( deviceTypeFamily, sizeof(*__countof_helper(deviceTypeFamily)), nullptr, nullptr, 0x00000800, L"%u", deviceFamily)
StringCchPrintfW( pFileName, 260, L"%s%s%s-%d.txt", m_logPrefix, sanitizedFileName, m_logPostfix, logNumber)
StringFileInfo
StringFromGUID2
StringFromGUID2 ( partnerGuid, wszDataStoresLockName, 40 )
StringFromGUID2(dataTypeID, wszType, (sizeof(*RtlpNumberOf(wszType))))
StringFromGUID2(partner, partnerString, (sizeof(*RtlpNumberOf(partnerString))))
StringFromGUID2(source, wszDataSource, (sizeof(*RtlpNumberOf(wszDataSource)))) != 0
strspn
StrStrIW
SUCCEEDED(_IsValidToken(currentToken, &valid)) && (FALSE != valid)
SUCCEEDED(hr)
SUCCEEDED(hr) && (info != NULL)
SUCCEEDED(hr) && (info != nullptr)
success
SVWhQ&
SVWj@
SVWj@jA
SVWj<j=
SVWj8
SVWjEjF
SVWPh
SVWu4
SVWu4jS_W
SVWu6
Sync utilities for mail, contacts, calendar
SYNC_CERT
SyncGetDeviceUniqueID
SyncPassword
SyncPdcReference_WatchdogReport
SyncPdcReference_WatchdogsEnabled
syncPeriodInMinutes != invalidPeriod
SyncRes.dll
SyncServer
syncServices.CoCreateInstance(__uuidof(POSyncServices))
SyncSqmUpdateStats
SyncStatusEventType_None == pEventData->eventType || SyncStatusEventType_Reset == pEventData->eventType
SyncUseSSL
SyncUtil
SyncUtil.dll
SYNCUTIL.dll
SyncUtil.pdb
SyncUtil_OAuth_GetTokensFromAuthCode
SyncUtil_OAuth_RefreshTokens
SyncUtil_XMLParse_LoadFailFilePos
SyncUtil_XMLParse_LoadFailHresult
SyncUtil_XMLParse_LoadFailReason
SyncUtil_XMLParse_LoadFailSrcText
SyncUtil_XMLParse_LoadFailUrl
SyncWerReportComponentName
SyncWerReportGenerator
SyncWhenRoaming
SystemTimeToFileTime
t!SVP
T$ RP
t$ Yt@+
t$$PQ
t$$PWW
T$$RP
t$(PQ
T$(RP
T$,;T$
t$,PQ
t$<WP
t$0PQ
t$4PQ
t$pVQ
t%h(+
t&j<_
t)h@k
t.hQ&
t:j7^V
t;hQ&
t;jE^V
t]jN_W
t+ju_
t+Qho
t1j_^V
t2hQ&
t8WjJ_W
TASKX
tcPQR
tDjV^V
TempContact:DisplayName
TEMPH
TEMPP
TEMPT
tempUserId.append(L"\\")
tempUserId.append(pUserName)
tempUserId.assign(pDomain)
TerminateProcess
threadId
tk!\$
tlx::append_sprintf(tempString, L"%s=", paramName)
tlx::assign_sprintf( *pAuthorization, L"%s %s", m_authScheme.c_str(), pCredential)
tlx::assign_sprintf( *pAuthorization, L"Basic %hs", encodedCredentials.c_str())
tlx::assign_sprintf( keyPath, L"%s\\WebAuth\\%s", c_wszActiveSyncKey, pProviderId)
tlx::assign_sprintf( m_account, L"%s\\%s", domain.c_str(), userId.c_str())
tlx::assign_sprintf( monikerName, L"Elevation:Highest!new:%s", classIdString)
tlx::assign_sprintf( requestBody, L"client_id=%s&client_secret=%s&grant_type=refresh_token&refresh_token=%s&scope=%s", _GetClientId().c_str(), _GetClientSecret().c_str(), pRefreshToken, _GetScope().c_str())
tlx::assign_sprintf( subject, pSubjectFormat, c_maxSubjectSize - subjectFormatSize, pOriginalSubject)
tlx::assign_sprintf( wideCredentials, L"%s:%s", GetAccount(), pCredential)
tlx::assign_sprintf(userAgent, L"%s%s-%d/%u.%u.%u", c_wszHttpUserAgent, pwszDevice.get(), deviceFamily, OSVersionInfo.dwMajorVersion, OSVersionInfo.dwMinorVersion, OSVersionInfo.dwBuildNumber)
tlx::assign_wide( multiByteCredentials, wideCredentials, 0)
token
token_type
tokenBroker->GetDefaultSignInAccountAsync( &getDefaultSignInAccountResultOperation)
TokenBrokerError
tokenType
Tonecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\internetmailauthtargettype.cpp
Trace
Translation
true == m_watchdogDisabled
TryGetDefaultSignInAccountInfo
tUWSW
tVV9_
u!h((
u!j![
u!j/_
u!j:_
u!j\_
u!ja_
u!jl^
u!jP^
u$jf^
u$jg^
u$jV^
u$jY_
u$WSQ
u(jL_
u)j _
u)j"_
u)jQ^
u)jS^
u*j[_
u*jX^
u*QhY
u,j[^
u,jT^
u,jt_
u.j]_
u.QhY
u/j+^
u/jj^
u:j6_W
u:WjP_W
u?Sj=[S
U|SzZK#2J
u1j:^V
u1jK^V
u1jX[S
u2j@^
u2j8_W
u2jB_
u4j`^V
u4j0_
u5j*[S
u5j\^
u5j<^V
u5j>^V
u5jC^V
u5jm^
u5jo^V
u5jp^V
u7j"[
u7j]^V
u7jU_
u8jn^V
UIntPtrToInt(buffer.size(), &bufferSize)
u-jR^
uLj`^
ULongAdd((ULONG)[](size_t num) { ULONG out = 0xffffffffUL; do { HRESULT _hrTemp = Typecheck::CheckChrType(UIntPtrToULong(num, &out)); if ((0,((((HRESULT)(_hrTemp)) < 0)))) { Log_HREvent(_hrTemp, 0, "onecoreuap\\base\\mailcontactscalendarsync\\utils\\syncutil\\lib\\password.cpp", 139  ); } } while(0,0); return out; }(pwdSizeInBytes), sizeof(WCHAR), &blobSizeInBytes)
UnhandledExceptionFilter
UninitializeServerReadyEvents
uNPPV
UpdatedMailCount
UpdateYahooAccountType
uri.assign(pProtocolReturnData)
uriFactory->CreateUri(HStringReference(m_redirectURL.c_str()).Get(), &callbackUri)
uriFactory->CreateUri(HStringReference(request.c_str()).Get(), &startUri)
url.append(pAppend->c_str())
url.append(pAppend->c_str(), c_MaxParamSize)
UrlUnescapeW
UrlUnescapeW(pValue->data(), nullptr, nullptr, 0x00100000)
UseBuiltInTeamDeviceAccount
UserDataTimeUtil.dll
UserDataTypeHelperUtil.dll
username=
USOIDfromCEENTRYID
uUj;_
v(h8'
V,_^[
V_VT(&nameVar) == VT_BSTR
value.assign(pValue)
VarFileInfo
VaultAddItem
VAULTCLI.dll
VaultCloseVault
VaultCreateItemType
VaultFree
VaultGetItem
VaultGetItemType
VaultOpenVault
VaultRemoveItem
VerifyDataStoreLockOwner
VPh\I
VPhXR
VQPWV
VS_VERSION_INFO
VSWQh
VVSWVh
VVVVGW
VVVVj
VWh4F
VWhQ&
VWjEjF
VWjPj
w PQQQQS
wabBrokerStatics->AuthenticateWithCallbackUriAndContinue( startUri.Get(), callbackUri.Get())
WaitForMultipleObjects
WaitForServerReady
WaitForSignalOrShutdown
WaitForSingleObject
WaitForSingleObjectEx
WaitForThreadpoolTimerCallbacks
WakeAllConditionVariable
Warning
watchdogDurationMs
watchdogStartTime
wcscat_s
wcschr
wcscspn
wcsncmp
wcsnlen
wcsrchr
wcsstr
wcstok_s
webAuthCore->FindAccountAsync( pProvider, HStringReference(pAccountId).Get(), &findAccountOperation)
webAuthCore->FindAccountProviderAsync( HStringReference(pProviderUri).Get(), &findAccountProviderOperation)
webAuthCore->FindAccountProviderWithAuthorityAsync( HStringReference(pProviderUri).Get(), HStringReference(pAuthority).Get(), &findAccountProviderOperation)
webAuthCore->GetTokenSilentlyAsync( pRequest, &webTokenRequestResultOperation)
webAuthCore->GetTokenSilentlyWithWebAccountAsync( pRequest, pAccount, &webTokenRequestResultOperation)
WebTokenRequestStatus_Success != requestStatus
WEVT_TEMPLATE
WideCharToMultiByte
WilError_03
wilResult
win:Error
win:Informational
win:Start
win:Stop
win:Verbose
win:Warning
Windows.Data.Json.JsonObject
Windows.Foundation.Uri
Windows.Internal.Security.Authentication.Web.TokenBrokerInternal
Windows.Security.Authentication.Web.Core.WebAuthenticationCoreManager
Windows.Security.Authentication.Web.Core.WebTokenRequest
Windows.Security.Authentication.Web.WebAuthenticationBroker
WindowsCreateString
WindowsCreateStringReference
WindowsDeleteString
WindowsGetStringRawBuffer
WindowsLiveActiveSync
WindowsLiveServiceTarget
WindowsLiveStorage
WindowsMail
WINHTTP.dll
WinHttpCrackUrl
WinHttpCrackUrl(pResourceUri, 0, 0, &urlComponents)
WinHttpCrackUrl(providerUri.c_str(), 0, 0, &urlComponents)
WinSqmAddToStreamEx
WinSqmEndSession
WinSqmStartSession
WjEjFh
WLAccountSyncEnabled
WriteOAuthRefreshTokenForPartnership
WritePasswordForPartnership
wszName != 0
WWVSWh
www.google.com
WWWRQ
Xf9D$
Xf9D$ 
XPath
xZSVW
y Qjn3
y!j\_
y!jF_
y"j"_
y"ju_
y$j=_
y$jC^
y$jK_
y%Qjj
y&QjQ3
y(QjB3
y)jW^
y)jz^
y)Qh<
y*Qh8
y*QjH3
y,jF^
y?Qhx
y]Qhg
Y__^[
y1jf[S
y5jC_
Yahoo
yahoo
YahooDefaultPadding
YahooOAuthRedirectURI
YahooOAuthTokenURI
YahooOAuthURI
YahooUserInfoURI
yBQji
ycal-w
y'j(^
y'j5^
y'j6^
y'jt^
y'jw^
yMQjH3
y'Qj4
y'QjoQ3
ySQh_
YY_^]
YY9?u
