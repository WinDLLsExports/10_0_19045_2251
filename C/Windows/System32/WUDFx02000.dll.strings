 A^_^
 A_A^_
 A_A^A\
 A_A^A\_^
 H3E H3E
 http://www.microsoft.com/windows0
 imp_WdfIoQueueGetState
 Microsoft Corporation. All rights reserved.
 Microsoft Operations Puerto Rico1
 Operating System
 TRACINGFULL TRACINGERROR TRACINGDBGPRINT TRACINGFRAMEWORKS TRACINGAPI TRACINGAPIERROR TRACINGRESOURCES TRACINGLOCKING TRACINGCONTEXT TRACINGPOOL TRACINGHANDLE TRACINGPNP TRACINGIO TRACINGIOTARGET TRACINGDMA TRACINGREQUEST TRACINGDRIVER TRACINGDEVICE TRACINGUSEROBJECT TRACINGOBJECT TRACINGPNPPOWERSTATES TRACINGIFRCAPTURE
 wEM;
 Windows
!\$ D
!\$0!\$(H
!\$8H
!|$0I
!This program cannot be run in DOS mode.
"Microsoft Window
"W!Bwaiting for continuous reader to finish, WDFUSBPIPE
$`2X`F
$0< u
$H9t$xA
%hs!%p: 
%hs(%d) tid(%x) %08X %ws
%hs(%u)\%hs!%p: 
%Microsoft Windows Production PCA 2011
%Microsoft Windows Production PCA 20110
%s:%u(%S)
(A_A^^[
(caller: %p) 
(t$@H
(Unknown)
)FxInterruptThreadpool::_CreateAndInit
)M9?t$
)Microsoft Root Certificate Authority 20100
* Actual function table count  : %d 
* DDI function table mismatch detected in UMDF driver. The 
* driver will not load until it is re-compiled using a 
* Expected function table count: %d 
* newer version of the Windows Driver Kit (WDK). 
* Service name                 : %wZ
************************* 
*************************** 
*7Unexpected
*DeviceInit should not be NULL
*njkH
*SocG
*UMDF verification faults should not call this code path
,3Avpq0azeUXJv0lC435DgZTSCW6KzmDr+SwYX6uP6Ns=0Z
,XL9m
.00cfg
.bss$00
.bss$dk00
.bss$pr00
.bss$zz
.CRT$XCA
.CRT$XCU
.CRT$XCZ
.CRT$XIA
.CRT$XIZ
.D9=^#
.data
.data$00
.data$brc
.data$dk00$brc
.data$pr00
.data$pr00$brc
.data$zz
.data$zz$brc
.edata
.gehcont
.gfids
.giats
.idata$2
.idata$3
.idata$4
.idata$5
.idata$6
.pdata
.rdata
.rdata$00
.rdata$brc
.rdata$zETW0
.rdata$zETW1
.rdata$zETW2
.rdata$zETW9
.rdata$zz
.rdata$zz$brc
.rdata$zzzdbg
.rsrc$01
.rsrc$02
.text
.text$di
.text$lp00Wudfx02000.dll!50_coldboot
.text$mn
.text$mn$00
.text$np
.text$x
.text$yd
.text$zy
.text$zz
.xdata
/'pq?1|
:7>>_
:B><0
:imp_WdfDriverOpenParametersRegistryKey
?\t&H
?TE] 5
@ FxOD
@.data
@.reloc
@.rsrc
@8|$pt
@8|$X
@8|$Y
@8=il
@8k^tO
@8l$`t
@8l$8
@8y]v.Hc
@8y]v^H
@A\_^
@A^_[
@A^_^
@A^_^][
@A^A\_
@A__^
@A_A\^
@A_A\_
@A_A^]
@A_A^_
@A_A^_^]
@A_A^A\
@A_A^A\_]
@A_A^A]A\_^]
@SATAUAWH
@SAVH
@SAWH
@SUVWATAUAVAWH
@SUVWATAUAWH
@SUVWATAVAWH
@SUVWAVAWH
@SUVWAVH
@SUVWH
@SUWAUH
@SUWH
@SVWATAUAVAWH
@SVWH
@SWAVAWH
@SWAVH
@UAVAWH
@USVWATAUAVAWH
@USVWATAUH
@USVWATAVAWH
@USVWAUAVAWH
@USVWAVAWH
@USVWAVH
@USVWH
@USWATAVAWH
@UVATAUAVH
@UWAUAVH
@WATAUH
@WAWH
[%hs(%hs)]
[%hs]
[d*SG
\$ E3
\$ fE
\$ UH
\$ UVWATAUAVAWH
\$ UVWATAWH
\$ UVWAVAWH
\$ UVWH
\$ UWATH
\$ VATAUAVAWH
\$ VH
\$ WH
\$(fD
\$(I;
\$`I;
\$8fD9s
\Callback\PowerState
\REGISTRY\MACHINE\BSPDRIVERS\
\REGISTRY\MACHINE\SOFTWARE\
\REGISTRY\MACHINE\SYSTEM\
]d]QI
^(imp_WdfRequestRetrieveOutputBuffer
__C_specific_handler
__dllonexit3
_initterm
_initterm_e
_onexit
_purecall
_SynchronizeExecution
_vsnwprintf_s
` AUH
` UAUAVH
` UAVAWH
`.rdata
`A__^][
`A_A\_^]
`A_A^_^]
`A_A^A]A\_^]
`PAGEWdfV
`'X+a
{ ATAUAVH
{ AVH
{ UATAUAVAWH
{%08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x}
{0FT9
|$ ATAVAWH
|$ AVH
|$ AWH
|$ E3
|$ UATAUAVAWH
|$ UAVAWH
|$ UH
|$(E3
|$(fD
|$`uo
|$0E3
|$0fD
|$8E3
|$8fff
|$8u!@8
|$htRH
|$PE3
|\INVALID_HANDLE_VALUE == m_pRemoteDispatcher->GetHandle()
|hK,_
}%imp_WdfMemoryCreate
}_fA9
}0H+}(H
}FxVerifierLock::Lock
}wt!D
~0fE;
~8D8~@u;L9?u$E3
+FxDriver::~FxDriver
<no typename given>
<NULL>
<unknown>
=@w+__
=3z;L
=A7AO
=Ddk 
>~O3&
>http://www.microsoft.com/pki/certs/MicRooCerAut_2010-06-23.crt0
>http://www.microsoft.com/pki/certs/MicTimStaPCA_2010-07-01.crt0
02.031.0
040904B0
0A\_]
0A]A\_^]
0A^_^
0A^_^][
0A_A^_
0A_A^_^]
0A_A^A\
0A_A^A\_^
0A_A^A]A\]
0A_A^A]A\^
0WnL5
1(0&0
1,0*0
10.0.19041.1151
10.0.19041.1151 (WinBuild.160101.0800)
100701213655Z
111019184142Z
1http://www.microsoft.com/PKI/docs/CPS/default.htm0@
201112182600Z
20210723080024.681Z0
20210723104431Z
20210724104431Z0t0:
210610185534Z
220211182600Z0
220609185534Z0p1
232770+4649220
250701214655Z0|1
261019185142Z0
2L<!a
3D$H%x
3D$X%x
5minkernel\wdf\framework\shared\core\fxsyncrequest.cpp
5timp_WdfRequestCreate
6I30O
7/<$/
7/pimp_WdfStringGetUnicodeString
7fD9|H
7RLg;
8@rdf
8\t.H
8_^][
8A_[H
9+.3Y
9=OeD
9T$`u
9t$PL
9t$Pt
A t>D
A UMDF driver reported a fatal error
A]A\_
A^_^[]
A^A\_
A^A]]
A^A]_
A^A]_]
A^A]_^[]
A^A]A\
A^A]A\^]
A^A]A\_^
A_A\_
A_A\_[]
A_A\_]
A_A\_^]
A_A]_
A_A]A\
A_A]A\[
A_A]A\_^
A_A]A\_^][
A_A^]
A_A^_
A_A^_^[]
A_A^_^]
A_A^A\
A_A^A\_[]
A_A^A\_]
A_A^A\_^
A_A^A\_^[]
A_A^A\_^][
A_A^A]
A_A^A]_]
A_A^A]_^
A_A^A]_^[]
A_A^A]A\]
A_A^A]A\^[]
A_A^A]A\_
A_A^A]A\_[]
A_A^A]A\_^[
A_A^A]A\_^[]
A_A^A]A\_^]
A_A^A]A\_^][
A9u$u
AcknowledgeInterrupt message to reflector returned failure. Check UMDF log for failure reason. 
AcquireSRWLockExclusive
AcquireSRWLockShared
AddEventHooksWdfDeviceCreate
AddEventHooksWdfIoQueueCreate
advapi32.dll
AFxObject
Aimp_WdfDeviceCreateDeviceInterface
ApiIndex
ApiMissing
api-ms-win-core-crt-l1-1-0.dll
api-ms-win-core-crt-l2-1-0.dll
api-ms-win-core-debug-l1-1-0.dll
api-ms-win-core-errorhandling-l1-1-0.dll
api-ms-win-core-file-l1-1-0.dll
api-ms-win-core-handle-l1-1-0.dll
api-ms-win-core-heap-l1-1-0.dll
api-ms-win-core-libraryloader-l1-1-0.dll
api-ms-win-core-localization-l1-2-0.dll
api-ms-win-core-misc-l1-1-0.dll
api-ms-win-core-processthreads-l1-1-0.dll
api-ms-win-core-profile-l1-1-0.dll
api-ms-win-core-registry-l1-1-0.dll
api-ms-win-core-string-l1-1-0.dll
api-ms-win-core-synch-l1-1-0.dll
api-ms-win-core-synch-l1-2-0.dll
api-ms-win-core-sysinfo-l1-1-0.dll
api-ms-win-core-threadpool-l1-2-0.dll
api-ms-win-core-util-l1-1-0.dll
api-ms-win-eventing-classicprovider-l1-1-0.dll
api-ms-win-eventing-provider-l1-1-0.dll
assertVersion
AssertWithArgs
AssignedToGuest
ATAUAWH
ATAVAWH
attachedDevice should be NULL
Attempt to do multiple mapping of same resource, or multiple mapping in same resource range
B FxOD
B6*'6
B8|#1rCH
B8|#1rgH
B8|#1rkH
B8|#1rUH
B8|#1rYH
B8|;1
B8|;1rLH
B8|+1rgH
bucketArgument1
bucketArgument2
Buffer should be NULL
Buffer should not be NULL
BusEnumerator
BWDF detected potentially invalid device state in %s.%s. Dump the driver log (!wdflogdump %s.%s) for more information.
C FxODH
C L9{p
C]8C\u
C]QQ%)S
C}ReDyh
C0H+C(H
C8|#1
C9fD97u-
CacheType incorrect
Callback should not be NULL
CallContext:[%hs] 
Cannot get initiator process ID from a file object that doesn't have a WDM file object
Cannot increment process keep alive count from a file object that doesn't have a WDM file object
Cannot increment process keep alive count unless UmdfFsContextUsePolicy INF directive is set to WdfCannotUseFsContexts
CapabilityBuffer should not be NULL
CensusCommonV1
Chttp://www.microsoft.com/pkiops/crl/MicWinProPCA2011_2011-10-19.crl0a
CloseHandle
CloseThreadpool
CloseThreadpoolTimer
CloseThreadpoolWait
CloseThreadpoolWork
CnclA
Collection should not be NULL
CompA
Companion should not be NULL
CompanionEventCallbacks should not be NULL
CompanyName
Config should not be NULL
ConfigDescriptorLength should not be NULL
Configuration should not be NULL
count
Count
Count should be > 0
Count should be 0
COxMP
CreateEventW
CreateFileW
CreateMutexExW
CreateSemaphoreExW
CreateThreadpool
CreateThreadpoolTimer
CreateThreadpoolWait
CreateThreadpoolWork
CxDeviceInit should not be NULL
CxFileObjectConfig should not be NULL
CxH9B
CxPnpPowerCallbacks should not be NULL
CxPowerPolicyCallbacks should not be NULL
D!mwE2
d$ AVH
D$ E3
D$ fD
D$(E3
D$(fD
D$(H9h
D$@dll
D$@E3
D$@fA
D$@fD
D$@H;
D$@H9B
D$@M+
D$`E3
D$`L9wH
D$0D9r
D$0E3
d$0E3
D$0E3
D$0f9(t
D$0f9S
D$0fD9g
D$0L;
D$8E3
D$8fA9M
D$8fD9
d$8fD9h
D$HE3
D$hE3
D$HE3
D$hE3
D$HE3
D$hfD
D$HI+
D$HL9
D$hL9wP
D$pE3
D$PE3
D$PH;
D$T9p
D$XE3
D$xE3
D$XE3
D$xE3
D8_`t
D8_Xu+L9_Pt
D8d$h
D8d$i
D8e@tHD8
D8q]vWH
D8s5t
D9e0u%
D9G(t
D9t$<A
D9t$8A
Data should not be NULL
DbgBreakOnDeviceStateError
DbgBreakOnError
DbgBreakPoint
DbgPrintEx
DbgWaitForSignalTimeoutInSec
DbgWaitForWakeInterruptIsrTimeoutInSec
DCRCA
DebugBreak
DecodePointer
DeleteCriticalSection
Device should not be NULL
DeviceD1
DeviceD2
DeviceGroupId
DeviceInit should not be NULL
DeviceProperty should not be NULL
DeviceState should not be NULL
dh&Zh
DirectHardwareAccess
disable
Disabled
DisableThreadLibraryCalls
Disconnect message to reflector returned failure. 
DispatchContext should not be NULL
DockDevice
DontDisplayInUI
Driver attempted to read from invalid port address or address range
Driver attempted to read from invalid register address or address range
Driver attempted to unmap incorrect register address, or provided incorrect size
Driver attempted to write to invalid port address or address range
Driver attempted to write to invalid register address or address range
Driver called an unavailable API
Driver did not unmap its register resources
Driver provided incorrect base address
Driver Version: %d.%d Umdf Lib. Version: %d.%d
DriverConfig should not be NULL
DriverConfigInfo
DriverImage
DriverInfo
DriverName
DriverNoDispatchOverride
DriverNonPnP
DriverObject should not be NULL
DriverService
DriverServiceName
DriverVersionMajor
DriverVersionMinor
DsfOn
E0C1)0'
E8f`t
E9l$T
E9l$Xt/A
E9V0u
Ehttp://crl.microsoft.com/pki/crl/products/MicRooCerAut_2010-06-23.crl0Z
Ehttp://crl.microsoft.com/pki/crl/products/MicTimStaPCA_2010-07-01.crl0Z
Ehttp://www.microsoft.com/pkiops/certs/MicWinProPCA2011_2011-10-19.crt0
EjectSupported
EL$L9t$8
EncodePointer
EndpointInfo should not be NULL
EnhancedVerifierOptions
EnterCriticalSection
entry->m_EndSystemVa should be NULL
entry->m_EndSystemVa should not be NULL
entry->m_StartUsermodeVa should be NULL
entry->m_StartUsermodeVa should not be NULL
ePfi0
ERROR: RtlStringCchPrintfW failed with Status 0x%x
EventActivityIdControl
EventProviderEnabled
EventRegister
EventSetInformation
EventUnregister
EventWriteTransfer
EvtDeviceWdmIrpDispatch should not be NULL
EvtRequestCancel should not be NULL
Ex;Gl
Exception
ExpectedCount
F H9G tCH
f!A H
f!C H
F4FxDr
f94Cu
f9S"t
f9Z0t
f9Z2u
f9Zxu
f9Zzt
fA;R*sn
fA9?u
Failed
Failed to assign interrupt resource to interrupt objectbecause interrupt resource is for level-triggered interruptwhich is not supported on this platform. See the docs for info onsupported platforms.
Failed to validate loader interface parameters, status 0x%x
FAILED(hr)
FailFast
FALSE
False
fD9 t
fD9&u
fD9+u
fD90t,
fD90wnL
fD93u
fE9|$
fE9dF
fE9dG
FileDescription
FileObject should not be NULL
FileObjectConfig should not be NULL
FileObjectPolicy
FileVersion
flusA
flusD
FlushQueuedDpcs message to reflector returned failure
FLw:V
ForceLogsInMiniDump
FormatMessageW
FrameworkName
FreeLibrary
FsContextUsePolicy
function  count: client %lu, library %lu
FunctionCount
FwdPA
FxCallbackMutexLock::Lock
FxCallbackSpinLock::Lock
FxChildList
FxCmResList
FxCmResList::MapIoSpaceWorker
FxCmResList::ValidateAndClearMapping
FxCmResList::ValidatePortAddressRange
FxCmResList::ValidateRegisterPhysicalAddressRange
FxCmResList::ValidateRegisterSystemAddressRange
FxCmResList::ValidateRegisterSystemBaseAddress
FxCmResList::ValidateResourceUnmap
FxCollection
FxCompanion
FxDefaultIrpHandler
FxDevice
FxDevice::_GetDeviceProperty
FxDevice::~FxDevice
FxDevice::CreateDevice
FxDevice::FdoInitialize
FxDevice::FxValidateInterfacePropertyData
FxDevice::GetDeviceStack2
FxDevice::ReadRegister
FxDevice::ReadRegisterBuffer
FxDevice::WriteRegister
FxDevice::WriteRegisterBuffer
FxDeviceInterface::GetSymbolicLinkName
FxDisposeList
FxDriver
FxEnhancedVeriferOptions
FxFileObject
FxFileObject::GetInitiatorProcessId
FxFileObject::SetFileObjectContext
FxFileObject::UpdateProcessKeepAliveCount
FxFrameworkEntryUm
FxInterrupt
FxInterrupt::AssignResourcesInternal
FxInterrupt::ConnectInternal
FxInterrupt::DisconnectInternal
FxInterrupt::FlushQueuedDpcs
FxInterrupt::ResetInternal
FxInterrupt::RevokeResourcesInternal
FxInterrupt::SetPolicyInternal
FxInterrupt::ThreadpoolWaitCallback
FxInterruptWaitblock::_CreateAndInit
FxIoContext::CopyParameters
FxIoQueue
FxIoQueue::FatalError
FxIoResList
FxIoResReqList
FxIoTarget
FxIoTarget::SubmitLocked
FxIoTarget::Vf_VerifySubmitLocked
FxIoTargetRemote::CreateWdfFileObject
FxIoTargetRemote::GetTargetHandle
FxIoTargetRemote::Open
FxIoTargetRemote::OpenTargetHandle
FxIoTargetSelf
FxIrp::AllocateIrp
FxIrp::CopyParameters
FxIrp::GetDeviceObject
FxIrp::GetFileObject
FxIrp::GetIoIrp
FxIrp::GetMajorFunction
FxIrp::GetMinorFunction
FxIrp::GetOutputBuffer
FxIrp::GetParameterQDRType
FxIrp::GetParameterQueryInterfaceInterface
FxIrp::GetParameterQueryInterfaceInterfaceSpecificData
FxIrp::GetParameterQueryInterfaceSize
FxIrp::GetParameterQueryInterfaceType
FxIrp::GetParameterQueryInterfaceVersion
FxIrp::GetParameterUsageNotificationInPath
FxIrp::GetParameterUsageNotificationType
FxIrp::GetPnpIrp
FxIrp::GetSystemBuffer
FxIrp::SendIrpSynchronously
FxIrp::SetCompletionRoutine
FxIrp::SetMajorFunction
FxIrp::SetNextStackParameterOthersArgument1
FxIrp::SetParameterAllocatedResources
FxIrp::SetParameterAllocatedResourcesTranslated
FxIrp::SetParameterIoctlCode
FxIrpQueue
FxIrpQueue::Vf_VerifyRemoveIrpFromQueueByContext
FxLibraryCommonRegisterClient
FxLibraryGlobalsCommission failed %X
FxLookasideList
FxMemoryBufferPreallocated
FxMemoryObject
FxMessageDispatch::DispatchPnP
FxMpDevice
FxObject::~FxObject
FxObjectHandleGetPtr
FxObjectHandleGetPtrQI
FxPkgFdo
FxPkgFdo::DispatchDeviceSetPower
FxPkgGeneral
FxPkgIo
FxPkgPdo
FxPkgPnp::DispatchWaitWake
FxPkgPnp::SetPendingPnpIrp
FxRegKey
FxRelatedDevice
FxRequest
FxRequest::AssignMemoryBuffers
FxRequest::CompleteInternal
FxRequest::Impersonate
FxRequest::Vf_VerifyCompleteInternal
FxRequestMemory
FxResourceCm
FxResourceIo
FxSpinLock
FxSpinLock::ReleaseLock
FxString
FxSystemThread
FxSystemWorkItem
FxTaskQueue
FxTimer
FxUsbDevice
FxUsbInterface
FxUsbPipe
FxUsbTargetDeviceCreate
FxUsbUmFormatRequest
FxUserObject
FxVerifierDriverReportedBugcheck
FxVerifierLock
FxVerifierOn
FxWaitLock
FxWatchdog::_WatchdogDpc
FxWmiProvider
FxWorkItem
G H9E 
g=Lm.
G0D8o]
g0LoaderInterface->pIWudfHost should not be NULL
GetCurrentProcess
GetCurrentProcessId
GetCurrentThreadId
GetLastError
GetModuleFileNameA
GetModuleHandleExW
GetModuleHandleW
GetProcAddress
GetProcessHeap
GetSystemTimeAsFileTime
GetTickCount
GetTickCount64
GetTraceEnableFlags
GetTraceEnableLevel
GetTraceLoggerHandle
GlobalCollection
gNULL
h UAVAWH
H UVWATAUAVAWH
H!D$ E3
H!t$ H
H!t$PM
H;k(t
H_^][
h6F5UL
H9\$pu
H9^ t
H9^0u-D
H9^8t
H9{(t
H9{Hs>H
H9|$`H
H9|$ht
H9|$xt
H9}@L
H9}Pt
H90uFH
H96t"H
H9A(t
H9GHt
H9GHu
H9GPt
H9kpu
H9l$h
H9L$pt[H
H9L$pu
H9n u
H9o(H
H9O`t
H9p t]H
H9P tKH
H9p8L
H9t$x
H9t$xA
H9X t.
H9x u0H
H9X8H
H9X8L
H9Z u-D
H9Z8t
hA]_][
hA]A\_^[]
HA_A^_[
HA_A^_^][
Handle should not be NULL
Hardware access not allowed. Set the INF directive UmdfDirectHardwareAccess to AllowDirectHardwareAccess in driver's INF file to enable direct hardware access
HardwareDisabled
HardwareId
HcL$ HcD$$H
HeapAlloc
HeapFree
HoldA
HostFile should not be NULL
HostProcessSharingEnabled
iCzBq
IdleInWorkingState
imageName
ImagePath
imageSize
imp_WdfCmResourceListGetDescriptor
imp_WdfCollectionAdd
imp_WdfCollectionCreate
imp_WdfCollectionGetCount
imp_WdfCollectionGetFirstItem
imp_WdfCollectionGetItem
imp_WdfCollectionGetLastItem
imp_WdfCollectionRemove
imp_WdfCollectionRemoveItem
imp_WdfCompanionCreate
imp_WdfCompanionCreateTaskQueue
imp_WdfCompanionWdmGetSecureDeviceHandle
imp_WdfCxDeviceInitAllocate
imp_WdfCxDeviceInitAllocateContext
imp_WdfCxDeviceInitGetTypedContextWorker
imp_WdfCxDeviceInitSetFileObjectConfig
imp_WdfCxDeviceInitSetPnpPowerEventCallbacks
imp_WdfCxDeviceInitSetPowerPolicyEventCallbacks
imp_WdfCxDeviceInitSetRequestAttributes
imp_WdfDeviceAllocAndQueryInterfaceProperty
imp_WdfDeviceAllocAndQueryProperty
imp_WdfDeviceAllocAndQueryPropertyEx
imp_WdfDeviceAssignInterfaceProperty
imp_WdfDeviceAssignProperty
imp_WdfDeviceAssignS0IdleSettings
imp_WdfDeviceAssignSxWakeSettings
imp_WdfDeviceConfigureRequestDispatching
imp_WdfDeviceConfigureWdmIrpDispatchCallback
imp_WdfDeviceCreate
imp_WdfDeviceCreateSymbolicLink
imp_WdfDeviceGetDefaultQueue
imp_WdfDeviceGetDeviceStackIoType
imp_WdfDeviceGetDeviceState
imp_WdfDeviceGetDriver
imp_WdfDeviceGetFileObject
imp_WdfDeviceGetHardwareRegisterMappedAddress
imp_WdfDeviceGetSelfIoTarget
imp_WdfDeviceGetSystemPowerAction
imp_WdfDeviceHidNotifyPresence
imp_WdfDeviceInitAllowSelfIoTarget
imp_WdfDeviceInitEnableHidInterface
imp_WdfDeviceInitSetCompanionEventCallbacks
imp_WdfDeviceInitSetFileObjectConfig
imp_WdfDeviceInitSetIoType
imp_WdfDeviceInitSetIoTypeEx
imp_WdfDeviceInitSetPnpPowerEventCallbacks
imp_WdfDeviceInitSetPowerPolicyEventCallbacks
imp_WdfDeviceInitSetPowerPolicyOwnership
imp_WdfDeviceInitSetReleaseHardwareOrderOnFailure
imp_WdfDeviceInitSetRequestAttributes
imp_WdfDeviceMapIoSpace
imp_WdfDeviceOpenDevicemapKey
imp_WdfDeviceOpenRegistryKey
imp_WdfDevicePostEvent
imp_WdfDeviceQueryInterfaceProperty
imp_WdfDeviceQueryProperty
imp_WdfDeviceQueryPropertyEx
imp_WdfDeviceReadFromHardware
imp_WdfDeviceResumeIdleActual
imp_WdfDeviceResumeIdleNoTrack
imp_WdfDeviceRetrieveDeviceDirectoryString
imp_WdfDeviceRetrieveDeviceInterfaceString
imp_WdfDeviceSetDeviceState
imp_WdfDeviceSetFailed
imp_WdfDeviceSetPnpCapabilities
imp_WdfDeviceSetPowerCapabilities
imp_WdfDeviceSetStaticStopRemove
imp_WdfDeviceStopIdleActual
imp_WdfDeviceStopIdleNoTrack
imp_WdfDeviceUnmapIoSpace
imp_WdfDeviceWdmDispatchIrp
imp_WdfDeviceWdmDispatchIrpToIoQueue
imp_WdfDeviceWriteToHardware
imp_WdfDriverCreate
imp_WdfDriverErrorReportApiMissing
imp_WdfDriverGetRegistryPath
imp_WdfDriverIsVersionAvailable
imp_WdfDriverOpenPersistentStateRegistryKey
imp_WdfDriverRetrieveDriverDataDirectoryString
imp_WdfDriverRetrieveVersionString
imp_WdfFdoInitAllocAndQueryProperty
imp_WdfFdoInitAllocAndQueryPropertyEx
imp_WdfFdoInitOpenRegistryKey
imp_WdfFdoInitQueryProperty
imp_WdfFdoInitQueryPropertyEx
imp_WdfFdoInitSetFilter
imp_WdfFileObjectGetDevice
imp_WdfFileObjectGetFileName
imp_WdfFileObjectGetInitiatorProcessId
imp_WdfFileObjectGetRelatedFileObject
imp_WdfInterruptAcquireLock
imp_WdfInterruptCreate
imp_WdfInterruptDisable
imp_WdfInterruptEnable
imp_WdfInterruptGetDevice
imp_WdfInterruptGetInfo
imp_WdfInterruptQueueDpcForIsr
imp_WdfInterruptQueueWorkItemForIsr
imp_WdfInterruptReleaseLock
imp_WdfInterruptSetExtendedPolicy
imp_WdfInterruptSetPolicy
imp_WdfInterruptSynchronize
imp_WdfInterruptTryToAcquireLock
imp_WdfIoQueueCreate
imp_WdfIoQueueDrain
imp_WdfIoQueueDrainSynchronously
imp_WdfIoQueueFindRequest
imp_WdfIoQueueGetDevice
imp_WdfIoQueuePurge
imp_WdfIoQueuePurgeSynchronously
imp_WdfIoQueueReadyNotify
imp_WdfIoQueueRetrieveFoundRequest
imp_WdfIoQueueRetrieveNextRequest
imp_WdfIoQueueRetrieveRequestByFileObject
imp_WdfIoQueueStart
imp_WdfIoQueueStop
imp_WdfIoQueueStopAndPurge
imp_WdfIoQueueStopAndPurgeSynchronously
imp_WdfIoQueueStopSynchronously
imp_WdfIoTargetClose
imp_WdfIoTargetCloseForQueryRemove
imp_WdfIoTargetCreate
imp_WdfIoTargetFormatRequestForIoctl
imp_WdfIoTargetFormatRequestForRead
imp_WdfIoTargetFormatRequestForWrite
imp_WdfIoTargetGetDevice
imp_WdfIoTargetGetState
imp_WdfIoTargetOpen
imp_WdfIoTargetPurge
imp_WdfIoTargetSelfAssignDefaultIoQueue
imp_WdfIoTargetSendIoctlSynchronously
imp_WdfIoTargetSendReadSynchronously
imp_WdfIoTargetSendWriteSynchronously
imp_WdfIoTargetStart
imp_WdfIoTargetStop
imp_WdfMemoryAssignBuffer
imp_WdfMemoryCopyFromBuffer
imp_WdfMemoryCopyToBuffer
imp_WdfMemoryCreatePreallocated
imp_WdfMemoryGetBuffer
imp_WdfObjectAcquireLock
imp_WdfObjectAllocateContext
imp_WdfObjectCreate
imp_WdfObjectDelete
imp_WdfObjectDereferenceActual
imp_WdfObjectGetTypedContextWorker
imp_WdfObjectQuery
imp_WdfObjectReleaseLock
imp_WdfRegistryAssignMemory
imp_WdfRegistryAssignMultiString
imp_WdfRegistryAssignString
imp_WdfRegistryAssignULong
imp_WdfRegistryAssignUnicodeString
imp_WdfRegistryAssignValue
imp_WdfRegistryClose
imp_WdfRegistryCreateKey
imp_WdfRegistryOpenKey
imp_WdfRegistryQueryMemory
imp_WdfRegistryQueryMultiString
imp_WdfRegistryQueryString
imp_WdfRegistryQueryULong
imp_WdfRegistryQueryUnicodeString
imp_WdfRegistryQueryValue
imp_WdfRegistryRemoveKey
imp_WdfRegistryRemoveValue
imp_WdfRegistryWdmGetHandle
imp_WdfRequestFormatRequestUsingCurrentType
imp_WdfRequestGetCompletionParams
imp_WdfRequestGetParameters
imp_WdfRequestMarkCancelable
imp_WdfRequestMarkCancelableEx
imp_WdfRequestRetrieveActivityId
imp_WdfRequestRetrieveInputBuffer
imp_WdfRequestRetrieveInputMemory
imp_WdfRequestRetrieveOutputMemory
imp_WdfRequestReuse
imp_WdfSpinLockAcquire
imp_WdfSpinLockRelease
imp_WdfStringCreate
imp_WdfTimerCreate
imp_WdfTimerGetParentObject
imp_WdfTimerStart
imp_WdfTimerStop
imp_WdfUsbInterfaceGetConfiguredPipe
imp_WdfUsbInterfaceGetConfiguredSettingIndex
imp_WdfUsbInterfaceGetDescriptor
imp_WdfUsbInterfaceGetEndpointInformation
imp_WdfUsbInterfaceGetInterfaceNumber
imp_WdfUsbInterfaceGetNumConfiguredPipes
imp_WdfUsbInterfaceGetNumEndpoints
imp_WdfUsbInterfaceGetNumSettings
imp_WdfUsbTargetDeviceAllocAndQueryString
imp_WdfUsbTargetDeviceCreate
imp_WdfUsbTargetDeviceCreateWithParameters
imp_WdfUsbTargetDeviceFormatRequestForControlTransfer
imp_WdfUsbTargetDeviceFormatRequestForString
imp_WdfUsbTargetDeviceGetDeviceDescriptor
imp_WdfUsbTargetDeviceGetInterface
imp_WdfUsbTargetDeviceGetNumInterfaces
imp_WdfUsbTargetDeviceQueryString
imp_WdfUsbTargetDeviceQueryUsbCapability
imp_WdfUsbTargetDeviceResetPortSynchronously
imp_WdfUsbTargetDeviceRetrieveConfigDescriptor
imp_WdfUsbTargetDeviceRetrieveInformation
imp_WdfUsbTargetDeviceSelectConfig
imp_WdfUsbTargetDeviceSendControlTransferSynchronously
imp_WdfUsbTargetPipeAbortSynchronously
imp_WdfUsbTargetPipeConfigContinuousReader
imp_WdfUsbTargetPipeFormatRequestForAbort
imp_WdfUsbTargetPipeFormatRequestForRead
imp_WdfUsbTargetPipeFormatRequestForReset
imp_WdfUsbTargetPipeFormatRequestForWrite
imp_WdfUsbTargetPipeGetInformation
imp_WdfUsbTargetPipeGetType
imp_WdfUsbTargetPipeIsInEndpoint
imp_WdfUsbTargetPipeIsOutEndpoint
imp_WdfUsbTargetPipeReadSynchronously
imp_WdfUsbTargetPipeResetSynchronously
imp_WdfUsbTargetPipeSetNoMaximumPacketSizeCheck
imp_WdfUsbTargetPipeWriteSynchronously
imp_WdfWaitLockAcquire
imp_WdfWaitLockCreate
imp_WdfWaitLockRelease
imp_WdfWorkItemCreate
imp_WdfWorkItemEnqueue
imp_WdfWorkItemFlush
imp_WdfWorkItemGetParentObject
in EvtCleanupCallback of the miniport framework device object
in EvtDeviceD0Exit callback
Incorrect register access mode. Register mapping to user-mode is not enabled. Set the INF directive UmdfRegisterAccessMode to RegisterAccessUsingUserModeMapping in driver's INF file to enable Register mapping to user-mode
Incorrect Size parameter
Incorrect Type parameter
INFNITE wait failed
Info should not be NULL
Information should not be NULL
InitializeCriticalSectionAndSpinCount
InitializeCriticalSectionEx
Integer overflow occurred when computing length of read access
Integer overflow occurred when computing length of write access
Integer overflow occurredwhen computing port address range
Integer overflow occurredwhen computing register address range
InterfaceClassGUID should not be NULL
InterfaceDescriptor should not be NULL
InternalName
Interrupt should not be NULL
Invalid bind info. Target version %lu, minimum required version %lu
Invalid physical address or number of bytes provided
IoControlIoType should not be NULL
ioIrp should be NULL
ioIrp should not be NULL
IoTarget should not be NULL
Irp should not be NULL
IsDebuggerPresent
IsDirectHardwareAccessAllowed
IsFilter
IsKernelModeClientAllowed
IsMethodNeitherActionCopy
IsNullFileObjectAllowed
IsPoolingDisabled
IsPowerPolicyOwner
IsS0IdleEnabled
IsS0IdleSystemManaged
IsS0IdleUsbSSEnabled
IsS0IdleWakeFromS0Enabled
IsSxWakeEnabled
IsUsingDirectIoForIoctl
IsUsingDirectIoForReadWrite
IsUsingDriverWppRecorder
IsUsingEdgeTriggeredLineInterrupt
IsUsingLevelTriggeredLineInterrupt
IsUsingMsi22MultiMessageInterrupt
IsUsingMsiXOrSingleMsi22Interrupt
IsUsingMultipleInterrupt
IsUsingUserModemappingAccessMode
It is illegal to invoke this DDI while thread is impersonated
Jimp_WdfGetTriageInfo
jimp_WdfObjectReferenceActual
joM;Z=
K SUVWH
K SVWH
K VWATAVAWH
K0!K(H!K H
kernelbase.dll
KernelModeClientPolicy
Key should not be NULL
KeyName should not be NULL
KmdfTraceGuid
kPimp_WdfSpinLockCreate
KW765R
L$ E3
l$ E3
L$ E3
L$ SUVWATAUAVAWH
L$ UH
L$ USVWATAUAVAWH
L$ UVWATAUAVAWH
L$ UVWAVAWH
l$ VH
l$ VWATAVAWH
l$ VWATH
l$ VWAUAVAWH
l$ VWAVH
l$ VWAWH
L$ WH
l$(E3
L$(E3
l$(E3
l$(fD
L$(H;
L$@E3
l$@H;
L$@I+
L$\E3
L$`E3
L$`H3
L$`H9K
L$`L;
L$0E3
L$0f9w
L$0fA9V
L$0fD9s
L$0H;
L$0H3
L$0H9H
L$8E3
L$8H9
L$8L+
L$B9S
L$DfE
L$HE3
L$hE3
L$HH3
L$PD9
L$pE3
L$PE3
L$pE3
L$pH3
L$PH3
L$xE3
L$xH3
L;xD8G
l_zJT
L9_ t
L9_8t
L9{@u
L9{0t#H
L9}@u
L9}HA
L98ubL
L9d$hL
L9ePt
L9nXt}D9n`vwH
L9qXu{H
L9spu
L9u0t
L9uou
L9y(u
LeaveCriticalSection
Legal_Policy_Statement
LegalCopyright
Local\SM0:%d:%d:%hs
LocalAlloc
Lock should not be NULL
LockSupported
LogHr
LogPages
M0K0I
M9<$u
M96tOL
mActivityId should not be NULL
ManufacturerString
Mapped length not zero
memcmp
memcpy
memcpy_s
memmove
memmove_s
Memory should not be NULL
memset
MethodNeitherAction
mgf9{
Microsoft
Microsoft America Operations1&0$
Microsoft Corporation
Microsoft Corporation1
Microsoft Corporation1%0#
Microsoft Corporation1&0$
Microsoft Corporation1.0,
Microsoft Corporation1200
Microsoft Time-Stamp PCA 2010
Microsoft Time-Stamp PCA 20100
Microsoft Time-Stamp Service
Microsoft Time-Stamp Service0
Microsoft Windows0
Microsoft.Wdf.UMDF.Fx
Microsoft_WDF_UMDF_Version
minkernel\wdf\framework\shared\core\fxcxdeviceinitapi.cpp
minkernel\wdf\framework\shared\core\fxdevice.cpp
minkernel\wdf\framework\shared\core\fxdeviceapi.cpp
minkernel\wdf\framework\shared\core\fxdevicebase.cpp
minkernel\wdf\framework\shared\core\fxdeviceinitapi.cpp
minkernel\wdf\framework\shared\core\fxdriver.cpp
minkernel\wdf\framework\shared\core\fxdriverapi.cpp
minkernel\wdf\framework\shared\core\fxfileobjectapi.cpp
minkernel\wdf\framework\shared\core\fxirpqueue.cpp
minkernel\wdf\framework\shared\core\fxmemorybufferapi.cpp
minkernel\wdf\framework\shared\core\fxmemorybufferpreallocatedapi.cpp
minkernel\wdf\framework\shared\core\fxrequest.cpp
minkernel\wdf\framework\shared\core\fxrequestapi.cpp
minkernel\wdf\framework\shared\core\fxrequestbase.cpp
minkernel\wdf\framework\shared\core\fxrequestcontext.cpp
minkernel\wdf\framework\shared\core\fxtimer.cpp
minkernel\wdf\framework\shared\core\fxtimerapi.cpp
minkernel\wdf\framework\shared\core\fxworkitem.cpp
minkernel\wdf\framework\shared\core\fxworkitemapi.cpp
minkernel\wdf\framework\shared\core\um\fxdeviceapium.cpp
minkernel\wdf\framework\shared\core\um\fxdeviceinitapium.cpp
minkernel\wdf\framework\shared\core\um\fxdeviceum.cpp
minkernel\wdf\framework\shared\core\um\fxdriverapium.cpp
minkernel\wdf\framework\shared\core\um\fxfileobjectapium.cpp
minkernel\wdf\framework\shared\core\um\fxfileobjectum.cpp
minkernel\wdf\framework\shared\core\um\fxirpum.cpp
minkernel\wdf\framework\shared\core\um\fxmessagedispatchum.cpp
minkernel\wdf\framework\shared\core\um\fxrequestapium.cpp
minkernel\wdf\framework\shared\core\um\fxrequestum.cpp
minkernel\wdf\framework\shared\core\verifierapi.cpp
minkernel\wdf\framework\shared\enhancedverif\verifier.cpp
minkernel\wdf\framework\shared\inc\private\common\FxCallbackMutexLock.hpp
minkernel\wdf\framework\shared\inc\private\common\FxCallbackSpinLock.hpp
minkernel\wdf\framework\shared\inc\private\common\FxCollection.hpp
minkernel\wdf\framework\shared\inc\private\common\fxhandle.h
minkernel\wdf\framework\shared\inc\private\common\FxRequest.hpp
minkernel\wdf\framework\shared\inc\private\um\FxDeviceUm.hpp
minkernel\wdf\framework\shared\inc\private\um\FxIoTargetUm.hpp
minkernel\wdf\framework\shared\irphandlers\io\fxioqueue.cpp
minkernel\wdf\framework\shared\irphandlers\io\fxioqueueapi.cpp
minkernel\wdf\framework\shared\irphandlers\io\fxpkgio.cpp
minkernel\wdf\framework\shared\irphandlers\pnp\fdopower.cpp
minkernel\wdf\framework\shared\irphandlers\pnp\fxinterruptapi.cpp
minkernel\wdf\framework\shared\irphandlers\pnp\fxpkgfdo.cpp
minkernel\wdf\framework\shared\irphandlers\pnp\fxpkgpnp.cpp
minkernel\wdf\framework\shared\irphandlers\pnp\interruptobject.cpp
minkernel\wdf\framework\shared\irphandlers\pnp\um\fxinterruptthreadpoolum.cpp
minkernel\wdf\framework\shared\irphandlers\pnp\um\interruptobjectum.cpp
minkernel\wdf\framework\shared\object\fxobject.cpp
minkernel\wdf\framework\shared\object\fxobjectapi.cpp
minkernel\wdf\framework\shared\object\fxobjectstatemachine.cpp
minkernel\wdf\framework\shared\object\fxuserobjectapi.cpp
minkernel\wdf\framework\shared\object\fxverifierbugcheck.cpp
minkernel\wdf\framework\shared\object\fxverifierlock.cpp
minkernel\wdf\framework\shared\object\handleapi.cpp
minkernel\wdf\framework\shared\primitives\um\mxgeneralum.cpp
minkernel\wdf\framework\shared\support\fxcollectionapi.cpp
minkernel\wdf\framework\shared\support\fxdeviceinterfaceapi.cpp
minkernel\wdf\framework\shared\support\fxregistryapi.cpp
minkernel\wdf\framework\shared\support\fxresourceapi.cpp
minkernel\wdf\framework\shared\support\fxspinlock.cpp
minkernel\wdf\framework\shared\support\fxspinlockapi.cpp
minkernel\wdf\framework\shared\support\fxstringapi.cpp
minkernel\wdf\framework\shared\support\fxtransactionedlist.cpp
minkernel\wdf\framework\shared\support\fxwaitlockapi.cpp
minkernel\wdf\framework\shared\support\um\fxdeviceinterfaceum.cpp
minkernel\wdf\framework\shared\support\um\fxresourcecollectionum.cpp
minkernel\wdf\framework\shared\targets\general\fxiotarget.cpp
minkernel\wdf\framework\shared\targets\general\fxiotargetapi.cpp
minkernel\wdf\framework\shared\targets\general\fxiotargetremote.cpp
minkernel\wdf\framework\shared\targets\general\um\fxiotargetremoteum.cpp
minkernel\wdf\framework\shared\targets\usb\fxusbdevice.cpp
minkernel\wdf\framework\shared\targets\usb\fxusbdeviceapi.cpp
minkernel\wdf\framework\shared\targets\usb\fxusbinterface.cpp
minkernel\wdf\framework\shared\targets\usb\fxusbinterfaceapi.cpp
minkernel\wdf\framework\shared\targets\usb\fxusbpipe.cpp
minkernel\wdf\framework\shared\targets\usb\fxusbpipeapi.cpp
minkernel\wdf\framework\shared\targets\usb\um\fxusbpipeum.cpp
minkernel\wdf\framework\shared\targets\usb\usbutil.cpp
minkernel\wdf\framework\umdf\fxlib\companion\fxcompanionapi.cpp
minkernel\wdf\framework\umdf\fxlib\companion\fxcompaniondispatch.cpp
minkernel\wdf\framework\umdf\fxlib\librarycommon\fxlibrarycommon.cpp
minkernel\wdf\framework\umdf\fxlib\version\framework.cpp
ModuleCollection
Msg:[%ws] 
Multiple interrupt connection attempts
Must be Passive Interrupt
Mx::MxBugCheckEx
N0L0J
NA1?M
NoDisplayInUI
Non Io Irp passed to CopyParameters
Not expected
Not implemented
NotDisableable
ntdll.dll
NtQueryWnfStateData
NtUpdateWnfStateData
NumberOfBytes should be > 0
NumCharacters should not be NULL
O0M0K
Object should not be NULL
ObjectLeakDetectionLimit
ObjectsForLeakDetection
oK0D$"<
onecore\internal\sdk\inc\wil\opensource\wil\resource.h
onecore\internal\sdk\inc\wil\Staging.h
OpenParams should not be NULL
OpenSemaphoreW
OriginalFilename
originatingBinary
OutputDebugStringW
OutRequest should not be NULL
p ATAVAWH
p AWH
p WATAUAVAWH
p WATAWH
p WAVAWH
P'.1O
p_WdfDeviceGetIoTarget
PA^_^[]
pA^A\_^]
PA_A^_
pA_A^_^]
PA_A^_^]
pA_A^_^]
PA_A^_^]
PA_A^A\_^[]
pA_A^A]A\_^]
PAGEWdfV$zz
Parameters should not be NULL
Parameters\Wdf
Params should not be NULL
PassiveHandling not set to TRUE in WDF_INTERRUPT_CONFIG structure
PhysicalAddress.QuadPart should not be NULL
pIoIrp should be NULL
PipeInformation should not be NULL
pIrp should not be NULL
PMemory should not be NULL
PnpCapabilities should not be NULL
PnpPowerEventCallbacks should not be NULL
poweA
poweD
poweI
power tag
PowerCapabilities should not be NULL
PowerPolicyEventCallbacks should not be NULL
ppThreadpool should not be NULL
PPTP00EventSetInformation
ProductName
ProductVersion
PropertyBuffer should not be NULL
PropertyData->InterfaceClassGUID should not be NULL
PropertyMemory should not be NULL
PropertyType should not be NULL
propKey should not be NULL
PseudoBaseAddress should not be NULL
pw18O
PWDF_BIND_INFO
PWDF_BIND_INFO->FuncTable
PWDF_DRIVER_GLOBALS *
qH;ou[
QueryPerformanceCounter
QueuA
QueuD
QueuI
QueuL
R!s4Z
r[~9\
r~akow
RaiseFailFastException
ReadWriteIoType should not be NULL
Redmond1
RegCloseKey
RegCreateKeyExW
RegisterAccessMode
RegisterLibrary failed, status 0x%x
RegisterTraceGuidsW
RegistryPath should not be NULL
RegOpenKeyExW
RegQueryValueExW
RegSetValueExW
ReleaseMutex
ReleaseSemaphore
ReleaseSRWLockExclusive
ReleaseSRWLockShared
Removable
Removed
RemoveLockOptionFlags
Renable
ReportDdiFunctionCountMismatch
Request should not be NULL
RequestAttributes should not be NULL
RequestParentOptimizationOn
RequiredSize should not be NULL
ResetEvent
ResourcesChanged
Restart
ResultLength should not be NULL
ReturnHr
ReuseParams should not be NULL
rJfD97w
RPCRT4.dll
RtlAnsiStringToUnicodeString
RtlCaptureContext
RtlCaptureStackBackTrace
RtlCompareMemory
RtlCompareUnicodeString
RtlDisownModuleHeapAllocation
RtlDllShutdownInProgress
RtlGetVersion
RtlInitAnsiString
RtlInitUnicodeString
RtlLookupFunctionEntry
RtlNotifyFeatureUsage
RtlNtStatusToDosErrorNoTeb
RtlPrefixUnicodeString
RtlQueryFeatureConfiguration
RtlQueryRegistryValues
RtlQueryRegistryValuesEx
RtlRegisterFeatureConfigurationChangeNotification
RtlSubscribeWnfStateChangeNotification
RtlUnregisterFeatureConfigurationChangeNotification
RtlUnsubscribeWnfNotificationWaitForCompletion
RtlVerifyVersionInfo
RtlVirtualUnwind
s WATAUAVAWH
s WATAVH
s WAUAVH
s WAVAWH
s-(Q6e
S0Idle
s0u<H
ServiceName
SessionGUID
SetEvent
SetLastError
SetThreadpoolThreadMaximum
SetThreadpoolThreadMinimum
SetThreadpoolTimer
SetThreadpoolWait
Settings should not be NULL
SetUnhandledExceptionFilter
SetupClass
SetupPacket should not be NULL
should
should not
SilentInstall
Sleep
SleepEx
slf9k"
slfD9c"
Sminkernel\wdf\framework\shared\core\fxmemorybufferfromlookaside.cpp
Snl\\
SpinLock should not be NULL
spower stopping (Drain) in progress,
StartAchieved
StartTime
StatA
StatD
StateSeparationDetection
StatH
String should not be NULL
StringFileInfo
StringMemory should not be NULL
StringsCollection should not be NULL
Strt@
StrtA
structure count: client %lu, library %lu
SubmitThreadpoolWork
SurpriseRemovalOK
SUVWATAUH
SUVWAWH
SVAVAWH
SymbolicLinkName should not be NULL
System\CurrentControlSet\Control\Wdf
t"D8=
t"fD9
t$ E3
t$ UWATAVAWH
t$ UWAUAVAWH
t$ UWAVH
t$ WATAUAVAWH
t$ WATAVH
t$ WATAWH
t$ WAUAVH
t$ WAVAWH
t$ WH
t$$fD
t$(E3
T$(E3
t$(I;
T$(Lk
T$@E3
T$@I;
T$@u[3
t$`@2
t$`@8
T$`E3
T$0E3
t$0E3
T$0E3
t$0fD
T$0fD9~
T$0H+
t$0L;
t$H9Y
T$HE3
T$hE3
T$HE3
T$PE3
T$pE3
t$pE3
T$PE3
t$PI+
T$PL;
t$puUH
t$xE3
t$XH9
t%8HPt 
t%D!D$DH
t%fD9`
t%H9o t
t.H9A
t.H9Z
t;H9Z
t\H9w
t}@850c
t+H9y
t<fA9(t6I
t1fD9E
t7H9Y
tAfE9|$
tAH!\$PH
TargetAddress should not be NULL
tc@85g
td@8=
TelemetryAssert
TelemetryAssertDiagTrack
TerminateProcess
tGH9w
Thales TSS ESN:EACE-E316-C91D1%0#
The DDI WdfDeviceGetFileObject is not supported for UMDF
The request type is not expected
This function must be called from within a EVT_WDFDEVICE_WDM_IRP_DISPATCH callback
Thread 0x%p is %s 0x%p
Thread 0x%p is waiting on WDFWORKITEM 0x%p
tiH9w
Timer should not be NULL
timestamp
timp_WdfUsbInterfaceSelectSetting
tJD8 u<L
TlP0X
tNH9s
To be implemented
tO@85
TODO: Write something interesting here
totalHits
toupper
tP@8=
tpH9z
tPv<A
TraceMessageVa
TrackDriverForMiniDumpLog
TrackHandles
TrackPower
Translation
tSfA9
tt@8=
tUE9V0tOE
Type should not be NULL
TypeInfo should not be NULL
u)9T$`D
U0S0Q
u1H9Z
u7H9Z
UATAUAVAWH
UAVAWH
u-Ftq
uhH9O`ubH9Ohu\D
ulfD9e"
uM@8|$huC@
UMDF completion routine can't be invoked selectively on Success/Error/Cancel
UMDF may only select settings by index.
UMDF_VERSION
UmdfCensusEvtDeviceStart
UmdfClientFunctionCountMismatch
Unexpected failure
Unexpected failure in QueryInterface
UnhandledExceptionFilter
UnicodeString should not be NULL
UniqueID
Unknown
unknown
Unrecognized bind info. Size is %lu
UnregisterTraceGuids
Unsupported Major version %lu. Expect %lu
Unsupported Minor version %lu. Expect %lu or smaller
uof9~
up@8{^uj
Urb should not be NULL
USAWH
UsbDevice should not be NULL
UsbDeviceDescriptor should not be NULL
User Mode Driver Framework (verifier on) version 02.031.0
User Mode Driver Framework version 02.031.0
USVATAUAVAWH
USVWATAUAVAWH
USVWAUAVI
USWATAUAVAWH
USWATAWI
uTag*
UuidCreate
UVWATAUAVAWH
UVWATAUH
UVWATAVH
UVWATAWH
UVWAVAWH
UWATAVAWH
UWATAWH
UWAUAVAWH
UWAVH
uwt&H
ValueName should not be NULL
VarFileInfo
VATAWH
VerboseOn
verifier.dll
VerifierAllocateFailCount
VerifierOn
VerifyDownLevel
VerifyOn
VerSetConditionMask
Version mismatch detected
Version mismatch detected in function table count. Recompile driver with correct headers
Version mismatch detected when running on old framework
VersionAvailableParams should not be NULL
VersionMajor
VersionMinor
VF_WDFDEVICECREATE_CONTEXT
VF_WDFIOQUEUECREATE_CONTEXT
VfWdfObjectGetTypedContext
VS_VERSION_INFO
VWATAUAVH
VWATAUAWH
VWATAVAWH
VWATH
VWAUAVAWH
VWAUH
VWAVH
VWAWH
w$D8v0u
w=H9J
w>fA9i
Waitblock should not be NULL
WaitForSingleObject
WaitForSingleObjectEx
WaitForThreadpoolTimerCallbacks
WaitForThreadpoolWaitCallbacks
WaitForThreadpoolWorkCallbacks
waiting for all inflight requests to be acknowledged on WDFQUEUE
waiting for all threads to stop dispatching requests so that queue can be powered off, WDFQUEUE
waiting for queue to drain, WDFQUEUE
waiting for queue to purge, WDFQUEUE
waiting for queue to stop, WDFQUEUE
waiting for the queue to be deleted, WDFQUEUE
Wake Interrupt ISR is stuck waiting for the deviceto power back up and driver calllback to be processed
WakeFromD0
WakeFromD1
WakeFromD2
WakeFromD3
WakeFromSleepState
Washington1
WATAUAVAWH
WATAUH
WATAVH
WAUAVH
WAUAWH
WAVAWH
WDF detected potentially invalid operation by %s.%s Dump the driver log (!wdflogdump %s.%s) for more information.
WDF Violation: Please checktracelog for a description of this error
WDF:UMDF Framework Library
WDF_LIBRARY_COMMISSION
WDF_LIBRARY_DECOMMISSION: enter
WDF_LIBRARY_DECOMMISSION: exit
WDF_LIBRARY_REGISTER_CLIENT: Enhanced Verification is ON 
WDF_LIBRARY_REGISTER_CLIENT: enter
WDF_LIBRARY_REGISTER_CLIENT: exit: status %X
WDF_LIBRARY_REGISTER_CLIENT: Function table count 0x%x doesn't match any previously released framework version table size
WDF_LIBRARY_REGISTER_CLIENT: Invalid ClientInfo received from wudfldr 
WDF_LIBRARY_REGISTER_CLIENT: NULL parameter -- %s
WDF_LIBRARY_REGISTER_CLIENT: version mismatch detected in function table count: clienthas 0x%x,  library has 0x%x
WDF_LIBRARY_REGISTER_CLIENT: WdfFunctions %p
WDF_LIBRARY_UNREGISTER_CLIENT: enter
WDF_LIBRARY_UNREGISTER_CLIENT: exit: status %X
Wdf1000
WdfCensusEvtDrvLoad
WDFCHILDLIST
WDFCMRESLIST
WDFCOLLECTION
WDFCOMPANION
WdfDefaultIdleInWorkingState
WdfDefaultWakeFromSleepState
WDFDEVICE
WdfDeviceSetDeviceInterfaceStateWorker
WdfDirectedPowerTransitionChildrenOptional
WdfDirectedPowerTransitionEnable
WDFDRIVER
WdfDriverErrorReportApiMissing
WDFFILEOBJECT
WdfGlobalLogsDisabled
WdfGlobalSleepStudyDisabled
WDFINTERRUPT
WDFIORESLIST
WDFIORESREQLIST
WDFIOTARGET
WDFKEY
WDFLOOKASIDE
WDFMEMORY
WDFOBJECT
WDFQUEUE
WDFREQUEST
WDFSPINLOCK
WDFSTRING
WDFTASKQUEUE
WdfTestDirectedPowerTransition
WDFTIMER
WDFUSBDEVICE
WDFUSBINTERFACE
WDFUSBPIPE
WdfVersion
WDFWAITLOCK
WDFWMIPROVIDER
WDFWORKITEM
WideCharToMultiByte
WilError_03
WilStaging_02
without
wlf9o"
wlfD9g"
wMminkernel\wdf\framework\umdf\fxlib\companion\fxcompanion.cpp
WorkItem should not be NULL
WudfDiagnostics
WudfPowerPolicySettings
Wudfx02000
wudfx02000.dll
WUDFx02000.DLL
Wudfx02000.dll
Wudfx02000.pdb
x ATAVAWH
x ATH
x AUAVAWH
x AVH
x AWH
x UATAUAVAWH
x UAVAWH
xA]A\_^][
xSxWake
xvH9\$pto
y%|RSDS
Y)TI-
Y.*>Value should not be NULL
Yiq;K6
z.9Wv
z9Y0u4H
zL4oo0{ H
zvPzuF'K
Zw0>;
ZwDeleteValueKey
ZwQueryKey
